// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuButton should render component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: 0;
  outline: none;
  padding: 0;
  background: transparent;
  -webkit-tap-highlight-color: transparent;
  overflow: visible;
}

.c0 svg {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 *[fill^='#'] {
  fill: #626F84;
}

.c0:hover *[fill^='#'] {
  fill: #0A54C2;
}

.c0:focus *[fill^='#'] {
  fill: #0A54C2;
}

.c0:focus:before {
  content: '';
  position: absolute;
  top: -4px;
  left: -4px;
  bottom: -4px;
  right: -4px;
  border: 2px solid #0A54C2;
  border-radius: 4px;
}

.c0:active *[fill^='#'] {
  fill: #0949AA;
}

.c0:disabled {
  cursor: default;
}

.c0:disabled *[fill^='#'] {
  fill: #A7B0BE;
}

.c1 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

<body>
    <div>
      <button
        aria-expanded="false"
        aria-haspopup="false"
        class="c0"
        data-testid="btn"
        type="button"
      >
        <span
          class="c1"
        >
          <div
            aria-hidden="true"
            height="24"
            width="24"
          />
        </span>
      </button>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: 0;
  outline: none;
  padding: 0;
  background: transparent;
  -webkit-tap-highlight-color: transparent;
  overflow: visible;
}

.c0 svg {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 *[fill^='#'] {
  fill: #626F84;
}

.c0:hover *[fill^='#'] {
  fill: #0A54C2;
}

.c0:focus *[fill^='#'] {
  fill: #0A54C2;
}

.c0:focus:before {
  content: '';
  position: absolute;
  top: -4px;
  left: -4px;
  bottom: -4px;
  right: -4px;
  border: 2px solid #0A54C2;
  border-radius: 4px;
}

.c0:active *[fill^='#'] {
  fill: #0949AA;
}

.c0:disabled {
  cursor: default;
}

.c0:disabled *[fill^='#'] {
  fill: #A7B0BE;
}

.c1 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

<div>
    <button
      aria-expanded="false"
      aria-haspopup="false"
      class="c0"
      data-testid="btn"
      type="button"
    >
      <span
        class="c1"
      >
        <div
          aria-hidden="true"
          height="24"
          width="24"
        />
      </span>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
