// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxField should render component with disabled state 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  display: flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: default;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c0.c0 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c0.c0 {
  color: #B0B5BD;
  cursor: default;
}

.c1 {
  appearance: none;
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  box-sizing: border-box;
}

.c1 ::-ms-check {
  display: none;
}

.c1:disabled {
  cursor: default;
}

.c1:disabled:not(:checked)+div>span {
  border-color: #B0B5BD;
  background-color: #E5E7EB;
}

.c1:disabled:checked+div>span {
  border-color: #A7C7FF;
  background-color: #A7C7FF;
}

.c1:disabled:checked+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:checked:not(:disabled)+div>span {
  border-color: #0062FF;
  background-color: #0062FF;
}

.c1:checked:not(:disabled)+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:not(:disabled):focus-visible+div {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1:not(:disabled):hover:not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):hover:not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled)+div>div {
  background: #0000001F;
}

.c2 {
  box-sizing: border-box;
  padding: 2px;
  pointer-events: none;
  position: relative;
  flex-shrink: 0;
  width: 24px;
  height: 24px;
}

fieldset[data-dimension='s'] .c2 {
  width: 20px;
  height: 20px;
}

.c3 {
  visibility: hidden;
  pointer-events: none;
  position: absolute;
  background: #0000000D;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: 36px;
  height: 36px;
  background-color: #0000000D;
}

fieldset[data-dimension='s'] .c3.c3 {
  width: 32px;
  height: 32px;
}

.c4 {
  box-sizing: border-box;
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 4px;
  width: 20px;
  height: 20px;
  outline: 0;
  transition: background 0.1s ease-in;
  line-height: initial;
  background-color: #FFFFFF;
  border: 1px solid #717681;
}

fieldset[data-dimension='s'] .c4.c4 {
  width: 16px;
  height: 16px;
}

.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

fieldset:disabled .c4.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

.c5 {
  width: 20px;
  height: 20px;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.c6 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #B0B5BD;
}

fieldset:disabled .c6.c6 {
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c6.c6 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

<body>
    <div>
      <label
        class="c0"
        data-field-id="checkboxField"
        disabled=""
      >
        <input
          class="c1"
          data-testid="element"
          disabled=""
          id="checkboxField"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <div
            class="c3"
          />
          <span
            class="c4"
            disabled=""
          >
            <div
              aria-hidden="true"
              class="c5"
              focusable="false"
            />
          </span>
        </div>
        <div
          class="c6"
          disabled=""
        >
          text
        </div>
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: default;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c0.c0 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c0.c0 {
  color: #B0B5BD;
  cursor: default;
}

.c1 {
  appearance: none;
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  box-sizing: border-box;
}

.c1 ::-ms-check {
  display: none;
}

.c1:disabled {
  cursor: default;
}

.c1:disabled:not(:checked)+div>span {
  border-color: #B0B5BD;
  background-color: #E5E7EB;
}

.c1:disabled:checked+div>span {
  border-color: #A7C7FF;
  background-color: #A7C7FF;
}

.c1:disabled:checked+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:checked:not(:disabled)+div>span {
  border-color: #0062FF;
  background-color: #0062FF;
}

.c1:checked:not(:disabled)+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:not(:disabled):focus-visible+div {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1:not(:disabled):hover:not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):hover:not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled)+div>div {
  background: #0000001F;
}

.c2 {
  box-sizing: border-box;
  padding: 2px;
  pointer-events: none;
  position: relative;
  flex-shrink: 0;
  width: 24px;
  height: 24px;
}

fieldset[data-dimension='s'] .c2 {
  width: 20px;
  height: 20px;
}

.c3 {
  visibility: hidden;
  pointer-events: none;
  position: absolute;
  background: #0000000D;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: 36px;
  height: 36px;
  background-color: #0000000D;
}

fieldset[data-dimension='s'] .c3.c3 {
  width: 32px;
  height: 32px;
}

.c4 {
  box-sizing: border-box;
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 4px;
  width: 20px;
  height: 20px;
  outline: 0;
  transition: background 0.1s ease-in;
  line-height: initial;
  background-color: #FFFFFF;
  border: 1px solid #717681;
}

fieldset[data-dimension='s'] .c4.c4 {
  width: 16px;
  height: 16px;
}

.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

fieldset:disabled .c4.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

.c5 {
  width: 20px;
  height: 20px;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.c6 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #B0B5BD;
}

fieldset:disabled .c6.c6 {
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c6.c6 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

<div>
    <label
      class="c0"
      data-field-id="checkboxField"
      disabled=""
    >
      <input
        class="c1"
        data-testid="element"
        disabled=""
        id="checkboxField"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <div
          class="c3"
        />
        <span
          class="c4"
          disabled=""
        >
          <div
            aria-hidden="true"
            class="c5"
            focusable="false"
          />
        </span>
      </div>
      <div
        class="c6"
        disabled=""
      >
        text
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckboxField should render component with required properties 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  display: flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset[data-dimension='s'] .c0.c0 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c0.c0 {
  color: #B0B5BD;
  cursor: default;
}

.c1 {
  appearance: none;
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  box-sizing: border-box;
}

.c1 ::-ms-check {
  display: none;
}

.c1:disabled {
  cursor: default;
}

.c1:disabled:not(:checked)+div>span {
  border-color: #B0B5BD;
  background-color: #E5E7EB;
}

.c1:disabled:checked+div>span {
  border-color: #A7C7FF;
  background-color: #A7C7FF;
}

.c1:disabled:checked+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:checked:not(:disabled)+div>span {
  border-color: #0062FF;
  background-color: #0062FF;
}

.c1:checked:not(:disabled)+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:not(:disabled):focus-visible+div {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1:not(:disabled):hover:not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):hover:not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled)+div>div {
  background: #0000001F;
}

.c2 {
  box-sizing: border-box;
  padding: 2px;
  pointer-events: none;
  position: relative;
  flex-shrink: 0;
  width: 24px;
  height: 24px;
}

fieldset[data-dimension='s'] .c2 {
  width: 20px;
  height: 20px;
}

.c3 {
  visibility: hidden;
  pointer-events: none;
  position: absolute;
  background: #0000000D;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: 36px;
  height: 36px;
  background-color: #0000000D;
}

fieldset[data-dimension='s'] .c3.c3 {
  width: 32px;
  height: 32px;
}

.c4 {
  box-sizing: border-box;
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 4px;
  width: 20px;
  height: 20px;
  outline: 0;
  transition: background 0.1s ease-in;
  line-height: initial;
  background-color: #FFFFFF;
  border: 1px solid #717681;
}

fieldset[data-dimension='s'] .c4.c4 {
  width: 16px;
  height: 16px;
}

.c4 *[fill^='#'] {
  fill: #FFFFFF;
}

fieldset:disabled .c4.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

.c5 {
  width: 20px;
  height: 20px;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.c6 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset:disabled .c6.c6 {
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c6.c6 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

<body>
    <div>
      <label
        class="c0"
        data-field-id="checkboxField"
      >
        <input
          class="c1"
          data-testid="element"
          id="checkboxField"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <div
            class="c3"
          />
          <span
            class="c4"
          >
            <div
              aria-hidden="true"
              class="c5"
              focusable="false"
            />
          </span>
        </div>
        <div
          class="c6"
        >
          text
        </div>
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset[data-dimension='s'] .c0.c0 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c0.c0 {
  color: #B0B5BD;
  cursor: default;
}

.c1 {
  appearance: none;
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  box-sizing: border-box;
}

.c1 ::-ms-check {
  display: none;
}

.c1:disabled {
  cursor: default;
}

.c1:disabled:not(:checked)+div>span {
  border-color: #B0B5BD;
  background-color: #E5E7EB;
}

.c1:disabled:checked+div>span {
  border-color: #A7C7FF;
  background-color: #A7C7FF;
}

.c1:disabled:checked+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:checked:not(:disabled)+div>span {
  border-color: #0062FF;
  background-color: #0062FF;
}

.c1:checked:not(:disabled)+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:not(:disabled):focus-visible+div {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1:not(:disabled):hover:not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):hover:not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled)+div>div {
  background: #0000001F;
}

.c2 {
  box-sizing: border-box;
  padding: 2px;
  pointer-events: none;
  position: relative;
  flex-shrink: 0;
  width: 24px;
  height: 24px;
}

fieldset[data-dimension='s'] .c2 {
  width: 20px;
  height: 20px;
}

.c3 {
  visibility: hidden;
  pointer-events: none;
  position: absolute;
  background: #0000000D;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: 36px;
  height: 36px;
  background-color: #0000000D;
}

fieldset[data-dimension='s'] .c3.c3 {
  width: 32px;
  height: 32px;
}

.c4 {
  box-sizing: border-box;
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 4px;
  width: 20px;
  height: 20px;
  outline: 0;
  transition: background 0.1s ease-in;
  line-height: initial;
  background-color: #FFFFFF;
  border: 1px solid #717681;
}

fieldset[data-dimension='s'] .c4.c4 {
  width: 16px;
  height: 16px;
}

.c4 *[fill^='#'] {
  fill: #FFFFFF;
}

fieldset:disabled .c4.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

.c5 {
  width: 20px;
  height: 20px;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.c6 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset:disabled .c6.c6 {
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c6.c6 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

<div>
    <label
      class="c0"
      data-field-id="checkboxField"
    >
      <input
        class="c1"
        data-testid="element"
        id="checkboxField"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <div
          class="c3"
        />
        <span
          class="c4"
        >
          <div
            aria-hidden="true"
            class="c5"
            focusable="false"
          />
        </span>
      </div>
      <div
        class="c6"
      >
        text
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckboxField should render component with small dimension 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  display: flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset[data-dimension='s'] .c0.c0 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c0.c0 {
  color: #B0B5BD;
  cursor: default;
}

.c1 {
  appearance: none;
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  box-sizing: border-box;
}

.c1 ::-ms-check {
  display: none;
}

.c1:disabled {
  cursor: default;
}

.c1:disabled:not(:checked)+div>span {
  border-color: #B0B5BD;
  background-color: #E5E7EB;
}

.c1:disabled:checked+div>span {
  border-color: #A7C7FF;
  background-color: #A7C7FF;
}

.c1:disabled:checked+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:checked:not(:disabled)+div>span {
  border-color: #0062FF;
  background-color: #0062FF;
}

.c1:checked:not(:disabled)+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:not(:disabled):focus-visible+div {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1:not(:disabled):hover:not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):hover:not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled)+div>div {
  background: #0000001F;
}

.c2 {
  box-sizing: border-box;
  padding: 2px;
  pointer-events: none;
  position: relative;
  flex-shrink: 0;
  width: 20px;
  height: 20px;
}

fieldset[data-dimension='s'] .c2 {
  width: 20px;
  height: 20px;
}

.c3 {
  visibility: hidden;
  pointer-events: none;
  position: absolute;
  background: #0000000D;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: 32px;
  height: 32px;
  background-color: #0000000D;
}

fieldset[data-dimension='s'] .c3.c3 {
  width: 32px;
  height: 32px;
}

.c4 {
  box-sizing: border-box;
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 4px;
  width: 16px;
  height: 16px;
  outline: 0;
  transition: background 0.1s ease-in;
  line-height: initial;
  background-color: #FFFFFF;
  border: 1px solid #717681;
}

fieldset[data-dimension='s'] .c4.c4 {
  width: 16px;
  height: 16px;
}

.c4 *[fill^='#'] {
  fill: #FFFFFF;
}

fieldset:disabled .c4.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

.c5 {
  width: 16px;
  height: 16px;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.c6 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset:disabled .c6.c6 {
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c6.c6 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

<body>
    <div>
      <label
        class="c0"
        data-field-id="checkboxField"
      >
        <input
          class="c1"
          data-testid="element"
          id="checkboxField"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <div
            class="c3"
          />
          <span
            class="c4"
          >
            <div
              aria-hidden="true"
              class="c5"
              focusable="false"
            />
          </span>
        </div>
        <div
          class="c6"
        >
          text
        </div>
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset[data-dimension='s'] .c0.c0 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c0.c0 {
  color: #B0B5BD;
  cursor: default;
}

.c1 {
  appearance: none;
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  box-sizing: border-box;
}

.c1 ::-ms-check {
  display: none;
}

.c1:disabled {
  cursor: default;
}

.c1:disabled:not(:checked)+div>span {
  border-color: #B0B5BD;
  background-color: #E5E7EB;
}

.c1:disabled:checked+div>span {
  border-color: #A7C7FF;
  background-color: #A7C7FF;
}

.c1:disabled:checked+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:checked:not(:disabled)+div>span {
  border-color: #0062FF;
  background-color: #0062FF;
}

.c1:checked:not(:disabled)+div>span *[fill^='#'] {
  fill: #FFFFFF;
}

.c1:not(:disabled):focus-visible+div {
  outline-offset: 2px;
  outline: #0062FF solid 2px;
}

.c1:not(:disabled):hover:not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):hover:not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled)+div>div {
  visibility: visible;
}

.c1:not(:disabled):active:not(:disabled):not(:disabled):focus-visible+div {
  outline: none;
}

.c1:not(:disabled):active:not(:disabled)+div>div {
  background: #0000001F;
}

.c2 {
  box-sizing: border-box;
  padding: 2px;
  pointer-events: none;
  position: relative;
  flex-shrink: 0;
  width: 20px;
  height: 20px;
}

fieldset[data-dimension='s'] .c2 {
  width: 20px;
  height: 20px;
}

.c3 {
  visibility: hidden;
  pointer-events: none;
  position: absolute;
  background: #0000000D;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: 32px;
  height: 32px;
  background-color: #0000000D;
}

fieldset[data-dimension='s'] .c3.c3 {
  width: 32px;
  height: 32px;
}

.c4 {
  box-sizing: border-box;
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 4px;
  width: 16px;
  height: 16px;
  outline: 0;
  transition: background 0.1s ease-in;
  line-height: initial;
  background-color: #FFFFFF;
  border: 1px solid #717681;
}

fieldset[data-dimension='s'] .c4.c4 {
  width: 16px;
  height: 16px;
}

.c4 *[fill^='#'] {
  fill: #FFFFFF;
}

fieldset:disabled .c4.c4 *[fill^='#'] {
  fill: #E5E7EB;
}

.c5 {
  width: 16px;
  height: 16px;
  position: absolute;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.c6 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: #23262D;
}

fieldset:disabled .c6.c6 {
  color: #B0B5BD;
}

fieldset[data-dimension='s'] .c6.c6 {
  font-family: 'VTB Group UI',sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

<div>
    <label
      class="c0"
      data-field-id="checkboxField"
    >
      <input
        class="c1"
        data-testid="element"
        id="checkboxField"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <div
          class="c3"
        />
        <span
          class="c4"
        >
          <div
            aria-hidden="true"
            class="c5"
            focusable="false"
          />
        </span>
      </div>
      <div
        class="c6"
      >
        text
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
