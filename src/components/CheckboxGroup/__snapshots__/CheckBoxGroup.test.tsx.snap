// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxGroup should render component with disabled state 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 20px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  user-select: none;
}

.c0>* {
  margin-top: 16px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: not-allowed;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: not-allowed;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<body>
    <div>
      <div
        class="c0"
        disabled=""
      >
        <label
          class="c1"
          data-field-id="checkboxFieldMoscow"
          disabled=""
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              disabled=""
              id="checkboxFieldMoscow"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
            disabled=""
          >
            Москва
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldVoronezh"
          disabled=""
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              disabled=""
              id="checkboxFieldVoronezh"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
            disabled=""
          >
            Воронеж
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldSamara"
          disabled=""
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              disabled=""
              id="checkboxFieldSamara"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
            disabled=""
          >
            Самара
          </div>
        </label>
      </div>
    </div>
  </body>,
  "container": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 20px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  user-select: none;
}

.c0>* {
  margin-top: 16px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: not-allowed;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: not-allowed;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<div>
    <div
      class="c0"
      disabled=""
    >
      <label
        class="c1"
        data-field-id="checkboxFieldMoscow"
        disabled=""
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            disabled=""
            id="checkboxFieldMoscow"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
          disabled=""
        >
          Москва
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldVoronezh"
        disabled=""
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            disabled=""
            id="checkboxFieldVoronezh"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
          disabled=""
        >
          Воронеж
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldSamara"
        disabled=""
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            disabled=""
            id="checkboxFieldSamara"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
          disabled=""
        >
          Самара
        </div>
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckboxGroup should render component with label 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 20px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  user-select: none;
}

.c0>* {
  margin-top: 16px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<body>
    <div>
      <div
        class="c0"
      >
        Выберите города
        <label
          class="c1"
          data-field-id="checkboxFieldMoscow"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldMoscow"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Москва
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldVoronezh"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldVoronezh"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Воронеж
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldSamara"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldSamara"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Самара
          </div>
        </label>
      </div>
    </div>
  </body>,
  "container": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 20px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  user-select: none;
}

.c0>* {
  margin-top: 16px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<div>
    <div
      class="c0"
    >
      Выберите города
      <label
        class="c1"
        data-field-id="checkboxFieldMoscow"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldMoscow"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Москва
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldVoronezh"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldVoronezh"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Воронеж
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldSamara"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldSamara"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Самара
        </div>
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckboxGroup should render component with small dimension 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 14px;
  line-height: 16px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  user-select: none;
}

.c0>* {
  margin-top: 12px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 16px;
  height: 16px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<body>
    <div>
      <div
        class="c0"
      >
        <label
          class="c1"
          data-field-id="checkboxFieldMoscow"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldMoscow"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Москва
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldVoronezh"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldVoronezh"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Воронеж
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldSamara"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldSamara"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Самара
          </div>
        </label>
      </div>
    </div>
  </body>,
  "container": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 14px;
  line-height: 16px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  user-select: none;
}

.c0>* {
  margin-top: 12px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 16px;
  height: 16px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<div>
    <div
      class="c0"
    >
      <label
        class="c1"
        data-field-id="checkboxFieldMoscow"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldMoscow"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Москва
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldVoronezh"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldVoronezh"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Воронеж
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldSamara"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldSamara"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Самара
        </div>
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`CheckboxGroup should render components 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 20px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  user-select: none;
}

.c0>* {
  margin-top: 16px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<body>
    <div>
      <div
        class="c0"
      >
        <label
          class="c1"
          data-field-id="checkboxFieldMoscow"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldMoscow"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Москва
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldVoronezh"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldVoronezh"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Воронеж
          </div>
        </label>
        <label
          class="c1"
          data-field-id="checkboxFieldSamara"
        >
          <div
            class="c2 c3"
          >
            <input
              class="c4"
              id="checkboxFieldSamara"
              type="checkbox"
            />
            <div
              class="c5 c6"
            >
              <div
                aria-hidden="true"
                class="c7"
                focusable="false"
              />
            </div>
          </div>
          <div
            class="c8"
          >
            Самара
          </div>
        </label>
      </div>
    </div>
  </body>,
  "container": .c0 {
  flex-direction: column;
  display: inline-flex;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 20px;
  font-weight: normal;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  user-select: none;
}

.c0>* {
  margin-top: 16px;
}

.c1 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c1.c1 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c1.c1 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c8 {
  display: flex;
  flex-direction: column;
  align-content: center;
  margin-top: 2px;
  margin-bottom: 2px;
  margin-left: 8px;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset:disabled .c8.c8 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
}

fieldset[data-dimension='s'] .c8.c8 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

.c7 {
  pointer-events: none;
}

.c2 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c2 {
  width: 16px;
}

fieldset[data-dimension='s'] .c2 {
  height: 16px;
}

.c6 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c6 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c4 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c4 ::-ms-check {
  display: none;
}

.c4:checked+.c5 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c4:checked:disabled+.c5 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c4:checked:disabled+.c5 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c4:not(:checked)+.c5 >* {
  display: none;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:disabled+.c5 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c4:hover:not(:disabled)::after,
.c4:focus:not(:disabled)+.c4:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c4:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c4:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c3 {
  margin-top: 2px;
}

<div>
    <div
      class="c0"
    >
      <label
        class="c1"
        data-field-id="checkboxFieldMoscow"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldMoscow"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Москва
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldVoronezh"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldVoronezh"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Воронеж
        </div>
      </label>
      <label
        class="c1"
        data-field-id="checkboxFieldSamara"
      >
        <div
          class="c2 c3"
        >
          <input
            class="c4"
            id="checkboxFieldSamara"
            type="checkbox"
          />
          <div
            class="c5 c6"
          >
            <div
              aria-hidden="true"
              class="c7"
              focusable="false"
            />
          </div>
        </div>
        <div
          class="c8"
        >
          Самара
        </div>
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
