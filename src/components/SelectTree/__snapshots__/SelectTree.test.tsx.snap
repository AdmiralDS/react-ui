// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectTree should render component 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c4 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c4.c4 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c4.c4 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c11 {
  pointer-events: none;
}

.c6 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c6 {
  width: 16px;
}

fieldset[data-dimension='s'] .c6 {
  height: 16px;
}

.c10 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c10 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c8 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c8 ::-ms-check {
  display: none;
}

.c8:checked+.c9 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c8:checked:disabled+.c9 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c8:checked:disabled+.c9 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c8:not(:checked)+.c9 >* {
  display: none;
}

.c8:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:disabled+.c9 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c8:hover:not(:disabled)::after,
.c8:focus:not(:disabled)+.c8:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c8:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c8:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c7 {
  margin-top: 2px;
}

.c3 {
  transition: all 0.3s;
  width: 100%;
  height: 100%;
  transform: rotate(0deg);
}

.c3 path {
  fill: var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c2 {
  flex-shrink: 0;
  margin-right: 16px;
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
  width: 24px;
  height: 24px;
}

.c2:hover::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 12px);
  height: calc(100% + 12px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c1 {
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  display: flex;
  align-items: flex-start;
  padding: 8px 16px 8px 0px;
}

.c5 {
  margin-right: 8px;
  flex-shrink: 0;
}

.c12 {
  padding-top: 2px;
}

.c0 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<body>
    <div>
      <ul
        class="c0"
      >
        <li
          class="c1"
        >
          <div
            class="c2"
            data-key="1"
          >
            <div
              class="c3"
            />
          </div>
          <label
            class="c4 c5"
            data-field-id="1"
          >
            <div
              class="c6 c7"
            >
              <input
                class="c8"
                data-key="1"
                id="1"
                type="checkbox"
              />
              <div
                class="c9 c10"
              >
                <div
                  aria-hidden="true"
                  class="c11"
                  focusable="false"
                />
              </div>
            </div>
          </label>
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 1
          </div>
        </li>
        <li
          class="c1"
        >
          <label
            class="c4 c5"
            data-field-id="2"
          >
            <div
              class="c6 c7"
            >
              <input
                class="c8"
                data-key="2"
                id="2"
                type="checkbox"
              />
              <div
                class="c9 c10"
              >
                <div
                  aria-hidden="true"
                  class="c11"
                  focusable="false"
                />
              </div>
            </div>
          </label>
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 2
          </div>
        </li>
        <li
          class="c1"
        >
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 3
          </div>
        </li>
        <li
          class="c1"
        >
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 4
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": .c4 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c4.c4 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c4.c4 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c11 {
  pointer-events: none;
}

.c6 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c6 {
  width: 16px;
}

fieldset[data-dimension='s'] .c6 {
  height: 16px;
}

.c10 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c10 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c8 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c8 ::-ms-check {
  display: none;
}

.c8:checked+.c9 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c8:checked:disabled+.c9 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c8:checked:disabled+.c9 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c8:not(:checked)+.c9 >* {
  display: none;
}

.c8:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:disabled+.c9 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c8:hover:not(:disabled)::after,
.c8:focus:not(:disabled)+.c8:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c8:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c8:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c7 {
  margin-top: 2px;
}

.c3 {
  transition: all 0.3s;
  width: 100%;
  height: 100%;
  transform: rotate(0deg);
}

.c3 path {
  fill: var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c2 {
  flex-shrink: 0;
  margin-right: 16px;
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
  width: 24px;
  height: 24px;
}

.c2:hover::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 12px);
  height: calc(100% + 12px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c1 {
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  display: flex;
  align-items: flex-start;
  padding: 8px 16px 8px 0px;
}

.c5 {
  margin-right: 8px;
  flex-shrink: 0;
}

.c12 {
  padding-top: 2px;
}

.c0 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<div>
    <ul
      class="c0"
    >
      <li
        class="c1"
      >
        <div
          class="c2"
          data-key="1"
        >
          <div
            class="c3"
          />
        </div>
        <label
          class="c4 c5"
          data-field-id="1"
        >
          <div
            class="c6 c7"
          >
            <input
              class="c8"
              data-key="1"
              id="1"
              type="checkbox"
            />
            <div
              class="c9 c10"
            >
              <div
                aria-hidden="true"
                class="c11"
                focusable="false"
              />
            </div>
          </div>
        </label>
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 1
        </div>
      </li>
      <li
        class="c1"
      >
        <label
          class="c4 c5"
          data-field-id="2"
        >
          <div
            class="c6 c7"
          >
            <input
              class="c8"
              data-key="2"
              id="2"
              type="checkbox"
            />
            <div
              class="c9 c10"
            >
              <div
                aria-hidden="true"
                class="c11"
                focusable="false"
              />
            </div>
          </div>
        </label>
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 2
        </div>
      </li>
      <li
        class="c1"
      >
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 3
        </div>
      </li>
      <li
        class="c1"
      >
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 4
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SelectTree should render component with expanded lists 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c4 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c4.c4 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c4.c4 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c11 {
  pointer-events: none;
}

.c6 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c6 {
  width: 16px;
}

fieldset[data-dimension='s'] .c6 {
  height: 16px;
}

.c10 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c10 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c8 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c8 ::-ms-check {
  display: none;
}

.c8:checked+.c9 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c8:checked:disabled+.c9 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c8:checked:disabled+.c9 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c8:not(:checked)+.c9 >* {
  display: none;
}

.c8:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:disabled+.c9 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c8:hover:not(:disabled)::after,
.c8:focus:not(:disabled)+.c8:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c8:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c8:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c7 {
  margin-top: 2px;
}

.c3 {
  transition: all 0.3s;
  width: 100%;
  height: 100%;
  transform: rotate(0deg);
}

.c3 path {
  fill: var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c2 {
  flex-shrink: 0;
  margin-right: 16px;
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
  width: 24px;
  height: 24px;
}

.c2:hover::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 12px);
  height: calc(100% + 12px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c1 {
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  display: flex;
  align-items: flex-start;
  padding: 8px 16px 8px 0px;
}

.c5 {
  margin-right: 8px;
  flex-shrink: 0;
}

.c12 {
  padding-top: 2px;
}

.c0 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<body>
    <div>
      <ul
        class="c0"
      >
        <li
          class="c1"
        >
          <div
            class="c2"
            data-key="1"
          >
            <div
              class="c3"
            />
          </div>
          <label
            class="c4 c5"
            data-field-id="1"
          >
            <div
              class="c6 c7"
            >
              <input
                class="c8"
                data-key="1"
                id="1"
                type="checkbox"
              />
              <div
                class="c9 c10"
              >
                <div
                  aria-hidden="true"
                  class="c11"
                  focusable="false"
                />
              </div>
            </div>
          </label>
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 1
          </div>
        </li>
        <li
          class="c1"
        >
          <label
            class="c4 c5"
            data-field-id="2"
          >
            <div
              class="c6 c7"
            >
              <input
                class="c8"
                data-key="2"
                id="2"
                type="checkbox"
              />
              <div
                class="c9 c10"
              >
                <div
                  aria-hidden="true"
                  class="c11"
                  focusable="false"
                />
              </div>
            </div>
          </label>
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 2
          </div>
        </li>
        <li
          class="c1"
        >
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 3
          </div>
        </li>
        <li
          class="c1"
        >
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 4
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": .c4 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c4.c4 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c4.c4 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c11 {
  pointer-events: none;
}

.c6 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 20px;
  height: 20px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c6 {
  width: 16px;
}

fieldset[data-dimension='s'] .c6 {
  height: 16px;
}

.c10 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c10 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c8 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c8 ::-ms-check {
  display: none;
}

.c8:checked+.c9 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c8:checked:disabled+.c9 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c8:checked:disabled+.c9 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c8:not(:checked)+.c9 >* {
  display: none;
}

.c8:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:disabled+.c9 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c8:hover:not(:disabled)::after,
.c8:focus:not(:disabled)+.c8:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c8:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c8:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c7 {
  margin-top: 2px;
}

.c3 {
  transition: all 0.3s;
  width: 100%;
  height: 100%;
  transform: rotate(0deg);
}

.c3 path {
  fill: var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c2 {
  flex-shrink: 0;
  margin-right: 16px;
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
  width: 24px;
  height: 24px;
}

.c2:hover::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 12px);
  height: calc(100% + 12px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c1 {
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body1Short, 400);
  font-size: var(--admiral-font-size-Body_Body1Short, 16px);
  line-height: var(--admiral-line-height-Body_Body1Short, 20px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  display: flex;
  align-items: flex-start;
  padding: 8px 16px 8px 0px;
}

.c5 {
  margin-right: 8px;
  flex-shrink: 0;
}

.c12 {
  padding-top: 2px;
}

.c0 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<div>
    <ul
      class="c0"
    >
      <li
        class="c1"
      >
        <div
          class="c2"
          data-key="1"
        >
          <div
            class="c3"
          />
        </div>
        <label
          class="c4 c5"
          data-field-id="1"
        >
          <div
            class="c6 c7"
          >
            <input
              class="c8"
              data-key="1"
              id="1"
              type="checkbox"
            />
            <div
              class="c9 c10"
            >
              <div
                aria-hidden="true"
                class="c11"
                focusable="false"
              />
            </div>
          </div>
        </label>
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 1
        </div>
      </li>
      <li
        class="c1"
      >
        <label
          class="c4 c5"
          data-field-id="2"
        >
          <div
            class="c6 c7"
          >
            <input
              class="c8"
              data-key="2"
              id="2"
              type="checkbox"
            />
            <div
              class="c9 c10"
            >
              <div
                aria-hidden="true"
                class="c11"
                focusable="false"
              />
            </div>
          </div>
        </label>
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 2
        </div>
      </li>
      <li
        class="c1"
      >
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 3
        </div>
      </li>
      <li
        class="c1"
      >
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 4
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SelectTree should render small components 1`] = `
{
  "asFragment": [Function],
  "baseElement": .c4 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c4.c4 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c4.c4 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c11 {
  pointer-events: none;
}

.c6 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 16px;
  height: 16px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c6 {
  width: 16px;
}

fieldset[data-dimension='s'] .c6 {
  height: 16px;
}

.c10 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c10 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c8 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c8 ::-ms-check {
  display: none;
}

.c8:checked+.c9 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c8:checked:disabled+.c9 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c8:checked:disabled+.c9 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c8:not(:checked)+.c9 >* {
  display: none;
}

.c8:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:disabled+.c9 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c8:hover:not(:disabled)::after,
.c8:focus:not(:disabled)+.c8:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c8:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c8:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c7 {
  margin-top: 2px;
}

.c3 {
  transition: all 0.3s;
  width: 100%;
  height: 100%;
  transform: rotate(0deg);
}

.c3 path {
  fill: var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c2 {
  flex-shrink: 0;
  margin-right: 16px;
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
  width: 20px;
  height: 20px;
}

.c2:hover::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 12px);
  height: calc(100% + 12px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c1 {
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  display: flex;
  align-items: flex-start;
  padding: 6px 16px 6px 0px;
}

.c5 {
  margin-right: 8px;
  flex-shrink: 0;
}

.c12 {
  padding-top: 2px;
}

.c0 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<body>
    <div>
      <ul
        class="c0"
      >
        <li
          class="c1"
        >
          <div
            class="c2"
            data-key="1"
          >
            <div
              class="c3"
            />
          </div>
          <label
            class="c4 c5"
            data-field-id="1"
          >
            <div
              class="c6 c7"
            >
              <input
                class="c8"
                data-key="1"
                id="1"
                type="checkbox"
              />
              <div
                class="c9 c10"
              >
                <div
                  aria-hidden="true"
                  class="c11"
                  focusable="false"
                />
              </div>
            </div>
          </label>
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 1
          </div>
        </li>
        <li
          class="c1"
        >
          <label
            class="c4 c5"
            data-field-id="2"
          >
            <div
              class="c6 c7"
            >
              <input
                class="c8"
                data-key="2"
                id="2"
                type="checkbox"
              />
              <div
                class="c9 c10"
              >
                <div
                  aria-hidden="true"
                  class="c11"
                  focusable="false"
                />
              </div>
            </div>
          </label>
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 2
          </div>
        </li>
        <li
          class="c1"
        >
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 3
          </div>
        </li>
        <li
          class="c1"
        >
          <div
            class="c12"
          >
            Текст заголовка, первый уровень компонента, размер M 40 4
          </div>
        </li>
      </ul>
    </div>
  </body>,
  "container": .c4 {
  display: inline-flex;
  align-items: flex-start;
  position: relative;
  box-sizing: content-box;
  padding: 0;
  user-select: none;
  cursor: pointer;
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  color: var(--admiral-color-Neutral_Neutral90, #252629);
}

fieldset[data-dimension='s'] .c4.c4 {
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
}

fieldset:disabled .c4.c4 {
  color: var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  cursor: not-allowed;
}

.c11 {
  pointer-events: none;
}

.c6 {
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  overflow: visible;
  width: 16px;
  height: 16px;
  flex: 0 0 auto;
}

fieldset[data-dimension='s'] .c6 {
  width: 16px;
}

fieldset[data-dimension='s'] .c6 {
  height: 16px;
}

.c10 {
  pointer-events: none;
  display: inline-block;
  position: absolute;
  margin: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: var(--admiral-border-radius-Small, 4px);
  outline: 0;
  transition: background-color 0.1s ease-in;
  line-height: initial;
  background-color: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
  border: 1px solid var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c10 *[fill^='#'] {
  fill: var(--admiral-color-Special_StaticWhite, #FFFFFF);
}

.c8 {
  appearance: none;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--admiral-border-radius-Small, 4px);
  margin: 0;
  padding: 0;
}

.c8 ::-ms-check {
  display: none;
}

.c8:checked+.c9 {
  background-color: var(--admiral-color-Primary_Primary60Main, #0062FF);
  border: none;
}

.c8:checked:disabled+.c9 {
  background-color: var(--admiral-color-Primary_Primary30, #A7C7FF);
  border: none;
}

.c8:checked:disabled+.c9 *[fill^='#'] {
  fill: var(--admiral-color-Neutral_Neutral00, #FFFFFF);
}

.c8:not(:checked)+.c9 >* {
  display: none;
}

.c8:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c8:disabled+.c9 {
  border: 1px solid var(--admiral-color-Neutral_Neutral30, #B2B5B8);
  background-color: var(--admiral-color-Neutral_Neutral10, #EAEBEC);
}

.c8:hover:not(:disabled)::after,
.c8:focus:not(:disabled)+.c8:not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c8:active:not(:disabled):not(:disabled)::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 16px);
  height: calc(100% + 16px);
  background-color: var(--admiral-color-Opacity_Press, #0000001F);
}

.c8:focus-visible {
  outline-offset: 2px;
  outline: var(--admiral-color-Primary_Primary60Main, #0062FF) solid 2px;
}

.c7 {
  margin-top: 2px;
}

.c3 {
  transition: all 0.3s;
  width: 100%;
  height: 100%;
  transform: rotate(0deg);
}

.c3 path {
  fill: var(--admiral-color-Neutral_Neutral50, #74767B);
}

.c2 {
  flex-shrink: 0;
  margin-right: 16px;
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
  width: 20px;
  height: 20px;
}

.c2:hover::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  width: calc(100% + 12px);
  height: calc(100% + 12px);
  background-color: var(--admiral-color-Opacity_Hover, #0000000D);
}

.c1 {
  color: var(--admiral-color-Neutral_Neutral90, #252629);
  font-family: var(--admiral-font-family, 'VTB Group UI', sans-serif);
  font-style: normal;
  font-weight: var(--admiral-font-weight-Body_Body2Short, 400);
  font-size: var(--admiral-font-size-Body_Body2Short, 14px);
  line-height: var(--admiral-line-height-Body_Body2Short, 16px);
  font-feature-settings: 'tnum' on,'lnum' on;
  text-rendering: geometricPrecision;
  display: flex;
  align-items: flex-start;
  padding: 6px 16px 6px 0px;
}

.c5 {
  margin-right: 8px;
  flex-shrink: 0;
}

.c12 {
  padding-top: 2px;
}

.c0 {
  list-style: none;
  margin: 0;
  padding: 0;
}

<div>
    <ul
      class="c0"
    >
      <li
        class="c1"
      >
        <div
          class="c2"
          data-key="1"
        >
          <div
            class="c3"
          />
        </div>
        <label
          class="c4 c5"
          data-field-id="1"
        >
          <div
            class="c6 c7"
          >
            <input
              class="c8"
              data-key="1"
              id="1"
              type="checkbox"
            />
            <div
              class="c9 c10"
            >
              <div
                aria-hidden="true"
                class="c11"
                focusable="false"
              />
            </div>
          </div>
        </label>
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 1
        </div>
      </li>
      <li
        class="c1"
      >
        <label
          class="c4 c5"
          data-field-id="2"
        >
          <div
            class="c6 c7"
          >
            <input
              class="c8"
              data-key="2"
              id="2"
              type="checkbox"
            />
            <div
              class="c9 c10"
            >
              <div
                aria-hidden="true"
                class="c11"
                focusable="false"
              />
            </div>
          </div>
        </label>
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 2
        </div>
      </li>
      <li
        class="c1"
      >
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 3
        </div>
      </li>
      <li
        class="c1"
      >
        <div
          class="c12"
        >
          Текст заголовка, первый уровень компонента, размер M 40 4
        </div>
      </li>
    </ul>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
