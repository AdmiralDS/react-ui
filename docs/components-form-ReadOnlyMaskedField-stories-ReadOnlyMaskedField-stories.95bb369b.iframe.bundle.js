"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[1742],{"./src/components/form/ReadOnlyMaskedField/stories/ReadOnlyMaskedField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ReadOnlyMaskedField:()=>ReadOnlyMaskedField,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ReadOnlyMaskedField_stories});var react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),Field=__webpack_require__("./src/components/Field/index.tsx"),types=__webpack_require__("./src/components/input/types.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),InputField=__webpack_require__("./src/components/form/InputField/index.tsx"),InputIconButton=__webpack_require__("./src/components/InputIconButton.tsx"),DateField=__webpack_require__("./src/components/form/DateField/index.tsx"),PhoneInputField=__webpack_require__("./src/components/form/PhoneInputField/index.tsx"),EyeCloseOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/EyeCloseOutline.svg"),EyeOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/EyeOutline.svg"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const FormContainer=styled_components_browser_esm.Ay.form.withConfig({displayName:"ReadOnlyMaskedFieldtemplate__FormContainer",componentId:"sc-whqlab-0"})(["> *{margin-bottom:24px;}"]),ReadOnlyMaskedFieldTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const Icon=isMasked=>isMasked?EyeOutline.h:EyeCloseOutline.h,[cardNumber,setCardNumber]=react.useState("•••• •••• •••• •548"),[isCardNumberVisible,setCardNumberVisible]=react.useState(!1),[birthDate,setBirthDate]=react.useState("08.05.••••"),[isBirthDateVisible,setBirthDateVisible]=react.useState(!1),[email,setEmail]=react.useState("a•••••@mail.ru"),[isEmailVisible,setEmailVisible]=react.useState(!1),[surname,setSurname]=react.useState("С••••••а"),[isSurnameVisible,setSurnameVisible]=react.useState(!1),[phoneNumber,setPhoneNumber]=react.useState("+7 095 ••• •• 75"),[isPhoneNumberVisible,setPhoneNumberVisible]=react.useState(!1);return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsxs)(FormContainer,{children:[(0,jsx_runtime.jsx)(InputField.F,{dimension:props.dimension,"data-container-id":"cardNumberField",value:cardNumber,readOnly:!0,label:"Номер карты",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isCardNumberVisible),onClick:()=>{setCardNumberVisible(!isCardNumberVisible),setCardNumber(isCardNumberVisible?"•••• •••• •••• •548":"5543 9764 3143 2548")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(DateField.v,{dimension:props.dimension,"data-container-id":"birthDateField",value:birthDate,readOnly:!0,label:"Дата рождения",id:"birth date",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isBirthDateVisible),onClick:()=>{setBirthDateVisible(!isBirthDateVisible),setBirthDate(isBirthDateVisible?"08.05.••••":"08.05.1992")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(InputField.F,{dimension:props.dimension,"data-container-id":"emailField",value:email,readOnly:!0,label:"Электронная почта",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isEmailVisible),onClick:()=>{setEmailVisible(!isEmailVisible),setEmail(isEmailVisible?"a•••••@mail.ru":"apolon13@mail.ru")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(InputField.F,{dimension:props.dimension,"data-container-id":"surnameField",value:surname,readOnly:!0,label:"Фамилия",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isSurnameVisible),onClick:()=>{setSurnameVisible(!isSurnameVisible),setSurname(isSurnameVisible?"С••••••а":"Смирнова")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(PhoneInputField.$,{dimension:props.dimension,defaultCountry:"RUS","data-container-id":"phoneNumberField",value:phoneNumber,readOnly:!0,label:"Телефон",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isPhoneNumberVisible),onClick:()=>{setPhoneNumberVisible(!isPhoneNumberVisible),setPhoneNumber(isPhoneNumberVisible?"+7 095 ••• •• 75":"+7 095 364 83 75")},"aria-hidden":!0},"eye-icon")})]})})};ReadOnlyMaskedFieldTemplate.displayName="ReadOnlyMaskedFieldTemplate";try{ReadOnlyMaskedFieldTemplate.displayName="ReadOnlyMaskedFieldTemplate",ReadOnlyMaskedFieldTemplate.__docgenInfo={description:"",displayName:"ReadOnlyMaskedFieldTemplate",props:{dimension:{defaultValue:null,description:"",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Установка статуса поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},required:{defaultValue:null,description:"Установка статуса поле обязательно для заполнения",name:"required",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Установка статуса disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement | HTMLTextAreaElement>"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/ReadOnlyMaskedField/stories/ReadOnlyMaskedField.template.tsx#ReadOnlyMaskedFieldTemplate"]={docgenInfo:ReadOnlyMaskedFieldTemplate.__docgenInfo,name:"ReadOnlyMaskedFieldTemplate",path:"src/components/form/ReadOnlyMaskedField/stories/ReadOnlyMaskedField.template.tsx#ReadOnlyMaskedFieldTemplate"})}catch(__react_docgen_typescript_loader_error){}var common=__webpack_require__("./src/components/form/common.tsx");const ReadOnlyMaskedField_stories={title:"Admiral-2.1/Form Field/ReadOnlyMaskedField",component:Field.D0,decorators:void 0,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(common.u,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=149351%3A119027&t=0hLwy6SkOu2Lc4PO-1"}]},args:{dimension:"m"},argTypes:{dimension:{options:types.o,control:{type:"radio"}},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},skeleton:{control:!1},theme:{control:!1},ref:{control:!1}}},ReadOnlyMaskedFieldStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(ReadOnlyMaskedFieldTemplate,{...props,CSSCustomProps})};ReadOnlyMaskedFieldStory.displayName="ReadOnlyMaskedFieldStory";const ReadOnlyMaskedField={render:ReadOnlyMaskedFieldStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport { DateField, InputField, InputIconButton, PhoneInputField } from '@admiral-ds/react-ui';\nimport type { ComponentDimension, FieldProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ReactComponent as EyeCloseOutlineSvg } from '@admiral-ds/icons/build/service/EyeCloseOutline.svg';\nimport { ReactComponent as EyeOutlineSvg } from '@admiral-ds/icons/build/service/EyeOutline.svg';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\ninterface FieldPropsWithDimension extends FieldProps {\n  dimension?: ComponentDimension;\n}\n\nconst FormContainer = styled.form`\n  > * {\n    margin-bottom: 24px;\n  }\n`;\n\nconst initialCardNumber = '5543 9764 3143 2548';\nconst maskedCardNumber = '•••• •••• •••• •548';\n\nconst initialBirthDate = '08.05.1992';\nconst maskedBirthDate = '08.05.••••';\n\nconst initialEmail = 'apolon13@mail.ru';\nconst maskedEmail = 'a•••••@mail.ru';\n\nconst initialSurname = 'Смирнова';\nconst maskedSurname = 'С••••••а';\n\nconst initialPhoneNumber = '+7 095 364 83 75';\nconst maskedPhoneNumber = '+7 095 ••• •• 75';\n\nexport const ReadOnlyMaskedFieldTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: FieldPropsWithDimension & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const Icon = (isMasked: boolean) => (isMasked ? EyeOutlineSvg : EyeCloseOutlineSvg);\n\n  const [cardNumber, setCardNumber] = React.useState(maskedCardNumber);\n  const [isCardNumberVisible, setCardNumberVisible] = React.useState(false);\n\n  const [birthDate, setBirthDate] = React.useState(maskedBirthDate);\n  const [isBirthDateVisible, setBirthDateVisible] = React.useState(false);\n\n  const [email, setEmail] = React.useState(maskedEmail);\n  const [isEmailVisible, setEmailVisible] = React.useState(false);\n\n  const [surname, setSurname] = React.useState(maskedSurname);\n  const [isSurnameVisible, setSurnameVisible] = React.useState(false);\n\n  const [phoneNumber, setPhoneNumber] = React.useState(maskedPhoneNumber);\n  const [isPhoneNumberVisible, setPhoneNumberVisible] = React.useState(false);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <FormContainer>\n        <InputField\n          dimension={props.dimension}\n          data-container-id=\"cardNumberField\"\n          value={cardNumber}\n          readOnly\n          label=\"Номер карты\"\n          icons={\n            <InputIconButton\n              icon={Icon(isCardNumberVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setCardNumberVisible(!isCardNumberVisible);\n                setCardNumber(isCardNumberVisible ? maskedCardNumber : initialCardNumber);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <DateField\n          dimension={props.dimension}\n          data-container-id=\"birthDateField\"\n          value={birthDate}\n          readOnly\n          label=\"Дата рождения\"\n          id={'birth date'}\n          icons={\n            <InputIconButton\n              icon={Icon(isBirthDateVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setBirthDateVisible(!isBirthDateVisible);\n                setBirthDate(isBirthDateVisible ? maskedBirthDate : initialBirthDate);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <InputField\n          dimension={props.dimension}\n          data-container-id=\"emailField\"\n          value={email}\n          readOnly\n          label=\"Электронная почта\"\n          icons={\n            <InputIconButton\n              icon={Icon(isEmailVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setEmailVisible(!isEmailVisible);\n                setEmail(isEmailVisible ? maskedEmail : initialEmail);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <InputField\n          dimension={props.dimension}\n          data-container-id=\"surnameField\"\n          value={surname}\n          readOnly\n          label=\"Фамилия\"\n          icons={\n            <InputIconButton\n              icon={Icon(isSurnameVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setSurnameVisible(!isSurnameVisible);\n                setSurname(isSurnameVisible ? maskedSurname : initialSurname);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <PhoneInputField\n          dimension={props.dimension}\n          defaultCountry=\"RUS\"\n          data-container-id=\"phoneNumberField\"\n          value={phoneNumber}\n          readOnly\n          label=\"Телефон\"\n          icons={\n            <InputIconButton\n              icon={Icon(isPhoneNumberVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setPhoneNumberVisible(!isPhoneNumberVisible);\n                setPhoneNumber(isPhoneNumberVisible ? maskedPhoneNumber : initialPhoneNumber);\n              }}\n              aria-hidden\n            />\n          }\n        />\n      </FormContainer>\n    </ThemeProvider>\n  );\n};\n"}}},name:"ReadOnly masked field"};ReadOnlyMaskedField.parameters={...ReadOnlyMaskedField.parameters,docs:{...ReadOnlyMaskedField.parameters?.docs,source:{originalSource:"{\n  render: ReadOnlyMaskedFieldStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ReadOnlyMaskedFieldRaw\n      }\n    }\n  },\n  name: 'ReadOnly masked field'\n}",...ReadOnlyMaskedField.parameters?.docs?.source}}};const __namedExportsOrder=["ReadOnlyMaskedField"]},"./src/components/form/InputField/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>InputField});var _src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/common/uid.ts"),_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/utils/refSetter.ts"),_src_components_Field__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Field/index.tsx"),_src_components_input__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/input/TextInput/index.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const InputField=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,ref)=>{const inputRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),{className,maxLength,displayInline,status,required,extraText,label,id=(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__.L)(),disabled,displayCharacterCounter,skeleton,...restProps}=props,fieldContainerProps={className,extraText,status,required,label,id,displayInline,disabled,maxLength,inputRef,displayCharacterCounter,skeleton,"data-field-id":id,"data-field-name":restProps.name};(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.$e)(restProps,fieldContainerProps),(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G)(restProps,fieldContainerProps);const inputProps={ref:(0,_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_4__.d)(ref,inputRef),id,"aria-required":required,status,disabled,maxLength,skeleton,...restProps};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_Field__WEBPACK_IMPORTED_MODULE_5__.D0,{...fieldContainerProps,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input__WEBPACK_IMPORTED_MODULE_6__.ks,{...inputProps})})}));InputField.displayName="InputField";try{InputField.displayName="InputField",InputField.__docgenInfo={description:"",displayName:"InputField",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/InputField/index.tsx#InputField"]={docgenInfo:InputField.__docgenInfo,name:"InputField",path:"src/components/form/InputField/index.tsx#InputField"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/PhoneInputField/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>PhoneInputField});var _src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/common/uid.ts"),_src_components_Field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Field/index.tsx"),_src_components_input_PhoneNumberInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/input/PhoneNumberInput/index.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const PhoneInputField=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,ref)=>{const inputRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),{className,displayInline,status,required,extraText,label,id=(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__.L)(),disabled,displayCharacterCounter,skeleton,...restProps}=props,fieldContainerProps={className,extraText,status,required,label,id,displayInline,disabled,displayCharacterCounter,ref:inputRef,skeleton,"data-field-id":id,"data-field-name":restProps.name};(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.$e)(restProps,fieldContainerProps),(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G)(restProps,fieldContainerProps);const inputProps={ref,id,"aria-required":required,status,disabled,skeleton,...restProps};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_Field__WEBPACK_IMPORTED_MODULE_4__.D0,{...fieldContainerProps,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_PhoneNumberInput__WEBPACK_IMPORTED_MODULE_5__.y,{...inputProps})})}));PhoneInputField.displayName="PhoneInputField";try{PhoneInputField.displayName="PhoneInputField",PhoneInputField.__docgenInfo={description:"",displayName:"PhoneInputField",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},defaultCountry:{defaultValue:null,description:"Код ISO A3 страны для определения префикса номера по умолчанию",name:"defaultCountry",required:!1,type:{name:"string"}},onlyCountries:{defaultValue:null,description:"Список стран для выпадающего списка. Отмечается кодом ISO A3 страны",name:"onlyCountries",required:!1,type:{name:"string[]"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/PhoneInputField/index.tsx#PhoneInputField"]={docgenInfo:PhoneInputField.__docgenInfo,name:"PhoneInputField",path:"src/components/form/PhoneInputField/index.tsx#PhoneInputField"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/common.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>DataAttributesDescription});__webpack_require__("./node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Desc=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.div.withConfig({displayName:"common__Desc",componentId:"sc-1vhod0x-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),DataAttributesDescription=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Desc,{children:["Компоненту можно прокидывать дата аттрибуты вида [",_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G$,"-...]. Этот аттрибут попадет только на контейнер самого компонента.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("br",{}),' Например: data-container-id="fieldIdOne" - контейнер компонента получит аттрибут data-container-id="fieldIdOne", на нативный input этот аттрибут прокинут не будет.']});DataAttributesDescription.displayName="DataAttributesDescription"}}]);