"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[5819],{"./src/components/Avatar/stories/Avatar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AvatarPlayground:()=>AvatarPlayground,AvatarXXS:()=>AvatarXXS,SingleAvatar:()=>SingleAvatar,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Avatar_stories});var react=__webpack_require__("./node_modules/react/index.js"),AvatarBase=__webpack_require__("./src/components/AvatarBase/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Avatar=(0,react.forwardRef)((({dimension,...props},ref)=>(0,jsx_runtime.jsx)(AvatarBase.d,{ref,...props,dimension:props.status&&"xxs"===dimension?"xs":dimension,withActivityRing:!1,showActivityRing:!1})));Avatar.displayName="Avatar";try{Avatar.displayName="Avatar",Avatar.__docgenInfo={description:"",displayName:"Avatar",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"xs"'},{value:'"xxs"'}]}},status:{defaultValue:null,description:"Статус пользователя -\nможно выбрать один из четырех исходных вариантов, либо задать свой цвет.",name:"status",required:!1,type:{name:"string"}},showTooltip:{defaultValue:null,description:"Отображение тултипа",name:"showTooltip",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Иконка для отображения",name:"icon",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:null,description:"Внешний вид компонента (цвет заливки, текста, иконки) -\nможно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов.\nПараметры background, text и icon являются опциональными, если какие-то из них не заданы,\nто по умолчанию будут применены те же цвета, что и при appearance='neutral2'",name:"appearance",required:!1,type:{name:"AvatarAppearance | { background?: string; text?: string; icon?: string | undefined; } | undefined"}},href:{defaultValue:null,description:"URL аватарки пользователя",name:"href",required:!1,type:{name:"string"}},userName:{defaultValue:null,description:"Имя пользователя, будет использовано внутри тултипа и для генерации инициалов (в случае если не задан параметр userInitials)",name:"userName",required:!0,type:{name:"string"}},userInitials:{defaultValue:null,description:"Инициалы пользователя. По умолчанию вычисляются на основании userName - берутся первые буквы первых\nдвух слов (одного слова для dimension='s'), входящих в userName",name:"userInitials",required:!1,type:{name:"string"}},svgMaskId:{defaultValue:null,description:"Уникальный идентификатор svg маски",name:"svgMaskId",required:!1,type:{name:"string"}},group:{defaultValue:null,description:"Для внутреннего использования! Отображение аватара в составе группы (когда правый край аватара усечен)",name:"group",required:!1,type:{name:"boolean"}},isMenuAvatar:{defaultValue:null,description:"Для внутреннего использования! Используется ли аватар в качестве меню. Если да - то userName выводится без изменений",name:"isMenuAvatar",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Avatar/index.tsx#Avatar"]={docgenInfo:Avatar.__docgenInfo,name:"Avatar",path:"src/components/Avatar/index.tsx#Avatar"})}catch(__react_docgen_typescript_loader_error){}var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),NotificationItem=__webpack_require__("./src/components/NotificationItem/index.tsx");const Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarPlaygroundtemplate__Separator",componentId:"sc-1cpg830-0"})(["height:","px;"],(p=>p.height)),Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarPlaygroundtemplate__Wrapper",componentId:"sc-1cpg830-1"})(["display:flex;flex-direction:column;align-items:center;gap:10px;"]),AvatarPlaygroundTemplate=({userName,...props})=>(0,jsx_runtime.jsxs)(Wrapper,{children:[(0,jsx_runtime.jsxs)(NotificationItem.rn,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Аватар"}),(0,jsx_runtime.jsxs)(NotificationItem.Yg,{children:["Компонент используется для отображения фотографии пользователя, его инициалов или иконки. Присутствует пять размеров компонента. Допускается использование одной или двух букв для обозначения пользователя (в размере XS только одна буква). Компоненту и символам в нем можно присваивать любые цвета из палитры. Компонент может быть кликабельным, например, вести в личный кабинет или показывать выпадающее меню с опциями пользователя. При ховере над аватаром показывается Tooltip с именем пользователя (опционально можно отключить). Может отображать статус пользователя с помощью статусного Бейджа. Статусы: «В сети», «Не беспокоить», «Отошел», «Не в сети».",(0,jsx_runtime.jsx)(Separator,{height:8}),"Для окраски фона компонента, букв (иконок) используйте стандартную палитру дизайн-системы, следите за контрастностью и читаемостью.",(0,jsx_runtime.jsx)(Separator,{height:8}),"Рекомендуемый алгоритм использования типов аватаров:",(0,jsx_runtime.jsx)("li",{children:"Если пользователь предоставил фотографию, то используется аватар с фото"}),(0,jsx_runtime.jsx)("li",{children:"Если нет фото, то пишутся инициалы пользователя – первые буквы имени и фамилии"}),(0,jsx_runtime.jsx)("li",{children:"Если известно только имя, то пишутся первые две буквы имени"}),(0,jsx_runtime.jsx)("li",{children:"Если нет никаких данных, то используется аватар с иконкой"}),(0,jsx_runtime.jsx)("li",{children:"При использовании размера аватара XS пишется только одна, первая буква имени"})]})]}),(0,jsx_runtime.jsx)(Separator,{height:40}),(0,jsx_runtime.jsx)(Avatar,{userName:userName||"Just Example",...props})]});AvatarPlaygroundTemplate.displayName="AvatarPlaygroundTemplate";try{AvatarPlaygroundTemplate.displayName="AvatarPlaygroundTemplate",AvatarPlaygroundTemplate.__docgenInfo={description:"",displayName:"AvatarPlaygroundTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"xs"'},{value:'"xxs"'}]}},status:{defaultValue:null,description:"Статус пользователя -\nможно выбрать один из четырех исходных вариантов, либо задать свой цвет.",name:"status",required:!1,type:{name:"string"}},showTooltip:{defaultValue:null,description:"Отображение тултипа",name:"showTooltip",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Иконка для отображения",name:"icon",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:null,description:"Внешний вид компонента (цвет заливки, текста, иконки) -\nможно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов.\nПараметры background, text и icon являются опциональными, если какие-то из них не заданы,\nто по умолчанию будут применены те же цвета, что и при appearance='neutral2'",name:"appearance",required:!1,type:{name:"AvatarAppearance | { background?: string; text?: string; icon?: string | undefined; } | undefined"}},href:{defaultValue:null,description:"URL аватарки пользователя",name:"href",required:!1,type:{name:"string"}},userName:{defaultValue:null,description:"Имя пользователя, будет использовано внутри тултипа и для генерации инициалов (в случае если не задан параметр userInitials)",name:"userName",required:!0,type:{name:"string"}},userInitials:{defaultValue:null,description:"Инициалы пользователя. По умолчанию вычисляются на основании userName - берутся первые буквы первых\nдвух слов (одного слова для dimension='s'), входящих в userName",name:"userInitials",required:!1,type:{name:"string"}},svgMaskId:{defaultValue:null,description:"Уникальный идентификатор svg маски",name:"svgMaskId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Avatar/stories/AvatarPlayground.template.tsx#AvatarPlaygroundTemplate"]={docgenInfo:AvatarPlaygroundTemplate.__docgenInfo,name:"AvatarPlaygroundTemplate",path:"src/components/Avatar/stories/AvatarPlayground.template.tsx#AvatarPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}var common=__webpack_require__("./src/components/themes/common/index.ts"),typography=__webpack_require__("./src/components/Typography/typography.ts"),PersonSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/PersonSolid.svg");const imageURL="https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg",Text=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarSingletemplate__Text",componentId:"sc-1n6ia5k-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;margin-bottom:8px;color:var(--admiral-color-Neutral_Neutral90,",");",""],(p=>p.theme.color[common.jn]),typography.Il["Body/Body 2 Long"]),Container=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarSingletemplate__Container",componentId:"sc-1n6ia5k-1"})(["position:relative;display:flex;gap:20px;"]),AvatarSingle_template_Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarSingletemplate__Wrapper",componentId:"sc-1n6ia5k-2"})(["display:flex;flex-direction:column;align-items:center;gap:20px;"]),GridContainer=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarSingletemplate__GridContainer",componentId:"sc-1n6ia5k-3"})(["display:grid;grid-template-columns:repeat(4,1fr);grid-template-rows:repeat(4,1fr);gap:20px;"]),AvatarContainer=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarSingletemplate__AvatarContainer",componentId:"sc-1n6ia5k-4"})(["display:flex;flex-direction:column;align-items:center;gap:10px;padding:10px;"]),StyledNotificationItem=(0,styled_components_browser_esm.Ay)(NotificationItem.rn).withConfig({displayName:"AvatarSingletemplate__StyledNotificationItem",componentId:"sc-1n6ia5k-5"})(["width:100%;"]),AvatarSingleTemplate=({showTooltip})=>(0,jsx_runtime.jsxs)(AvatarSingle_template_Wrapper,{children:[(0,jsx_runtime.jsxs)(StyledNotificationItem,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Размеры и типы"}),(0,jsx_runtime.jsx)(NotificationItem.Yg,{children:"Опционально Tooltip можно отключать."})]}),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"xs",userName:"Dimension xs"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"s",userName:"Dimension s"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"m",userName:"Dimension m"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"l",userName:"Dimension l"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Dimension xl"})]}),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"xs",userName:"Dimension xs",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{})}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"s",userName:"Dimension s",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{})}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"m",userName:"Dimension m",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{})}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"l",userName:"Dimension l",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{})}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Dimension xl",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{})})]}),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"xs",userName:"Dimension xs",href:imageURL}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"s",userName:"Dimension s",href:imageURL}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"m",userName:"Dimension m",href:imageURL}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"l",userName:"Dimension l",href:imageURL}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Dimension xl",href:imageURL})]}),(0,jsx_runtime.jsxs)(StyledNotificationItem,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Avatar с опцией «Status»"}),(0,jsx_runtime.jsx)(NotificationItem.Yg,{children:"Статусы: «В сети», «Не беспокоить», «Отошел», «Не в сети». Также возможно задать кастомный цвет для статуса."})]}),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"xs",userName:"Status Success",status:"success"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"s",userName:"Status Danger",status:"danger"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"m",userName:"Status Warn",status:"warn"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"l",userName:"Status Inactive",status:"inactive"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Custom Status",status:"#3F7DFE"})]}),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"xs",userName:"Status Success",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),status:"success"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"s",userName:"Status Danger",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),status:"danger"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"m",userName:"Status Warn",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),status:"warn"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"l",userName:"Status Inactive",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),status:"inactive"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Custom Status",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),status:"#3F7DFE"})]}),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"xs",userName:"Status Success",href:imageURL,status:"success"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"s",userName:"Status Danger",href:imageURL,status:"danger"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"m",userName:"Status Warn",href:imageURL,status:"warn"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,dimension:"l",userName:"Status Inactive",href:imageURL,status:"inactive"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Custom Status",href:imageURL,status:"#3F7DFE"})]}),(0,jsx_runtime.jsxs)(StyledNotificationItem,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Цвета Аватаров"}),(0,jsx_runtime.jsx)(NotificationItem.Yg,{children:"Для окраски фона компонента, букв (иконок) используйте стандартную палитру дизайн-системы, следите за контрастностью и читаемостью. Рекомендуемые цвета:"})]}),(0,jsx_runtime.jsxs)(GridContainer,{children:[(0,jsx_runtime.jsxs)(AvatarContainer,{style:{background:"#F1F2F4"},children:[(0,jsx_runtime.jsx)(Text,{children:"Neutral 00"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Neutral 1 Appearance",appearance:"neutral1",dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Neutral 10"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Neutral 2 Appearance",dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Neutral 50"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Neutral 3 Appearance",appearance:"neutral3",dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Neutral 80"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Neutral 4 Appearance",appearance:"neutral4",dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Primary 60 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Primary 60 Main",appearance:{background:"#0062FF",text:"#FFFFFF"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Error 60 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Error 60 Main",appearance:{background:"#D92020",text:"#FFFFFF"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Success 50 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Success 50 Main",appearance:{background:"#1BA049",text:"#FFFFFF"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Warning 50 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Warning 50 Main",appearance:{background:"#FF5C22",text:"#FFFFFF"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Attention 50 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Attention 50 Main",appearance:{background:"#FFC400",text:"#121316"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Purple 60 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Purple 60 Main",appearance:{background:"#8A3FFC",text:"#FFFFFF"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Magenta 60 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Magenta 60 Main",appearance:{background:"#D02670",text:"#FFFFFF"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Cian 60 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Cian 60 Main",appearance:{background:"#0072C3",text:"#FFFFFF"},dimension:"m"})]}),(0,jsx_runtime.jsxs)(AvatarContainer,{children:[(0,jsx_runtime.jsx)(Text,{children:"Teal 60 Main"}),(0,jsx_runtime.jsx)(Avatar,{showTooltip,userName:"Teal 60 Main",appearance:{background:"#007D79",text:"#FFFFFF"},dimension:"m"})]})]})]});AvatarSingleTemplate.displayName="AvatarSingleTemplate";try{AvatarSingleTemplate.displayName="AvatarSingleTemplate",AvatarSingleTemplate.__docgenInfo={description:"",displayName:"AvatarSingleTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"xs"'},{value:'"xxs"'}]}},status:{defaultValue:null,description:"Статус пользователя -\nможно выбрать один из четырех исходных вариантов, либо задать свой цвет.",name:"status",required:!1,type:{name:"string"}},showTooltip:{defaultValue:null,description:"Отображение тултипа",name:"showTooltip",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Иконка для отображения",name:"icon",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:null,description:"Внешний вид компонента (цвет заливки, текста, иконки) -\nможно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов.\nПараметры background, text и icon являются опциональными, если какие-то из них не заданы,\nто по умолчанию будут применены те же цвета, что и при appearance='neutral2'",name:"appearance",required:!1,type:{name:"AvatarAppearance | { background?: string; text?: string; icon?: string | undefined; } | undefined"}},href:{defaultValue:null,description:"URL аватарки пользователя",name:"href",required:!1,type:{name:"string"}},userName:{defaultValue:null,description:"Имя пользователя, будет использовано внутри тултипа и для генерации инициалов (в случае если не задан параметр userInitials)",name:"userName",required:!0,type:{name:"string"}},userInitials:{defaultValue:null,description:"Инициалы пользователя. По умолчанию вычисляются на основании userName - берутся первые буквы первых\nдвух слов (одного слова для dimension='s'), входящих в userName",name:"userInitials",required:!1,type:{name:"string"}},svgMaskId:{defaultValue:null,description:"Уникальный идентификатор svg маски",name:"svgMaskId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Avatar/stories/AvatarSingle.template.tsx#AvatarSingleTemplate"]={docgenInfo:AvatarSingleTemplate.__docgenInfo,name:"AvatarSingleTemplate",path:"src/components/Avatar/stories/AvatarSingle.template.tsx#AvatarSingleTemplate"})}catch(__react_docgen_typescript_loader_error){}const AvatarXXS_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarXXStemplate__Separator",componentId:"sc-dftoxa-0"})(["height:","px;"],(p=>p.height)),AvatarXXS_template_Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarXXStemplate__Wrapper",componentId:"sc-dftoxa-1"})(["display:flex;flex-direction:column;align-items:center;gap:10px;"]),AvatarXXS_template_Container=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarXXStemplate__Container",componentId:"sc-dftoxa-2"})(["position:relative;display:flex;gap:20px;"]),AvatarXXSTemplate=({userName,href,...props})=>(0,jsx_runtime.jsxs)(AvatarXXS_template_Wrapper,{children:[(0,jsx_runtime.jsxs)(NotificationItem.rn,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Размер XXS 20px"}),(0,jsx_runtime.jsxs)(NotificationItem.Yg,{children:["Размер XXS не используется самостоятельно, как отдельно стоящий и в группах. Применяется в составе других компонентов с размерным рядом элементов 20px.",(0,jsx_runtime.jsx)(AvatarXXS_template_Separator,{height:8}),"Имеет только два типа: с инициалами или с фото."]})]}),(0,jsx_runtime.jsx)(AvatarXXS_template_Separator,{height:40}),(0,jsx_runtime.jsxs)(AvatarXXS_template_Container,{children:[(0,jsx_runtime.jsx)(Avatar,{userName:userName||"Just Example",...props,dimension:"xxs"}),(0,jsx_runtime.jsx)(Avatar,{userName:userName||"Just Example",...props,href:href||"https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg",dimension:"xxs"})]})]});AvatarXXSTemplate.displayName="AvatarXXSTemplate";try{AvatarXXSTemplate.displayName="AvatarXXSTemplate",AvatarXXSTemplate.__docgenInfo={description:"",displayName:"AvatarXXSTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"xs"'},{value:'"xxs"'}]}},status:{defaultValue:null,description:"Статус пользователя -\nможно выбрать один из четырех исходных вариантов, либо задать свой цвет.",name:"status",required:!1,type:{name:"string"}},showTooltip:{defaultValue:null,description:"Отображение тултипа",name:"showTooltip",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Иконка для отображения",name:"icon",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:null,description:"Внешний вид компонента (цвет заливки, текста, иконки) -\nможно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов.\nПараметры background, text и icon являются опциональными, если какие-то из них не заданы,\nто по умолчанию будут применены те же цвета, что и при appearance='neutral2'",name:"appearance",required:!1,type:{name:"AvatarAppearance | { background?: string; text?: string; icon?: string | undefined; } | undefined"}},href:{defaultValue:null,description:"URL аватарки пользователя",name:"href",required:!1,type:{name:"string"}},userName:{defaultValue:null,description:"Имя пользователя, будет использовано внутри тултипа и для генерации инициалов (в случае если не задан параметр userInitials)",name:"userName",required:!0,type:{name:"string"}},userInitials:{defaultValue:null,description:"Инициалы пользователя. По умолчанию вычисляются на основании userName - берутся первые буквы первых\nдвух слов (одного слова для dimension='s'), входящих в userName",name:"userInitials",required:!1,type:{name:"string"}},svgMaskId:{defaultValue:null,description:"Уникальный идентификатор svg маски",name:"svgMaskId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Avatar/stories/AvatarXXS.template.tsx#AvatarXXSTemplate"]={docgenInfo:AvatarXXSTemplate.__docgenInfo,name:"AvatarXXSTemplate",path:"src/components/Avatar/stories/AvatarXXS.template.tsx#AvatarXXSTemplate"})}catch(__react_docgen_typescript_loader_error){}const Avatar_stories={title:"Admiral-2.1/Avatar",decorators:void 0,component:Avatar,parameters:{docs:{source:{code:null}},design:{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A32367"}},argTypes:{dimension:{options:["xl","l","m","s","xs"],control:{type:"radio"}},group:{control:!1},icon:{control:!1},userInitials:{control:{type:"text"}},href:{control:{type:"text"}},status:{options:["success","danger","warn","inactive"],control:{type:"radio"}},appearance:{options:["neutral1","neutral2","neutral3","neutral4"],control:{type:"radio"}},svgMaskId:{control:{type:"text"}},showTooltip:{control:{type:"boolean"}},isMenuAvatar:{control:!1},theme:{control:!1}}},AvatarPlaygroundStory=({userName,...props})=>(0,jsx_runtime.jsx)(AvatarPlaygroundTemplate,{userName,...props});AvatarPlaygroundStory.displayName="AvatarPlaygroundStory";const AvatarPlayground={render:AvatarPlaygroundStory,parameters:{docs:{source:{code:"import styled from 'styled-components';\n\nimport { Avatar, NotificationItem, NotificationItemContent, NotificationItemTitle } from '@admiral-ds/react-ui';\nimport type { AvatarProps } from '@admiral-ds/react-ui';\n\nconst Separator = styled.div<{ height: number }>`\n  height: ${(p) => p.height}px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const AvatarPlaygroundTemplate = ({ userName, ...props }: AvatarProps) => {\n  return (\n    <Wrapper>\n      <NotificationItem displayStatusIcon>\n        <NotificationItemTitle>Аватар</NotificationItemTitle>\n        <NotificationItemContent>\n          Компонент используется для отображения фотографии пользователя, его инициалов или иконки. Присутствует пять\n          размеров компонента. Допускается использование одной или двух букв для обозначения пользователя (в размере XS\n          только одна буква). Компоненту и символам в нем можно присваивать любые цвета из палитры. Компонент может быть\n          кликабельным, например, вести в личный кабинет или показывать выпадающее меню с опциями пользователя. При\n          ховере над аватаром показывается Tooltip с именем пользователя (опционально можно отключить). Может отображать\n          статус пользователя с помощью статусного Бейджа. Статусы: «В сети», «Не беспокоить», «Отошел», «Не в сети».\n          <Separator height={8} />\n          Для окраски фона компонента, букв (иконок) используйте стандартную палитру дизайн-системы, следите за\n          контрастностью и читаемостью.\n          <Separator height={8} />\n          Рекомендуемый алгоритм использования типов аватаров:\n          <li>Если пользователь предоставил фотографию, то используется аватар с фото</li>\n          <li>Если нет фото, то пишутся инициалы пользователя – первые буквы имени и фамилии</li>\n          <li>Если известно только имя, то пишутся первые две буквы имени</li>\n          <li>Если нет никаких данных, то используется аватар с иконкой</li>\n          <li>При использовании размера аватара XS пишется только одна, первая буква имени</li>\n        </NotificationItemContent>\n      </NotificationItem>\n      <Separator height={40} />\n      <Avatar userName={userName || 'Just Example'} {...props} />\n    </Wrapper>\n  );\n};\n"}}},name:"Avatar. Playground"},SingleAvatarStory=({showTooltip,userName})=>(0,jsx_runtime.jsx)(AvatarSingleTemplate,{userName,showTooltip});SingleAvatarStory.displayName="SingleAvatarStory";const SingleAvatar={render:SingleAvatarStory,parameters:{docs:{source:{code:'import styled from \'styled-components\';\n\nimport type { AvatarProps } from \'@admiral-ds/react-ui\';\nimport {\n  Avatar,\n  DefaultFontColorName,\n  NotificationItem,\n  NotificationItemContent,\n  NotificationItemTitle,\n  typography,\n} from \'@admiral-ds/react-ui\';\nimport { ReactComponent as PersonSolid } from \'@admiral-ds/icons/build/system/PersonSolid.svg\';\n\nconst imageURL = \'https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg\';\n\nconst Text = styled.div`\n  font-family: \'VTB Group UI\';\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n  color: var(--admiral-color-Neutral_Neutral90, ${(p) => p.theme.color[DefaultFontColorName]});\n  ${typography[\'Body/Body 2 Long\']}\n`;\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  gap: 20px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  gap: 20px;\n`;\nconst AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n`;\nconst StyledNotificationItem = styled(NotificationItem)`\n  width: 100%;\n`;\n\nexport const AvatarSingleTemplate = ({ showTooltip }: AvatarProps) => (\n  <Wrapper>\n    <StyledNotificationItem displayStatusIcon>\n      <NotificationItemTitle>Размеры и типы</NotificationItemTitle>\n      <NotificationItemContent>Опционально Tooltip можно отключать.</NotificationItemContent>\n    </StyledNotificationItem>\n    <Container>\n      <Avatar showTooltip={showTooltip} dimension="xs" userName="Dimension xs" />\n      <Avatar showTooltip={showTooltip} dimension="s" userName="Dimension s" />\n      <Avatar showTooltip={showTooltip} dimension="m" userName="Dimension m" />\n      <Avatar showTooltip={showTooltip} dimension="l" userName="Dimension l" />\n      <Avatar showTooltip={showTooltip} userName="Dimension xl" />\n    </Container>\n    <Container>\n      <Avatar showTooltip={showTooltip} dimension="xs" userName="Dimension xs" icon={<PersonSolid />} />\n      <Avatar showTooltip={showTooltip} dimension="s" userName="Dimension s" icon={<PersonSolid />} />\n      <Avatar showTooltip={showTooltip} dimension="m" userName="Dimension m" icon={<PersonSolid />} />\n      <Avatar showTooltip={showTooltip} dimension="l" userName="Dimension l" icon={<PersonSolid />} />\n      <Avatar showTooltip={showTooltip} userName="Dimension xl" icon={<PersonSolid />} />\n    </Container>\n    <Container>\n      <Avatar showTooltip={showTooltip} dimension="xs" userName="Dimension xs" href={imageURL} />\n      <Avatar showTooltip={showTooltip} dimension="s" userName="Dimension s" href={imageURL} />\n      <Avatar showTooltip={showTooltip} dimension="m" userName="Dimension m" href={imageURL} />\n      <Avatar showTooltip={showTooltip} dimension="l" userName="Dimension l" href={imageURL} />\n      <Avatar showTooltip={showTooltip} userName="Dimension xl" href={imageURL} />\n    </Container>\n\n    <StyledNotificationItem displayStatusIcon>\n      <NotificationItemTitle>Avatar с опцией «Status»</NotificationItemTitle>\n      <NotificationItemContent>\n        Статусы: «В сети», «Не беспокоить», «Отошел», «Не в сети». Также возможно задать кастомный цвет для статуса.\n      </NotificationItemContent>\n    </StyledNotificationItem>\n    <Container>\n      <Avatar showTooltip={showTooltip} dimension="xs" userName="Status Success" status="success" />\n      <Avatar showTooltip={showTooltip} dimension="s" userName="Status Danger" status="danger" />\n      <Avatar showTooltip={showTooltip} dimension="m" userName="Status Warn" status="warn" />\n      <Avatar showTooltip={showTooltip} dimension="l" userName="Status Inactive" status="inactive" />\n      <Avatar showTooltip={showTooltip} userName="Custom Status" status="#3F7DFE" />\n    </Container>\n    <Container>\n      <Avatar\n        showTooltip={showTooltip}\n        dimension="xs"\n        userName="Status Success"\n        icon={<PersonSolid />}\n        status="success"\n      />\n      <Avatar showTooltip={showTooltip} dimension="s" userName="Status Danger" icon={<PersonSolid />} status="danger" />\n      <Avatar showTooltip={showTooltip} dimension="m" userName="Status Warn" icon={<PersonSolid />} status="warn" />\n      <Avatar\n        showTooltip={showTooltip}\n        dimension="l"\n        userName="Status Inactive"\n        icon={<PersonSolid />}\n        status="inactive"\n      />\n      <Avatar showTooltip={showTooltip} userName="Custom Status" icon={<PersonSolid />} status="#3F7DFE" />\n    </Container>\n    <Container>\n      <Avatar showTooltip={showTooltip} dimension="xs" userName="Status Success" href={imageURL} status="success" />\n      <Avatar showTooltip={showTooltip} dimension="s" userName="Status Danger" href={imageURL} status="danger" />\n      <Avatar showTooltip={showTooltip} dimension="m" userName="Status Warn" href={imageURL} status="warn" />\n      <Avatar showTooltip={showTooltip} dimension="l" userName="Status Inactive" href={imageURL} status="inactive" />\n      <Avatar showTooltip={showTooltip} userName="Custom Status" href={imageURL} status="#3F7DFE" />\n    </Container>\n\n    <StyledNotificationItem displayStatusIcon>\n      <NotificationItemTitle>Цвета Аватаров</NotificationItemTitle>\n      <NotificationItemContent>\n        Для окраски фона компонента, букв (иконок) используйте стандартную палитру дизайн-системы, следите за\n        контрастностью и читаемостью. Рекомендуемые цвета:\n      </NotificationItemContent>\n    </StyledNotificationItem>\n    <GridContainer>\n      <AvatarContainer style={{ background: \'#F1F2F4\' }}>\n        <Text>Neutral 00</Text>\n        <Avatar showTooltip={showTooltip} userName="Neutral 1 Appearance" appearance="neutral1" dimension="m" />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Neutral 10</Text>\n        <Avatar showTooltip={showTooltip} userName="Neutral 2 Appearance" dimension="m" />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Neutral 50</Text>\n        <Avatar showTooltip={showTooltip} userName="Neutral 3 Appearance" appearance="neutral3" dimension="m" />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Neutral 80</Text>\n        <Avatar showTooltip={showTooltip} userName="Neutral 4 Appearance" appearance="neutral4" dimension="m" />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Primary 60 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Primary 60 Main"\n          appearance={{ background: \'#0062FF\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Error 60 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Error 60 Main"\n          appearance={{ background: \'#D92020\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Success 50 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Success 50 Main"\n          appearance={{ background: \'#1BA049\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Warning 50 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Warning 50 Main"\n          appearance={{ background: \'#FF5C22\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Attention 50 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Attention 50 Main"\n          appearance={{ background: \'#FFC400\', text: \'#121316\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Purple 60 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Purple 60 Main"\n          appearance={{ background: \'#8A3FFC\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Magenta 60 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Magenta 60 Main"\n          appearance={{ background: \'#D02670\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Cian 60 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Cian 60 Main"\n          appearance={{ background: \'#0072C3\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n      <AvatarContainer>\n        <Text>Teal 60 Main</Text>\n        <Avatar\n          showTooltip={showTooltip}\n          userName="Teal 60 Main"\n          appearance={{ background: \'#007D79\', text: \'#FFFFFF\' }}\n          dimension="m"\n        />\n      </AvatarContainer>\n    </GridContainer>\n  </Wrapper>\n);\n'}}},argTypes:{href:{control:!1},appearance:{control:!1},svgMaskId:{control:!1},userInitials:{control:!1},userName:{control:!1},dimension:{control:!1},status:{control:!1}},name:"Avatar. Типы и размеры"},AvatarXXSStory=({userName,...props})=>(0,jsx_runtime.jsx)(AvatarXXSTemplate,{userName,...props});AvatarXXSStory.displayName="AvatarXXSStory";const AvatarXXS={render:AvatarXXSStory,parameters:{docs:{source:{code:"import styled from 'styled-components';\n\nimport { Avatar, NotificationItem, NotificationItemContent, NotificationItemTitle } from '@admiral-ds/react-ui';\nimport type { AvatarProps } from '@admiral-ds/react-ui';\n\nconst imageURL = 'https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg';\n\nconst Separator = styled.div<{ height: number }>`\n  height: ${(p) => p.height}px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const AvatarXXSTemplate = ({ userName, href, ...props }: AvatarProps) => {\n  return (\n    <Wrapper>\n      <NotificationItem displayStatusIcon>\n        <NotificationItemTitle>Размер XXS 20px</NotificationItemTitle>\n        <NotificationItemContent>\n          Размер XXS не используется самостоятельно, как отдельно стоящий и в группах. Применяется в составе других\n          компонентов с размерным рядом элементов 20px.\n          <Separator height={8} />\n          Имеет только два типа: с инициалами или с фото.\n        </NotificationItemContent>\n      </NotificationItem>\n      <Separator height={40} />\n      <Container>\n        <Avatar userName={userName || 'Just Example'} {...props} dimension=\"xxs\" />\n        <Avatar userName={userName || 'Just Example'} {...props} href={href || imageURL} dimension=\"xxs\" />\n      </Container>\n    </Wrapper>\n  );\n};\n"}}},argTypes:{dimension:{control:!1},status:{control:!1}},name:"Avatar XXS"};AvatarPlayground.parameters={...AvatarPlayground.parameters,docs:{...AvatarPlayground.parameters?.docs,source:{originalSource:"{\n  render: AvatarPlaygroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: AvatarPlaygroundRaw\n      }\n    }\n  },\n  name: 'Avatar. Playground'\n}",...AvatarPlayground.parameters?.docs?.source}}},SingleAvatar.parameters={...SingleAvatar.parameters,docs:{...SingleAvatar.parameters?.docs,source:{originalSource:"{\n  render: SingleAvatarStory,\n  parameters: {\n    docs: {\n      source: {\n        code: AvatarSingleRaw\n      }\n    }\n  },\n  argTypes: {\n    href: {\n      control: false\n    },\n    appearance: {\n      control: false\n    },\n    svgMaskId: {\n      control: false\n    },\n    userInitials: {\n      control: false\n    },\n    userName: {\n      control: false\n    },\n    dimension: {\n      control: false\n    },\n    status: {\n      control: false\n    }\n  },\n  name: 'Avatar. Типы и размеры'\n}",...SingleAvatar.parameters?.docs?.source}}},AvatarXXS.parameters={...AvatarXXS.parameters,docs:{...AvatarXXS.parameters?.docs,source:{originalSource:"{\n  render: AvatarXXSStory,\n  parameters: {\n    docs: {\n      source: {\n        code: AvatarXXSRaw\n      }\n    }\n  },\n  argTypes: {\n    dimension: {\n      control: false\n    },\n    status: {\n      control: false\n    }\n  },\n  name: 'Avatar XXS'\n}",...AvatarXXS.parameters?.docs?.source}}};const __namedExportsOrder=["AvatarPlayground","SingleAvatar","AvatarXXS"]}}]);