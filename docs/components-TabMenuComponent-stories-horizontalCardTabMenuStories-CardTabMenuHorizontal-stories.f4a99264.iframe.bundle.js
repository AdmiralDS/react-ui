"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[4374],{"./src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{HorizontalCardTabMenuExample:()=>HorizontalCardTabMenuExample,HorizontalCardTabMenuWithAddButtonExample:()=>HorizontalCardTabMenuWithAddButtonExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CardTabMenuHorizontal_stories});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),src=__webpack_require__("./src/index.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),NotificationItem=__webpack_require__("./src/components/NotificationItem/index.tsx"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),MinusCircleOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg"),WifiOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/WifiOutline.svg"),PhoneOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/PhoneOutline.svg"),SIMCardOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/SIMCardOutline.svg"),HeadsetOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/HeadsetOutline.svg"),SignalOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/SignalOutline.svg"),TelegrammOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/TelegrammOutline.svg"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const CustomHorizontalCardTab=(0,react.forwardRef)((({dimension="l",disabled,selected,tabId,text,badge,icon,...props},ref)=>(0,jsx_runtime.jsxs)(src.CardTab,{...props,tabId,ref,dimension,disabled,selected,children:[icon&&(0,jsx_runtime.jsx)(src.TabIcon,{$dimension:dimension,$disabled:disabled,children:icon}),(0,jsx_runtime.jsx)(src.TabText,{children:text}),badge&&(0,jsx_runtime.jsx)(src.TabBadge,{disabled,selected,children:badge})]}))),tabs=[{text:"Wi-Fi",tabId:"1",icon:(0,jsx_runtime.jsx)(WifiOutline.h,{})},{text:"Phone",tabId:"2",icon:(0,jsx_runtime.jsx)(PhoneOutline.h,{}),disabled:!0},{text:"Sim card",tabId:"3",icon:(0,jsx_runtime.jsx)(SIMCardOutline.h,{})},{text:"Viber",tabId:"9",badge:7},{text:"Headset",tabId:"4",icon:(0,jsx_runtime.jsx)(HeadsetOutline.h,{})},{text:"Network signal",tabId:"5",icon:(0,jsx_runtime.jsx)(SignalOutline.h,{})},{text:"TelegrammOutline",tabId:"6",icon:(0,jsx_runtime.jsx)(TelegrammOutline.h,{})},{text:"WhatsApp is very very very very long",tabId:"7"},{text:"ICQ",tabId:"8",icon:(0,jsx_runtime.jsx)(MinusCircleOutline.h,{}),disabled:!0}],Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__Separator",componentId:"sc-fpoa89-0"})(["height:","px;"],(p=>p.height)),Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__Wrapper",componentId:"sc-fpoa89-1"})(["display:flex;flex-direction:column;padding:30px;background-color:var(--admiral-color-Neutral_Neutral05,",");"],(p=>p.theme.color["Neutral/Neutral 05"])),Content=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__Content",componentId:"sc-fpoa89-2"})(["box-sizing:border-box;background-color:var(--admiral-color-Neutral_Neutral00,",");border:1px solid var(--admiral-color-Neutral_Neutral20,",");border-top-width:0;height:100px;"],(p=>p.theme.color["Neutral/Neutral 00"]),(p=>p.theme.color["Neutral/Neutral 20"])),MenuItemWrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__MenuItemWrapper",componentId:"sc-fpoa89-3"})(["display:flex;overflow:hidden;text-overflow:ellipsis;align-items:center;"]),CardTabMenuHorizontalTemplate=({dimension="l",showUnderline=!0,defaultSelectedTabId="3",themeBorderKind,CSSCustomProps,...props})=>{const tabsMap=(0,react.useMemo)((()=>tabs.map((tab=>tab.tabId))),[tabs]),[selectedTab,setSelectedTab]=(0,react.useState)(defaultSelectedTabId);return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsxs)(NotificationItem.rn,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"CardTabMenu"}),(0,jsx_runtime.jsxs)(NotificationItem.Yg,{children:["Компонент для переключения между группами логически связанного контента. Существует в двух размерах - L 48 и M 40 px по высоте. Опционально может содержать иконки и/или бейджи.",(0,jsx_runtime.jsx)(Separator,{height:8}),"Для большей выразительности рекомендуется применять компонент на сером фоне. Активная вкладка имеет фон белого цвета по умолчанию, так же рекомендуется красить подложку контентной области в белый цвет и добавлять обводку с трех сторон. В таком случае связь контента с закладкой более очевидна. Рекомендации",(0,jsx_runtime.jsx)("li",{children:"При загрузке страницы, одна из вкладок должна быть активной по дефолту"}),(0,jsx_runtime.jsx)("li",{children:"Текст в закладке должен быть коротким, в идеале не более трех слов"}),(0,jsx_runtime.jsx)("li",{children:"Избегайте большого количества закладок — это не удобно для пользователей. В таких случаях можно использовать компонент Tree View"}),(0,jsx_runtime.jsx)("li",{children:"Избегайте помещения компонента Card Tab внутрь контента другого Card Tab"}),(0,jsx_runtime.jsx)("li",{children:"Не заставляйте пользователя переключаться между вкладками для сравнения информации. Отдельная закладка должна содержать в себе всю необходимую информацию для завершения задания."}),(0,jsx_runtime.jsx)(Separator,{height:8}),"Если вкладки не помещаются в отведенную ширину целиком, то включается Overflow Menu. Размеры выпадающего меню соответствуют размерам Tab Menu — L для L размера и M для M размера. В выпадающем меню отображаются вкладки, не поместившиеся в основной ряд. При выборе вкладки из меню, она отображается в основном ряду крайней справа, заменяя собой предыдущую крайнюю вкладку, которая, в свою очередь, «уходит» в меню. Активная вкладка при этом отображается в меню, как выбранная. Если вкладка из меню большая и требует больше места, то она заменяет собой две последние вкладки. В таком случае и вторая с края вкладка уходит в меню."]})]}),(0,jsx_runtime.jsx)(Separator,{height:40}),(0,jsx_runtime.jsxs)(Wrapper,{children:[(0,jsx_runtime.jsx)(src.CardTabMenuHorizontal,{...props,dimension,showUnderline,selectedTabId:selectedTab,defaultSelectedTabId:"3",onSelectTab:tabId=>setSelectedTab(tabId),tabsId:tabsMap,renderDropMenuItem:tabId=>{const currentTab=tabs.find((tab=>tab.tabId===tabId));return options=>(0,react.createElement)(MenuItem.D,{dimension,...options,key:tabId},(0,jsx_runtime.jsx)(MenuItemWrapper,{children:currentTab?.text}))},renderTab:(tabId,selected,onSelectTab)=>{const currentTab=tabs.find((tab=>tab.tabId===tabId)),text=currentTab?.text||"",disabled=!!currentTab?.disabled,badge=currentTab?.badge,icon=currentTab?.icon;return(0,jsx_runtime.jsx)(CustomHorizontalCardTab,{dimension,tabId,text,badge,icon,selected,disabled,onSelectTab},tabId)},tabIsDisabled:tabId=>{const currentTab=tabs.find((tab=>tab.tabId===tabId));return!!currentTab?.disabled}}),(0,jsx_runtime.jsx)(Content,{})]})]})};CardTabMenuHorizontalTemplate.displayName="CardTabMenuHorizontalTemplate";try{CardTabMenuHorizontalTemplate.displayName="CardTabMenuHorizontalTemplate",CardTabMenuHorizontalTemplate.__docgenInfo={description:"",displayName:"CardTabMenuHorizontalTemplate",props:{showUnderline:{defaultValue:{value:"true"},description:"Показывать серую полосу снизу",name:"showUnderline",required:!1,type:{name:"boolean"}},selectedTabId:{defaultValue:null,description:"ID выбранной вкладки",name:"selectedTabId",required:!1,type:{name:"string"}},defaultSelectedTabId:{defaultValue:{value:"3"},description:"ID выбранной по умолчанию вкладки",name:"defaultSelectedTabId",required:!1,type:{name:"string"}},onSelectTab:{defaultValue:null,description:"Коллбэк на изменение выбранной вкладки",name:"onSelectTab",required:!1,type:{name:"((tabId: string) => void)"}},tabsId:{defaultValue:null,description:"Массив из уникальных ID вкладок",name:"tabsId",required:!0,type:{name:"string[]"}},renderTab:{defaultValue:null,description:"Рендер-функция для отрисовки вкладки",name:"renderTab",required:!0,type:{name:"(tabId: string, selected: boolean, onSelectTab?: ((tabId: string) => void) | undefined) => ReactNode"}},tabIsDisabled:{defaultValue:null,description:"Коллбэк для определения, является ли вкладка disabled",name:"tabIsDisabled",required:!0,type:{name:"(tabId: string) => boolean"}},dimension:{defaultValue:{value:"l"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"l"'}]}},renderDropMenuItem:{defaultValue:null,description:"Рендер-функция для отрисовки элемента выпадающего списка",name:"renderDropMenuItem",required:!0,type:{name:"(tabId: string) => ReactNode | ((options: RenderOptionProps) => ReactNode)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox)",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},onAddTab:{defaultValue:null,description:"",name:"onAddTab",required:!1,type:{name:"(() => void)"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontalTemplate.tsx#CardTabMenuHorizontalTemplate"]={docgenInfo:CardTabMenuHorizontalTemplate.__docgenInfo,name:"CardTabMenuHorizontalTemplate",path:"src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontalTemplate.tsx#CardTabMenuHorizontalTemplate"})}catch(__react_docgen_typescript_loader_error){}const CardTabMenuHorizontalWithAddButtonTemplate_CustomHorizontalCardTab=(0,react.forwardRef)((({dimension="l",disabled,selected,tabId,text,badge,icon,onCloseTab,...props},ref)=>(0,jsx_runtime.jsxs)(src.CardTab,{...props,tabId,ref,dimension,disabled,selected,children:[icon&&(0,jsx_runtime.jsx)(src.TabIcon,{$dimension:dimension,$disabled:disabled,children:icon}),(0,jsx_runtime.jsx)(src.TabText,{children:text}),badge&&(0,jsx_runtime.jsx)(src.TabBadge,{disabled,selected,children:badge}),(0,jsx_runtime.jsx)(src.TabCloseIconButton,{dimension,disabled,onCloseIconButtonClick:()=>{tabId&&onCloseTab?.(tabId)}})]}))),tabsBase=[{text:"Text1",tabId:"1"},{text:"Text2",tabId:"2"},{text:"Text3",tabId:"3"},{text:"Text4",tabId:"4"},{text:"Text5",tabId:"5"},{text:"Text6",tabId:"6"},{text:"Text7",tabId:"7"},{text:"Text8",tabId:"8"},{text:"Text9",tabId:"9"}];let tabCount=tabsBase.length;const CardTabMenuHorizontalWithAddButtonTemplate_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalWithAddButtonTemplate__Separator",componentId:"sc-g4uff7-0"})(["height:","px;"],(p=>p.height)),CardTabMenuHorizontalWithAddButtonTemplate_Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalWithAddButtonTemplate__Wrapper",componentId:"sc-g4uff7-1"})(["display:flex;flex-direction:column;padding:30px;background-color:var(--admiral-color-Neutral_Neutral05,",");"],(p=>p.theme.color["Neutral/Neutral 05"])),CardTabMenuHorizontalWithAddButtonTemplate_Content=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalWithAddButtonTemplate__Content",componentId:"sc-g4uff7-2"})(["box-sizing:border-box;background-color:var(--admiral-color-Neutral_Neutral00,",");border:1px solid var(--admiral-color-Neutral_Neutral20,",");border-top-width:0;height:100px;"],(p=>p.theme.color["Neutral/Neutral 00"]),(p=>p.theme.color["Neutral/Neutral 20"])),CardTabMenuHorizontalWithAddButtonTemplate_MenuItemWrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalWithAddButtonTemplate__MenuItemWrapper",componentId:"sc-g4uff7-3"})(["display:flex;width:100%;overflow:hidden;text-overflow:ellipsis;align-items:center;justify-content:space-between;gap:8px;"]),getTabsMap=tabs=>tabs.map((tab=>tab.tabId||"")),CardTabMenuHorizontalWithAddButtonTemplate=({dimension="l",showUnderline=!0,defaultSelectedTabId="3",themeBorderKind,CSSCustomProps,...props})=>{const[tabs,setTabs]=(0,react.useState)(tabsBase),[tabsMap,setTabsMap]=(0,react.useState)(getTabsMap(tabs)),[selectedTab,setSelectedTab]=(0,react.useState)(defaultSelectedTabId),tabIsDisabled=tabId=>{const currentTab=tabs.find((tab=>tab.tabId===tabId));return!!currentTab?.disabled},handleCloseTab=tabId=>{if(tabs.length>1){const tabIndex=tabs.findIndex((tab=>tab.tabId===tabId)),newTabs=[...tabs];if(newTabs.splice(tabIndex,1),tabId===selectedTab){const newSelectedTab=newTabs[0].tabId;setSelectedTab(newSelectedTab)}setTabs(newTabs),setTabsMap(getTabsMap(newTabs))}};return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsxs)(NotificationItem.rn,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Удаление, добавление вкладок"}),(0,jsx_runtime.jsxs)(NotificationItem.Yg,{children:["Рекомендации",(0,jsx_runtime.jsx)("li",{children:"При нажатии на иконку закрытия — владка и контент под ней удаляются."}),(0,jsx_runtime.jsx)("li",{children:"Если удалить текущую вкладку, то автоматически включится первая из оставшихся вкладок."}),(0,jsx_runtime.jsx)("li",{children:"При удалении не активной вкладки, вы остаетесь там же, где и были."}),(0,jsx_runtime.jsx)("li",{children:"Удалить все вкладки нельзя, должна остаться хотя бы одна вкладка."}),(0,jsx_runtime.jsx)(CardTabMenuHorizontalWithAddButtonTemplate_Separator,{height:8}),"Можно включать опцию добавления вкладок. Механика добавления вкладки настраивается пользователем. При переполнении вкладок (есть меню) кнопка добавления вкладки видна всегда."]})]}),(0,jsx_runtime.jsx)(CardTabMenuHorizontalWithAddButtonTemplate_Separator,{height:40}),(0,jsx_runtime.jsxs)(CardTabMenuHorizontalWithAddButtonTemplate_Wrapper,{children:[(0,jsx_runtime.jsx)(src.CardTabMenuHorizontal,{...props,dimension,showUnderline,selectedTabId:selectedTab,defaultSelectedTabId:"3",onSelectTab:tabId=>setSelectedTab(tabId),onAddTab:()=>{tabCount+=1;const newId=tabCount.toString(),newText=`Text${newId}`,newTabs=[...tabs,{tabId:newId,text:newText}];setTabs(newTabs),setTabsMap(getTabsMap(newTabs)),setSelectedTab(newId)},tabsId:tabsMap,renderDropMenuItem:tabId=>{const currentTab=tabs.find((tab=>tab.tabId===tabId));return options=>(0,react.createElement)(MenuItem.D,{dimension,...options,key:tabId},(0,jsx_runtime.jsxs)(CardTabMenuHorizontalWithAddButtonTemplate_MenuItemWrapper,{children:[(0,jsx_runtime.jsx)("div",{children:currentTab?.text}),(0,jsx_runtime.jsx)(src.TabCloseIconButton,{dimension,disabled:tabIsDisabled(tabId),onCloseIconButtonClick:()=>handleCloseTab(tabId)})]}))},renderTab:(tabId,selected,onSelectTab)=>{const currentTab=tabs.find((tab=>tab.tabId===tabId)),text=currentTab?.text||"",disabled=!!currentTab?.disabled,badge=currentTab?.badge,icon=currentTab?.icon;return(0,jsx_runtime.jsx)(CardTabMenuHorizontalWithAddButtonTemplate_CustomHorizontalCardTab,{dimension,tabId,text,badge,icon,selected,disabled,onSelectTab,onCloseTab:handleCloseTab},tabId)},tabIsDisabled}),(0,jsx_runtime.jsx)(CardTabMenuHorizontalWithAddButtonTemplate_Content,{})]})]})};CardTabMenuHorizontalWithAddButtonTemplate.displayName="CardTabMenuHorizontalWithAddButtonTemplate";try{CardTabMenuHorizontalWithAddButtonTemplate.displayName="CardTabMenuHorizontalWithAddButtonTemplate",CardTabMenuHorizontalWithAddButtonTemplate.__docgenInfo={description:"",displayName:"CardTabMenuHorizontalWithAddButtonTemplate",props:{showUnderline:{defaultValue:{value:"true"},description:"Показывать серую полосу снизу",name:"showUnderline",required:!1,type:{name:"boolean"}},selectedTabId:{defaultValue:null,description:"ID выбранной вкладки",name:"selectedTabId",required:!1,type:{name:"string"}},defaultSelectedTabId:{defaultValue:{value:"3"},description:"ID выбранной по умолчанию вкладки",name:"defaultSelectedTabId",required:!1,type:{name:"string"}},onSelectTab:{defaultValue:null,description:"Коллбэк на изменение выбранной вкладки",name:"onSelectTab",required:!1,type:{name:"((tabId: string) => void)"}},tabsId:{defaultValue:null,description:"Массив из уникальных ID вкладок",name:"tabsId",required:!0,type:{name:"string[]"}},renderTab:{defaultValue:null,description:"Рендер-функция для отрисовки вкладки",name:"renderTab",required:!0,type:{name:"(tabId: string, selected: boolean, onSelectTab?: ((tabId: string) => void) | undefined) => ReactNode"}},tabIsDisabled:{defaultValue:null,description:"Коллбэк для определения, является ли вкладка disabled",name:"tabIsDisabled",required:!0,type:{name:"(tabId: string) => boolean"}},dimension:{defaultValue:{value:"l"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"l"'}]}},renderDropMenuItem:{defaultValue:null,description:"Рендер-функция для отрисовки элемента выпадающего списка",name:"renderDropMenuItem",required:!0,type:{name:"(tabId: string) => ReactNode | ((options: RenderOptionProps) => ReactNode)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox)",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},onAddTab:{defaultValue:null,description:"",name:"onAddTab",required:!1,type:{name:"(() => void)"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontalWithAddButtonTemplate.tsx#CardTabMenuHorizontalWithAddButtonTemplate"]={docgenInfo:CardTabMenuHorizontalWithAddButtonTemplate.__docgenInfo,name:"CardTabMenuHorizontalWithAddButtonTemplate",path:"src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontalWithAddButtonTemplate.tsx#CardTabMenuHorizontalWithAddButtonTemplate"})}catch(__react_docgen_typescript_loader_error){}const CardTabMenuHorizontal_stories={title:"Admiral-2.1/TabMenuComponent/CardTabMenuHorizontal",decorators:void 0,component:src.CardTabMenuHorizontal,parameters:{docs:{source:{code:null}}},argTypes:{dimension:{options:["l","m"],control:{type:"radio"}},showUnderline:{control:{type:"boolean"}},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},defaultSelectedTabId:{control:!1},renderTab:{control:!1},renderDropMenuItem:{control:!1},tabIsDisabled:{control:!1},tabsId:{control:!1},onSelectTab:{control:!1},selectedTabId:{control:!1}}},HorizontalCardTabMenuStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(CardTabMenuHorizontalTemplate,{...props,CSSCustomProps})};HorizontalCardTabMenuStory.displayName="HorizontalCardTabMenuStory";const HorizontalCardTabMenuExample={render:HorizontalCardTabMenuStory,parameters:{docs:{source:{code:"import { forwardRef, useMemo, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport type {\n  BorderRadiusType,\n  RenderOptionProps,\n  HorizontalTabProps,\n  TabMenuHorizontalProps,\n} from '@admiral-ds/react-ui';\nimport {\n  CardTabMenuHorizontal,\n  CardTab,\n  TabIcon,\n  TabBadge,\n  TabText,\n  MenuItem,\n  NotificationItem,\n  NotificationItemTitle,\n  NotificationItemContent,\n} from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\nimport { ReactComponent as WifiOutline } from '@admiral-ds/icons/build/communication/WifiOutline.svg';\nimport { ReactComponent as PhoneOutline } from '@admiral-ds/icons/build/communication/PhoneOutline.svg';\nimport { ReactComponent as SIMCardOutline } from '@admiral-ds/icons/build/communication/SIMCardOutline.svg';\nimport { ReactComponent as HeadsetOutline } from '@admiral-ds/icons/build/communication/HeadsetOutline.svg';\nimport { ReactComponent as SignalOutline } from '@admiral-ds/icons/build/communication/SignalOutline.svg';\nimport { ReactComponent as TelegrammOutline } from '@admiral-ds/icons/build/communication/TelegrammOutline.svg';\n\ninterface TabContentProps extends HorizontalTabProps {\n  text: string;\n  badge?: number;\n  disabled?: boolean;\n  icon?: ReactNode;\n}\n\ninterface CustomHorizontalTabProps extends TabContentProps {}\nconst CustomHorizontalCardTab = forwardRef<HTMLButtonElement, CustomHorizontalTabProps>(\n  ({ dimension = 'l', disabled, selected, tabId, text, badge, icon, ...props }: CustomHorizontalTabProps, ref) => {\n    return (\n      <CardTab {...props} tabId={tabId} ref={ref} dimension={dimension} disabled={disabled} selected={selected}>\n        {icon && (\n          <TabIcon $dimension={dimension} $disabled={disabled}>\n            {icon}\n          </TabIcon>\n        )}\n        <TabText>{text}</TabText>\n        {badge && (\n          <TabBadge disabled={disabled} selected={selected}>\n            {badge}\n          </TabBadge>\n        )}\n      </CardTab>\n    );\n  },\n);\n\nconst tabs = [\n  { text: 'Wi-Fi', tabId: '1', icon: <WifiOutline /> },\n  { text: 'Phone', tabId: '2', icon: <PhoneOutline />, disabled: true },\n  { text: 'Sim card', tabId: '3', icon: <SIMCardOutline /> },\n  { text: 'Viber', tabId: '9', badge: 7 },\n  { text: 'Headset', tabId: '4', icon: <HeadsetOutline /> },\n  { text: 'Network signal', tabId: '5', icon: <SignalOutline /> },\n  { text: 'TelegrammOutline', tabId: '6', icon: <TelegrammOutline /> },\n  { text: 'WhatsApp is very very very very long', tabId: '7' },\n  { text: 'ICQ', tabId: '8', icon: <MinusCircleOutline />, disabled: true },\n];\n\nconst Separator = styled.div<{ height: number }>`\n  height: ${(p) => p.height}px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  background-color: var(--admiral-color-Neutral_Neutral05, ${(p) => p.theme.color['Neutral/Neutral 05']});\n`;\nconst Content = styled.div`\n  box-sizing: border-box;\n  background-color: var(--admiral-color-Neutral_Neutral00, ${(p) => p.theme.color['Neutral/Neutral 00']});\n  border: 1px solid var(--admiral-color-Neutral_Neutral20, ${(p) => p.theme.color['Neutral/Neutral 20']});\n  border-top-width: 0;\n  height: 100px;\n`;\n\nconst MenuItemWrapper = styled.div`\n  display: flex;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  align-items: center;\n`;\n\nexport const CardTabMenuHorizontalTemplate = ({\n  dimension = 'l',\n  showUnderline = true,\n  defaultSelectedTabId = '3',\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: TabMenuHorizontalProps & {\n  themeBorderKind?: BorderRadiusType;\n  CSSCustomProps?: boolean;\n}) => {\n  const tabsMap = useMemo(() => {\n    return tabs.map((tab) => tab.tabId);\n  }, [tabs]);\n\n  const [selectedTab, setSelectedTab] = useState<string | undefined>(defaultSelectedTabId);\n  const handleSelectTab = (tabId: string) => setSelectedTab(tabId);\n\n  const tabIsDisabled = (tabId: string) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    return !!currentTab?.disabled;\n  };\n  const renderTab = (tabId: string, selected?: boolean, onSelectTab?: (tabId: string) => void) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    const text = currentTab?.text || '';\n    const disabled = !!currentTab?.disabled;\n    const badge = currentTab?.badge;\n    const icon = currentTab?.icon;\n    return (\n      <CustomHorizontalCardTab\n        dimension={dimension}\n        tabId={tabId}\n        text={text}\n        badge={badge}\n        icon={icon}\n        key={tabId}\n        selected={selected}\n        disabled={disabled}\n        onSelectTab={onSelectTab}\n      />\n    );\n  };\n  const renderDropMenuItem = (tabId: string) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    return (options: RenderOptionProps) => {\n      return (\n        <MenuItem dimension={dimension} {...options} key={tabId}>\n          <MenuItemWrapper>{currentTab?.text}</MenuItemWrapper>\n        </MenuItem>\n      );\n    };\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <NotificationItem displayStatusIcon>\n        <NotificationItemTitle>CardTabMenu</NotificationItemTitle>\n        <NotificationItemContent>\n          Компонент для переключения между группами логически связанного контента. Существует в двух размерах - L 48 и M\n          40 px по высоте. Опционально может содержать иконки и/или бейджи.\n          <Separator height={8} />\n          Для большей выразительности рекомендуется применять компонент на сером фоне. Активная вкладка имеет фон белого\n          цвета по умолчанию, так же рекомендуется красить подложку контентной области в белый цвет и добавлять обводку\n          с трех сторон. В таком случае связь контента с закладкой более очевидна. Рекомендации\n          <li>При загрузке страницы, одна из вкладок должна быть активной по дефолту</li>\n          <li>Текст в закладке должен быть коротким, в идеале не более трех слов</li>\n          <li>\n            Избегайте большого количества закладок — это не удобно для пользователей. В таких случаях можно использовать\n            компонент Tree View\n          </li>\n          <li>Избегайте помещения компонента Card Tab внутрь контента другого Card Tab</li>\n          <li>\n            Не заставляйте пользователя переключаться между вкладками для сравнения информации. Отдельная закладка\n            должна содержать в себе всю необходимую информацию для завершения задания.\n          </li>\n          <Separator height={8} />\n          Если вкладки не помещаются в отведенную ширину целиком, то включается Overflow Menu. Размеры выпадающего меню\n          соответствуют размерам Tab Menu — L для L размера и M для M размера. В выпадающем меню отображаются вкладки,\n          не поместившиеся в основной ряд. При выборе вкладки из меню, она отображается в основном ряду крайней справа,\n          заменяя собой предыдущую крайнюю вкладку, которая, в свою очередь, «уходит» в меню. Активная вкладка при этом\n          отображается в меню, как выбранная. Если вкладка из меню большая и требует больше места, то она заменяет собой\n          две последние вкладки. В таком случае и вторая с края вкладка уходит в меню.\n        </NotificationItemContent>\n      </NotificationItem>\n      <Separator height={40} />\n      <Wrapper>\n        <CardTabMenuHorizontal\n          {...props}\n          dimension={dimension}\n          showUnderline={showUnderline}\n          selectedTabId={selectedTab}\n          defaultSelectedTabId=\"3\"\n          onSelectTab={handleSelectTab}\n          tabsId={tabsMap}\n          renderDropMenuItem={renderDropMenuItem}\n          renderTab={renderTab}\n          tabIsDisabled={tabIsDisabled}\n        />\n        <Content />\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n"}}},name:"CardTabMenu."},HorizontalCardTabMenuWithAddButtonStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(CardTabMenuHorizontalWithAddButtonTemplate,{...props,CSSCustomProps})};HorizontalCardTabMenuWithAddButtonStory.displayName="HorizontalCardTabMenuWithAddButtonStory";const HorizontalCardTabMenuWithAddButtonExample={render:HorizontalCardTabMenuWithAddButtonStory,parameters:{docs:{source:{code:"import { forwardRef, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport type {\n  BorderRadiusType,\n  RenderOptionProps,\n  HorizontalTabProps,\n  TabMenuHorizontalProps,\n} from '@admiral-ds/react-ui';\nimport {\n  CardTabMenuHorizontal,\n  CardTab,\n  TabIcon,\n  TabBadge,\n  TabText,\n  TabCloseIconButton,\n  MenuItem,\n  NotificationItem,\n  NotificationItemTitle,\n  NotificationItemContent,\n} from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\ninterface TabContentProps extends HorizontalTabProps {\n  text: string;\n  badge?: number;\n  disabled?: boolean;\n  icon?: ReactNode;\n  onCloseTab?: (tabId: string) => void;\n}\n\ninterface CustomHorizontalTabProps extends TabContentProps {}\nconst CustomHorizontalCardTab = forwardRef<HTMLButtonElement, CustomHorizontalTabProps>(\n  (\n    { dimension = 'l', disabled, selected, tabId, text, badge, icon, onCloseTab, ...props }: CustomHorizontalTabProps,\n    ref,\n  ) => {\n    const handleCloseTab = () => {\n      tabId && onCloseTab?.(tabId);\n    };\n\n    return (\n      <CardTab {...props} tabId={tabId} ref={ref} dimension={dimension} disabled={disabled} selected={selected}>\n        {icon && (\n          <TabIcon $dimension={dimension} $disabled={disabled}>\n            {icon}\n          </TabIcon>\n        )}\n        <TabText>{text}</TabText>\n        {badge && (\n          <TabBadge disabled={disabled} selected={selected}>\n            {badge}\n          </TabBadge>\n        )}\n        <TabCloseIconButton dimension={dimension} disabled={disabled} onCloseIconButtonClick={handleCloseTab} />\n      </CardTab>\n    );\n  },\n);\n\nconst tabsBase: TabContentProps[] = [\n  { text: 'Text1', tabId: '1' },\n  { text: 'Text2', tabId: '2' },\n  { text: 'Text3', tabId: '3' },\n  { text: 'Text4', tabId: '4' },\n  { text: 'Text5', tabId: '5' },\n  { text: 'Text6', tabId: '6' },\n  { text: 'Text7', tabId: '7' },\n  { text: 'Text8', tabId: '8' },\n  { text: 'Text9', tabId: '9' },\n];\nlet tabCount = tabsBase.length;\n\nconst Separator = styled.div<{ height: number }>`\n  height: ${(p) => p.height}px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  background-color: var(--admiral-color-Neutral_Neutral05, ${(p) => p.theme.color['Neutral/Neutral 05']});\n`;\nconst Content = styled.div`\n  box-sizing: border-box;\n  background-color: var(--admiral-color-Neutral_Neutral00, ${(p) => p.theme.color['Neutral/Neutral 00']});\n  border: 1px solid var(--admiral-color-Neutral_Neutral20, ${(p) => p.theme.color['Neutral/Neutral 20']});\n  border-top-width: 0;\n  height: 100px;\n`;\n\nconst MenuItemWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  align-items: center;\n  justify-content: space-between;\n  gap: 8px;\n`;\nconst getTabsMap = (tabs: TabContentProps[]) => {\n  return tabs.map((tab) => tab.tabId || '');\n};\n\nexport const CardTabMenuHorizontalWithAddButtonTemplate = ({\n  dimension = 'l',\n  showUnderline = true,\n  defaultSelectedTabId = '3',\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: TabMenuHorizontalProps & {\n  themeBorderKind?: BorderRadiusType;\n  CSSCustomProps?: boolean;\n}) => {\n  const [tabs, setTabs] = useState(tabsBase);\n  const [tabsMap, setTabsMap] = useState(getTabsMap(tabs));\n  const [selectedTab, setSelectedTab] = useState<string | undefined>(defaultSelectedTabId);\n\n  const handleSelectTab = (tabId: string) => setSelectedTab(tabId);\n\n  const tabIsDisabled = (tabId: string) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    return !!currentTab?.disabled;\n  };\n\n  const handleCloseTab = (tabId: string) => {\n    if (tabs.length > 1) {\n      const tabIndex = tabs.findIndex((tab) => tab.tabId === tabId);\n\n      const newTabs = [...tabs];\n      newTabs.splice(tabIndex, 1);\n\n      if (tabId === selectedTab) {\n        const newSelectedTab = newTabs[0].tabId;\n        setSelectedTab(newSelectedTab);\n      }\n\n      setTabs(newTabs);\n      setTabsMap(getTabsMap(newTabs));\n    }\n  };\n\n  const renderTab = (tabId: string, selected?: boolean, onSelectTab?: (tabId: string) => void) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    const text = currentTab?.text || '';\n    const disabled = !!currentTab?.disabled;\n    const badge = currentTab?.badge;\n    const icon = currentTab?.icon;\n    return (\n      <CustomHorizontalCardTab\n        dimension={dimension}\n        tabId={tabId}\n        text={text}\n        badge={badge}\n        icon={icon}\n        key={tabId}\n        selected={selected}\n        disabled={disabled}\n        onSelectTab={onSelectTab}\n        onCloseTab={handleCloseTab}\n      />\n    );\n  };\n  const renderDropMenuItem = (tabId: string) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    return (options: RenderOptionProps) => {\n      return (\n        <MenuItem dimension={dimension} {...options} key={tabId}>\n          <MenuItemWrapper>\n            <div>{currentTab?.text}</div>\n            <TabCloseIconButton\n              dimension={dimension}\n              disabled={tabIsDisabled(tabId)}\n              onCloseIconButtonClick={() => handleCloseTab(tabId)}\n            />\n          </MenuItemWrapper>\n        </MenuItem>\n      );\n    };\n  };\n\n  const handleAddTab = () => {\n    tabCount += 1;\n    const newId = tabCount.toString();\n    const newText = `Text${newId}`;\n    const newTabs = [...tabs, { tabId: newId, text: newText }];\n    setTabs(newTabs);\n    setTabsMap(getTabsMap(newTabs));\n    setSelectedTab(newId);\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <NotificationItem displayStatusIcon>\n        <NotificationItemTitle>Удаление, добавление вкладок</NotificationItemTitle>\n        <NotificationItemContent>\n          Рекомендации\n          <li>При нажатии на иконку закрытия — владка и контент под ней удаляются.</li>\n          <li>Если удалить текущую вкладку, то автоматически включится первая из оставшихся вкладок.</li>\n          <li>При удалении не активной вкладки, вы остаетесь там же, где и были.</li>\n          <li>Удалить все вкладки нельзя, должна остаться хотя бы одна вкладка.</li>\n          <Separator height={8} />\n          Можно включать опцию добавления вкладок. Механика добавления вкладки настраивается пользователем. При\n          переполнении вкладок (есть меню) кнопка добавления вкладки видна всегда.\n        </NotificationItemContent>\n      </NotificationItem>\n      <Separator height={40} />\n      <Wrapper>\n        <CardTabMenuHorizontal\n          {...props}\n          dimension={dimension}\n          showUnderline={showUnderline}\n          selectedTabId={selectedTab}\n          defaultSelectedTabId=\"3\"\n          onSelectTab={handleSelectTab}\n          onAddTab={handleAddTab}\n          tabsId={tabsMap}\n          renderDropMenuItem={renderDropMenuItem}\n          renderTab={renderTab}\n          tabIsDisabled={tabIsDisabled}\n        />\n        <Content />\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n"}}},name:"CardTabMenu с возможностью добавления вкладок."};HorizontalCardTabMenuExample.parameters={...HorizontalCardTabMenuExample.parameters,docs:{...HorizontalCardTabMenuExample.parameters?.docs,source:{originalSource:"{\n  render: HorizontalCardTabMenuStory,\n  parameters: {\n    docs: {\n      source: {\n        code: HorizontalCardTabMenuRaw\n      }\n    }\n  },\n  name: 'CardTabMenu.'\n}",...HorizontalCardTabMenuExample.parameters?.docs?.source}}},HorizontalCardTabMenuWithAddButtonExample.parameters={...HorizontalCardTabMenuWithAddButtonExample.parameters,docs:{...HorizontalCardTabMenuWithAddButtonExample.parameters?.docs,source:{originalSource:"{\n  render: HorizontalCardTabMenuWithAddButtonStory,\n  parameters: {\n    docs: {\n      source: {\n        code: HorizontalCardTabMenuWithAddButtonRaw\n      }\n    }\n  },\n  name: 'CardTabMenu с возможностью добавления вкладок.'\n}",...HorizontalCardTabMenuWithAddButtonExample.parameters?.docs?.source}}};const __namedExportsOrder=["HorizontalCardTabMenuExample","HorizontalCardTabMenuWithAddButtonExample"]},"./.storybook/createBorderRadiusSwapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>createBorderRadiusSwapper});var _admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/themes/light/index.ts");const getNumFromStr=str=>str.replace(/^\D+/g,"");function createBorderRadiusSwapper(borderRadiusKind,CSSCustomProps){if(borderRadiusKind&&CSSCustomProps){const cssPropValueSmall=`var(--admiral-border-kind-Small_${getNumFromStr(borderRadiusKind)})`,cssPropValueMedium=`var(--admiral-border-kind-Medium_${getNumFromStr(borderRadiusKind)})`,cssPropValueLarge=`var(--admiral-border-kind-Large_${getNumFromStr(borderRadiusKind)})`;document.body.style.setProperty("--admiral-border-radius-Small",cssPropValueSmall),document.body.style.setProperty("--admiral-border-radius-Medium",cssPropValueMedium),document.body.style.setProperty("--admiral-border-radius-Large",cssPropValueLarge)}else CSSCustomProps||(document.body.style.removeProperty("--admiral-border-radius-Small"),document.body.style.removeProperty("--admiral-border-radius-Medium"),document.body.style.removeProperty("--admiral-border-radius-Large"));return function swapBorder(theme){return theme?(theme.shape.borderRadiusKind=borderRadiusKind||theme.shape.borderRadiusKind,theme):(_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind=borderRadiusKind||_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind,_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d)}}},"./src/components/Spinner/SpinnerIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>SpinnerIcon});var _path,_path2,_path3,_path4,_path5,styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}__webpack_require__.p;const spin=(0,styled_components_browser_esm.i7)(["0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}"]),SpinnerIcon=(0,styled_components_browser_esm.Ay)((function SvgSubtract(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none"},props),_path||(_path=react.createElement("path",{d:"M58.607 49.778a32 32 0 0 0 5.252-14.782C64.016 33.346 62.658 32 61 32s-2.982 1.349-3.17 2.995C56.343 47.944 45.346 58 32 58 17.64 58 6 46.36 6 32 6 18.654 16.056 7.656 29.005 6.17 30.651 5.983 32 4.658 32 3S30.654-.015 29.004.14a32 32 0 1 0 29.603 49.638",clipRule:"evenodd","data-dimension":"xl"})),_path2||(_path2=react.createElement("path",{d:"M43.955 37.334a24 24 0 0 0 3.915-10.838C48.014 25.122 46.88 24 45.5 24s-2.483 1.125-2.662 2.494C41.616 35.81 33.648 43 24 43 13.507 43 5 34.493 5 24c0-9.648 7.191-17.616 16.506-18.838C22.875 4.982 24 3.881 24 2.5c0-1.38-1.122-2.513-2.496-2.37a24 24 0 1 0 22.451 37.204",clipRule:"evenodd","data-dimension":"l"})),_path3||(_path3=react.createElement("path",{d:"M21.978 18.667a12 12 0 0 0 1.928-5.17C24.01 12.673 23.328 12 22.5 12s-1.487.677-1.623 1.494C20.165 17.754 16.462 21 12 21a9 9 0 0 1-1.494-17.877C11.323 2.987 12 2.328 12 1.5S11.326-.01 10.504.094a12 12 0 1 0 11.474 18.573",clipRule:"evenodd","data-dimension":"m"})),_path4||(_path4=react.createElement("path",{d:"M18.378 15.54a10 10 0 0 0 1.613-4.324c.087-.687-.483-1.25-1.176-1.25-.692 0-1.243.565-1.357 1.248a7.526 7.526 0 1 1-8.672-8.672c.683-.114 1.249-.665 1.249-1.357 0-.693-.564-1.263-1.251-1.176a10.035 10.035 0 1 0 9.594 15.531",clipRule:"evenodd","data-dimension":"ms"})),_path5||(_path5=react.createElement("path",{d:"M14.652 12.445a8 8 0 0 0 1.286-3.448C16.006 8.45 15.552 8 15 8s-.991.451-1.082.996A6.002 6.002 0 0 1 2 8a6 6 0 0 1 5.004-5.918C7.55 1.992 8 1.552 8 1S7.55-.006 7.003.062a8 8 0 1 0 7.649 12.383",clipRule:"evenodd","data-dimension":"s"})))})).withConfig({displayName:"SpinnerIcon",componentId:"sc-t3762f-0"})(["animation:"," 1s linear infinite;path{fill:",";}width:100%;height:100%;@container (min-width:64px){:not(path[data-dimension='xl']){display:none;}}@container (max-width:48px) and (min-width:25px){:not(path[data-dimension='l']){display:none;}}@container (max-width:24px) and (min-width:21px){:not(path[data-dimension='m']){display:none;}}@container (max-width:20px) and (min-width:17px){:not(path[data-dimension='ms']){display:none;}}@container (max-width:16px){:not(path[data-dimension='s']){display:none;}}"],spin,(({$inverse,theme})=>$inverse?`var(--admiral-color-Special_StaticWhite, ${theme.color["Special/Static White"]})`:`var(--admiral-color-Primary_Primary60Main, ${theme.color["Primary/Primary 60 Main"]})`))},"./src/components/skeleton/animation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>skeletonAnimationMixin});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const skeletonAnimation=props=>(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.i7)(["0%{background-color:var(--admiral-color-Neutral_Neutral10,",");border-color:var(--admiral-color-Neutral_Neutral10,",");}50%{background-color:var(--admiral-color-Neutral_Neutral20,",");border-color:var(--admiral-color-Neutral_Neutral20,",");}100%{background-color:var(--admiral-color-Neutral_Neutral10,",");border-color:var(--admiral-color-Neutral_Neutral10,",");}"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"]),skeletonAnimationMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.AH)(["animation:"," 2s ease infinite;"],(props=>skeletonAnimation(props)));try{skeletonAnimation.displayName="skeletonAnimation",skeletonAnimation.__docgenInfo={description:"",displayName:"skeletonAnimation",props:{as:{defaultValue:null,description:'Dynamically adjust the rendered component or HTML tag, e.g.\n```\nconst StyledButton = styled.button``\n\n<StyledButton as="a" href="/foo">\n  I\'m an anchor now\n</StyledButton>\n```',name:"as",required:!1,type:{name:"KnownTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"KnownTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/skeleton/animation.tsx#skeletonAnimation"]={docgenInfo:skeletonAnimation.__docgenInfo,name:"skeletonAnimation",path:"src/components/skeleton/animation.tsx#skeletonAnimation"})}catch(__react_docgen_typescript_loader_error){}}}]);