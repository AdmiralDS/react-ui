"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[9215],{"./src/components/Toast/stories/Toast.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ToastBackwardCompatibility:()=>ToastBackwardCompatibility,ToastCustomComponent:()=>ToastCustomComponent,ToastLineNotification:()=>ToastLineNotification,ToastNotification:()=>ToastNotification,ToastNotificationBase:()=>ToastNotificationBase,ToastProgressComponent:()=>ToastProgressComponent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Toast_stories});var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_=__webpack_require__("@storybook/core-events"),dist=__webpack_require__("./node_modules/@storybook/csf/dist/index.mjs"),{document:chunk_6GSMXRCY_document,HTMLElement}=external_STORYBOOK_MODULE_GLOBAL_.global;var chunk_6GSMXRCY_navigate=params=>external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel().emit(external_STORYBOOK_MODULE_CORE_EVENTS_.SELECT_STORY,params),hrefTo=(title,name)=>new Promise((resolve=>{let{location}=chunk_6GSMXRCY_document,query=function parseQuery(queryString){let query={},pairs=("?"===queryString[0]?queryString.substring(1):queryString).split("&").filter(Boolean);for(let i=0;i<pairs.length;i++){let pair=pairs[i].split("=");query[decodeURIComponent(pair[0])]=decodeURIComponent(pair[1]||"")}return query}(location.search),existingId=[].concat(query.id)[0],titleToLink=title||existingId.split("--",2)[0],path=`/story/${(0,dist.Lr)(titleToLink,name)}`,sbPath=location.pathname.replace(/iframe\.html$/,"");resolve(`${location.origin+sbPath}?${Object.entries({path}).map((item=>`${item[0]}=${item[1]}`)).join("&")}`)})),linksListener=e=>{let{target}=e;if(!(target instanceof HTMLElement))return;let element=target,{sbKind:kind,sbStory:story}=element.dataset;(kind||story)&&(e.preventDefault(),chunk_6GSMXRCY_navigate({kind,story}))},hasListener=!1,off=()=>{hasListener&&(hasListener=!1,chunk_6GSMXRCY_document.removeEventListener("click",linksListener))},react=((0,external_STORYBOOK_MODULE_PREVIEW_API_.makeDecorator)({name:"withLinks",parameterName:"links",wrapper:(getStory,context)=>(hasListener||(hasListener=!0,chunk_6GSMXRCY_document.addEventListener("click",linksListener)),external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel().once(external_STORYBOOK_MODULE_CORE_EVENTS_.STORY_CHANGED,off),getStory(context))}),__webpack_require__("./node_modules/react/index.js")),LinkTo=class extends react.PureComponent{constructor(){super(...arguments),this.state={href:"/"},this.updateHref=async()=>{let{kind,title=kind,story,name=story}=this.props;if(title&&name){let href=await hrefTo(title,name);this.setState({href})}},this.handleClick=()=>{let{kind,title=kind,story,name=story}=this.props;title&&name&&chunk_6GSMXRCY_navigate({title,name})}}componentDidMount(){this.updateHref()}componentDidUpdate(prevProps){let{kind,title,story,name}=this.props;(prevProps.kind!==kind||prevProps.story!==story||prevProps.title!==title||prevProps.name!==name)&&this.updateHref()}render(){let{kind,title=kind,story,name=story,children,...rest}=this.props,{href}=this.state;return react.createElement("a",{href,onClick:e=>((e,cb=(_e=>{}))=>{(e=>!(0!==e.button||e.altKey||e.ctrlKey||e.metaKey||e.shiftKey))(e)&&(e.preventDefault(),cb(e))})(e,this.handleClick),...rest},children)}};LinkTo.defaultProps={children:void 0};var react_react_default=LinkTo,src=__webpack_require__("./src/index.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),Button=__webpack_require__("./src/components/Button/index.tsx"),uid=__webpack_require__("./src/components/common/uid.ts"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const items=[{status:"error",children:"Запрос завершился ошибкой",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"warning",children:"Слишком много попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"info",children:"Осталось 7 попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"success",children:"Запрос выполнен успешно",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0}],NotificationEmitter=()=>{const[toastStack,setToastStack]=(0,react.useState)([]),{addToastItem,removeToastItem,autoDeleteTime}=(0,src.useToast)();return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",height:"200px"},children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const customItem=(max=3,(min=0)+Number(Math.round(Math.random()*(max-min))));var min,max;const toast=items[customItem],id=(0,uid.L)(),renderToast=id=>{const handleOnClose=()=>{removeToastItem({id,renderToast}),console.log("Toast is closed"),setToastStack((prevToastIdStack=>prevToastIdStack.filter((toast=>toast.renderToast!==renderToast))))};return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:autoDeleteTime?(0,jsx_runtime.jsx)(src.ToastItemWithAutoDelete,{onRemoveNotification:handleOnClose,autoDeleteTime,children:(0,jsx_runtime.jsx)(src.DefaultToastItem,{...toast,onClose:toast.onClose||handleOnClose})}):(0,jsx_runtime.jsx)(src.DefaultToastItem,{...toast,onClose:toast.onClose||handleOnClose})})};addToastItem({id,renderToast}),setToastStack((prev=>[...prev,{id,renderToast}]))},children:"Добавить сообщение"}),(0,jsx_runtime.jsx)("div",{style:{width:20}}),(0,jsx_runtime.jsx)(Button.$n,{disabled:0===toastStack.length,onClick:()=>{const newToastIdStack=[...toastStack],toastToRemove=newToastIdStack.shift();setToastStack(newToastIdStack),toastToRemove&&removeToastItem(toastToRemove)},children:"Удалить первое сообщение"})]})};NotificationEmitter.displayName="NotificationEmitter";const ToastNotificationTemplate=({themeBorderKind,...props})=>(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsxs)(src.ToastProvider,{autoDeleteTime:props.autoDeleteTime,children:[(0,jsx_runtime.jsx)(NotificationEmitter,{}),(0,jsx_runtime.jsx)(src.Toast,{style:{top:128,left:64}})]})});ToastNotificationTemplate.displayName="ToastNotificationTemplate";try{ToastNotificationTemplate.displayName="ToastNotificationTemplate",ToastNotificationTemplate.__docgenInfo={description:"",displayName:"ToastNotificationTemplate",props:{position:{defaultValue:null,description:"Позиция всплывающего уведомления",name:"position",required:!1,type:{name:"enum",value:[{value:'"top-right"'},{value:'"bottom-right"'},{value:'"bottom-left"'}]}},widthContainer:{defaultValue:null,description:"Ширина контейнера уведомлений",name:"widthContainer",required:!1,type:{name:"string | number"}},autoDeleteTime:{defaultValue:null,description:"Время, через которое удаляются уведомления",name:"autoDeleteTime",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Элементы, имеющие доступ к контексту",name:"children",required:!1,type:{name:"ReactNode"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toast/stories/ToastNotification.template.tsx#ToastNotificationTemplate"]={docgenInfo:ToastNotificationTemplate.__docgenInfo,name:"ToastNotificationTemplate",path:"src/components/Toast/stories/ToastNotification.template.tsx#ToastNotificationTemplate"})}catch(__react_docgen_typescript_loader_error){}const ToastNotificationBase_template_items=[{status:"error",children:"Запрос завершился ошибкой",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"warning",children:"Слишком много попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"info",children:"Осталось 7 попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"success",children:"Запрос выполнен успешно",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0}],ToastNotificationBase_template_NotificationEmitter=()=>{const[toastStack,setToastStack]=(0,react.useState)([]),{addToastItem,removeToastItem,autoDeleteTime}=(0,src.useToast)();return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"flex-start"},children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const customItem=(max=3,(min=0)+Number(Math.round(Math.random()*(max-min))));var min,max;const toast=ToastNotificationBase_template_items[customItem],id=(0,uid.L)(),renderToast=id=>{const handleOnClose=()=>{removeToastItem({id,renderToast}),console.log("Toast is closed"),setToastStack((prevToastIdStack=>prevToastIdStack.filter((toast=>toast.renderToast!==renderToast))))};return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:autoDeleteTime?(0,jsx_runtime.jsx)(src.ToastItemWithAutoDelete,{onRemoveNotification:handleOnClose,autoDeleteTime,children:(0,jsx_runtime.jsx)(src.DefaultToastItem,{...toast,onClose:toast.onClose||handleOnClose})}):(0,jsx_runtime.jsx)(src.DefaultToastItem,{...toast,onClose:toast.onClose||handleOnClose})})};addToastItem({id,renderToast}),setToastStack((prev=>[...prev,{id,renderToast}]))},children:"Добавить сообщение"}),(0,jsx_runtime.jsx)("div",{style:{width:20}}),(0,jsx_runtime.jsx)(Button.$n,{disabled:0===toastStack.length,onClick:()=>{const newToastIdStack=[...toastStack],toastToRemove=newToastIdStack.shift();setToastStack(newToastIdStack),toastToRemove&&removeToastItem(toastToRemove)},children:"Удалить первое сообщение"})]})};ToastNotificationBase_template_NotificationEmitter.displayName="NotificationEmitter";const ToastNotificationBaseTemplate=({themeBorderKind,...props})=>(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsxs)(src.ToastProvider,{autoDeleteTime:props.autoDeleteTime,children:[(0,jsx_runtime.jsx)(ToastNotificationBase_template_NotificationEmitter,{}),(0,jsx_runtime.jsx)(src.Toast,{position:props.position})]})});ToastNotificationBaseTemplate.displayName="ToastNotificationBaseTemplate";try{ToastNotificationBaseTemplate.displayName="ToastNotificationBaseTemplate",ToastNotificationBaseTemplate.__docgenInfo={description:"",displayName:"ToastNotificationBaseTemplate",props:{position:{defaultValue:null,description:"Позиция всплывающего уведомления",name:"position",required:!1,type:{name:"enum",value:[{value:'"top-right"'},{value:'"bottom-right"'},{value:'"bottom-left"'}]}},widthContainer:{defaultValue:null,description:"Ширина контейнера уведомлений",name:"widthContainer",required:!1,type:{name:"string | number"}},autoDeleteTime:{defaultValue:null,description:"Время, через которое удаляются уведомления",name:"autoDeleteTime",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Элементы, имеющие доступ к контексту",name:"children",required:!1,type:{name:"ReactNode"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toast/stories/ToastNotificationBase.template.tsx#ToastNotificationBaseTemplate"]={docgenInfo:ToastNotificationBaseTemplate.__docgenInfo,name:"ToastNotificationBaseTemplate",path:"src/components/Toast/stories/ToastNotificationBase.template.tsx#ToastNotificationBaseTemplate"})}catch(__react_docgen_typescript_loader_error){}const ToastLineNotification_template_items=[{status:"error",children:"Запрос завершился ошибкой",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"warning",children:"Слишком много попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"info",children:"Осталось 7 попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"success",children:"Запрос выполнен успешно",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0}],ToastLineNotification_template_NotificationEmitter=()=>{const[toastStack,setToastStack]=(0,react.useState)([]),{addToastItem,removeToastItem,autoDeleteTime}=(0,src.useToast)();return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",height:"200px"},children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const customItem=(max=3,(min=0)+Number(Math.round(Math.random()*(max-min))));var min,max;const toast=ToastLineNotification_template_items[customItem],id=(0,uid.L)(),renderToast=id=>{const handleOnClose=()=>{removeToastItem({id,renderToast}),console.log("Toast is closed"),setToastStack((prevToastIdStack=>prevToastIdStack.filter((toast=>toast.renderToast!==renderToast))))};return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:autoDeleteTime?(0,jsx_runtime.jsx)(src.ToastItemWithAutoDelete,{onRemoveNotification:handleOnClose,autoDeleteTime,children:(0,jsx_runtime.jsx)(src.DefaultToastItem,{...toast,onClose:toast.onClose||handleOnClose})}):(0,jsx_runtime.jsx)(src.DefaultToastItem,{...toast,onClose:toast.onClose||handleOnClose})})};addToastItem({id,renderToast}),setToastStack((prev=>[...prev,{id,renderToast}]))},children:"Добавить сообщение"}),(0,jsx_runtime.jsx)("div",{style:{width:20}}),(0,jsx_runtime.jsx)(Button.$n,{disabled:0===toastStack.length,onClick:()=>{const newToastIdStack=[...toastStack],toastToRemove=newToastIdStack.shift();setToastStack(newToastIdStack),toastToRemove&&removeToastItem(toastToRemove)},children:"Удалить первое сообщение"})]})};ToastLineNotification_template_NotificationEmitter.displayName="NotificationEmitter";const ToastLineNotificationTemplate=({themeBorderKind,...props})=>(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsxs)(src.ToastProvider,{autoDeleteTime:props.autoDeleteTime,children:[(0,jsx_runtime.jsx)(ToastLineNotification_template_NotificationEmitter,{}),(0,jsx_runtime.jsx)(src.Toast,{style:{top:128,left:64,width:"initial"}})]})});ToastLineNotificationTemplate.displayName="ToastLineNotificationTemplate";try{ToastLineNotificationTemplate.displayName="ToastLineNotificationTemplate",ToastLineNotificationTemplate.__docgenInfo={description:"",displayName:"ToastLineNotificationTemplate",props:{position:{defaultValue:null,description:"Позиция всплывающего уведомления",name:"position",required:!1,type:{name:"enum",value:[{value:'"top-right"'},{value:'"bottom-right"'},{value:'"bottom-left"'}]}},widthContainer:{defaultValue:null,description:"Ширина контейнера уведомлений",name:"widthContainer",required:!1,type:{name:"string | number"}},autoDeleteTime:{defaultValue:null,description:"Время, через которое удаляются уведомления",name:"autoDeleteTime",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Элементы, имеющие доступ к контексту",name:"children",required:!1,type:{name:"ReactNode"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toast/stories/ToastLineNotification.template.tsx#ToastLineNotificationTemplate"]={docgenInfo:ToastLineNotificationTemplate.__docgenInfo,name:"ToastLineNotificationTemplate",path:"src/components/Toast/stories/ToastLineNotification.template.tsx#ToastLineNotificationTemplate"})}catch(__react_docgen_typescript_loader_error){}var NotificationItem=__webpack_require__("./src/components/NotificationItem/index.tsx"),TextButton=__webpack_require__("./src/components/TextButton/index.tsx"),TextInput=__webpack_require__("./src/components/input/TextInput/index.tsx");const Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"ToastCustomComponenttemplate__Wrapper",componentId:"sc-1u8fohb-0"})(["display:flex;gap:10px;> *{flex:1 1 auto;}"]),Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"ToastCustomComponenttemplate__Separator",componentId:"sc-1u8fohb-1"})(["height:20px;"]),handleTextButtonClick=()=>{console.log("TextButton click")},MessageForm=()=>{const[toastIdStack,setToastIdStack]=(0,react.useState)([]),[inputValue,setInputValue]=(0,react.useState)("Notification message"),{addToastItem,removeToastItem}=(0,src.useToast)();return(0,jsx_runtime.jsxs)("div",{style:{width:"550px"},children:[(0,jsx_runtime.jsx)(TextInput.ks,{value:inputValue,onChange:e=>setInputValue(e.target.value)}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsxs)(Wrapper,{children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const id=(0,uid.L)(),renderFunction=id=>(0,jsx_runtime.jsxs)(NotificationItem.se,{isClosable:!0,displayStatusIcon:!0,onClose:()=>{removeToastItem({id,renderToast:renderFunction}),console.log("Toast is closed"),setToastIdStack((prevToastIdStack=>prevToastIdStack.filter((toast=>toast.id!==id))))},children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Title"}),(0,jsx_runtime.jsx)(NotificationItem.Yg,{children:inputValue}),(0,jsx_runtime.jsxs)(NotificationItem.xs,{children:[(0,jsx_runtime.jsx)(TextButton.Q,{dimension:"s",text:"TextButton1",onClick:handleTextButtonClick}),(0,jsx_runtime.jsx)(TextButton.Q,{dimension:"s",text:"TextButton2",onClick:handleTextButtonClick})]})]});addToastItem({id,renderToast:renderFunction}),setToastIdStack((prev=>[...prev,{id,renderToast:renderFunction}]))},children:"Добавить сообщение"}),(0,jsx_runtime.jsx)(Button.$n,{disabled:0===toastIdStack.length,onClick:()=>{const newToastIdStack=[...toastIdStack],removeToast=newToastIdStack.shift();setToastIdStack(newToastIdStack),removeToast&&removeToastItem(removeToast)},children:"Удалить первое сообщение"})]})]})};MessageForm.displayName="MessageForm";const ToastCustomComponentTemplate=({themeBorderKind,...props})=>(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsxs)(src.ToastProvider,{children:[(0,jsx_runtime.jsx)(MessageForm,{}),(0,jsx_runtime.jsx)(src.Toast,{position:props.position})]})});ToastCustomComponentTemplate.displayName="ToastCustomComponentTemplate";try{ToastCustomComponentTemplate.displayName="ToastCustomComponentTemplate",ToastCustomComponentTemplate.__docgenInfo={description:"",displayName:"ToastCustomComponentTemplate",props:{position:{defaultValue:null,description:"Позиция всплывающего уведомления",name:"position",required:!1,type:{name:"enum",value:[{value:'"top-right"'},{value:'"bottom-right"'},{value:'"bottom-left"'}]}},widthContainer:{defaultValue:null,description:"Ширина контейнера уведомлений",name:"widthContainer",required:!1,type:{name:"string | number"}},autoDeleteTime:{defaultValue:null,description:"Время, через которое удаляются уведомления",name:"autoDeleteTime",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Элементы, имеющие доступ к контексту",name:"children",required:!1,type:{name:"ReactNode"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toast/stories/ToastCustomComponent.template.tsx#ToastCustomComponentTemplate"]={docgenInfo:ToastCustomComponentTemplate.__docgenInfo,name:"ToastCustomComponentTemplate",path:"src/components/Toast/stories/ToastCustomComponent.template.tsx#ToastCustomComponentTemplate"})}catch(__react_docgen_typescript_loader_error){}const ToastProgressComponent_template_Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"ToastProgressComponenttemplate__Wrapper",componentId:"sc-1hgx385-0"})(["display:flex;gap:10px;> *{flex:1 1 auto;}"]),ToastProgressComponent_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"ToastProgressComponenttemplate__Separator",componentId:"sc-1hgx385-1"})(["height:20px;"]),toastStatuses=["info","error","success","warning"],ToastProgressComponent_template_handleTextButtonClick=()=>{console.log("TextButton click")},ToastProgressComponent_template_MessageForm=()=>{const[toastIdStack,setToastIdStack]=(0,react.useState)([]),[titleValue,setTitleValue]=(0,react.useState)("Toast title"),[contentValue,setContentValue]=(0,react.useState)("Toast content"),[textButton1Value,setTextButton1Value]=(0,react.useState)("TextButton1"),[textButton2Value,setTextButton2Value]=(0,react.useState)("TextButton2"),[toastStatus,setToastStatus]=(0,react.useState)(0),{addToastItem,removeToastItem,autoDeleteTime}=(0,src.useToast)();return(0,jsx_runtime.jsxs)("div",{style:{width:"550px"},children:[(0,jsx_runtime.jsx)(TextInput.ks,{value:titleValue,onChange:e=>setTitleValue(e.target.value)}),(0,jsx_runtime.jsx)(ToastProgressComponent_template_Separator,{}),(0,jsx_runtime.jsx)(TextInput.ks,{value:contentValue,onChange:e=>setContentValue(e.target.value)}),(0,jsx_runtime.jsx)(ToastProgressComponent_template_Separator,{}),(0,jsx_runtime.jsxs)(ToastProgressComponent_template_Wrapper,{children:[(0,jsx_runtime.jsx)(TextInput.ks,{value:textButton1Value,onChange:e=>setTextButton1Value(e.target.value)}),(0,jsx_runtime.jsx)(TextInput.ks,{value:textButton2Value,onChange:e=>setTextButton2Value(e.target.value)})]}),(0,jsx_runtime.jsx)(ToastProgressComponent_template_Separator,{}),(0,jsx_runtime.jsxs)(ToastProgressComponent_template_Wrapper,{children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const id=(0,uid.L)(),renderFunction=id=>{const handleCloseToast=()=>{removeToastItem({id,renderToast:renderFunction}),console.log("Toast is closed"),setToastIdStack((prevToastIdStack=>prevToastIdStack.filter((toast=>toast.renderToast!==renderFunction))))};return(0,jsx_runtime.jsx)(src.ToastItemWithProgress,{status:toastStatuses[toastStatus],autoDeleteTime,onRemoveNotification:handleCloseToast,children:(0,jsx_runtime.jsxs)(NotificationItem.se,{status:toastStatuses[toastStatus],isClosable:!0,displayStatusIcon:!0,onClose:handleCloseToast,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:titleValue}),(0,jsx_runtime.jsx)(NotificationItem.Yg,{children:contentValue}),(0,jsx_runtime.jsxs)(NotificationItem.xs,{children:[(0,jsx_runtime.jsx)(TextButton.Q,{dimension:"s",text:textButton1Value,onClick:ToastProgressComponent_template_handleTextButtonClick}),(0,jsx_runtime.jsx)(TextButton.Q,{dimension:"s",text:textButton2Value,onClick:ToastProgressComponent_template_handleTextButtonClick})]})]})})};addToastItem({id,renderToast:renderFunction}),setToastIdStack((prev=>[...prev,{id,renderToast:renderFunction}])),setToastStatus((prevStatus=>(prevStatus+1)%4))},children:"Добавить сообщение"}),(0,jsx_runtime.jsx)(Button.$n,{disabled:0===toastIdStack.length,onClick:()=>{const newToastIdStack=[...toastIdStack],removeToast=newToastIdStack.shift();setToastIdStack(newToastIdStack),removeToast&&removeToastItem(removeToast)},children:"Удалить первое сообщение"})]})]})};ToastProgressComponent_template_MessageForm.displayName="MessageForm";const ToastProgressComponentTemplate=({themeBorderKind,...props})=>(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsxs)(src.ToastProvider,{autoDeleteTime:5e3,children:[(0,jsx_runtime.jsx)(ToastProgressComponent_template_MessageForm,{}),(0,jsx_runtime.jsx)(src.Toast,{position:props.position})]})});ToastProgressComponentTemplate.displayName="ToastProgressComponentTemplate";try{ToastProgressComponentTemplate.displayName="ToastProgressComponentTemplate",ToastProgressComponentTemplate.__docgenInfo={description:"",displayName:"ToastProgressComponentTemplate",props:{position:{defaultValue:null,description:"Позиция всплывающего уведомления",name:"position",required:!1,type:{name:"enum",value:[{value:'"top-right"'},{value:'"bottom-right"'},{value:'"bottom-left"'}]}},widthContainer:{defaultValue:null,description:"Ширина контейнера уведомлений",name:"widthContainer",required:!1,type:{name:"string | number"}},autoDeleteTime:{defaultValue:null,description:"Время, через которое удаляются уведомления",name:"autoDeleteTime",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Элементы, имеющие доступ к контексту",name:"children",required:!1,type:{name:"ReactNode"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toast/stories/ToastProgressComponent.template.tsx#ToastProgressComponentTemplate"]={docgenInfo:ToastProgressComponentTemplate.__docgenInfo,name:"ToastProgressComponentTemplate",path:"src/components/Toast/stories/ToastProgressComponent.template.tsx#ToastProgressComponentTemplate"})}catch(__react_docgen_typescript_loader_error){}const ToastBackwardCompatibility_template_items=[{status:"error",children:"Запрос завершился ошибкой",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"warning",children:"Слишком много попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"info",children:"Осталось 7 попыток",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0},{status:"success",children:"Запрос выполнен успешно",title:"Заголовок",isClosable:!0,linkText:"Link",displayStatusIcon:!0}],ToastBackwardCompatibility_template_NotificationEmitter=()=>{const[toastIdStack,setToastIdStack]=(0,react.useState)([]),{addToast,removeById}=(0,src.useToast)();return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"flex-start"},children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const customItem=(max=3,(min=0)+Number(Math.round(Math.random()*(max-min))));var min,max;const toastId=addToast(ToastBackwardCompatibility_template_items[customItem]);setToastIdStack((prev=>[...prev,toastId]))},children:"Добавить сообщение"}),(0,jsx_runtime.jsx)("div",{style:{width:20}}),(0,jsx_runtime.jsx)(Button.$n,{disabled:0===toastIdStack.length,onClick:()=>{const newToastIdStack=[...toastIdStack],toastId=newToastIdStack.shift();setToastIdStack(newToastIdStack),toastId&&removeById(toastId)},children:"Удалить первое сообщение"})]})};ToastBackwardCompatibility_template_NotificationEmitter.displayName="NotificationEmitter";const ToastBackwardCompatibilityTemplate=({themeBorderKind,...props})=>(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsxs)(src.ToastProvider,{autoDeleteTime:props.autoDeleteTime,children:[(0,jsx_runtime.jsx)(ToastBackwardCompatibility_template_NotificationEmitter,{}),(0,jsx_runtime.jsx)(src.Toast,{position:props.position})]})});ToastBackwardCompatibilityTemplate.displayName="ToastBackwardCompatibilityTemplate";try{ToastBackwardCompatibilityTemplate.displayName="ToastBackwardCompatibilityTemplate",ToastBackwardCompatibilityTemplate.__docgenInfo={description:"",displayName:"ToastBackwardCompatibilityTemplate",props:{position:{defaultValue:null,description:"Позиция всплывающего уведомления",name:"position",required:!1,type:{name:"enum",value:[{value:'"top-right"'},{value:'"bottom-right"'},{value:'"bottom-left"'}]}},widthContainer:{defaultValue:null,description:"Ширина контейнера уведомлений",name:"widthContainer",required:!1,type:{name:"string | number"}},autoDeleteTime:{defaultValue:null,description:"Время, через которое удаляются уведомления",name:"autoDeleteTime",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"Элементы, имеющие доступ к контексту",name:"children",required:!1,type:{name:"ReactNode"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toast/stories/ToastBackwardCompatibility.template.tsx#ToastBackwardCompatibilityTemplate"]={docgenInfo:ToastBackwardCompatibilityTemplate.__docgenInfo,name:"ToastBackwardCompatibilityTemplate",path:"src/components/Toast/stories/ToastBackwardCompatibility.template.tsx#ToastBackwardCompatibilityTemplate"})}catch(__react_docgen_typescript_loader_error){}const Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"Toaststories__Desc",componentId:"sc-14bs8tb-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Toast_stories_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"Toaststories__Separator",componentId:"sc-14bs8tb-1"})(["height:20px;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Компонент служит для демонстрации выплывающих сообщений. В качестве таких уведомлений рекомендуется использовать ",(0,jsx_runtime.jsx)(react_react_default,{kind:"Admiral-2.1/NotificationItem",story:"static-notification-item-base-status",children:"NotificationItem"}),".",(0,jsx_runtime.jsx)(Toast_stories_Separator,{}),"Компонент Toast необходимо оборачивать в ToastProvider для управления состоянием всплывающих нотификаций. Через значение autoDeleteTime в ToastProvider можно задать в ms время, по истечению которого нотификация скроется. Если данный параметр не задан, то следует дать возможность закрывать уведомление по нажатию иконки закрытия (при использовании NotificationItem выставить isClosable и передать в onClose removeToastItem)."]});Description.displayName="Description";const Toast_stories={title:"Admiral-2.1/Toast",decorators:void 0,component:src.Toast,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A27014"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A27525"}]},args:{autoDeleteTime:3e3,position:"top-right"},argTypes:{autoDeleteTime:{type:"number"},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}}}},ToastNotificationStory=props=>(0,jsx_runtime.jsx)(ToastNotificationTemplate,{...props});ToastNotificationStory.displayName="ToastNotificationStory";const ToastNotification={render:ToastNotificationStory,parameters:{docs:{source:{code:"import { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport {\n  Button,\n  DefaultToastItem,\n  Toast,\n  ToastItemWithAutoDelete,\n  ToastProvider,\n  useToast,\n} from '@admiral-ds/react-ui';\nimport type { ID, IdentifyToast, ToastItemProps, ToastProps, BorderRadiusType } from '@admiral-ds/react-ui';\n\nimport { uid } from '#src/components/common/uid';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst random = (min: number, max: number) => min + Number(Math.round(Math.random() * (max - min)));\n\nconst items: IdentifyToast[] = [\n  {\n    status: 'error',\n    children: `Запрос завершился ошибкой`,\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'warning',\n    children: 'Слишком много попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'info',\n    children: 'Осталось 7 попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'success',\n    children: 'Запрос выполнен успешно',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n];\n\nconst NotificationEmitter = () => {\n  const [toastStack, setToastStack] = useState<Array<ToastItemProps>>([]);\n\n  const { addToastItem, removeToastItem, autoDeleteTime } = useToast();\n\n  const onClickHandlerAdd = () => {\n    const customItem = random(0, 3);\n    const toast = items[customItem];\n    const id = uid();\n    const renderToast = (id: ID) => {\n      const handleOnClose = () => {\n        removeToastItem({ id, renderToast });\n        console.log('Toast is closed');\n        setToastStack((prevToastIdStack) => prevToastIdStack.filter((toast) => toast.renderToast !== renderToast));\n      };\n\n      return (\n        <>\n          {autoDeleteTime ? (\n            <ToastItemWithAutoDelete onRemoveNotification={handleOnClose} autoDeleteTime={autoDeleteTime}>\n              <DefaultToastItem {...toast} onClose={toast.onClose || handleOnClose} />\n            </ToastItemWithAutoDelete>\n          ) : (\n            <DefaultToastItem {...toast} onClose={toast.onClose || handleOnClose} />\n          )}\n        </>\n      );\n    };\n    addToastItem({ id, renderToast });\n    setToastStack((prev) => [...prev, { id, renderToast }]);\n  };\n  const onClickHandlerRemove = () => {\n    const newToastIdStack = [...toastStack];\n    const toastToRemove = newToastIdStack.shift();\n    setToastStack(newToastIdStack);\n    if (toastToRemove) {\n      removeToastItem(toastToRemove);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'flex-start', height: '200px' }}>\n      <Button onClick={onClickHandlerAdd}>Добавить сообщение</Button>\n      <div style={{ width: 20 }} />\n      <Button disabled={toastStack.length === 0} onClick={onClickHandlerRemove}>\n        Удалить первое сообщение\n      </Button>\n    </div>\n  );\n};\n\nexport const ToastNotificationTemplate = ({\n  themeBorderKind,\n  ...props\n}: ToastProps & { themeBorderKind?: BorderRadiusType }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <ToastProvider autoDeleteTime={props.autoDeleteTime}>\n        <NotificationEmitter />\n        <Toast style={{ top: 128, left: 64 }} />\n      </ToastProvider>\n    </ThemeProvider>\n  );\n};\n"}}},name:"Toast. Настройка места всплытия через стили."},ToastNotificationBaseStory=props=>(0,jsx_runtime.jsx)(ToastNotificationBaseTemplate,{...props});ToastNotificationBaseStory.displayName="ToastNotificationBaseStory";const ToastNotificationBase={render:ToastNotificationBaseStory,parameters:{docs:{source:{code:"import { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport {\n  Button,\n  DefaultToastItem,\n  Toast,\n  ToastItemWithAutoDelete,\n  ToastProvider,\n  useToast,\n} from '@admiral-ds/react-ui';\nimport type { ToastProps, ID, IdentifyToast, ToastItemProps, BorderRadiusType } from '@admiral-ds/react-ui';\n\nimport { uid } from '#src/components/common/uid';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst random = (min: number, max: number) => min + Number(Math.round(Math.random() * (max - min)));\n\nconst items: IdentifyToast[] = [\n  {\n    status: 'error',\n    children: `Запрос завершился ошибкой`,\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'warning',\n    children: 'Слишком много попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'info',\n    children: 'Осталось 7 попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'success',\n    children: 'Запрос выполнен успешно',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n];\n\nconst NotificationEmitter = () => {\n  const [toastStack, setToastStack] = useState<Array<ToastItemProps>>([]);\n\n  const { addToastItem, removeToastItem, autoDeleteTime } = useToast();\n\n  const onClickHandlerAdd = () => {\n    const customItem = random(0, 3);\n    const toast = items[customItem];\n    const id = uid();\n    const renderToast = (id: ID) => {\n      const handleOnClose = () => {\n        removeToastItem({ id, renderToast });\n        console.log('Toast is closed');\n        setToastStack((prevToastIdStack) => prevToastIdStack.filter((toast) => toast.renderToast !== renderToast));\n      };\n\n      return (\n        <>\n          {autoDeleteTime ? (\n            <ToastItemWithAutoDelete onRemoveNotification={handleOnClose} autoDeleteTime={autoDeleteTime}>\n              <DefaultToastItem {...toast} onClose={toast.onClose || handleOnClose} />\n            </ToastItemWithAutoDelete>\n          ) : (\n            <DefaultToastItem {...toast} onClose={toast.onClose || handleOnClose} />\n          )}\n        </>\n      );\n    };\n    addToastItem({ id, renderToast });\n    setToastStack((prev) => [...prev, { id, renderToast }]);\n  };\n  const onClickHandlerRemove = () => {\n    const newToastIdStack = [...toastStack];\n    const toastToRemove = newToastIdStack.shift();\n    setToastStack(newToastIdStack);\n    if (toastToRemove) {\n      removeToastItem(toastToRemove);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n      <Button onClick={onClickHandlerAdd}>Добавить сообщение</Button>\n      <div style={{ width: 20 }} />\n      <Button disabled={toastStack.length === 0} onClick={onClickHandlerRemove}>\n        Удалить первое сообщение\n      </Button>\n    </div>\n  );\n};\n\nexport const ToastNotificationBaseTemplate = ({\n  themeBorderKind,\n  ...props\n}: ToastProps & { themeBorderKind?: BorderRadiusType }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <ToastProvider autoDeleteTime={props.autoDeleteTime}>\n        <NotificationEmitter />\n        <Toast position={props.position} />\n      </ToastProvider>\n    </ThemeProvider>\n  );\n};\n"}}},name:"Toast. Базовый пример."},ToastLineNotificationStory=props=>(0,jsx_runtime.jsx)(ToastLineNotificationTemplate,{...props});ToastLineNotificationStory.displayName="ToastLineNotificationStory";const ToastLineNotification={render:ToastLineNotificationStory,parameters:{docs:{source:{code:"import { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport {\n  Button,\n  DefaultToastItem,\n  Toast,\n  ToastItemWithAutoDelete,\n  ToastProvider,\n  useToast,\n} from '@admiral-ds/react-ui';\nimport type { ToastProps, ID, IdentifyToast, ToastItemProps, BorderRadiusType } from '@admiral-ds/react-ui';\n\nimport { uid } from '#src/components/common/uid';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst random = (min: number, max: number) => min + Number(Math.round(Math.random() * (max - min)));\n\nconst items: IdentifyToast[] = [\n  {\n    status: 'error',\n    children: `Запрос завершился ошибкой`,\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'warning',\n    children: 'Слишком много попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'info',\n    children: 'Осталось 7 попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'success',\n    children: 'Запрос выполнен успешно',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n];\n\nconst NotificationEmitter = () => {\n  const [toastStack, setToastStack] = useState<Array<ToastItemProps>>([]);\n\n  const { addToastItem, removeToastItem, autoDeleteTime } = useToast();\n\n  const onClickHandlerAdd = () => {\n    const customItem = random(0, 3);\n    const toast = items[customItem];\n    const id = uid();\n    const renderToast = (id: ID) => {\n      const handleOnClose = () => {\n        removeToastItem({ id, renderToast });\n        console.log('Toast is closed');\n        setToastStack((prevToastIdStack) => prevToastIdStack.filter((toast) => toast.renderToast !== renderToast));\n      };\n\n      return (\n        <>\n          {autoDeleteTime ? (\n            <ToastItemWithAutoDelete onRemoveNotification={handleOnClose} autoDeleteTime={autoDeleteTime}>\n              <DefaultToastItem {...toast} onClose={toast.onClose || handleOnClose} />\n            </ToastItemWithAutoDelete>\n          ) : (\n            <DefaultToastItem {...toast} onClose={toast.onClose || handleOnClose} />\n          )}\n        </>\n      );\n    };\n    addToastItem({ id, renderToast });\n    setToastStack((prev) => [...prev, { id, renderToast }]);\n  };\n  const onClickHandlerRemove = () => {\n    const newToastIdStack = [...toastStack];\n    const toastToRemove = newToastIdStack.shift();\n    setToastStack(newToastIdStack);\n    if (toastToRemove) {\n      removeToastItem(toastToRemove);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'flex-start', height: '200px' }}>\n      <Button onClick={onClickHandlerAdd}>Добавить сообщение</Button>\n      <div style={{ width: 20 }} />\n      <Button disabled={toastStack.length === 0} onClick={onClickHandlerRemove}>\n        Удалить первое сообщение\n      </Button>\n    </div>\n  );\n};\n\nexport const ToastLineNotificationTemplate = ({\n  themeBorderKind,\n  ...props\n}: ToastProps & { themeBorderKind?: BorderRadiusType }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <ToastProvider autoDeleteTime={props.autoDeleteTime}>\n        <NotificationEmitter />\n        <Toast style={{ top: 128, left: 64, width: 'initial' }} />\n      </ToastProvider>\n    </ThemeProvider>\n  );\n};\n"}}},name:"Line Notification."},ToastCustomComponentStory=props=>(0,jsx_runtime.jsx)(ToastCustomComponentTemplate,{...props});ToastCustomComponentStory.displayName="ToastCustomComponentStory";const ToastCustomComponent={render:ToastCustomComponentStory,parameters:{docs:{source:{code:"import { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport {\n  Button,\n  NotificationItemButtonPanel,\n  NotificationItemContent,\n  NotificationItemTitle,\n  StyledNotificationItem,\n  TextButton,\n  TextInput,\n  Toast,\n  ToastProvider,\n  useToast,\n} from '@admiral-ds/react-ui';\nimport type { ID, ToastItemProps, ToastProps, BorderRadiusType } from '@admiral-ds/react-ui';\n\nimport { uid } from '#src/components/common/uid';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  > * {\n    flex: 1 1 auto;\n  }\n`;\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst handleTextButtonClick = () => {\n  console.log('TextButton click');\n};\n\nconst MessageForm = () => {\n  const [toastIdStack, setToastIdStack] = useState<Array<ToastItemProps>>([]);\n  const [inputValue, setInputValue] = useState('Notification message');\n\n  const { addToastItem, removeToastItem } = useToast();\n\n  const onClickHandlerAdd = () => {\n    const id = uid();\n    const renderFunction = (id: ID) => {\n      const handleCloseToast = () => {\n        removeToastItem({ id, renderToast: renderFunction });\n        console.log('Toast is closed');\n        setToastIdStack((prevToastIdStack) => prevToastIdStack.filter((toast) => toast.id !== id));\n      };\n      return (\n        <StyledNotificationItem isClosable={true} displayStatusIcon={true} onClose={handleCloseToast}>\n          <NotificationItemTitle>Title</NotificationItemTitle>\n          <NotificationItemContent>{inputValue}</NotificationItemContent>\n          <NotificationItemButtonPanel>\n            <TextButton dimension=\"s\" text=\"TextButton1\" onClick={handleTextButtonClick} />\n            <TextButton dimension=\"s\" text=\"TextButton2\" onClick={handleTextButtonClick} />\n          </NotificationItemButtonPanel>\n        </StyledNotificationItem>\n      );\n    };\n    addToastItem({ id, renderToast: renderFunction });\n    setToastIdStack((prev) => [...prev, { id, renderToast: renderFunction }]);\n  };\n  const onClickHandlerRemove = () => {\n    const newToastIdStack = [...toastIdStack];\n    const removeToast = newToastIdStack.shift();\n    setToastIdStack(newToastIdStack);\n    if (removeToast) {\n      removeToastItem(removeToast);\n    }\n  };\n\n  return (\n    <div style={{ width: '550px' }}>\n      <TextInput value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\n      <Separator />\n      <Wrapper>\n        <Button onClick={onClickHandlerAdd}>Добавить сообщение</Button>\n        <Button disabled={toastIdStack.length === 0} onClick={onClickHandlerRemove}>\n          Удалить первое сообщение\n        </Button>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport const ToastCustomComponentTemplate = ({\n  themeBorderKind,\n  ...props\n}: ToastProps & { themeBorderKind?: BorderRadiusType }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <ToastProvider>\n        <MessageForm />\n        <Toast position={props.position} />\n      </ToastProvider>\n    </ThemeProvider>\n  );\n};\n"}}},name:"Toast. Custom component."},ToastProgressComponentStory=props=>(0,jsx_runtime.jsx)(ToastProgressComponentTemplate,{...props});ToastProgressComponentStory.displayName="ToastProgressComponentStory";const ToastProgressComponent={render:ToastProgressComponentStory,parameters:{docs:{source:{code:"import { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport {\n  Button,\n  NotificationItemButtonPanel,\n  NotificationItemContent,\n  NotificationItemTitle,\n  StyledNotificationItem,\n  TextButton,\n  TextInput,\n  Toast,\n  ToastItemWithProgress,\n  ToastProvider,\n  useToast,\n} from '@admiral-ds/react-ui';\nimport type { ID, ToastItemProps, ToastProps, NotificationItemStatus, BorderRadiusType } from '@admiral-ds/react-ui';\n\nimport { uid } from '#src/components/common/uid';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  > * {\n    flex: 1 1 auto;\n  }\n`;\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst toastStatuses: NotificationItemStatus[] = ['info', 'error', 'success', 'warning'];\n\nconst handleTextButtonClick = () => {\n  console.log('TextButton click');\n};\n\nconst MessageForm = () => {\n  const [toastIdStack, setToastIdStack] = useState<Array<ToastItemProps>>([]);\n  const [titleValue, setTitleValue] = useState('Toast title');\n  const [contentValue, setContentValue] = useState('Toast content');\n  const [textButton1Value, setTextButton1Value] = useState('TextButton1');\n  const [textButton2Value, setTextButton2Value] = useState('TextButton2');\n  const [toastStatus, setToastStatus] = useState(0);\n\n  const { addToastItem, removeToastItem, autoDeleteTime } = useToast();\n\n  const onClickHandlerAdd = () => {\n    const id = uid();\n    const renderFunction = (id: ID) => {\n      const handleCloseToast = () => {\n        removeToastItem({ id, renderToast: renderFunction });\n        console.log('Toast is closed');\n        setToastIdStack((prevToastIdStack) => prevToastIdStack.filter((toast) => toast.renderToast !== renderFunction));\n      };\n\n      return (\n        <ToastItemWithProgress\n          status={toastStatuses[toastStatus]}\n          autoDeleteTime={autoDeleteTime}\n          onRemoveNotification={handleCloseToast}\n        >\n          <StyledNotificationItem\n            status={toastStatuses[toastStatus]}\n            isClosable={true}\n            displayStatusIcon={true}\n            onClose={handleCloseToast}\n          >\n            <NotificationItemTitle>{titleValue}</NotificationItemTitle>\n            <NotificationItemContent>{contentValue}</NotificationItemContent>\n            <NotificationItemButtonPanel>\n              <TextButton dimension=\"s\" text={textButton1Value} onClick={handleTextButtonClick} />\n              <TextButton dimension=\"s\" text={textButton2Value} onClick={handleTextButtonClick} />\n            </NotificationItemButtonPanel>\n          </StyledNotificationItem>\n        </ToastItemWithProgress>\n      );\n    };\n    addToastItem({ id, renderToast: renderFunction });\n    setToastIdStack((prev) => [...prev, { id, renderToast: renderFunction }]);\n    setToastStatus((prevStatus) => (prevStatus + 1) % 4);\n  };\n  const onClickHandlerRemove = () => {\n    const newToastIdStack = [...toastIdStack];\n    const removeToast = newToastIdStack.shift();\n    setToastIdStack(newToastIdStack);\n    if (removeToast) {\n      removeToastItem(removeToast);\n    }\n  };\n\n  return (\n    <div style={{ width: '550px' }}>\n      <TextInput value={titleValue} onChange={(e) => setTitleValue(e.target.value)} />\n      <Separator />\n      <TextInput value={contentValue} onChange={(e) => setContentValue(e.target.value)} />\n      <Separator />\n      <Wrapper>\n        <TextInput value={textButton1Value} onChange={(e) => setTextButton1Value(e.target.value)} />\n        <TextInput value={textButton2Value} onChange={(e) => setTextButton2Value(e.target.value)} />\n      </Wrapper>\n      <Separator />\n      <Wrapper>\n        <Button onClick={onClickHandlerAdd}>Добавить сообщение</Button>\n        <Button disabled={toastIdStack.length === 0} onClick={onClickHandlerRemove}>\n          Удалить первое сообщение\n        </Button>\n      </Wrapper>\n    </div>\n  );\n};\n\nexport const ToastProgressComponentTemplate = ({\n  themeBorderKind,\n  ...props\n}: ToastProps & { themeBorderKind?: BorderRadiusType }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <ToastProvider autoDeleteTime={5000}>\n        <MessageForm />\n        <Toast position={props.position} />\n      </ToastProvider>\n    </ThemeProvider>\n  );\n};\n"}}},name:"Toast. Custom component with Progress."},ToastBackwardCompatibilityStory=props=>(0,jsx_runtime.jsx)(ToastBackwardCompatibilityTemplate,{...props});ToastBackwardCompatibilityStory.displayName="ToastBackwardCompatibilityStory";const ToastBackwardCompatibility={render:ToastBackwardCompatibilityStory,parameters:{docs:{source:{code:"import { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { Button, Toast, ToastProvider, useToast } from '@admiral-ds/react-ui';\nimport type { IdentifyToast, ToastProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst random = (min: number, max: number) => min + Number(Math.round(Math.random() * (max - min)));\n\nconst items: IdentifyToast[] = [\n  {\n    status: 'error',\n    children: `Запрос завершился ошибкой`,\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'warning',\n    children: 'Слишком много попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'info',\n    children: 'Осталось 7 попыток',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n  {\n    status: 'success',\n    children: 'Запрос выполнен успешно',\n    title: 'Заголовок',\n    isClosable: true,\n    linkText: 'Link',\n    displayStatusIcon: true,\n  },\n];\n\nconst NotificationEmitter = () => {\n  const [toastIdStack, setToastIdStack] = useState<Array<string>>([]);\n\n  const { addToast, removeById } = useToast();\n\n  const onClickHandlerAdd = () => {\n    const customItem = random(0, 3);\n    const toast = items[customItem];\n    const toastId = addToast(toast);\n    setToastIdStack((prev) => [...prev, toastId]);\n  };\n  const onClickHandlerRemove = () => {\n    const newToastIdStack = [...toastIdStack];\n    const toastId = newToastIdStack.shift();\n    setToastIdStack(newToastIdStack);\n    if (toastId) {\n      removeById(toastId);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n      <Button onClick={onClickHandlerAdd}>Добавить сообщение</Button>\n      <div style={{ width: 20 }} />\n      <Button disabled={toastIdStack.length === 0} onClick={onClickHandlerRemove}>\n        Удалить первое сообщение\n      </Button>\n    </div>\n  );\n};\n\nexport const ToastBackwardCompatibilityTemplate = ({\n  themeBorderKind,\n  ...props\n}: ToastProps & { themeBorderKind?: BorderRadiusType }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <ToastProvider autoDeleteTime={props.autoDeleteTime}>\n        <NotificationEmitter />\n        <Toast position={props.position} />\n      </ToastProvider>\n    </ThemeProvider>\n  );\n};\n"}}},name:"Toast. Backward compatibility."};ToastNotification.parameters={...ToastNotification.parameters,docs:{...ToastNotification.parameters?.docs,source:{originalSource:"{\n  render: ToastNotificationStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ToastNotificationRaw\n      }\n    }\n  },\n  name: 'Toast. Настройка места всплытия через стили.'\n}",...ToastNotification.parameters?.docs?.source}}},ToastNotificationBase.parameters={...ToastNotificationBase.parameters,docs:{...ToastNotificationBase.parameters?.docs,source:{originalSource:"{\n  render: ToastNotificationBaseStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ToastNotificationBaseRaw\n      }\n    }\n  },\n  name: 'Toast. Базовый пример.'\n}",...ToastNotificationBase.parameters?.docs?.source}}},ToastLineNotification.parameters={...ToastLineNotification.parameters,docs:{...ToastLineNotification.parameters?.docs,source:{originalSource:"{\n  render: ToastLineNotificationStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ToastLineNotificationRaw\n      }\n    }\n  },\n  name: 'Line Notification.'\n}",...ToastLineNotification.parameters?.docs?.source}}},ToastCustomComponent.parameters={...ToastCustomComponent.parameters,docs:{...ToastCustomComponent.parameters?.docs,source:{originalSource:"{\n  render: ToastCustomComponentStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ToastCustomComponentRaw\n      }\n    }\n  },\n  name: 'Toast. Custom component.'\n}",...ToastCustomComponent.parameters?.docs?.source}}},ToastProgressComponent.parameters={...ToastProgressComponent.parameters,docs:{...ToastProgressComponent.parameters?.docs,source:{originalSource:"{\n  render: ToastProgressComponentStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ToastProgressComponentRaw\n      }\n    }\n  },\n  name: 'Toast. Custom component with Progress.'\n}",...ToastProgressComponent.parameters?.docs?.source}}},ToastBackwardCompatibility.parameters={...ToastBackwardCompatibility.parameters,docs:{...ToastBackwardCompatibility.parameters?.docs,source:{originalSource:"{\n  render: ToastBackwardCompatibilityStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ToastBackwardCompatibilityRaw\n      }\n    }\n  },\n  name: 'Toast. Backward compatibility.'\n}",...ToastBackwardCompatibility.parameters?.docs?.source}}};const __namedExportsOrder=["ToastNotification","ToastNotificationBase","ToastLineNotification","ToastCustomComponent","ToastProgressComponent","ToastBackwardCompatibility"]},"./node_modules/@admiral-ds/icons/build/service/EyeCloseOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgEyeCloseOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgEyeCloseOutline=function SvgEyeCloseOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M21.7 10.046c.3.198.381.601.182.9-.5.754-1.141 1.573-1.913 2.359l1.835 1.835a.65.65 0 1 1-.919.92l-1.867-1.868c-.935.8-2.015 1.516-3.226 2.023l1.034 2.49a.65.65 0 1 1-1.2.498l-1.064-2.56a9.6 9.6 0 0 1-2.562.349 9.8 9.8 0 0 1-2.566-.338l-1.06 2.55a.65.65 0 0 1-1.2-.5l1.027-2.47c-1.244-.517-2.316-1.25-3.221-2.04L3.115 16.06a.65.65 0 0 1-.92-.919l1.844-1.843a19 19 0 0 1-1.903-2.338.65.65 0 1 1 1.066-.744c1.463 2.097 4.34 5.477 8.798 5.477 4.034 0 7.15-2.979 8.8-5.465a.65.65 0 0 1 .9-.181"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/EyeOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgEyeOutline});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgEyeOutline=function SvgEyeOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M11.306 9.08c.376-.088.694.233.694.62v1a1.3 1.3 0 0 0 1.3 1.3h1c.387 0 .708.318.62.694a3.001 3.001 0 1 1-3.614-3.613"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12 5c-4.88 0-8.134 3.655-9.563 5.682a2.27 2.27 0 0 0 0 2.636C3.867 15.345 7.119 19 12 19c4.88 0 8.134-3.655 9.563-5.682a2.27 2.27 0 0 0 0-2.636C20.133 8.656 16.881 5 12 5M5.709 8.927a15 15 0 0 0-2.21 2.505.97.97 0 0 0 0 1.136c.522.74 1.263 1.654 2.21 2.505A7 7 0 0 1 5 12c0-1.102.255-2.145.709-3.073M12 17.7a5.7 5.7 0 1 1 0-11.4 5.7 5.7 0 0 1 0 11.4m6.291-8.773a15 15 0 0 1 2.21 2.505.97.97 0 0 1 0 1.136 15 15 0 0 1-2.21 2.505A7 7 0 0 0 19 12a7 7 0 0 0-.709-3.073",clipRule:"evenodd"})))};__webpack_require__.p},"./.storybook/createBorderRadiusSwapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>createBorderRadiusSwapper});var _admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/themes/light/index.ts");function createBorderRadiusSwapper(borderRadiusKind){return function swapBorder(theme){return theme?(theme.shape.borderRadiusKind=borderRadiusKind||theme.shape.borderRadiusKind,theme):(_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind=borderRadiusKind||_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind,_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d)}}},"./src/components/TextButton/commonMixin.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ef:()=>ButtonContainer,Tu:()=>IconContainer,vy:()=>skeletonMixin});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const IconContainer=styled_components__WEBPACK_IMPORTED_MODULE_0__.Ay.div.withConfig({displayName:"commonMixin__IconContainer",componentId:"sc-4cq1gw-0"})([""]),ButtonContainer=styled_components__WEBPACK_IMPORTED_MODULE_0__.Ay.div.withConfig({displayName:"commonMixin__ButtonContainer",componentId:"sc-4cq1gw-1"})([""]),loadingKeyframes=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.i7)(["to{background-position:315px 0,0 0,0 190px,50px 195px;}"]),skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.AH)(["cursor:progress;background-image:linear-gradient(0.25turn,transparent,#fff,transparent),linear-gradient(#eee,#eee),radial-gradient(38px circle at 19px 19px,#eee 50%,transparent 51%),linear-gradient(#eee,#eee);background-repeat:no-repeat;background-size:315px 250px,315px 180px,100px 100px,225px 30px;background-position:-315px 0,0 0,0 190px,50px 195px;animation:"," 1.5s infinite;"],loadingKeyframes)},"./src/components/TextButton/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>TextButton});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Spinner=__webpack_require__("./src/components/Spinner/index.tsx"),commonMixin=__webpack_require__("./src/components/TextButton/commonMixin.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts");const defaultAppearanceMixin=(0,styled_components_browser_esm.AH)(["","{",";border-radius:",";svg{visibility:",";}}border-radius:",";&:focus-visible{outline-offset:2px;outline:"," solid 2px;}&:hover{cursor:pointer;color:",";","{svg{path{fill:",";}}}}&:active{color:",";","{svg{path{fill:",";}}}}&:disabled{cursor:not-allowed;color:",";","{svg{path{fill:",";}}}}"],commonMixin.Tu,(({$skeleton})=>$skeleton&&commonMixin.vy),(({$skeleton})=>$skeleton?"50%":""),(p=>p.$skeleton||p.$loading?"hidden":"visible"),(p=>p.$skeleton?0:(0,borderRadius.VM)(p.theme.shape)),(p=>p.theme.color["Primary/Primary 60 Main"]),(({theme})=>theme.color["Primary/Primary 70"]),commonMixin.Tu,(({theme})=>theme.color["Primary/Primary 70"]),(({theme})=>theme.color["Primary/Primary 80"]),commonMixin.Tu,(({theme})=>theme.color["Primary/Primary 80"]),(({theme})=>theme.color["Neutral/Neutral 30"]),commonMixin.Tu,(({theme})=>theme.color["Neutral/Neutral 30"])),primaryAppearanceMixin=(0,styled_components_browser_esm.AH)(["color:",";","{svg{path{fill:",";}}}"],(({theme})=>theme.color["Primary/Primary 60 Main"]),commonMixin.Tu,(({theme})=>theme.color["Primary/Primary 60 Main"])),secondaryAppearanceMixin=(0,styled_components_browser_esm.AH)(["color:",";","{svg{path{fill:",";}}}"],(({theme})=>theme.color["Neutral/Neutral 90"]),commonMixin.Tu,(({theme})=>theme.color["Neutral/Neutral 50"])),appearanceMixin=(0,styled_components_browser_esm.AH)(["&[data-appearance='primary']{","}&[data-appearance='secondary']{","}",""],primaryAppearanceMixin,secondaryAppearanceMixin,defaultAppearanceMixin);var typography=__webpack_require__("./src/components/Typography/typography.ts");const dimensionMixin=(0,styled_components_browser_esm.AH)(["&[data-dimension='m']{","{width:24px;height:24px;}",";}&[data-dimension='s']{","{width:20px;height:20px;}",";}"],commonMixin.Tu,typography.Il["Button/Button 1"],commonMixin.Tu,typography.Il["Button/Button 2"]);var animation=__webpack_require__("./src/components/skeleton/animation.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const StyledSpinner=(0,styled_components_browser_esm.Ay)(Spinner.y).withConfig({displayName:"TextButton__StyledSpinner",componentId:"sc-1tmi7dj-0"})(["position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);"]),StyledButton=styled_components_browser_esm.Ay.button.withConfig({displayName:"TextButton__StyledButton",componentId:"sc-1tmi7dj-1"})(["position:relative;box-sizing:border-box;display:inline-flex;flex-direction:row;gap:8px;align-items:center;vertical-align:middle;appearance:none;border:none;background:transparent;padding:0;white-space:nowrap;",";","{visibility:",";}","{visibility:",";}",";",";"],(p=>p.$skeleton&&animation.h),commonMixin.Ef,(p=>p.$skeleton||p.$loading?"hidden":"visible"),commonMixin.Tu,(p=>p.$skeleton||p.$loading?"hidden":"visible"),appearanceMixin,dimensionMixin),TextButton=react.forwardRef((({appearance="primary",dimension="m",icon,iconStart,iconEnd,type="button",text,displayRight=!1,loading=!1,skeleton=!1,...props},ref)=>{const disabled=props.disabled||loading||skeleton;return(0,jsx_runtime.jsxs)(StyledButton,{...props,"data-dimension":dimension,"data-appearance":appearance,ref,$appearance:appearance,$dimension:dimension,type,disabled,$loading:loading,$skeleton:skeleton,children:[loading&&(0,jsx_runtime.jsx)(StyledSpinner,{dimension:"s"===dimension?"ms":"m"}),iconStart?(0,jsx_runtime.jsx)(commonMixin.Tu,{children:iconStart}):icon&&!displayRight?(0,jsx_runtime.jsx)(commonMixin.Tu,{children:icon}):null,(0,jsx_runtime.jsx)(commonMixin.Ef,{children:(0,jsx_runtime.jsx)("span",{children:text})}),iconEnd?(0,jsx_runtime.jsx)(commonMixin.Tu,{children:iconEnd}):icon&&displayRight?(0,jsx_runtime.jsx)(commonMixin.Tu,{children:icon}):null]})}));TextButton.displayName="TextButton";try{TextButton.displayName="TextButton",TextButton.__docgenInfo={description:"",displayName:"TextButton",props:{appearance:{defaultValue:{value:"primary"},description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},dimension:{defaultValue:{value:"m"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},text:{defaultValue:null,description:"Текст кнопки",name:"text",required:!1,type:{name:"string"}},displayRight:{defaultValue:{value:"false"},description:"@deprecated Используйте iconStart или iconEnd\nПозиционирование иконки. По умолчанию - слева",name:"displayRight",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:{value:"false"},description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TextButton/index.tsx#TextButton"]={docgenInfo:TextButton.__docgenInfo,name:"TextButton",path:"src/components/TextButton/index.tsx#TextButton"})}catch(__react_docgen_typescript_loader_error){}}}]);