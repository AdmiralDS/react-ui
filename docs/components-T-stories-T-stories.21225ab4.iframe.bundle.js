"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[5577],{"./src/components/T/stories/T.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FontsDemo:()=>FontsDemo,TextStatus:()=>TextStatus,__namedExportsOrder:()=>__namedExportsOrder,default:()=>T_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),T=__webpack_require__("./src/components/T/index.tsx"),common=__webpack_require__("./src/components/themes/common/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BlueText=(0,styled_components_browser_esm.ZP)(T.T).withConfig({displayName:"TTextStatustemplate__BlueText",componentId:"sc-ufi3b8-0"})(["color:",";"],(p=>p.theme.color[common.lI])),CustomParagraph=(0,styled_components_browser_esm.ZP)(T.T).withConfig({displayName:"TTextStatustemplate__CustomParagraph",componentId:"sc-ufi3b8-1"})(["color:",";"],(p=>p.theme.color["Neutral/Neutral 70"])),OrangeColor=(0,styled_components_browser_esm.iv)(["color:",";"],(p=>p.theme.color["Warning/Warning 50 Main"])),TTextStatusTemplate=({...props})=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(BlueText,{font:"Body/Body 1 Short",forwardedAs:"a",href:"https://",children:'Это ссылка (forwardedAs="a") со стилем Body/Body 1 Short, цветом шрифта Primary.'}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"h3",cssMixin:OrangeColor,children:'Это заголовок третьего уровня (as="h3") и стилем Body/Body 1 Long.'}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"h3",color:"Purple/Purple 60 Main",children:'Это заголовок третьего уровня (as="h3") и стилем Body/Body 2 Long цвета Purple/Purple 60 Main.'}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"h2",skeleton:props.skeleton,children:'Это заголовок второго уровня (as="h2"). Для активации состояния skeleton необходимо сменить состяние.'}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"h2",skeleton:props.skeleton,children:'Для отображения в состоянии skeleton должен быть указан текст (as="h2").'}),(0,jsx_runtime.jsx)(CustomParagraph,{font:"Header/H5",forwardedAs:"p",children:'Это параграф (forwardedAs="p") со стилем Header/H5 и цветом шрифта Tertiary.'}),(0,jsx_runtime.jsx)(T.T,{font:"Header/H3",as:"h3",children:'Выбор конфигурации (as="h3")'})]});try{TTextStatusTemplate.displayName="TTextStatusTemplate",TTextStatusTemplate.__docgenInfo={description:"",displayName:"TTextStatusTemplate",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/T/stories/TTextStatus.template.tsx#TTextStatusTemplate"]={docgenInfo:TTextStatusTemplate.__docgenInfo,name:"TTextStatusTemplate",path:"src/components/T/stories/TTextStatus.template.tsx#TTextStatusTemplate"})}catch(__react_docgen_typescript_loader_error){}var typography=__webpack_require__("./src/components/Typography/typography.ts"),light=__webpack_require__("./src/components/themes/light/index.ts"),TooltipHOC=__webpack_require__("./src/components/TooltipHOC/index.tsx"),CopyOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/documents/CopyOutline.svg");const FONTS=[{name:"Main/XXL",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"42px"},{name:"Высота строки:",value:"52px"}],description:"Большой заголовок для лендингов. Не применяется на мобильных устройствах."},{name:"Main/XL",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"36px"},{name:"Высота строки:",value:"44px"}],description:"Большой заголовок. Используется в редких случаях, когда нужно сделать визуальный акцент. Не применяется на мобильных устройствах."},{name:"Main/L",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"32px"},{name:"Высота строки:",value:"40px"}],description:"Большой базовый заголовок. Используется в случаях, когда много пространства и используются компоненты размера XL"},{name:"Main/M",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"28px"},{name:"Высота строки:",value:"36px"}],description:"Базовый заголовок первого уровня"},{name:"Main/S",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"22px"},{name:"Высота строки:",value:"28px"}],description:"Базовый заголовок второго уровня"},{name:"Main/XS-bold",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"18px"},{name:"Высота строки:",value:"24px"}],description:"Базовый заголовок третьего уровня"},{name:"Main/XS",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"18px"},{name:"Высота строки:",value:"24px"}],description:"Крупный шрифт параграфа, может использоваться как подзаголовок"},{name:"Additional/L-bold",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"24px"}],description:"Акцентированный текст, подзаголовок"},{name:"Additional/L",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"24px"}],description:"Базовый шрифт системы для набора текстов"},{name:"Additional/M",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"20px"}],description:"Базовый шрифт системы для набора текста длинною в 1-2 строки (опционально)"},{name:"Additional/S",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"20px"}],description:"Акцентированный текст, подзаголовок"},{name:"Additional/S-bold",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"20px"}],description:"Базовый шрифт системы для набора текстов"},{name:"Additional/XS",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"16px"}],description:"Базовый шрифт системы для набора текста длинною в 1-2 строки (опционально)"},{name:"Button/M",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"24px"}],description:"Шрифт используется только в кнопках"},{name:"Button/S",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"20px"}],description:"Шрифт используется только в кнопках"},{name:"Caption/XS",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"12px"},{name:"Высота строки:",value:"16px"}],description:"Самый маленький шрифт системы. Применяется в компонентах, сносках, примечаниях, счетчиках и тд."}],NEW_FONTS=[{name:"Header/HL1",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"72px"},{name:"Высота строки:",value:"80px"}],description:"Большой заголовок для лендингов. Не применяется на мобильных устройствах."},{name:"Header/HL2",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"56px"},{name:"Высота строки:",value:"64px"}],description:"Большой заголовок для лендингов. Не применяется на мобильных устройствах."},{name:"Header/HL3",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"48px"},{name:"Высота строки:",value:"56px"}],description:"Большой заголовок для лендингов. Не применяется на мобильных устройствах."},{name:"Header/H1",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"40px"},{name:"Высота строки:",value:"48px"}],description:"Заголовок первого уровня. Используется в случаях, когда много пространства и используются компоненты размера XL."},{name:"Header/H2",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"34px"},{name:"Высота строки:",value:"40px"}],description:"Заголовок второго уровня. Используется в случаях, когда много пространства и используются компоненты размера XL."},{name:"Header/H3",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"28px"},{name:"Высота строки:",value:"36px"}],description:"Заголовок третьего уровня. Как правило, самый большой размер для стандартных интерфейсов размера M и S."},{name:"Header/H4",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"24px"},{name:"Высота строки:",value:"32px"}],description:"Заголовок четвертого уровня. Рекомендуемый максимальный размер заголовка для мобильных устройств."},{name:"Header/H5",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"20px"},{name:"Высота строки:",value:"28px"}],description:"Заголовок пятого уровня."},{name:"Header/H6",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"18px"},{name:"Высота строки:",value:"24px"}],description:"Заголовок шестого уровня."},{name:"Subtitle/Subtitle 1",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"18px"},{name:"Высота строки:",value:"24px"}],description:"Крупный шрифт параграфа, может использоваться как подзаголовок."},{name:"Subtitle/Subtitle 2",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"24px"}],description:"Акцентированный текст, подзаголовок."},{name:"Subtitle/Subtitle 3",style:[{name:"Вес:",value:"550"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"20px"}],description:"Акцентированный текст, подзаголовок."},{name:"Body/Body 1 Long",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"24px"}],description:"Основной шрифт системы первого уровня для набора больших текстов."},{name:"Body/Body 1 Short",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"20px"}],description:"Шрифт системы первого уровня для набора коротких текстов в 1-2 строки (необязательный сценарий)."},{name:"Body/Body 2 Long",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"20px"}],description:"Основной шрифт системы второго уровня для набора больших текстов."},{name:"Body/Body 2 Short",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"16px"}],description:"Шрифт системы второго уровня для набора коротких текстов в 1-2 строки (необязательный сценарий)."},{name:"Button/Button 1",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"16px"},{name:"Высота строки:",value:"24px"}],description:"Шрифт используется только в кнопках."},{name:"Button/Button 2",style:[{name:"Вес:",value:"500"},{name:"Размер:",value:"14px"},{name:"Высота строки:",value:"20px"}],description:"Шрифт используется только в кнопках."},{name:"Caption/Caption 1",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"12px"},{name:"Высота строки:",value:"16px"}],description:"Самый маленький шрифт системы. Применяется в компонентах, сносках, примечаниях, счетчиках и тд."},{name:"Caption/Caption 2",style:[{name:"Вес:",value:"400"},{name:"Размер:",value:"10px"},{name:"Высота строки:",value:"12px"}],description:"Самый маленький шрифт системы. Не используется в компонентах системы, не рекомендуется для набора текстов. Использовать только в крайних случаях."}],Separator=styled_components_browser_esm.ZP.div.withConfig({displayName:"TFontsDemotemplate__Separator",componentId:"sc-oa9eyg-0"})(["height:20px;"]),Wrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"TFontsDemotemplate__Wrapper",componentId:"sc-oa9eyg-1"})(["overflow:scroll;"]),Table=styled_components_browser_esm.ZP.table.withConfig({displayName:"TFontsDemotemplate__Table",componentId:"sc-oa9eyg-2"})([""," border-collapse:collapse;border-spacing:0;width:100%;color:",";th,td[data-label]{text-align:left;padding:8px 60px 8px 8px;border-bottom:1px solid ",";}th{"," color:",";}td[data-label]:last-child{padding:8px;}td[data-label='Manual']{min-width:300px;width:300px;}"],typography.c["Body/Body 2 Long"],(({theme})=>theme.color[common.rG]),(({theme})=>theme.color["Neutral/Neutral 70"]),typography.c["Header/H3"],(({theme})=>theme.color["Neutral/Neutral 50"])),FontDesc=styled_components_browser_esm.ZP.table.withConfig({displayName:"TFontsDemotemplate__FontDesc",componentId:"sc-oa9eyg-3"})(["td{padding:0;border-top:none;white-space:nowrap;}td:first-child{color:",";padding-right:16px;}"],(({theme})=>theme.color["Neutral/Neutral 50"])),CopyOutlineWrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"TFontsDemotemplate__CopyOutlineWrapper",componentId:"sc-oa9eyg-4"})(["display:inline-flex;cursor:pointer;"]),CopyIcon=react.forwardRef((({text},ref)=>{const theme=(0,styled_components_browser_esm.Fg)()||light.f;return(0,jsx_runtime.jsx)(CopyOutlineWrapper,{ref,children:(0,jsx_runtime.jsx)(CopyOutline.r,{width:16,height:16,onClick:()=>{const el=document.createElement("textarea");el.value=text,el.setAttribute("readonly",""),el.style.position="absolute",el.style.left="-9999px",document.body.appendChild(el),el.select(),document.execCommand("copy"),document.body.removeChild(el)},fill:theme.color["Neutral/Neutral 90"]})})})),CopyButton=(0,TooltipHOC.u)(CopyIcon),TFontsDemoTemplate=()=>(0,jsx_runtime.jsxs)(Wrapper,{children:[(0,jsx_runtime.jsxs)(Table,{children:[(0,jsx_runtime.jsx)("thead",{children:(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{"data-label":"Style",children:"Стиль"}),(0,jsx_runtime.jsx)("th",{"data-label":"Props",children:"Характеристики"}),(0,jsx_runtime.jsx)("th",{"data-label":"Manual",children:"Применение"})]})}),(0,jsx_runtime.jsx)("tbody",{children:NEW_FONTS.map(((item,index)=>{const text=`\n            import { T, typography } from '@admiral-ds/react-ui';\n            import styled from 'styled-components';\n\n            const Paragraph = styled.p\`\n              \${typography['${item.name}']}\n              color: #2B313B;\n            \`\n\n            const Example = () => {\n              return(\n                <>\n                  <T font='${item.name}'>Использование StyledComponent</T>\n                  <Paragraph>Использование ThemedCssFunction</Paragraph>\n                </>\n              );\n             }\n            `;return(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsxs)("td",{"data-label":"Style",children:[(0,jsx_runtime.jsx)(T.T,{font:item.name,as:"div",children:item.name}),(0,jsx_runtime.jsx)(CopyButton,{text,renderContent:()=>"Копировать пример использования"})]}),(0,jsx_runtime.jsx)("td",{"data-label":"Props",children:(0,jsx_runtime.jsx)(FontDesc,{children:(0,jsx_runtime.jsxs)("tbody",{children:[(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("td",{children:"Шрифт:"}),(0,jsx_runtime.jsx)("td",{children:typography.l.fontFamily})]}),item.style.map(((st,index)=>(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("td",{children:st.name}),(0,jsx_runtime.jsx)("td",{children:st.value})]},index)))]})})}),(0,jsx_runtime.jsx)("td",{"data-label":"Manual",children:item.description})]},index)}))})]}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(T.T,{font:"Header/H1",as:"p",children:"Old version"}),(0,jsx_runtime.jsxs)(Table,{children:[(0,jsx_runtime.jsx)("thead",{children:(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{"data-label":"Style",children:"Стиль"}),(0,jsx_runtime.jsx)("th",{"data-label":"Props",children:"Характеристики"}),(0,jsx_runtime.jsx)("th",{"data-label":"Manual",children:"Применение"})]})}),(0,jsx_runtime.jsx)("tbody",{children:FONTS.map(((item,index)=>{const text=`\n            import { T, typography } from '@admiral-ds/react-ui';\n            import styled from 'styled-components';\n\n            const Paragraph = styled.p\`\n              \${typography['${item.name}']}\n              color: #2B313B;\n            \`\n\n            const Example = () => {\n              return(\n                <>\n                  <T font='${item.name}'>Использование StyledComponent</T>\n                  <Paragraph>Использование ThemedCssFunction</Paragraph>\n                </>\n              );\n             }\n            `;return(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsxs)("td",{"data-label":"Style",children:[(0,jsx_runtime.jsx)(T.T,{font:item.name,as:"div",children:item.name}),(0,jsx_runtime.jsx)(CopyButton,{text,renderContent:()=>"Копировать пример использования"})]}),(0,jsx_runtime.jsx)("td",{"data-label":"Props",children:(0,jsx_runtime.jsx)(FontDesc,{children:(0,jsx_runtime.jsxs)("tbody",{children:[(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("td",{children:"Шрифт:"}),(0,jsx_runtime.jsx)("td",{children:typography.l.fontFamily})]}),item.style.map(((st,index)=>(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("td",{children:st.name}),(0,jsx_runtime.jsx)("td",{children:st.value})]},index)))]})})}),(0,jsx_runtime.jsx)("td",{"data-label":"Manual",children:item.description})]},index)}))})]})]});TFontsDemoTemplate.displayName="TFontsDemoTemplate";const Desc=styled_components_browser_esm.ZP.div.withConfig({displayName:"Tstories__Desc",componentId:"sc-l47yzo-0"})(["font-family:'VTB Group UI',serif;font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Text — компонент для работы с Typography. Компонент отображает текст"," ",(0,jsx_runtime.jsx)("a",{target:"_blank",href:"https://styled-components.com/docs/api#as-polymorphic-prop",rel:"noopener noreferrer",children:"в соответствии с заданными HTML-тегом"})," ","и стилем шрифта.",(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("strong",{children:"!!!ВАЖНО:"}),' при использовании компонента T без стилизации необходимо использовать prop "as". Если необходимо кастомизировать компонент (с помощью styled(T)),'," ",(0,jsx_runtime.jsx)("a",{target:"_blank",href:"https://styled-components.com/docs/api#forwardedas-prop",rel:"noopener noreferrer",children:"следует использовать prop forwardedAs"}),"."]});Description.displayName="Description";const T_stories={title:"Admiral-2.1/T",decorators:void 0,component:T.T,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=9%3A24"}},argTypes:{skeleton:{control:{type:"boolean"}}}},TextStatusStory=props=>(0,jsx_runtime.jsx)(TTextStatusTemplate,{...props});TextStatusStory.displayName="TextStatusStory";const TextStatus={render:TextStatusStory,parameters:{docs:{source:{code:'import styled, { css } from \'styled-components\';\n\nimport { MainPrimaryColorName, T } from \'@admiral-ds/react-ui\';\nimport type { TProps } from \'@admiral-ds/react-ui\';\n\nconst BlueText = styled(T)`\n  color: ${(p) => p.theme.color[MainPrimaryColorName]};\n`;\n\nconst CustomParagraph = styled(T)`\n  color: ${(p) => p.theme.color[\'Neutral/Neutral 70\']};\n`;\n\nconst OrangeColor = css`\n  color: ${(p) => p.theme.color[\'Warning/Warning 50 Main\']};\n`;\n\nexport const TTextStatusTemplate = ({ ...props }: TProps) => {\n  return (\n    <>\n      <BlueText font={\'Body/Body 1 Short\'} forwardedAs="a" href={\'https://\'}>\n        Это ссылка (forwardedAs="a") со стилем Body/Body 1 Short, цветом шрифта Primary.\n      </BlueText>\n      <br />\n      <T font="Body/Body 1 Long" as="h3" cssMixin={OrangeColor}>\n        Это заголовок третьего уровня (as="h3") и стилем Body/Body 1 Long.\n      </T>\n      <T font="Body/Body 2 Long" as="h3" color="Purple/Purple 60 Main">\n        Это заголовок третьего уровня (as="h3") и стилем Body/Body 2 Long цвета Purple/Purple 60 Main.\n      </T>\n      <T font="Body/Body 2 Long" as="h2" skeleton={props.skeleton}>\n        Это заголовок второго уровня (as="h2"). Для активации состояния skeleton необходимо сменить состяние.\n      </T>\n      <T font="Body/Body 2 Long" as="h2" skeleton={props.skeleton}>\n        Для отображения в состоянии skeleton должен быть указан текст (as="h2").\n      </T>\n      <CustomParagraph font="Header/H5" forwardedAs="p">\n        Это параграф (forwardedAs="p") со стилем Header/H5 и цветом шрифта Tertiary.\n      </CustomParagraph>\n      <T font="Header/H3" as="h3">\n        Выбор конфигурации (as="h3")\n      </T>\n    </>\n  );\n};\n'},description:{story:'Text — компонент для работы с Typography. Компонент отображает текст в соответствии с заданными HTML-тегом \n        (https://styled-components.com/docs/api#as-polymorphic-prop) и стилем шрифта. \n\nВажно: при использовании компонента \n        T без стилизации необходимо использовать prop "as". Если необходимо кастомизировать компонент (с помощью styled(T)), \n        следует использовать prop forwardedAs.'}}},name:"Варианты использования"},FontsDemoStory=()=>(0,jsx_runtime.jsx)(TFontsDemoTemplate,{});FontsDemoStory.displayName="FontsDemoStory";const FontsDemo={render:FontsDemoStory,name:"Список стилей",parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled, { useTheme } from 'styled-components';\n\nimport { DefaultFontColorName, LIGHT_THEME, T, TooltipHoc, typography, TYPOGRAPHY } from '@admiral-ds/react-ui';\nimport { ReactComponent as CopyOutline } from '@admiral-ds/icons/build/documents/CopyOutline.svg';\n\nimport { FONTS, NEW_FONTS } from '#src/components/T/stories/storyDescriptions';\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst Wrapper = styled.div`\n  overflow: scroll;\n`;\n\nconst Table = styled.table`\n  ${typography['Body/Body 2 Long']}\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n  color: ${({ theme }) => theme.color[DefaultFontColorName]};\n\n  th,\n  td[data-label] {\n    text-align: left;\n    padding: 8px 60px 8px 8px;\n    border-bottom: 1px solid ${({ theme }) => theme.color['Neutral/Neutral 70']};\n  }\n  th {\n    ${typography['Header/H3']}\n    color: ${({ theme }) => theme.color['Neutral/Neutral 50']};\n  }\n  td[data-label]:last-child {\n    padding: 8px;\n  }\n\n  td[data-label='Manual'] {\n    min-width: 300px;\n    width: 300px;\n  }\n`;\n\nconst FontDesc = styled.table`\n  td {\n    padding: 0;\n    border-top: none;\n    white-space: nowrap;\n  }\n  td:first-child {\n    color: ${({ theme }) => theme.color['Neutral/Neutral 50']};\n    padding-right: 16px;\n  }\n`;\n\nconst CopyOutlineWrapper = styled.div`\n  display: inline-flex;\n  cursor: pointer;\n`;\n\nconst CopyIcon = React.forwardRef<HTMLDivElement, { text: string }>(({ text }, ref) => {\n  const theme = useTheme() || LIGHT_THEME;\n  const copyToClipboard = () => {\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n  return (\n    <CopyOutlineWrapper ref={ref}>\n      <CopyOutline width={16} height={16} onClick={copyToClipboard} fill={theme.color['Neutral/Neutral 90']} />\n    </CopyOutlineWrapper>\n  );\n});\n\nconst CopyButton = TooltipHoc(CopyIcon);\n\nexport const TFontsDemoTemplate = () => {\n  return (\n    <Wrapper>\n      <Table>\n        <thead>\n          <tr>\n            <th data-label=\"Style\">Стиль</th>\n            <th data-label=\"Props\">Характеристики</th>\n            <th data-label=\"Manual\">Применение</th>\n          </tr>\n        </thead>\n        <tbody>\n          {NEW_FONTS.map((item: any, index: number) => {\n            const text = `\n            import { T, typography } from '@admiral-ds/react-ui';\n            import styled from 'styled-components';\n\n            const Paragraph = styled.p\\`\n              \\${typography['${item.name}']}\n              color: #2B313B;\n            \\`\n\n            const Example = () => {\n              return(\n                <>\n                  <T font='${item.name}'>Использование StyledComponent</T>\n                  <Paragraph>Использование ThemedCssFunction</Paragraph>\n                </>\n              );\n             }\n            `;\n            return (\n              <tr key={index}>\n                <td data-label=\"Style\">\n                  <T font={item.name} as=\"div\">\n                    {item.name}\n                  </T>\n                  <CopyButton text={text} renderContent={() => 'Копировать пример использования'} />\n                </td>\n                <td data-label=\"Props\">\n                  <FontDesc>\n                    <tbody>\n                      <tr>\n                        <td>Шрифт:</td>\n                        <td>{TYPOGRAPHY.fontFamily}</td>\n                      </tr>\n                      {item.style.map((st: any, index: number) => (\n                        <tr key={index}>\n                          <td>{st.name}</td>\n                          <td>{st.value}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </FontDesc>\n                </td>\n                <td data-label=\"Manual\">{item.description}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <Separator />\n      <T font=\"Header/H1\" as=\"p\">\n        Old version\n      </T>\n      <Table>\n        <thead>\n          <tr>\n            <th data-label=\"Style\">Стиль</th>\n            <th data-label=\"Props\">Характеристики</th>\n            <th data-label=\"Manual\">Применение</th>\n          </tr>\n        </thead>\n        <tbody>\n          {FONTS.map((item: any, index: number) => {\n            const text = `\n            import { T, typography } from '@admiral-ds/react-ui';\n            import styled from 'styled-components';\n\n            const Paragraph = styled.p\\`\n              \\${typography['${item.name}']}\n              color: #2B313B;\n            \\`\n\n            const Example = () => {\n              return(\n                <>\n                  <T font='${item.name}'>Использование StyledComponent</T>\n                  <Paragraph>Использование ThemedCssFunction</Paragraph>\n                </>\n              );\n             }\n            `;\n            return (\n              <tr key={index}>\n                <td data-label=\"Style\">\n                  <T font={item.name} as=\"div\">\n                    {item.name}\n                  </T>\n                  <CopyButton text={text} renderContent={() => 'Копировать пример использования'} />\n                </td>\n                <td data-label=\"Props\">\n                  <FontDesc>\n                    <tbody>\n                      <tr>\n                        <td>Шрифт:</td>\n                        <td>{TYPOGRAPHY.fontFamily}</td>\n                      </tr>\n                      {item.style.map((st: any, index: number) => (\n                        <tr key={index}>\n                          <td>{st.name}</td>\n                          <td>{st.value}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </FontDesc>\n                </td>\n                <td data-label=\"Manual\">{item.description}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Wrapper>\n  );\n};\n"},description:{story:"Ниже представлены таблицы стилей типографики, старая и обновленная версия, на которую постепенно будет произведен перевод библиотеки.\n        Каждый из этих стилей можно передавать в компонент T в виде параметра font и в качестве результата получать StyledComponent с\n        необходимыми стилями. \n\nТакже возможен случай, когда пользователю нужен css миксин (ThemedCssFunction) с определенными\n        стилями типографики для последующего использования этого миксина в своих styled-компонентах.\n        В таком случае можно воспользоваться объектом typography, экспортируемым из нашей библиотеки. Ключами\n        этого объекта служат названия стилей типографики, а значениями css миксины.\n\nРядом с названием стиля типографики\n        находится иконка копирования, по нажатию на которую можно будет скопировать\n        пример кода для каждого стиля в отдельности."}}}};TextStatus.parameters={...TextStatus.parameters,docs:{...TextStatus.parameters?.docs,source:{originalSource:"{\n  render: TextStatusStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TTextStatusRaw\n      },\n      description: {\n        story: `Text — компонент для работы с Typography. Компонент отображает текст в соответствии с заданными HTML-тегом \n        (https://styled-components.com/docs/api#as-polymorphic-prop) и стилем шрифта. \\n\\nВажно: при использовании компонента \n        T без стилизации необходимо использовать prop \"as\". Если необходимо кастомизировать компонент (с помощью styled(T)), \n        следует использовать prop forwardedAs.`\n      }\n    }\n  },\n  name: 'Варианты использования'\n}",...TextStatus.parameters?.docs?.source}}},FontsDemo.parameters={...FontsDemo.parameters,docs:{...FontsDemo.parameters?.docs,source:{originalSource:"{\n  render: FontsDemoStory,\n  name: 'Список стилей',\n  parameters: {\n    docs: {\n      source: {\n        code: TFontsDemoRaw\n      },\n      description: {\n        story: `Ниже представлены таблицы стилей типографики, старая и обновленная версия, на которую постепенно будет произведен перевод библиотеки.\n        Каждый из этих стилей можно передавать в компонент T в виде параметра font и в качестве результата получать StyledComponent с\n        необходимыми стилями. \\n\\nТакже возможен случай, когда пользователю нужен css миксин (ThemedCssFunction) с определенными\n        стилями типографики для последующего использования этого миксина в своих styled-компонентах.\n        В таком случае можно воспользоваться объектом typography, экспортируемым из нашей библиотеки. Ключами\n        этого объекта служат названия стилей типографики, а значениями css миксины.\\n\\nРядом с названием стиля типографики\n        находится иконка копирования, по нажатию на которую можно будет скопировать\n        пример кода для каждого стиля в отдельности.`\n      }\n    }\n  }\n}",...FontsDemo.parameters?.docs?.source}}};const __namedExportsOrder=["TextStatus","FontsDemo"]},"./node_modules/@admiral-ds/icons/build/documents/CopyOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgCopyOutline});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgCopyOutline=function SvgCopyOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M17.65 21.003a3 3 0 0 0 3-3v-10a3 3 0 0 0-2.516-2.96 2.994 2.994 0 0 0-.114-.567.65.65 0 1 0-1.244.38c.015.048.028.097.038.147H9.65a3 3 0 0 0-3 3v9.664a1.691 1.691 0 0 1-.147-.037.65.65 0 0 0-.379 1.243c.222.068.455.11.695.125a3.001 3.001 0 0 0 2.831 2.005zm-8-1.3h8a1.7 1.7 0 0 0 1.7-1.7v-10a1.7 1.7 0 0 0-1.7-1.7h-8a1.7 1.7 0 0 0-1.7 1.7v10a1.7 1.7 0 0 0 1.7 1.7",clipRule:"evenodd"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M5.374 16.5a.65.65 0 0 1-1.243.38 3 3 0 0 1-.13-.876v-.944a.65.65 0 1 1 1.3 0v.944c0 .174.025.34.073.496M5.3 11.946a.65.65 0 1 1-1.3 0v-1.888a.65.65 0 0 1 1.3 0zm0-5.002a.65.65 0 0 1-1.3 0V6c0-.37.056-.728.159-1.066a.65.65 0 1 1 1.243.38A2.35 2.35 0 0 0 5.3 6zm1.664-3.192a.65.65 0 0 1-.38-1.244A3.65 3.65 0 0 1 7.65 2.35h.647a.65.65 0 0 1 0 1.3H7.65c-.24 0-.47.036-.686.102m9.06-1.272a.65.65 0 1 1-.38 1.244 1.703 1.703 0 0 0-.497-.074h-.768a.65.65 0 1 1 0-1.3h.768c.304 0 .599.045.877.13M10.43 3.65a.65.65 0 1 1 0-1.3h1.414a.65.65 0 1 1 0 1.3h-1.415"})))};__webpack_require__.p},"./src/components/T/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>T});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Typography__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Typography/typography.ts"),_src_components_themes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/common/index.ts"),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/skeleton/animation.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.iv)(["",";pointer-events:none;"],_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__.x),Tspan=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.span.withConfig({displayName:"T__Tspan",componentId:"sc-1bd4slr-0"})(["color:",";",";"," ",""],(({$color,theme,$skeleton})=>$skeleton?"transparent":$color?theme.color[$color]?theme.color[$color]:$color:theme.color[_src_components_themes__WEBPACK_IMPORTED_MODULE_4__.rG]),(p=>_src_components_Typography__WEBPACK_IMPORTED_MODULE_5__.c[p.$font]),(p=>p.$cssMixin?p.$cssMixin:""),(p=>p.$skeleton&&skeletonMixin)),T=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((({font,color,cssMixin,skeleton,...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Tspan,{ref,...props,$font:font,$color:color,$cssMixin:cssMixin,$skeleton:skeleton})));T.displayName="T";try{T.displayName="T",T.__docgenInfo={description:"",displayName:"T",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/T/index.tsx#T"]={docgenInfo:T.__docgenInfo,name:"T",path:"src/components/T/index.tsx#T"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/TooltipHOC/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>TooltipHoc});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/refSetter.ts"),_src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Tooltip/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function TooltipHoc(Component){const WrappedComponent=props=>{const{forwardedRef,renderContent,container,withDelay,tooltipRef,tooltipPosition,...wrappedCompProps}=props,emptyContent=!renderContent()&&0!==renderContent(),anchorElementRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),[visible,setVisible]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[node,setNode]=react__WEBPACK_IMPORTED_MODULE_0__.useState(null),[timer,setTimer]=react__WEBPACK_IMPORTED_MODULE_0__.useState();return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{function show(){setTimer(window.setTimeout((()=>setVisible(!0)),withDelay?_src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.g:0))}function hide(){clearTimeout(timer),setVisible(!1)}if(node)return node.addEventListener("mouseenter",show),node.addEventListener("focus",show),node.addEventListener("mouseleave",hide),node.addEventListener("blur",hide),()=>{timer&&clearTimeout(timer),node.removeEventListener("mouseenter",show),node.removeEventListener("focus",show),node.removeEventListener("mouseleave",hide),node.removeEventListener("blur",hide)}}),[node,setTimer,setVisible,timer]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Component,{...wrappedCompProps,ref:(0,_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_3__.O)(forwardedRef,anchorElementRef,setNode)}),visible&&!emptyContent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.u,{targetElement:anchorElementRef.current,renderContent,container,tooltipPosition,ref:tooltipRef})]})};return react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(WrappedComponent,{forwardedRef:ref,...props})))}try{TooltipHoc.displayName="TooltipHoc",TooltipHoc.__docgenInfo={description:"",displayName:"TooltipHoc",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TooltipHOC/index.tsx#TooltipHoc"]={docgenInfo:TooltipHoc.__docgenInfo,name:"TooltipHoc",path:"src/components/TooltipHOC/index.tsx#TooltipHoc"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/skeleton/animation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>skeletonAnimationMixin});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const skeletonAnimation=props=>(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.F4)(["0%{background-color:",";border-color:",";}50%{background-color:",";border-color:",";}100%{background-color:",";border-color:",";}"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"]),skeletonAnimationMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.iv)(["animation:"," 2s ease infinite;"],(props=>skeletonAnimation(props)));try{skeletonAnimation.displayName="skeletonAnimation",skeletonAnimation.__docgenInfo={description:"",displayName:"skeletonAnimation",props:{as:{defaultValue:null,description:'Dynamically adjust the rendered component or HTML tag, e.g.\n```\nconst StyledButton = styled.button``\n\n<StyledButton as="a" href="/foo">\n  I\'m an anchor now\n</StyledButton>\n```',name:"as",required:!1,type:{name:"KnownTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"KnownTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/skeleton/animation.tsx#skeletonAnimation"]={docgenInfo:skeletonAnimation.__docgenInfo,name:"skeletonAnimation",path:"src/components/skeleton/animation.tsx#skeletonAnimation"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/themes/common/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{lI:()=>MainPrimaryColorName,rG:()=>DefaultFontColorName,sl:()=>DefaultBackgroundColorName});const DefaultFontColorName="Neutral/Neutral 90",DefaultBackgroundColorName="Neutral/Neutral 00",MainPrimaryColorName="Primary/Primary 60 Main"}}]);