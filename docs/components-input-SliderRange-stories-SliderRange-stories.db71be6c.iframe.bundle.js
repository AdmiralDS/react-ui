"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[5464],{"./src/components/input/SliderRange/stories/SliderRange.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledExample:()=>ControlledExample,CustomExample:()=>CustomExample,PlaygroundExample:()=>PlaygroundExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SliderRange_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),SliderRange=__webpack_require__("./src/components/input/SliderRange/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const SliderRangePlaygroundTemplate=({defaultValue,onChange,themeBorderKind,...props})=>(0,jsx_runtime.jsx)(styled_components_browser_esm.Mp,{theme:(0,createBorderRadiusSwapper.M)(themeBorderKind),children:(0,jsx_runtime.jsx)(SliderRange.a,{defaultValue:defaultValue||["2","6"],onChange:onChange||(value=>console.log(value)),...props})});SliderRangePlaygroundTemplate.displayName="SliderRangePlaygroundTemplate";try{SliderRangePlaygroundTemplate.displayName="SliderRangePlaygroundTemplate",SliderRangePlaygroundTemplate.__docgenInfo={description:"",displayName:"SliderRangePlaygroundTemplate",props:{value:{defaultValue:null,description:"Значение компонента - массив из двух строк (значений первого и второго инпутов)",name:"value",required:!1,type:{name:"[string, string]"}},defaultValue:{defaultValue:null,description:"Дефолтное значение компонента - массив из двух строк (значений первого и второго инпутов)",name:"defaultValue",required:!1,type:{name:"[string, string]"}},onChange:{defaultValue:null,description:"Колбек на изменение значений",name:"onChange",required:!1,type:{name:"((value: [{ str: string; num: number; }, { str: string; num: number; }]) => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},minValue:{defaultValue:null,description:"Минимальное значение слайдера",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение слайдера",name:"maxValue",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"Шаг слайдера",name:"step",required:!1,type:{name:"number"}},precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:null,description:"разделитель между тысячами",name:"thousand",required:!1,type:{name:"string"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"[string, string]"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"плейсхолдеры инпутов",name:"placeholder",required:!1,type:{name:"[string, string]"}},input1:{defaultValue:null,description:"Опции, которые можно передать в первый инпут",name:"input1",required:!1,type:{name:'Omit<TextInputProps, "onChange" | "readOnly">'}},input2:{defaultValue:null,description:"Опции, которые можно передать во второй инпут",name:"input2",required:!1,type:{name:'Omit<TextInputProps, "onChange" | "readOnly">'}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Режим readOnly компонента",name:"readOnly",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/SliderRange/stories/SliderRangePlayground.template.tsx#SliderRangePlaygroundTemplate"]={docgenInfo:SliderRangePlaygroundTemplate.__docgenInfo,name:"SliderRangePlaygroundTemplate",path:"src/components/input/SliderRange/stories/SliderRangePlayground.template.tsx#SliderRangePlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}const SliderRangeCustomTemplate=()=>(0,jsx_runtime.jsx)(SliderRange.a,{onChange:value=>console.log(value),minValue:10,maxValue:100,prefix:["From","To"],suffix:"$"});SliderRangeCustomTemplate.displayName="SliderRangeCustomTemplate";const SliderRangeControlledTemplate=()=>{const[value,setValue]=react.useState(["2.0","5.0"]);return(0,jsx_runtime.jsx)(SliderRange.a,{value,onChange:value=>{console.log(value),setValue([value[0].str,value[1].str])},prefix:["From","To"],suffix:"$",precision:1})};SliderRangeControlledTemplate.displayName="SliderRangeControlledTemplate";const Separator=styled_components_browser_esm.cp.div.withConfig({displayName:"SliderRangestories__Separator",componentId:"sc-fhpylr-0"})(["height:20px;"]),Desc=styled_components_browser_esm.cp.div.withConfig({displayName:"SliderRangestories__Desc",componentId:"sc-fhpylr-1"})(["font-family:'VTB Group UI',serif;font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Поле ввода с двойным слайдером позволяет выбирать диапазон внутри обозначенного диапазона значений. Так же возможен ввод вручную.",(0,jsx_runtime.jsx)(Separator,{}),"В диапозон может быть добавлено значение: рубли, доллары и т.п. В таком случае значение подставляется только в поле ввода."]});Description.displayName="Description";const SliderRange_stories={title:"Admiral-2.1/Input/SliderRange",decorators:void 0,component:SliderRange.a,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A61377"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A61446"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A61513"}]},argTypes:{disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},thousand:{control:{type:"text"}},suffix:{control:{type:"text"}},themeBorderKind:{options:borderRadius.LX,control:{type:"radio"}},skeleton:{control:{type:"boolean"}},minValue:{control:{type:"number"}},maxValue:{control:{type:"number"}},precision:{control:{type:"number"}},step:{control:{type:"number"}},value:{control:!1},defaultValue:{control:!1},input1:{control:!1},input2:{control:!1},prefix:{control:!1},placeholder:{control:!1}}},PlaygroundStory=props=>(0,jsx_runtime.jsx)(SliderRangePlaygroundTemplate,{...props});PlaygroundStory.displayName="PlaygroundStory";const PlaygroundExample=PlaygroundStory.bind({});PlaygroundExample.parameters={docs:{source:{code:"import * as React from 'react';\nimport { SliderRange } from '@admiral-ds/react-ui';\nimport type { SliderRangeProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const SliderRangePlaygroundTemplate = ({\n  defaultValue,\n  onChange,\n  themeBorderKind,\n  ...props\n}: SliderRangeProps & { themeBorderKind?: BorderRadiusType }) => {\n  const handleChange = (value: any) => console.log(value);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <SliderRange defaultValue={defaultValue || ['2', '6']} onChange={onChange || handleChange} {...props} />\n    </ThemeProvider>\n  );\n};\n"}}},PlaygroundExample.storyName="SliderRange. Playground";const CustomStory=()=>(0,jsx_runtime.jsx)(SliderRangeCustomTemplate,{});CustomStory.displayName="CustomStory";const CustomExample=CustomStory.bind({});CustomExample.parameters={docs:{source:{code:"import * as React from 'react';\nimport { SliderRange } from '@admiral-ds/react-ui';\n\nexport const SliderRangeCustomTemplate = () => {\n  return (\n    <SliderRange\n      onChange={(value: any) => console.log(value)}\n      minValue={10}\n      maxValue={100}\n      prefix={['From', 'To']}\n      suffix=\"$\"\n    />\n  );\n};\n"}}},CustomExample.storyName="SliderRange. Пример изменения настроек (prefix, suffix, minValue, maxValue)";const ControlledStory=()=>(0,jsx_runtime.jsx)(SliderRangeControlledTemplate,{});ControlledStory.displayName="ControlledStory";const ControlledExample=ControlledStory.bind({});ControlledExample.parameters={docs:{source:{code:"import * as React from 'react';\nimport { SliderRange } from '@admiral-ds/react-ui';\n\nexport const SliderRangeControlledTemplate = () => {\n  const [value, setValue] = React.useState<[string, string]>(['2.0', '5.0']);\n  return (\n    <SliderRange\n      value={value}\n      onChange={(value: any) => {\n        console.log(value);\n        setValue([value[0].str, value[1].str]);\n      }}\n      prefix={['From', 'To']}\n      suffix=\"$\"\n      precision={1}\n    />\n  );\n};\n"},description:{story:"В качестве значений параметров value и defaultValue в SliderRange необходимо передавать уже\n      отформатированные строки с разделителями тысяч (суффикс/префикс в value/defaultValue вносить не нужно).\n\nКроме того, библиотека \n      предоставляет утилиту fitToCurrency, которая возвращает строку отформатированную в денежном формате. В качестве параметров \n      данная утилита принимает value - значение, которое надо отформатировать, а также параметры precision, decimal, thousand. \n      Также библиотека предоставляет утилиту clearValue, которая возвращает входную строку, из которой удалены все символы кроме \n      цифр, символа decimal и минуса."}}},ControlledExample.storyName="SliderRange. Пример контролируемого компонента.",PlaygroundExample.parameters={...PlaygroundExample.parameters,docs:{...PlaygroundExample.parameters?.docs,source:{originalSource:"props => <SliderRangePlaygroundTemplate {...props} />",...PlaygroundExample.parameters?.docs?.source}}},CustomExample.parameters={...CustomExample.parameters,docs:{...CustomExample.parameters?.docs,source:{originalSource:"() => <SliderRangeCustomTemplate />",...CustomExample.parameters?.docs?.source}}},ControlledExample.parameters={...ControlledExample.parameters,docs:{...ControlledExample.parameters?.docs,source:{originalSource:"() => <SliderRangeControlledTemplate />",...ControlledExample.parameters?.docs?.source}}};const __namedExportsOrder=["PlaygroundExample","CustomExample","ControlledExample"]}}]);