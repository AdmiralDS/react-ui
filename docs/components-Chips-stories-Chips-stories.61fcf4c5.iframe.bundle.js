"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[1679],{"./src/components/Chips/stories/Chips.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChipsBadges:()=>ChipsBadges,ChipsIcon:()=>ChipsIcon,ChipsMultiSelect:()=>ChipsMultiSelect,ChipsSelect:()=>ChipsSelect,ChipsTags:()=>ChipsTags,ChipsTagsClose:()=>ChipsTagsClose,ChipsTooltip:()=>ChipsTooltip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Chips_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Chips=__webpack_require__("./src/components/Chips/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const WrapperChip=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsTagstemplate__WrapperChip",componentId:"sc-apvkvi-0"})(["display:flex;& > div{margin-right:","px;}"],(({$dimension})=>"s"===$dimension?8:12)),listData=[{id:"1",label:"Москва",disabled:!1,selected:!1},{id:"2",label:"Тверь",disabled:!1,selected:!1},{id:"3",label:"Самара",disabled:!1,selected:!1}],ChipsTagsTemplate=props=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(WrapperChip,{$dimension:props.dimension,children:listData.map((item=>(0,react.createElement)(Chips.C,{...props,key:item.id},item.label)))})});try{ChipsTagsTemplate.displayName="ChipsTagsTemplate",ChipsTagsTemplate.__docgenInfo={description:"",displayName:"ChipsTagsTemplate",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},disabled:{defaultValue:null,description:"Отключение чипса",name:"disabled",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Вид чипсов",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'}]}},selected:{defaultValue:null,description:"Выбранная чипса",name:"selected",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Добавляет иконку для удаления чипсов",name:"onClose",required:!1,type:{name:"(() => void)"}},renderContentTooltip:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContentTooltip",required:!1,type:{name:"(() => ReactNode)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом Chips'a",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconEnd",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка перед текстом Chips'a",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconAfter",required:!1,type:{name:"ReactNode"}},badge:{defaultValue:null,description:"Число, которое будет отображено в компоненте Badge справа от content",name:"badge",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chips/stories/ChipsTags.template.tsx#ChipsTagsTemplate"]={docgenInfo:ChipsTagsTemplate.__docgenInfo,name:"ChipsTagsTemplate",path:"src/components/Chips/stories/ChipsTags.template.tsx#ChipsTagsTemplate"})}catch(__react_docgen_typescript_loader_error){}const Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsTagsClosetemplate__Separator",componentId:"sc-1scm4py-0"})(["height:20px;"]),ChipsTagsClose_template_WrapperChip=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsTagsClosetemplate__WrapperChip",componentId:"sc-1scm4py-1"})(["display:flex;& > div{margin-right:","px;}"],(({$dimension})=>"s"===$dimension?8:12)),ChipsTagsClose_template_listData=[{id:"1",label:"Москва",disabled:!1,selected:!1},{id:"2",label:"Тверь",disabled:!1,selected:!1},{id:"3",label:"Самара",disabled:!1,selected:!1}],ChipsTagsCloseTemplate=props=>{const[dataListM,setDataM]=react.useState(ChipsTagsClose_template_listData),[dataListS,setDataS]=react.useState(ChipsTagsClose_template_listData);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ChipsTagsClose_template_WrapperChip,{$dimension:props.dimension,children:dataListM.map((item=>(0,jsx_runtime.jsx)(Chips.C,{...props,onClose:()=>setDataM((prev=>prev.filter((d=>d.id!==item.id)))),children:item.label},item.id)))}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(ChipsTagsClose_template_WrapperChip,{$dimension:"s",children:dataListS.map((item=>(0,jsx_runtime.jsx)(Chips.C,{...props,dimension:"s",onClose:()=>setDataS((prev=>prev.filter((d=>d.id!==item.id)))),children:item.label},item.id)))})]})};try{ChipsTagsCloseTemplate.displayName="ChipsTagsCloseTemplate",ChipsTagsCloseTemplate.__docgenInfo={description:"",displayName:"ChipsTagsCloseTemplate",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},disabled:{defaultValue:null,description:"Отключение чипса",name:"disabled",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Вид чипсов",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'}]}},selected:{defaultValue:null,description:"Выбранная чипса",name:"selected",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Добавляет иконку для удаления чипсов",name:"onClose",required:!1,type:{name:"(() => void)"}},renderContentTooltip:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContentTooltip",required:!1,type:{name:"(() => ReactNode)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом Chips'a",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconEnd",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка перед текстом Chips'a",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconAfter",required:!1,type:{name:"ReactNode"}},badge:{defaultValue:null,description:"Число, которое будет отображено в компоненте Badge справа от content",name:"badge",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chips/stories/ChipsTagsClose.template.tsx#ChipsTagsCloseTemplate"]={docgenInfo:ChipsTagsCloseTemplate.__docgenInfo,name:"ChipsTagsCloseTemplate",path:"src/components/Chips/stories/ChipsTagsClose.template.tsx#ChipsTagsCloseTemplate"})}catch(__react_docgen_typescript_loader_error){}var VacationSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/category/VacationSolid.svg"),AlertSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/category/AlertSolid.svg"),DiamondSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/category/DiamondSolid.svg"),TrophySolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/category/TrophySolid.svg"),BurnSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/category/BurnSolid.svg");const ChipsIcon_template_WrapperChip=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsIcontemplate__WrapperChip",componentId:"sc-7xv1b4-0"})(["display:flex;& > div{margin-right:","px;}"],(({$dimension})=>"s"===$dimension?8:12)),ChipsIcon_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsIcontemplate__Separator",componentId:"sc-7xv1b4-1"})(["height:20px;"]),listDataIcon=[{id:"1",label:"Москва",disabled:!1,iconStart:(0,jsx_runtime.jsx)(VacationSolid.h,{}),iconEnd:(0,jsx_runtime.jsx)(AlertSolid.h,{}),selected:!1},{id:"2",label:"Тверь",disabled:!1,iconStart:(0,jsx_runtime.jsx)(TrophySolid.h,{}),selected:!1},{id:"3",label:"Самара",disabled:!1,iconEnd:(0,jsx_runtime.jsx)(BurnSolid.h,{}),selected:!1},{id:"4",label:"Омск",disabled:!1,iconEnd:(0,jsx_runtime.jsx)(DiamondSolid.h,{}),selected:!1},{id:"5",label:"Вильнус",disabled:!1,iconStart:(0,jsx_runtime.jsx)(BurnSolid.h,{}),selected:!1,badge:3}],ChipsIconTemplate=props=>{const[selectedM,setSelectedM]=react.useState(""),[selectedS,setSelectedS]=react.useState("");return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ChipsIcon_template_WrapperChip,{$dimension:props.dimension,children:listDataIcon.map((d=>(0,react.createElement)(Chips.C,{...props,key:d.id,selected:selectedM===d.id,onClick:()=>props.disabled?null:setSelectedM(d.id),iconStart:d?.iconStart,iconEnd:d?.iconEnd},d.label)))}),(0,jsx_runtime.jsx)(ChipsIcon_template_Separator,{}),(0,jsx_runtime.jsx)(ChipsIcon_template_WrapperChip,{$dimension:"s",children:listDataIcon.map((d=>(0,react.createElement)(Chips.C,{...props,dimension:"s",key:d.id,selected:selectedS===d.id,onClick:()=>props.disabled?null:setSelectedS(d.id),iconStart:d?.iconStart,iconEnd:d?.iconEnd},d.label)))})]})};try{ChipsIconTemplate.displayName="ChipsIconTemplate",ChipsIconTemplate.__docgenInfo={description:"",displayName:"ChipsIconTemplate",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},disabled:{defaultValue:null,description:"Отключение чипса",name:"disabled",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Вид чипсов",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'}]}},selected:{defaultValue:null,description:"Выбранная чипса",name:"selected",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Добавляет иконку для удаления чипсов",name:"onClose",required:!1,type:{name:"(() => void)"}},renderContentTooltip:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContentTooltip",required:!1,type:{name:"(() => ReactNode)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом Chips'a",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconEnd",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка перед текстом Chips'a",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconAfter",required:!1,type:{name:"ReactNode"}},badge:{defaultValue:null,description:"Число, которое будет отображено в компоненте Badge справа от content",name:"badge",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chips/stories/ChipsIcon.template.tsx#ChipsIconTemplate"]={docgenInfo:ChipsIconTemplate.__docgenInfo,name:"ChipsIconTemplate",path:"src/components/Chips/stories/ChipsIcon.template.tsx#ChipsIconTemplate"})}catch(__react_docgen_typescript_loader_error){}const ChipsSelect_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsSelecttemplate__Separator",componentId:"sc-iljxun-0"})(["height:20px;"]),ChipsSelect_template_WrapperChip=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsSelecttemplate__WrapperChip",componentId:"sc-iljxun-1"})(["display:flex;& > div{margin-right:","px;}"],(({$dimension})=>"s"===$dimension?8:12)),ChipsSelect_template_listData=[{id:"1",label:"Москва",disabled:!1,selected:!1},{id:"2",label:"Тверь",disabled:!1,selected:!1},{id:"3",label:"Самара",disabled:!1,selected:!1}],ChipsSelectTemplate=props=>{const[selectedM,setSelectedM]=react.useState(""),[selectedS,setSelectedS]=react.useState("");return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ChipsSelect_template_WrapperChip,{$dimension:props.dimension,children:ChipsSelect_template_listData.map((item=>(0,react.createElement)(Chips.C,{...props,key:item.id,selected:selectedM===item.id,onClick:()=>props.disabled?null:setSelectedM(item.id)},item.label)))}),(0,jsx_runtime.jsx)(ChipsSelect_template_Separator,{}),(0,jsx_runtime.jsx)(ChipsSelect_template_WrapperChip,{$dimension:"s",children:ChipsSelect_template_listData.map((item=>(0,react.createElement)(Chips.C,{...props,dimension:"s",key:item.id,selected:selectedS===item.id,onClick:()=>props.disabled?null:setSelectedS(item.id)},item.label)))})]})};try{ChipsSelectTemplate.displayName="ChipsSelectTemplate",ChipsSelectTemplate.__docgenInfo={description:"",displayName:"ChipsSelectTemplate",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},disabled:{defaultValue:null,description:"Отключение чипса",name:"disabled",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Вид чипсов",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'}]}},selected:{defaultValue:null,description:"Выбранная чипса",name:"selected",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Добавляет иконку для удаления чипсов",name:"onClose",required:!1,type:{name:"(() => void)"}},renderContentTooltip:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContentTooltip",required:!1,type:{name:"(() => ReactNode)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом Chips'a",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconEnd",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка перед текстом Chips'a",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconAfter",required:!1,type:{name:"ReactNode"}},badge:{defaultValue:null,description:"Число, которое будет отображено в компоненте Badge справа от content",name:"badge",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chips/stories/ChipsSelect.template.tsx#ChipsSelectTemplate"]={docgenInfo:ChipsSelectTemplate.__docgenInfo,name:"ChipsSelectTemplate",path:"src/components/Chips/stories/ChipsSelect.template.tsx#ChipsSelectTemplate"})}catch(__react_docgen_typescript_loader_error){}const ChipsMultiSelect_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsMultiSelecttemplate__Separator",componentId:"sc-1uhe5eg-0"})(["height:20px;"]),ChipsMultiSelect_template_WrapperChip=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsMultiSelecttemplate__WrapperChip",componentId:"sc-1uhe5eg-1"})(["display:flex;& > div{margin-right:","px;}"],(({$dimension})=>"s"===$dimension?8:12)),WrapperContent=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsMultiSelecttemplate__WrapperContent",componentId:"sc-1uhe5eg-2"})(["display:flex;align-items:center;"]),ChipsMultiSelect_template_listDataIcon=[{id:"1",label:"Москва",disabled:!1,iconStart:(0,jsx_runtime.jsx)(VacationSolid.h,{}),iconEnd:(0,jsx_runtime.jsx)(AlertSolid.h,{}),selected:!1},{id:"2",label:"Тверь",disabled:!1,iconStart:(0,jsx_runtime.jsx)(TrophySolid.h,{}),selected:!1},{id:"3",label:"Самара",disabled:!1,iconEnd:(0,jsx_runtime.jsx)(BurnSolid.h,{}),selected:!1},{id:"4",label:"Омск",disabled:!1,iconEnd:(0,jsx_runtime.jsx)(DiamondSolid.h,{}),selected:!1},{id:"5",label:"Вильнус",disabled:!1,iconStart:(0,jsx_runtime.jsx)(BurnSolid.h,{}),selected:!1,badge:3}],ChipsMultiSelectTemplate=props=>{const[listM,setListM]=react.useState(ChipsMultiSelect_template_listDataIcon),handleKeyM=id=>{setListM((prev=>prev.map((item=>item.id===id?{...item,selected:!item.selected}:{...item}))))},[listS,setListS]=react.useState(ChipsMultiSelect_template_listDataIcon),handleKeyS=id=>{setListS((prev=>prev.map((item=>item.id===id?{...item,selected:!item.selected}:{...item}))))};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ChipsMultiSelect_template_WrapperChip,{$dimension:props.dimension,children:listM.map((item=>(0,react.createElement)(Chips.C,{...props,key:item.id,onClick:props.disabled?void 0:handleKeyM.bind(null,item.id),selected:item.selected},(0,jsx_runtime.jsx)(WrapperContent,{children:item.label}))))}),(0,jsx_runtime.jsx)(ChipsMultiSelect_template_Separator,{}),(0,jsx_runtime.jsx)(ChipsMultiSelect_template_WrapperChip,{$dimension:"s",children:listS.map((item=>(0,react.createElement)(Chips.C,{...props,dimension:"s",key:item.id,onClick:props.disabled?void 0:handleKeyS.bind(null,item.id),selected:item.selected},(0,jsx_runtime.jsx)(WrapperContent,{children:item.label}))))})]})};try{ChipsMultiSelectTemplate.displayName="ChipsMultiSelectTemplate",ChipsMultiSelectTemplate.__docgenInfo={description:"",displayName:"ChipsMultiSelectTemplate",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},disabled:{defaultValue:null,description:"Отключение чипса",name:"disabled",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Вид чипсов",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'}]}},selected:{defaultValue:null,description:"Выбранная чипса",name:"selected",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Добавляет иконку для удаления чипсов",name:"onClose",required:!1,type:{name:"(() => void)"}},renderContentTooltip:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContentTooltip",required:!1,type:{name:"(() => ReactNode)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом Chips'a",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconEnd",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка перед текстом Chips'a",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconAfter",required:!1,type:{name:"ReactNode"}},badge:{defaultValue:null,description:"Число, которое будет отображено в компоненте Badge справа от content",name:"badge",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chips/stories/ChipsMultiSelect.template.tsx#ChipsMultiSelectTemplate"]={docgenInfo:ChipsMultiSelectTemplate.__docgenInfo,name:"ChipsMultiSelectTemplate",path:"src/components/Chips/stories/ChipsMultiSelect.template.tsx#ChipsMultiSelectTemplate"})}catch(__react_docgen_typescript_loader_error){}const listDataIconTooltip=[{id:"1",label:"Ограниченное пространство",disabled:!1},{id:"2",label:"Ограниченное пространство",disabled:!1},{id:"3",label:"Ограниченное пространство",disabled:!1}],ChipsTooltip_template_WrapperChip=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsTooltiptemplate__WrapperChip",componentId:"sc-1o9edq5-0"})(["display:flex;& > div{margin-right:","px;}"],(({$dimension})=>"s"===$dimension?8:12)),StyledChipsTooltip=(0,styled_components_browser_esm.Ay)(Chips.C).withConfig({displayName:"ChipsTooltiptemplate__StyledChipsTooltip",componentId:"sc-1o9edq5-1"})(["width:160px;"]),ChipsTooltipTemplate=props=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(ChipsTooltip_template_WrapperChip,{children:listDataIconTooltip.map((item=>(0,react.createElement)(StyledChipsTooltip,{...props,renderContentTooltip:()=>item.label,key:item.id},item.label)))})});try{ChipsTooltipTemplate.displayName="ChipsTooltipTemplate",ChipsTooltipTemplate.__docgenInfo={description:"",displayName:"ChipsTooltipTemplate",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},disabled:{defaultValue:null,description:"Отключение чипса",name:"disabled",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Вид чипсов",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'}]}},selected:{defaultValue:null,description:"Выбранная чипса",name:"selected",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Добавляет иконку для удаления чипсов",name:"onClose",required:!1,type:{name:"(() => void)"}},renderContentTooltip:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContentTooltip",required:!1,type:{name:"(() => ReactNode)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом Chips'a",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconEnd",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка перед текстом Chips'a",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconAfter",required:!1,type:{name:"ReactNode"}},badge:{defaultValue:null,description:"Число, которое будет отображено в компоненте Badge справа от content",name:"badge",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chips/stories/ChipsTooltip.template.tsx#ChipsTooltipTemplate"]={docgenInfo:ChipsTooltipTemplate.__docgenInfo,name:"ChipsTooltipTemplate",path:"src/components/Chips/stories/ChipsTooltip.template.tsx#ChipsTooltipTemplate"})}catch(__react_docgen_typescript_loader_error){}const ChipsBadges_template_listDataIcon=[{id:"1",label:"Москва",disabled:!1,iconStart:(0,jsx_runtime.jsx)(VacationSolid.h,{}),iconEnd:(0,jsx_runtime.jsx)(AlertSolid.h,{}),selected:!1},{id:"2",label:"Тверь",disabled:!1,iconStart:(0,jsx_runtime.jsx)(TrophySolid.h,{}),selected:!1},{id:"3",label:"Самара",disabled:!1,iconEnd:(0,jsx_runtime.jsx)(BurnSolid.h,{}),selected:!1},{id:"4",label:"Омск",disabled:!1,iconEnd:(0,jsx_runtime.jsx)(DiamondSolid.h,{}),selected:!1},{id:"5",label:"Вильнус",disabled:!1,iconStart:(0,jsx_runtime.jsx)(BurnSolid.h,{}),selected:!1,badge:3}],ChipsBadges_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsBadgestemplate__Separator",componentId:"sc-g32wiv-0"})(["height:20px;"]),ChipsBadges_template_WrapperChip=styled_components_browser_esm.Ay.div.withConfig({displayName:"ChipsBadgestemplate__WrapperChip",componentId:"sc-g32wiv-1"})(["display:flex;& > div{margin-right:","px;}"],(({$dimension})=>"s"===$dimension?8:12)),ChipsBadgesTemplate=props=>{const[selectedM,setSelectedM]=react.useState(""),[selectedS,setSelectedS]=react.useState("");return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ChipsBadges_template_WrapperChip,{$dimension:"m",children:ChipsBadges_template_listDataIcon.map((item=>(0,react.createElement)(Chips.C,{...props,key:item.id,badge:props.badge,dimension:"m",selected:selectedM===item.id,onClick:()=>props.disabled?null:setSelectedM(item.id),iconStart:item?.iconStart,iconEnd:item?.iconEnd},item.label)))}),(0,jsx_runtime.jsx)(ChipsBadges_template_Separator,{}),(0,jsx_runtime.jsx)(ChipsBadges_template_WrapperChip,{$dimension:"s",children:ChipsBadges_template_listDataIcon.map((item=>(0,react.createElement)(Chips.C,{...props,key:item.id,badge:props.badge,dimension:"s",appearance:"filled",selected:selectedS===item.id,onClick:()=>props.disabled?null:setSelectedS(item.id),iconStart:item?.iconStart,iconEnd:item?.iconEnd},item.label)))})]})};try{ChipsBadgesTemplate.displayName="ChipsBadgesTemplate",ChipsBadgesTemplate.__docgenInfo={description:"",displayName:"ChipsBadgesTemplate",props:{dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},disabled:{defaultValue:null,description:"Отключение чипса",name:"disabled",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Вид чипсов",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"filled"'},{value:'"outlined"'}]}},selected:{defaultValue:null,description:"Выбранная чипса",name:"selected",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Добавляет иконку для удаления чипсов",name:"onClose",required:!1,type:{name:"(() => void)"}},renderContentTooltip:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContentTooltip",required:!1,type:{name:"(() => ReactNode)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом Chips'a",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconEnd",required:!1,type:{name:"ReactNode"}},iconBefore:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка перед текстом Chips'a",name:"iconBefore",required:!1,type:{name:"ReactNode"}},iconAfter:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 7.9.0, будет удалено в 9.x.x версии.\nВзамен используйте iconStart или iconEnd\n\nИконка после текста Chips'a.\nОтображается, если не прокинут метод onClose, иначе отображется иконка закрытия (крест)",name:"iconAfter",required:!1,type:{name:"ReactNode"}},badge:{defaultValue:null,description:"Число, которое будет отображено в компоненте Badge справа от content",name:"badge",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Chips/stories/ChipsBadges.template.tsx#ChipsBadgesTemplate"]={docgenInfo:ChipsBadgesTemplate.__docgenInfo,name:"ChipsBadgesTemplate",path:"src/components/Chips/stories/ChipsBadges.template.tsx#ChipsBadgesTemplate"})}catch(__react_docgen_typescript_loader_error){}const Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"Chipsstories__Desc",componentId:"sc-1lwko69-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsx)(Desc,{children:"Чипсы представляют собой перечень выбранных нами фильтров, опций или каких-либо элементов из списка. В библиотеке есть два типа чипсов — Filled и Outlined. В зависимости от ситуации используются большие — 28 px, либо маленькие — 24 px чипсы. Примером может служить компонент Multi Select или выбор участников встречи, когда имена выбранных людей выводятся списком в виде чипсов."});Description.displayName="Description";const Chips_stories={title:"Admiral-2.1/Chips",component:Chips.C,decorators:void 0,parameters:{docs:{source:{code:null}},design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A17861"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A18081"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A18222"}],componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),layout:"centered"},args:{dimension:"m",appearance:"outlined"},argTypes:{dimension:{options:["m","s"],control:{type:"radio"}},appearance:{options:["outlined","filled"],control:{type:"radio"}},disabled:{control:{type:"boolean"}},selected:{control:{type:"boolean"}},iconStart:{control:!1},iconEnd:{control:!1},iconBefore:{control:!1},iconAfter:{control:!1},badge:{control:{type:"number"}}}},ChipsTagsStory=props=>(0,jsx_runtime.jsx)(ChipsTagsTemplate,{...props});ChipsTagsStory.displayName="ChipsTagsStory";const ChipsTags={render:ChipsTagsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Chips } from '@admiral-ds/react-ui';\nimport type { ChipsProps } from '@admiral-ds/react-ui';\n\nconst WrapperChip = styled.div<{ $dimension?: 'm' | 's' }>`\n  display: flex;\n  & > div {\n    margin-right: ${({ $dimension }) => ($dimension === 's' ? 8 : 12)}px;\n  }\n`;\n\nconst listData = [\n  { id: '1', label: 'Москва', disabled: false, selected: false },\n  { id: '2', label: 'Тверь', disabled: false, selected: false },\n  { id: '3', label: 'Самара', disabled: false, selected: false },\n];\n\nexport const ChipsTagsTemplate = (props: ChipsProps) => {\n  return (\n    <>\n      <WrapperChip $dimension={props.dimension}>\n        {listData.map((item) => (\n          <Chips {...props} key={item.id}>\n            {item.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n    </>\n  );\n};\n"}}},name:"Chips базовый пример"},ChipsTagsCloseStory=props=>(0,jsx_runtime.jsx)(ChipsTagsCloseTemplate,{...props});ChipsTagsCloseStory.displayName="ChipsTagsCloseStory";const ChipsTagsClose={render:ChipsTagsCloseStory,name:"Chips с текстом и иконкой закрыть",parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { Chips } from '@admiral-ds/react-ui';\nimport type { ChipsProps } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst WrapperChip = styled.div<{ $dimension?: 'm' | 's' }>`\n  display: flex;\n  & > div {\n    margin-right: ${({ $dimension }) => ($dimension === 's' ? 8 : 12)}px;\n  }\n`;\n\nconst listData = [\n  { id: '1', label: 'Москва', disabled: false, selected: false },\n  { id: '2', label: 'Тверь', disabled: false, selected: false },\n  { id: '3', label: 'Самара', disabled: false, selected: false },\n];\n\nexport const ChipsTagsCloseTemplate = (props: ChipsProps) => {\n  const [dataListM, setDataM] = React.useState(listData);\n  const [dataListS, setDataS] = React.useState(listData);\n  return (\n    <>\n      <WrapperChip $dimension={props.dimension}>\n        {dataListM.map((item) => (\n          <Chips key={item.id} {...props} onClose={() => setDataM((prev) => prev.filter((d) => d.id !== item.id))}>\n            {item.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n      <Separator />\n      <WrapperChip $dimension=\"s\">\n        {dataListS.map((item) => (\n          <Chips\n            key={item.id}\n            {...props}\n            dimension=\"s\"\n            onClose={() => setDataS((prev) => prev.filter((d) => d.id !== item.id))}\n          >\n            {item.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n    </>\n  );\n};\n"},description:{story:"Взаимодействовать можно только с чипсами имеющими иконку закрытия “Close”. При \n        нажатии на иконку закрытия элемент удаляется из списка выбранных."}}}},ChipsIconStory=props=>(0,jsx_runtime.jsx)(ChipsIconTemplate,{...props});ChipsIconStory.displayName="ChipsIconStory";const ChipsIcon={render:ChipsIconStory,name:"Chips с иконкой",parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Chips } from '@admiral-ds/react-ui';\nimport type { ChipsProps } from '@admiral-ds/react-ui';\n\nimport { ReactComponent as VacationIcon } from '@admiral-ds/icons/build/category/VacationSolid.svg';\nimport { ReactComponent as AlertSolid } from '@admiral-ds/icons/build/category/AlertSolid.svg';\nimport { ReactComponent as DiamondSolid } from '@admiral-ds/icons/build/category/DiamondSolid.svg';\nimport { ReactComponent as TrophyIcon } from '@admiral-ds/icons/build/category/TrophySolid.svg';\nimport { ReactComponent as BurnIcon } from '@admiral-ds/icons/build/category/BurnSolid.svg';\n\nconst WrapperChip = styled.div<{ $dimension?: 'm' | 's' }>`\n  display: flex;\n  & > div {\n    margin-right: ${({ $dimension }) => ($dimension === 's' ? 8 : 12)}px;\n  }\n`;\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst listDataIcon = [\n  {\n    id: '1',\n    label: 'Москва',\n    disabled: false,\n    iconStart: <VacationIcon />,\n    iconEnd: <AlertSolid />,\n    selected: false,\n  },\n  { id: '2', label: 'Тверь', disabled: false, iconStart: <TrophyIcon />, selected: false },\n  { id: '3', label: 'Самара', disabled: false, iconEnd: <BurnIcon />, selected: false },\n  { id: '4', label: 'Омск', disabled: false, iconEnd: <DiamondSolid />, selected: false },\n  { id: '5', label: 'Вильнус', disabled: false, iconStart: <BurnIcon />, selected: false, badge: 3 },\n];\n\nexport const ChipsIconTemplate = (props: ChipsProps) => {\n  const [selectedM, setSelectedM] = React.useState('');\n  const [selectedS, setSelectedS] = React.useState('');\n  return (\n    <>\n      <WrapperChip $dimension={props.dimension}>\n        {listDataIcon.map((d) => (\n          <Chips\n            {...props}\n            key={d.id}\n            selected={selectedM === d.id}\n            onClick={() => (props.disabled ? null : setSelectedM(d.id))}\n            iconStart={d?.iconStart}\n            iconEnd={d?.iconEnd}\n          >\n            {d.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n      <Separator />\n      <WrapperChip $dimension=\"s\">\n        {listDataIcon.map((d) => (\n          <Chips\n            {...props}\n            dimension=\"s\"\n            key={d.id}\n            selected={selectedS === d.id}\n            onClick={() => (props.disabled ? null : setSelectedS(d.id))}\n            iconStart={d?.iconStart}\n            iconEnd={d?.iconEnd}\n          >\n            {d.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n    </>\n  );\n};\n"},description:{story:"В компоненте можно включать иконки справа и/или слева от текста."}}}},ChipsSelectStory=props=>(0,jsx_runtime.jsx)(ChipsSelectTemplate,{...props});ChipsSelectStory.displayName="ChipsSelectStory";const ChipsSelect={render:ChipsSelectStory,name:"Chips с текстом и выбором",parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Chips } from '@admiral-ds/react-ui';\nimport type { ChipsProps } from '@admiral-ds/react-ui';\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst WrapperChip = styled.div<{ $dimension?: 'm' | 's' }>`\n  display: flex;\n  & > div {\n    margin-right: ${({ $dimension }) => ($dimension === 's' ? 8 : 12)}px;\n  }\n`;\n\nconst listData = [\n  { id: '1', label: 'Москва', disabled: false, selected: false },\n  { id: '2', label: 'Тверь', disabled: false, selected: false },\n  { id: '3', label: 'Самара', disabled: false, selected: false },\n];\n\nexport const ChipsSelectTemplate = (props: ChipsProps) => {\n  const [selectedM, setSelectedM] = React.useState('');\n  const [selectedS, setSelectedS] = React.useState('');\n  return (\n    <>\n      <WrapperChip $dimension={props.dimension}>\n        {listData.map((item) => (\n          <Chips\n            {...props}\n            key={item.id}\n            selected={selectedM === item.id}\n            onClick={() => (props.disabled ? null : setSelectedM(item.id))}\n          >\n            {item.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n      <Separator />\n      <WrapperChip $dimension=\"s\">\n        {listData.map((item) => (\n          <Chips\n            {...props}\n            dimension=\"s\"\n            key={item.id}\n            selected={selectedS === item.id}\n            onClick={() => (props.disabled ? null : setSelectedS(item.id))}\n          >\n            {item.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n    </>\n  );\n};\n"},description:{story:"Набор из двух и более чипсов, которые могут быть в активном (выбранном) состоянии \n        или пассивном (выключенном) состоянии. Chips в режиме радио кнопок, когда можно выбрать \n        только одно значение из списка. "}}}},ChipsMultiSelectStory=props=>(0,jsx_runtime.jsx)(ChipsMultiSelectTemplate,{...props});ChipsMultiSelectStory.displayName="ChipsMultiSelectStory";const ChipsMultiSelect={render:ChipsMultiSelectStory,name:"Chips для множественного выбора",parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Chips } from '@admiral-ds/react-ui';\nimport type { ChipsProps } from '@admiral-ds/react-ui';\n\nimport { ReactComponent as VacationIcon } from '@admiral-ds/icons/build/category/VacationSolid.svg';\nimport { ReactComponent as AlertSolid } from '@admiral-ds/icons/build/category/AlertSolid.svg';\nimport { ReactComponent as DiamondSolid } from '@admiral-ds/icons/build/category/DiamondSolid.svg';\nimport { ReactComponent as TrophyIcon } from '@admiral-ds/icons/build/category/TrophySolid.svg';\nimport { ReactComponent as BurnIcon } from '@admiral-ds/icons/build/category/BurnSolid.svg';\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst WrapperChip = styled.div<{ $dimension?: 'm' | 's' }>`\n  display: flex;\n  & > div {\n    margin-right: ${({ $dimension }) => ($dimension === 's' ? 8 : 12)}px;\n  }\n`;\n\nconst WrapperContent = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst listDataIcon = [\n  {\n    id: '1',\n    label: 'Москва',\n    disabled: false,\n    iconStart: <VacationIcon />,\n    iconEnd: <AlertSolid />,\n    selected: false,\n  },\n  { id: '2', label: 'Тверь', disabled: false, iconStart: <TrophyIcon />, selected: false },\n  { id: '3', label: 'Самара', disabled: false, iconEnd: <BurnIcon />, selected: false },\n  { id: '4', label: 'Омск', disabled: false, iconEnd: <DiamondSolid />, selected: false },\n  { id: '5', label: 'Вильнус', disabled: false, iconStart: <BurnIcon />, selected: false, badge: 3 },\n];\n\nexport const ChipsMultiSelectTemplate = (props: ChipsProps) => {\n  const [listM, setListM] = React.useState(listDataIcon);\n  const handleKeyM = (id: string) => {\n    setListM((prev) => prev.map((item) => (item.id === id ? { ...item, selected: !item.selected } : { ...item })));\n  };\n  const [listS, setListS] = React.useState(listDataIcon);\n  const handleKeyS = (id: string) => {\n    setListS((prev) => prev.map((item) => (item.id === id ? { ...item, selected: !item.selected } : { ...item })));\n  };\n\n  return (\n    <>\n      <WrapperChip $dimension={props.dimension}>\n        {listM.map((item) => (\n          <Chips\n            {...props}\n            key={item.id}\n            onClick={props.disabled ? void 0 : handleKeyM.bind(null, item.id)}\n            selected={item.selected}\n          >\n            <WrapperContent>{item.label}</WrapperContent>\n          </Chips>\n        ))}\n      </WrapperChip>\n      <Separator />\n      <WrapperChip $dimension=\"s\">\n        {listS.map((item) => (\n          <Chips\n            {...props}\n            dimension=\"s\"\n            key={item.id}\n            onClick={props.disabled ? void 0 : handleKeyS.bind(null, item.id)}\n            selected={item.selected}\n          >\n            <WrapperContent>{item.label}</WrapperContent>\n          </Chips>\n        ))}\n      </WrapperChip>\n    </>\n  );\n};\n"},description:{story:"Chips в режиме чекбоксов, когда можно выбрать любое количество значений"}}}},ChipsTooltipStory=props=>(0,jsx_runtime.jsx)(ChipsTooltipTemplate,{...props});ChipsTooltipStory.displayName="ChipsTooltipStory";const ChipsTooltip={render:ChipsTooltipStory,name:"Chips с Tooltip",parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Chips } from '@admiral-ds/react-ui';\nimport type { ChipsProps } from '@admiral-ds/react-ui';\n\nconst listDataIconTooltip = [\n  { id: '1', label: 'Ограниченное пространство', disabled: false },\n  { id: '2', label: 'Ограниченное пространство', disabled: false },\n  { id: '3', label: 'Ограниченное пространство', disabled: false },\n];\n\nconst WrapperChip = styled.div<{ $dimension?: 'm' | 's' }>`\n  display: flex;\n  & > div {\n    margin-right: ${({ $dimension }) => ($dimension === 's' ? 8 : 12)}px;\n  }\n`;\n\nconst StyledChipsTooltip = styled(Chips)`\n  width: 160px;\n`;\n\nexport const ChipsTooltipTemplate = (props: ChipsProps) => {\n  return (\n    <>\n      <WrapperChip>\n        {listDataIconTooltip.map((item) => (\n          <StyledChipsTooltip {...props} renderContentTooltip={() => item.label} key={item.id}>\n            {item.label}\n          </StyledChipsTooltip>\n        ))}\n      </WrapperChip>\n    </>\n  );\n};\n"},description:{story:"По дефолту в компоненте (в коде) задано граничение ширины в 190 px, после которой \n        происходит уход в троеточие. Но можно изменять этот параметр, стилизуя компонент через styled \n        components. В случае сокращения над компонентом при ховере появляется Тултип с расшифровкой."}}}},ChipsBadgesStory=props=>(0,jsx_runtime.jsx)(ChipsBadgesTemplate,{...props});ChipsBadgesStory.displayName="ChipsBadgesStory";const ChipsBadges={render:ChipsBadgesStory,name:"Chips с Badge",parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Chips } from '@admiral-ds/react-ui';\nimport type { ChipsProps } from '@admiral-ds/react-ui';\n\nimport { ReactComponent as VacationIcon } from '@admiral-ds/icons/build/category/VacationSolid.svg';\nimport { ReactComponent as AlertSolid } from '@admiral-ds/icons/build/category/AlertSolid.svg';\nimport { ReactComponent as DiamondSolid } from '@admiral-ds/icons/build/category/DiamondSolid.svg';\nimport { ReactComponent as TrophyIcon } from '@admiral-ds/icons/build/category/TrophySolid.svg';\nimport { ReactComponent as BurnIcon } from '@admiral-ds/icons/build/category/BurnSolid.svg';\n\nconst listDataIcon = [\n  {\n    id: '1',\n    label: 'Москва',\n    disabled: false,\n    iconStart: <VacationIcon />,\n    iconEnd: <AlertSolid />,\n    selected: false,\n  },\n  { id: '2', label: 'Тверь', disabled: false, iconStart: <TrophyIcon />, selected: false },\n  { id: '3', label: 'Самара', disabled: false, iconEnd: <BurnIcon />, selected: false },\n  { id: '4', label: 'Омск', disabled: false, iconEnd: <DiamondSolid />, selected: false },\n  { id: '5', label: 'Вильнус', disabled: false, iconStart: <BurnIcon />, selected: false, badge: 3 },\n];\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst WrapperChip = styled.div<{ $dimension?: 'm' | 's' }>`\n  display: flex;\n  & > div {\n    margin-right: ${({ $dimension }) => ($dimension === 's' ? 8 : 12)}px;\n  }\n`;\n\nexport const ChipsBadgesTemplate = (props: ChipsProps) => {\n  const [selectedM, setSelectedM] = React.useState('');\n  const [selectedS, setSelectedS] = React.useState('');\n\n  return (\n    <>\n      <WrapperChip $dimension=\"m\">\n        {listDataIcon.map((item) => (\n          <Chips\n            {...props}\n            key={item.id}\n            badge={props.badge}\n            dimension=\"m\"\n            selected={selectedM === item.id}\n            onClick={() => (props.disabled ? null : setSelectedM(item.id))}\n            iconStart={item?.iconStart}\n            iconEnd={item?.iconEnd}\n          >\n            {item.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n      <Separator />\n      <WrapperChip $dimension=\"s\">\n        {listDataIcon.map((item) => (\n          <Chips\n            {...props}\n            key={item.id}\n            badge={props.badge}\n            dimension=\"s\"\n            appearance=\"filled\"\n            selected={selectedS === item.id}\n            onClick={() => (props.disabled ? null : setSelectedS(item.id))}\n            iconStart={item?.iconStart}\n            iconEnd={item?.iconEnd}\n          >\n            {item.label}\n          </Chips>\n        ))}\n      </WrapperChip>\n    </>\n  );\n};\n"},description:{story:"В компоненте можно включать бейджи."}}},args:{badge:5}};ChipsTags.parameters={...ChipsTags.parameters,docs:{...ChipsTags.parameters?.docs,source:{originalSource:"{\n  render: ChipsTagsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ChipsTagsRaw\n      }\n    }\n  },\n  name: 'Chips базовый пример'\n}",...ChipsTags.parameters?.docs?.source}}},ChipsTagsClose.parameters={...ChipsTagsClose.parameters,docs:{...ChipsTagsClose.parameters?.docs,source:{originalSource:"{\n  render: ChipsTagsCloseStory,\n  name: 'Chips с текстом и иконкой закрыть',\n  parameters: {\n    docs: {\n      source: {\n        code: ChipsTagsCloseRaw\n      },\n      description: {\n        story: `Взаимодействовать можно только с чипсами имеющими иконку закрытия “Close”. При \n        нажатии на иконку закрытия элемент удаляется из списка выбранных.`\n      }\n    }\n  }\n}",...ChipsTagsClose.parameters?.docs?.source}}},ChipsIcon.parameters={...ChipsIcon.parameters,docs:{...ChipsIcon.parameters?.docs,source:{originalSource:"{\n  render: ChipsIconStory,\n  name: 'Chips с иконкой',\n  parameters: {\n    docs: {\n      source: {\n        code: ChipsIconRaw\n      },\n      description: {\n        story: `В компоненте можно включать иконки справа и/или слева от текста.`\n      }\n    }\n  }\n}",...ChipsIcon.parameters?.docs?.source}}},ChipsSelect.parameters={...ChipsSelect.parameters,docs:{...ChipsSelect.parameters?.docs,source:{originalSource:"{\n  render: ChipsSelectStory,\n  name: 'Chips с текстом и выбором',\n  parameters: {\n    docs: {\n      source: {\n        code: ChipsSelectRaw\n      },\n      description: {\n        story: `Набор из двух и более чипсов, которые могут быть в активном (выбранном) состоянии \n        или пассивном (выключенном) состоянии. Chips в режиме радио кнопок, когда можно выбрать \n        только одно значение из списка. `\n      }\n    }\n  }\n}",...ChipsSelect.parameters?.docs?.source}}},ChipsMultiSelect.parameters={...ChipsMultiSelect.parameters,docs:{...ChipsMultiSelect.parameters?.docs,source:{originalSource:"{\n  render: ChipsMultiSelectStory,\n  name: 'Chips для множественного выбора',\n  parameters: {\n    docs: {\n      source: {\n        code: ChipsMultiSelectRaw\n      },\n      description: {\n        story: `Chips в режиме чекбоксов, когда можно выбрать любое количество значений`\n      }\n    }\n  }\n}",...ChipsMultiSelect.parameters?.docs?.source}}},ChipsTooltip.parameters={...ChipsTooltip.parameters,docs:{...ChipsTooltip.parameters?.docs,source:{originalSource:"{\n  render: ChipsTooltipStory,\n  name: 'Chips с Tooltip',\n  parameters: {\n    docs: {\n      source: {\n        code: ChipsTooltipRaw\n      },\n      description: {\n        story: `По дефолту в компоненте (в коде) задано граничение ширины в 190 px, после которой \n        происходит уход в троеточие. Но можно изменять этот параметр, стилизуя компонент через styled \n        components. В случае сокращения над компонентом при ховере появляется Тултип с расшифровкой.`\n      }\n    }\n  }\n}",...ChipsTooltip.parameters?.docs?.source}}},ChipsBadges.parameters={...ChipsBadges.parameters,docs:{...ChipsBadges.parameters?.docs,source:{originalSource:"{\n  render: ChipsBadgesStory,\n  name: 'Chips с Badge',\n  parameters: {\n    docs: {\n      source: {\n        code: ChipsBadgesRaw\n      },\n      description: {\n        story: `В компоненте можно включать бейджи.`\n      }\n    }\n  },\n  args: {\n    badge: 5\n  }\n}",...ChipsBadges.parameters?.docs?.source}}};const __namedExportsOrder=["ChipsTags","ChipsTagsClose","ChipsIcon","ChipsSelect","ChipsMultiSelect","ChipsTooltip","ChipsBadges"]},"./node_modules/@admiral-ds/icons/build/category/AlertSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgAlertSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgAlertSolid=function SvgAlertSolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12 .5c.39 0 .71.32.71.71V3.1c0 .39-.32.72-.71.72-.4 0-.72-.33-.72-.72V1.21c0-.39.32-.71.72-.71M3.86 3.86c.28-.28.74-.28 1.02 0l1.33 1.33a.73.73 0 0 1 0 1.02c-.28.28-.74.28-1.02 0L3.86 4.88a.73.73 0 0 1 0-1.02m13.92 2.35a.73.73 0 0 1 0-1.02l1.33-1.33c.28-.28.74-.28 1.02 0a.73.73 0 0 1 0 1.02L18.8 6.21c-.28.28-.74.28-1.02 0M5 12c0-3.87 3.13-7 7-7 3.86 0 7 3.13 7 7v5.7c0 .38-.32.7-.71.7H5.69a.7.7 0 0 1-.69-.7zm7 .74c.35 0 .64-.29.64-.65V9.04c0-.36-.29-.65-.64-.65-.36 0-.65.29-.65.65v3.05c0 .36.29.65.65.65M.49 12c0-.4.33-.72.72-.72h1.88c.4 0 .72.32.72.72 0 .39-.32.72-.72.72H1.21A.73.73 0 0 1 .49 12m19.69 0c0-.4.32-.72.72-.72h1.88c.39 0 .72.32.72.72 0 .39-.33.72-.72.72H20.9c-.4 0-.72-.33-.72-.72M12 15.6a.749.749 0 1 0 0-1.5c-.42 0-.75.33-.75.75 0 .41.33.75.75.75m-8.21 4.1H20.2c.36 0 .65.29.65.64 0 .36-.29.66-.65.66H3.79c-.36 0-.65-.3-.65-.66 0-.35.29-.64.65-.64"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/category/BurnSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgBurnSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgBurnSolid=function SvgBurnSolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12 21c3.86 0 7-3 7-6.89 0-3.22-2.17-4.87-3.7-6.05-.43-.32-.8-.61-1.07-.89-.85-.86-1.32-1.8-1.35-3.1-.01-.68-.83-1.16-1.33-.71C6.25 8.07 5 11.13 5 14.11 5 18 8.13 21 12 21m-2.65-3.87c0 .93.3 1.55.69 1.93.38.39.96.64 1.68.64.6 0 1.27-.31 1.83-.91.55-.59.89-1.37.89-2.13 0-.79-.1-1.4-.53-2.2-.35-.64-.94-1.43-1.96-2.5-.21.58-.53 1.11-.94 1.6l-.06.07c-.84 1.02-1.6 1.93-1.6 3.5"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/category/DiamondSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgDiamondSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgDiamondSolid=function SvgDiamondSolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M3.06 8.49c-.17.19-.03.49.22.49h4.1c.1 0 .19-.05.25-.13l2.96-4.39c.13-.2-.01-.46-.25-.46H7.56c-.38 0-.73.16-.98.44-.96 1.1-2.71 3.11-3.52 4.05m17.87-.01c.17.2.03.5-.23.5h-4.06c-.1 0-.19-.04-.24-.12l-3.25-4.39c-.15-.19-.01-.47.24-.47h3.02c.38 0 .73.16.98.44.96 1.09 2.73 3.11 3.54 4.04m-6.7.5c.25 0 .39-.28.24-.48l-2.34-3.11a.295.295 0 0 0-.48.01L9.48 8.51c-.14.2 0 .47.24.47zm-.94 9.96c-.08.21.19.37.33.21 1.5-1.71 5.09-5.79 7.36-8.37.17-.2.03-.5-.23-.5h-4.13c-.13 0-.24.08-.28.2zm1.59-8.26c.07-.19-.07-.4-.28-.4H9.44c-.21 0-.35.21-.28.41l2.61 7.08c.09.26.46.26.56 0zm-11.87.1c-.17-.2-.03-.5.23-.5h4.18c.12 0 .23.08.28.2l3.16 8.61c.08.21-.18.37-.33.2-1.55-1.75-5.3-5.98-7.52-8.51"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/category/TrophySolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgTrophySolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgTrophySolid=function SvgTrophySolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M3 6.5c0 1.9 1.4 3.5 3.26 3.76a6.02 6.02 0 0 0 5.03 4.29V17h-.76c-1.66 0-3 1.34-3 3v.29c0 .39.31.71.7.71h7.6c.38 0 .7-.32.7-.71V20c0-1.66-1.35-3-3-3h-.94v-2.43a6.02 6.02 0 0 0 5.22-4.37 3.896 3.896 0 0 0 3.22-3.83v-.5c0-1.03-.85-1.87-1.88-1.87H4.88C3.84 4 3 4.84 3 5.88zm1.88-1.2h1.15v3.58A2.5 2.5 0 0 1 4.29 6.5v-.62c0-.32.27-.58.59-.58m13.15 0v3.29c0 .07 0 .14-.01.21 1-.36 1.71-1.32 1.71-2.43v-.5c0-.32-.26-.57-.58-.57z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/category/VacationSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgVacationSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgVacationSolid=function SvgVacationSolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M13.2 3.12c-1.51.4-2.27 1.19-2.66 1.96-.38-.77-1.15-1.56-2.66-1.96-2.43-.65-3.67.54-4.2 1.35-.23.34-.02.75.37.86l3.71.99c-.57.15-1.19.48-1.81 1.11-1.68 1.67-1.24 3.28-.8 4.13.18.36.64.39.93.1L9.3 8.44c-.08 1.18 0 2.49.15 3.89.11.99.33 1.97.66 2.9a7.5 7.5 0 0 0-4.75 3.71q-.645-.3-1.35-.78c-.3-.2-.7-.11-.9.18-.2.3-.12.71.18.91 2.08 1.38 3.83 1.82 5.4 1.71 1.54-.1 2.84-.72 3.99-1.28l.04-.02c1.17-.56 2.17-1.05 3.28-1.13 1.07-.07 2.33.24 3.96 1.49a.65.65 0 0 0 .79-1.03c-1.18-.91-2.26-1.42-3.27-1.64a7.56 7.56 0 0 0-6.06-2.34 11.4 11.4 0 0 1-.68-2.82c-.23-2.18-.26-3.93.1-5.21.03-.01.07-.01.1-.02l6.09-1.63c.39-.11.6-.52.38-.86-.54-.81-1.78-2-4.21-1.35m6.37 7.72c0 1.65-1.34 3-3 3s-3-1.35-3-3c0-1.66 1.34-3.01 3-3.01s3 1.35 3 3.01"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgCloseOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgCloseOutline=function SvgCloseOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M6.4 5.49a.63.63 0 0 0-.91 0c-.26.25-.26.66 0 .91l5.59 5.59-5.49 5.5c-.26.25-.26.66 0 .91.25.26.66.26.91 0l5.5-5.49 5.49 5.49c.25.26.66.26.91 0 .26-.25.26-.66 0-.91l-5.49-5.5L18.5 6.4c.26-.25.26-.66 0-.91a.63.63 0 0 0-.91 0L12 11.08z"})))};__webpack_require__.p},"./src/components/common/keyboardKey.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function isObject(val){return null!==val&&!Array.isArray(val)&&"object"==typeof val}__webpack_require__.d(__webpack_exports__,{r:()=>keyboardKey});const codes={3:"Cancel",6:"Help",8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",28:"Convert",29:"NonConvert",30:"Accept",31:"ModeChange",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",41:"Select",42:"Print",43:"Execute",44:"PrintScreen",45:"Insert",46:"Delete",48:["0",")"],49:["1","!"],50:["2","@"],51:["3","#"],52:["4","$"],53:["5","%"],54:["6","^"],55:["7","&"],56:["8","*"],57:["9","("],91:"OS",93:"ContextMenu",144:"NumLock",145:"ScrollLock",181:"VolumeMute",182:"VolumeDown",183:"VolumeUp",186:[";",":"],187:["=","+"],188:[",","<"],189:["-","_"],190:[".",">"],191:["/","?"],192:["`","~"],219:["[","{"],220:["\\","|"],221:["]","}"],222:["'",'"'],224:"Meta",225:"AltGraph",246:"Attn",247:"CrSel",248:"ExSel",249:"EraseEof",250:"Play",251:"ZoomOut"};for(let i=0;i<24;i+=1)codes[112+i]="F"+(i+1);for(let j=0;j<26;j+=1){let n=j+65;codes[n]=[String.fromCharCode(n+32),String.fromCharCode(n)]}const keyboardKey={codes,getCode(eventOrKey){return isObject(eventOrKey)?eventOrKey.keyCode||eventOrKey.which||this[eventOrKey.key]:this[eventOrKey]},getKey(eventOrCode){const isEvent=isObject(eventOrCode);if(isEvent&&eventOrCode.key)return eventOrCode.key;let name=codes[isEvent?eventOrCode.keyCode||eventOrCode.which:eventOrCode];return Array.isArray(name)&&(name=isEvent?name[eventOrCode.shiftKey?1:0]:name[0]),name},Cancel:3,Help:6,Backspace:8,Tab:9,Clear:12,Enter:13,Shift:16,Control:17,Alt:18,Pause:19,CapsLock:20,Escape:27,Convert:28,NonConvert:29,Accept:30,ModeChange:31," ":32,PageUp:33,PageDown:34,End:35,Home:36,ArrowLeft:37,ArrowUp:38,ArrowRight:39,ArrowDown:40,Select:41,Print:42,Execute:43,PrintScreen:44,Insert:45,Delete:46,0:48,")":48,1:49,"!":49,2:50,"@":50,3:51,"#":51,4:52,$:52,5:53,"%":53,6:54,"^":54,7:55,"&":55,8:56,"*":56,9:57,"(":57,a:65,A:65,b:66,B:66,c:67,C:67,d:68,D:68,e:69,E:69,f:70,F:70,g:71,G:71,h:72,H:72,i:73,I:73,j:74,J:74,k:75,K:75,l:76,L:76,m:77,M:77,n:78,N:78,o:79,O:79,p:80,P:80,q:81,Q:81,r:82,R:82,s:83,S:83,t:84,T:84,u:85,U:85,v:86,V:86,w:87,W:87,x:88,X:88,y:89,Y:89,z:90,Z:90,OS:91,ContextMenu:93,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,F16:127,F17:128,F18:129,F19:130,F20:131,F21:132,F22:133,F23:134,F24:135,NumLock:144,ScrollLock:145,VolumeMute:181,VolumeDown:182,VolumeUp:183,";":186,":":186,"=":187,"+":187,",":188,"<":188,"-":189,_:189,".":190,">":190,"/":191,"?":191,"`":192,"~":192,"[":219,"{":219,"\\":220,"|":220,"]":221,"}":221,"'":222,'"':222,Meta:224,AltGraph:225,Attn:246,CrSel:247,ExSel:248,EraseEof:249,Play:250,ZoomOut:251};keyboardKey.Spacebar=keyboardKey[" "],keyboardKey.Digit0=keyboardKey[0],keyboardKey.Digit1=keyboardKey[1],keyboardKey.Digit2=keyboardKey[2],keyboardKey.Digit3=keyboardKey[3],keyboardKey.Digit4=keyboardKey[4],keyboardKey.Digit5=keyboardKey[5],keyboardKey.Digit6=keyboardKey[6],keyboardKey.Digit7=keyboardKey[7],keyboardKey.Digit8=keyboardKey[8],keyboardKey.Digit9=keyboardKey[9],keyboardKey.Tilde=keyboardKey["~"],keyboardKey.GraveAccent=keyboardKey["`"],keyboardKey.ExclamationPoint=keyboardKey["!"],keyboardKey.AtSign=keyboardKey["@"],keyboardKey.PoundSign=keyboardKey["#"],keyboardKey.PercentSign=keyboardKey["%"],keyboardKey.Caret=keyboardKey["^"],keyboardKey.Ampersand=keyboardKey["&"],keyboardKey.PlusSign=keyboardKey["+"],keyboardKey.MinusSign=keyboardKey["-"],keyboardKey.EqualsSign=keyboardKey["="],keyboardKey.DivisionSign=keyboardKey["/"],keyboardKey.MultiplicationSign=keyboardKey["*"],keyboardKey.Comma=keyboardKey[","],keyboardKey.Decimal=keyboardKey["."],keyboardKey.Colon=keyboardKey[":"],keyboardKey.Semicolon=keyboardKey[";"],keyboardKey.Pipe=keyboardKey["|"],keyboardKey.BackSlash=keyboardKey["\\"],keyboardKey.QuestionMark=keyboardKey["?"],keyboardKey.SingleQuote=keyboardKey["'"],keyboardKey.DoubleQuote=keyboardKey['"'],keyboardKey.LeftCurlyBrace=keyboardKey["{"],keyboardKey.RightCurlyBrace=keyboardKey["}"],keyboardKey.LeftParenthesis=keyboardKey["("],keyboardKey.RightParenthesis=keyboardKey[")"],keyboardKey.LeftAngleBracket=keyboardKey["<"],keyboardKey.RightAngleBracket=keyboardKey[">"],keyboardKey.LeftSquareBracket=keyboardKey["["],keyboardKey.RightSquareBracket=keyboardKey["]"]},"./src/components/common/utils/checkOverflow.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>checkOverflow});const checkOverflow=textContainer=>!!textContainer&&(textContainer.offsetHeight<textContainer.scrollHeight||textContainer.offsetWidth<textContainer.scrollWidth)}}]);