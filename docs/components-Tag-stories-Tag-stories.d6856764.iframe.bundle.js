"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[7055],{"./src/components/Tag/stories/Tag.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomColorsExample:()=>CustomColorsExample,IconExample:()=>IconExample,Playground:()=>Playground,StateExample:()=>StateExample,StatusBackgroundExample:()=>StatusBackgroundExample,StatusExample:()=>StatusExample,TooltipExample:()=>TooltipExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tag_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_require__("./node_modules/react/index.js");var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),Tag=__webpack_require__("./src/components/Tag/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var TagPlaygroundTemplate=function(_param){var themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=_object_without_properties(_param,["themeBorderKind","CSSCustomProps"]);return/*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,_object_spread_props(_object_spread({},props),{children:"Playground"}))})})};try{TagPlaygroundTemplate.displayName="TagPlaygroundTemplate",TagPlaygroundTemplate.__docgenInfo={description:"",displayName:"TagPlaygroundTemplate",props:{kind:{defaultValue:null,description:"Тип тэга. Можно выбрать из предложенных вариантов, либо задать свои цвета для тэга.\nВ случае когда статус задается через статусную метку (кружок), свойство background отвечает за цвет статусной метки.\nВ случае когда статус задается через цвет фона и обводки, свойство background отвечает за цвет фона,\nсвойство border отвечает за цвет обводки, свойство backgroundHover отвечает за цвет фона при ховере в случае активного тэга.",name:"kind",required:!1,type:{name:"TagKind | { background: string; border?: string; backgroundHover?: string; } | undefined"}},statusViaBackground:{defaultValue:null,description:"Отображение статуса через цвет обводки и фона. По умолчанию, при statusViaBackground = false, отображение статуса\nпроисходит через цветную статусную метку (цветной кружок рядом с текстом)",name:"statusViaBackground",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Отображение иконки. Иконка отображается только по левому краю и при условии, что статус отображается через цвет обводки и фона",name:"icon",required:!1,type:{name:"ReactNode"}},dimension:{defaultValue:null,description:"Высота тэга",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},width:{defaultValue:null,description:"Ширина тэга",name:"width",required:!1,type:{name:"string | number"}},as:{defaultValue:null,description:"Позволяет рендерить компонент, используя другой тег HTML (https://styled-components.com/docs/api#as-polymorphic-prop).\nВ storybook в качестве примера приведены несколько возможных вариантов этого параметра (кроме них можно использовать любой другой HTML тег).",name:"as",required:!1,type:{name:"ElementType"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tag/stories/TagPlayground.template.tsx#TagPlaygroundTemplate"]={docgenInfo:TagPlaygroundTemplate.__docgenInfo,name:"TagPlaygroundTemplate",path:"src/components/Tag/stories/TagPlayground.template.tsx#TagPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}var Tags=__webpack_require__("./src/components/Tags/index.tsx"),clickHandler=function(){return console.log("click active tag")},TagStatusTemplate=function(){return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:clickHandler,children:"Neutral"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:clickHandler,kind:"success",children:"Success"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:clickHandler,kind:"primary",children:"Primary"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:clickHandler,as:"span",kind:"danger",children:"Danger"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:clickHandler,kind:"warning",children:"Warning"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{dimension:"s",style:{marginTop:24},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{children:"Neutral"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{kind:"success",children:"Success"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{kind:"primary",children:"Primary"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{as:"span",kind:"danger",children:"Danger"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{kind:"warning",children:"Warning"})]})]})},TagStatusBackground_template_clickHandler=function(){return console.log("click active tag")},TagStatusBackgroundTemplate=function(){return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagStatusBackground_template_clickHandler,statusViaBackground:!0,children:"Neutral"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagStatusBackground_template_clickHandler,statusViaBackground:!0,kind:"success",children:"Success"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagStatusBackground_template_clickHandler,statusViaBackground:!0,kind:"primary",children:"Primary"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagStatusBackground_template_clickHandler,statusViaBackground:!0,kind:"danger",children:"Danger"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagStatusBackground_template_clickHandler,statusViaBackground:!0,kind:"warning",children:"Warning"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{dimension:"s",style:{marginTop:24},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,children:"Neutral"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,kind:"success",children:"Success"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,kind:"primary",children:"Primary"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,kind:"danger",children:"Danger"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,kind:"warning",children:"Warning"})]})]})},light=__webpack_require__("./src/components/themes/light/index.ts"),TagCustomColors_template_clickHandler=function(){return console.log("click active tag")},TagCustomColorsTemplate=function(){var theme=(0,styled_components_browser_esm.DP)()||light.d;return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagCustomColors_template_clickHandler,kind:{background:"var(--admiral-color-Purple_Purple60Main, ".concat(theme.color["Purple/Purple 60 Main"],")")},children:"Purple"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagCustomColors_template_clickHandler,statusViaBackground:!0,kind:{background:"var(--admiral-color-Teal_Teal10, ".concat(theme.color["Teal/Teal 10"],")"),border:"var(--admiral-color-Teal_Teal50, ".concat(theme.color["Teal/Teal 50"],")"),backgroundHover:"var(--admiral-color-Teal_Teal20, ".concat(theme.color["Teal/Teal 20"],")")},children:"Teal"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{onClick:TagCustomColors_template_clickHandler,statusViaBackground:!0,kind:{background:"var(--admiral-color-Magenta_Magenta10, ".concat(theme.color["Magenta/Magenta 10"],")"),border:"var(--admiral-color-Magenta_Magenta50, ".concat(theme.color["Magenta/Magenta 50"],")"),backgroundHover:"var(--admiral-color-Magenta_Magenta20, ".concat(theme.color["Magenta/Magenta 20"],")")},children:"Magenta"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{dimension:"s",style:{marginTop:24},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{kind:{background:"var(--admiral-color-Purple_Purple60Main, ".concat(theme.color["Purple/Purple 60 Main"],")")},children:"Purple"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,kind:{background:"var(--admiral-color-Teal_Teal10, ".concat(theme.color["Teal/Teal 10"],")"),border:"var(--admiral-color-Teal_Teal50, ".concat(theme.color["Teal/Teal 50"],")")},children:"Teal"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,kind:{background:"var(--admiral-color-Magenta_Magenta10, ".concat(theme.color["Magenta/Magenta 10"],")"),border:"var(--admiral-color-Magenta_Magenta50, ".concat(theme.color["Magenta/Magenta 50"],")")},children:"Magenta"})]})]})};function TagState_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TagState_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TagState_template_define_property(target,key,source[key])})}return target}function TagState_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TagState_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TagState_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TagState_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=TagState_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function TagState_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var TagState_template_clickHandler=function(){return console.log("click active tag")},TagStateTemplate=function(_param){var themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=TagState_template_object_without_properties(_param,["themeBorderKind","CSSCustomProps"]);return/*#__PURE__*/(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,TagState_template_object_spread_props(TagState_template_object_spread({},props),{onClick:TagState_template_clickHandler,children:"Active"})),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,TagState_template_object_spread_props(TagState_template_object_spread({},props),{children:"Passive"}))]})})};try{TagStateTemplate.displayName="TagStateTemplate",TagStateTemplate.__docgenInfo={description:"",displayName:"TagStateTemplate",props:{kind:{defaultValue:null,description:"Тип тэга. Можно выбрать из предложенных вариантов, либо задать свои цвета для тэга.\nВ случае когда статус задается через статусную метку (кружок), свойство background отвечает за цвет статусной метки.\nВ случае когда статус задается через цвет фона и обводки, свойство background отвечает за цвет фона,\nсвойство border отвечает за цвет обводки, свойство backgroundHover отвечает за цвет фона при ховере в случае активного тэга.",name:"kind",required:!1,type:{name:"TagKind | { background: string; border?: string; backgroundHover?: string; } | undefined"}},statusViaBackground:{defaultValue:null,description:"Отображение статуса через цвет обводки и фона. По умолчанию, при statusViaBackground = false, отображение статуса\nпроисходит через цветную статусную метку (цветной кружок рядом с текстом)",name:"statusViaBackground",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Отображение иконки. Иконка отображается только по левому краю и при условии, что статус отображается через цвет обводки и фона",name:"icon",required:!1,type:{name:"ReactNode"}},dimension:{defaultValue:null,description:"Высота тэга",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},width:{defaultValue:null,description:"Ширина тэга",name:"width",required:!1,type:{name:"string | number"}},as:{defaultValue:null,description:"Позволяет рендерить компонент, используя другой тег HTML (https://styled-components.com/docs/api#as-polymorphic-prop).\nВ storybook в качестве примера приведены несколько возможных вариантов этого параметра (кроме них можно использовать любой другой HTML тег).",name:"as",required:!1,type:{name:"ElementType"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tag/stories/TagState.template.tsx#TagStateTemplate"]={docgenInfo:TagStateTemplate.__docgenInfo,name:"TagStateTemplate",path:"src/components/Tag/stories/TagState.template.tsx#TagStateTemplate"})}catch(__react_docgen_typescript_loader_error){}var TagTooltip_template_clickHandler=function(){return console.log("click active tag")},TagTooltipTemplate=function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{width:150,onClick:TagTooltip_template_clickHandler,children:"Если текст длинее ширины тэга, добавляется тултип"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{width:150,children:"Если текст длинее ширины тэга, добавляется тултип "})]})})},CheckOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/CheckOutline.svg"),TagIcon_template_clickHandler=function(){return console.log("click active tag")},TagIconTemplate=function(){return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),children:"Neutral"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"success",children:"Success"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"primary",children:"Primary"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"danger",children:"Danger"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"warning",children:"Warning"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)(Tags.Y,{dimension:"s",style:{marginTop:24},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),children:"Neutral"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"success",children:"Success"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"primary",children:"Primary"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"danger",children:"Danger"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Tag.v,{statusViaBackground:!0,onClick:TagIcon_template_clickHandler,icon:/*#__PURE__*/(0,jsx_runtime.jsx)(CheckOutline.h,{}),kind:"warning",children:"Warning"})]})]})};function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function Tag_stories_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Tag_stories_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){Tag_stories_define_property(target,key,source[key])})}return target}function Tag_stories_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function Tag_stories_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):Tag_stories_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}function _templateObject(){var data=_tagged_template_literal(["\n  font-family: 'VTB Group UI';\n  font-size: 16px;\n  line-height: 24px;\n"]);return _templateObject=function _templateObject(){return data},data}var Desc=styled_components_browser_esm.Ay.div(_templateObject());let Tag_stories={title:"Admiral-2.1/Tag",decorators:void 0,component:Tag.v,parameters:{docs:{source:{code:null}},componentSubtitle:/*#__PURE__*/(0,jsx_runtime.jsx)(function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(Desc,{children:"Тег — это метка, размечающая и каталогизирующая информацию для облегчения процесса поиска. При нажатии на тэг загружаются все элементы имеющие эту метку (опционально)."})},{}),layout:"centered",design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A18375"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A18530"}]},argTypes:{kind:{options:["neutral","primary","success","danger","warning"],control:{type:"radio"}},dimension:{options:["m","s"],control:{type:"radio"}},width:{control:{type:"text"}},statusViaBackground:{control:{type:"boolean"}},statusIcon:{control:!1},icon:{control:!1},as:{options:["div","span","button"],control:{type:"radio"}},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}}}};var Playground={render:function(props){var CSSCustomProps=_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return/*#__PURE__*/(0,jsx_runtime.jsx)(TagPlaygroundTemplate,Tag_stories_object_spread_props(Tag_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tag } from '@admiral-ds/react-ui';\nimport type { TagProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nexport const TagPlaygroundTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: TagProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  return (\n    <>\n      <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n        <Tag {...props}>Playground</Tag>\n      </ThemeProvider>\n    </>\n  );\n};\n"}}},name:"Tag. Playground."},StatusExample={render:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(TagStatusTemplate,{})},parameters:{docs:{source:{code:'import * as React from \'react\';\nimport { Tag, Tags } from \'@admiral-ds/react-ui\';\n\n// eslint-disable-next-line no-console\nconst clickHandler = () => console.log(\'click active tag\');\n\nexport const TagStatusTemplate = () => {\n  return (\n    <>\n      <Tags>\n        <Tag onClick={clickHandler}>Neutral</Tag>\n        <Tag onClick={clickHandler} kind="success">\n          Success\n        </Tag>\n        <Tag onClick={clickHandler} kind="primary">\n          Primary\n        </Tag>\n        <Tag onClick={clickHandler} as="span" kind="danger">\n          Danger\n        </Tag>\n        <Tag onClick={clickHandler} kind="warning">\n          Warning\n        </Tag>\n      </Tags>\n      <Tags dimension="s" style={{ marginTop: 24 }}>\n        <Tag>Neutral</Tag>\n        <Tag kind="success">Success</Tag>\n        <Tag kind="primary">Primary</Tag>\n        <Tag as="span" kind="danger">\n          Danger\n        </Tag>\n        <Tag kind="warning">Warning</Tag>\n      </Tags>\n    </>\n  );\n};\n'},description:{story:"Тэг может иметь цветную статусную метку, определяемую параметром kind."}}},name:"Tag. Статус через цветную статусную метку."},StatusBackgroundExample={render:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(TagStatusBackgroundTemplate,{})},parameters:{docs:{source:{code:'import * as React from \'react\';\nimport { Tag, Tags } from \'@admiral-ds/react-ui\';\n\n// eslint-disable-next-line no-console\nconst clickHandler = () => console.log(\'click active tag\');\n\nexport const TagStatusBackgroundTemplate = () => {\n  return (\n    <>\n      <Tags>\n        <Tag onClick={clickHandler} statusViaBackground>\n          Neutral\n        </Tag>\n        <Tag onClick={clickHandler} statusViaBackground kind="success">\n          Success\n        </Tag>\n        <Tag onClick={clickHandler} statusViaBackground kind="primary">\n          Primary\n        </Tag>\n        <Tag onClick={clickHandler} statusViaBackground kind="danger">\n          Danger\n        </Tag>\n        <Tag onClick={clickHandler} statusViaBackground kind="warning">\n          Warning\n        </Tag>\n      </Tags>\n      <Tags dimension="s" style={{ marginTop: 24 }}>\n        <Tag statusViaBackground>Neutral</Tag>\n        <Tag statusViaBackground kind="success">\n          Success\n        </Tag>\n        <Tag statusViaBackground kind="primary">\n          Primary\n        </Tag>\n        <Tag statusViaBackground kind="danger">\n          Danger\n        </Tag>\n        <Tag statusViaBackground kind="warning">\n          Warning\n        </Tag>\n      </Tags>\n    </>\n  );\n};\n'},description:{story:"Тэг также может отображать статус через цвет обводки и фона, когда нужен выраженный цветовой акцент.\n\nЧтобы \n        отобразить статус через цвет обводки и фона необходимо передать\n        в компонент параметр statusViaBackground, установленный в true."}}},name:"Tag. Статус через цвет обводки и фона."},CustomColorsExample={render:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(TagCustomColorsTemplate,{})},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tag, Tags, LIGHT_THEME } from '@admiral-ds/react-ui';\nimport { useTheme } from 'styled-components';\n\n// eslint-disable-next-line no-console\nconst clickHandler = () => console.log('click active tag');\n\nexport const TagCustomColorsTemplate = () => {\n  const theme = useTheme() || LIGHT_THEME;\n  return (\n    <>\n      <Tags>\n        <Tag\n          onClick={clickHandler}\n          kind={{ background: `var(--admiral-color-Purple_Purple60Main, ${theme.color['Purple/Purple 60 Main']})` }}\n        >\n          Purple\n        </Tag>\n        <Tag\n          onClick={clickHandler}\n          statusViaBackground\n          kind={{\n            background: `var(--admiral-color-Teal_Teal10, ${theme.color['Teal/Teal 10']})`,\n            border: `var(--admiral-color-Teal_Teal50, ${theme.color['Teal/Teal 50']})`,\n            backgroundHover: `var(--admiral-color-Teal_Teal20, ${theme.color['Teal/Teal 20']})`,\n          }}\n        >\n          Teal\n        </Tag>\n        <Tag\n          onClick={clickHandler}\n          statusViaBackground\n          kind={{\n            background: `var(--admiral-color-Magenta_Magenta10, ${theme.color['Magenta/Magenta 10']})`,\n            border: `var(--admiral-color-Magenta_Magenta50, ${theme.color['Magenta/Magenta 50']})`,\n            backgroundHover: `var(--admiral-color-Magenta_Magenta20, ${theme.color['Magenta/Magenta 20']})`,\n          }}\n        >\n          Magenta\n        </Tag>\n      </Tags>\n      <Tags dimension=\"s\" style={{ marginTop: 24 }}>\n        <Tag kind={{ background: `var(--admiral-color-Purple_Purple60Main, ${theme.color['Purple/Purple 60 Main']})` }}>\n          Purple\n        </Tag>\n        <Tag\n          statusViaBackground\n          kind={{\n            background: `var(--admiral-color-Teal_Teal10, ${theme.color['Teal/Teal 10']})`,\n            border: `var(--admiral-color-Teal_Teal50, ${theme.color['Teal/Teal 50']})`,\n          }}\n        >\n          Teal\n        </Tag>\n        <Tag\n          statusViaBackground\n          kind={{\n            background: `var(--admiral-color-Magenta_Magenta10, ${theme.color['Magenta/Magenta 10']})`,\n            border: `var(--admiral-color-Magenta_Magenta50, ${theme.color['Magenta/Magenta 50']})`,\n          }}\n        >\n          Magenta\n        </Tag>\n      </Tags>\n    </>\n  );\n};\n"},description:{story:"Тэг может иметь цветную статусную метку. Помимо предложенных вариантов метка может быть\n        окрашена в любой цвет на усмотрение пользователя. Для этого в качестве значения \n        параметра kind нужно указать объект со свойством background, содержащим значение кастомного цвета метки. \n\n Либо \n        тэг может отображать статус через цвет обводки и фона, когда нужен выраженный цветовой акцент.\n        В этом случае, помимо предложенных вариантов, фон и обводку тега можно окрасить в любые цвета. \n        Рекомендуются цветовые пары (фон, обводка) из представленных \n        в палитре цветов по следующей схеме: фон - color 10, обводка - основной цвет минус 1 шаг вниз.\n        Чтобы задать кастомные цвета фона и обводки тега нужно в качестве значения \n        параметра kind указать объект со свойствами background и border, содержащими соответственно кастомные значения цветов\n        фона и обводки тега.\n\nТакже помимо свойств background и border пользователь может задать свойство backgroundHover.\n        Данное свойство отвечает за цвет фона тега при ховере, в случае если тег является активным. Рекомендуется \n        в качестве значения backgroundHover выбирать из палитры цветов цвет, который на 1 шаг темнее цвета фона."}}},name:"Tag. Кастомные цвета."},StateExample={render:function(){var CSSCustomProps=_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return/*#__PURE__*/(0,jsx_runtime.jsx)(TagStateTemplate,{CSSCustomProps:CSSCustomProps})},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tag, Tags } from '@admiral-ds/react-ui';\nimport type { TagProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\n// eslint-disable-next-line no-console\nconst clickHandler = () => console.log('click active tag');\n\nexport const TagStateTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: TagProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <Tags>\n        <Tag {...props} onClick={clickHandler}>\n          Active\n        </Tag>\n        <Tag {...props}>Passive</Tag>\n      </Tags>\n    </ThemeProvider>\n  );\n};\n"},description:{story:"Тэги могут быть как активными и служить, например, каталагизаторами, так и пассивными, просто отображая\n              принадлежность элемента к некоторой группе элементов имеющих общий признак."}}},name:"Tag. Активный и пассивный."},TooltipExample={render:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(TagTooltipTemplate,{})},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tag, Tags } from '@admiral-ds/react-ui';\n\n// eslint-disable-next-line no-console\nconst clickHandler = () => console.log('click active tag');\n\nexport const TagTooltipTemplate = () => {\n  return (\n    <>\n      <Tags>\n        <Tag width={150} onClick={clickHandler}>\n          Если текст длинее ширины тэга, добавляется тултип\n        </Tag>\n        <Tag width={150}>Если текст длинее ширины тэга, добавляется тултип </Tag>\n      </Tags>\n    </>\n  );\n};\n"},description:{story:"В случае ограниченного пространства используется тултип."}}},name:"Tag. Тултип."},IconExample={render:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(TagIconTemplate,{})},parameters:{docs:{source:{code:'import * as React from \'react\';\nimport { Tag, Tags } from \'@admiral-ds/react-ui\';\nimport { ReactComponent as CheckOutline } from \'@admiral-ds/icons/build/service/CheckOutline.svg\';\n\n// eslint-disable-next-line no-console\nconst clickHandler = () => console.log(\'click active tag\');\n\nexport const TagIconTemplate = () => {\n  return (\n    <>\n      <Tags>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />}>\n          Neutral\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="success">\n          Success\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="primary">\n          Primary\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="danger">\n          Danger\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="warning">\n          Warning\n        </Tag>\n      </Tags>\n      <Tags dimension="s" style={{ marginTop: 24 }}>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />}>\n          Neutral\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="success">\n          Success\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="primary">\n          Primary\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="danger">\n          Danger\n        </Tag>\n        <Tag statusViaBackground onClick={clickHandler} icon={<CheckOutline />} kind="warning">\n          Warning\n        </Tag>\n      </Tags>\n    </>\n  );\n};\n'},description:{story:"Тэги могут быть с иконками, но только в том случае, если статус отображается\n        через цвет обводки и фона (параметр statusViaBackground установлен в true)"}}},name:"Tag. С иконкой."};Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  render: PlaygroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TagPlaygroundRaw\n      }\n    }\n  },\n  name: 'Tag. Playground.'\n}",...Playground.parameters?.docs?.source}}},StatusExample.parameters={...StatusExample.parameters,docs:{...StatusExample.parameters?.docs,source:{originalSource:"{\n  render: StatusStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TagStatusRaw\n      },\n      description: {\n        story: `Тэг может иметь цветную статусную метку, определяемую параметром kind.`\n      }\n    }\n  },\n  name: 'Tag. Статус через цветную статусную метку.'\n}",...StatusExample.parameters?.docs?.source}}},StatusBackgroundExample.parameters={...StatusBackgroundExample.parameters,docs:{...StatusBackgroundExample.parameters?.docs,source:{originalSource:"{\n  render: StatusBackgroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TagStatusBackgroundRaw\n      },\n      description: {\n        story: `Тэг также может отображать статус через цвет обводки и фона, когда нужен выраженный цветовой акцент.\\n\\nЧтобы \n        отобразить статус через цвет обводки и фона необходимо передать\n        в компонент параметр statusViaBackground, установленный в true.`\n      }\n    }\n  },\n  name: 'Tag. Статус через цвет обводки и фона.'\n}",...StatusBackgroundExample.parameters?.docs?.source}}},CustomColorsExample.parameters={...CustomColorsExample.parameters,docs:{...CustomColorsExample.parameters?.docs,source:{originalSource:"{\n  render: CustomColorsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TagCustomColorsRaw\n      },\n      description: {\n        story: `Тэг может иметь цветную статусную метку. Помимо предложенных вариантов метка может быть\n        окрашена в любой цвет на усмотрение пользователя. Для этого в качестве значения \n        параметра kind нужно указать объект со свойством background, содержащим значение кастомного цвета метки. \\n\\n Либо \n        тэг может отображать статус через цвет обводки и фона, когда нужен выраженный цветовой акцент.\n        В этом случае, помимо предложенных вариантов, фон и обводку тега можно окрасить в любые цвета. \n        Рекомендуются цветовые пары (фон, обводка) из представленных \n        в палитре цветов по следующей схеме: фон - color 10, обводка - основной цвет минус 1 шаг вниз.\n        Чтобы задать кастомные цвета фона и обводки тега нужно в качестве значения \n        параметра kind указать объект со свойствами background и border, содержащими соответственно кастомные значения цветов\n        фона и обводки тега.\\n\\nТакже помимо свойств background и border пользователь может задать свойство backgroundHover.\n        Данное свойство отвечает за цвет фона тега при ховере, в случае если тег является активным. Рекомендуется \n        в качестве значения backgroundHover выбирать из палитры цветов цвет, который на 1 шаг темнее цвета фона.`\n      }\n    }\n  },\n  name: 'Tag. Кастомные цвета.'\n}",...CustomColorsExample.parameters?.docs?.source}}},StateExample.parameters={...StateExample.parameters,docs:{...StateExample.parameters?.docs,source:{originalSource:"{\n  render: StateStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TagStateRaw\n      },\n      description: {\n        story: `Тэги могут быть как активными и служить, например, каталагизаторами, так и пассивными, просто отображая\n              принадлежность элемента к некоторой группе элементов имеющих общий признак.`\n      }\n    }\n  },\n  name: 'Tag. Активный и пассивный.'\n}",...StateExample.parameters?.docs?.source}}},TooltipExample.parameters={...TooltipExample.parameters,docs:{...TooltipExample.parameters?.docs,source:{originalSource:"{\n  render: TooltipStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TagTooltipRaw\n      },\n      description: {\n        story: `В случае ограниченного пространства используется тултип.`\n      }\n    }\n  },\n  name: 'Tag. Тултип.'\n}",...TooltipExample.parameters?.docs?.source}}},IconExample.parameters={...IconExample.parameters,docs:{...IconExample.parameters?.docs,source:{originalSource:"{\n  render: IconStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TagIconRaw\n      },\n      description: {\n        story: `Тэги могут быть с иконками, но только в том случае, если статус отображается\n        через цвет обводки и фона (параметр statusViaBackground установлен в true)`\n      }\n    }\n  },\n  name: 'Tag. С иконкой.'\n}",...IconExample.parameters?.docs?.source}}};let __namedExportsOrder=["Playground","StatusExample","StatusBackgroundExample","CustomColorsExample","StateExample","TooltipExample","IconExample"]},"./node_modules/@admiral-ds/icons/build/service/CheckOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgCheckOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgCheckOutline=function SvgCheckOutline(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M3 12c0-4.98 4.02-9 9-9 4.97 0 9 4.02 9 9a9 9 0 0 1-9 9c-4.98 0-9-4.03-9-9m9-7.71c-4.26 0-7.71 3.45-7.71 7.71 0 4.25 3.45 7.7 7.71 7.7 4.25 0 7.7-3.45 7.7-7.7 0-4.26-3.45-7.71-7.7-7.71m-.21 10.98c-.27.29-.73.3-1 .02l-2.84-2.84a.66.66 0 0 1 0-.92c.25-.25.67-.25.92 0l2.4 2.4 3.99-4.34c.24-.27.65-.28.92-.05.25.24.27.66.04.93z"})))};__webpack_require__.p},"./src/components/Tags/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>Tags});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _templateObject(){var data=_tagged_template_literal(["\n  display: flex;\n  flex-flow: wrap;\n  gap: 8px;\n"]);return _templateObject=function _templateObject(){return data},data}var TagsWrapper=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").Ay.div(_templateObject()),Tags=function(_param){var children=_param.children,width=_param.width,dimension=_param.dimension,kind=_param.kind,onClick=_param.onClick,props=_object_without_properties(_param,["children","width","dimension","kind","onClick"]);return/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TagsWrapper,_object_spread_props(_object_spread({},props),{children:react__WEBPACK_IMPORTED_MODULE_1__.Children.map(children,function(child){return/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(child)?/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(child,_object_spread_props(_object_spread({onClick:child.props.onClick||onClick,width:child.props.width||width,kind:child.props.kind||kind},child.props),{dimension:dimension})):null})}))};Tags.displayName="Tags";try{Tags.displayName="Tags",Tags.__docgenInfo={description:"",displayName:"Tags",props:{width:{defaultValue:null,description:"Ширина тэгов",name:"width",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Высота тэгов",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},kind:{defaultValue:null,description:"Тип тэгов",name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"success"'},{value:'"neutral"'},{value:'"danger"'},{value:'"warning"'},{value:'"green"'},{value:'"blue"'},{value:'"red"'},{value:'"orange"'}]}},onClick:{defaultValue:null,description:"Обработчик клика по тэгам",name:"onClick",required:!1,type:{name:"((event: KeyboardEvent<HTMLElement> | MouseEvent<HTMLElement, MouseEvent>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tags/index.tsx#Tags"]={docgenInfo:Tags.__docgenInfo,name:"Tags",path:"src/components/Tags/index.tsx#Tags"})}catch(__react_docgen_typescript_loader_error){}}}]);