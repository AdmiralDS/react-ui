"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[7563],{"./src/components/Stepper/stories/Stepper.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AdaptiveExample:()=>AdaptiveExample,ClickPropExample:()=>ClickPropExample,ClickableLinksExample:()=>ClickableLinksExample,CustomStepContentExample:()=>CustomStepContentExample,MobileExample:()=>MobileExample,Playground:()=>Playground,PreviousStepsExample:()=>PreviousStepsExample,StepKindsExample:()=>StepKindsExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Stepper_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),src=__webpack_require__("./src/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const steps=[{key:0,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",completed:!0},{key:1,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",completed:!0},{key:2,content:"Активный шаг, текст занимает максимум три строки"},{key:3,content:"Неактивный шаг, текст занимает максимум три строки"}],StepperPlaygroundTemplate=({lineClamp,activeStep,orientation,...args})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(src.Stepper,{lineClamp,activeStep:activeStep||2,orientation,...args,children:steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,onClick:step=>console.log(step.index),children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))})});try{StepperPlaygroundTemplate.displayName="StepperPlaygroundTemplate",StepperPlaygroundTemplate.__docgenInfo={description:"",displayName:"StepperPlaygroundTemplate",props:{orientation:{defaultValue:null,description:"Ориентация компонента",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},activeStep:{defaultValue:null,description:"Индекс активного шага, нумерация шагов начинается с 0.\nЭтот параметр будет перезаписан, если какому-то шагу задан параметр active равный true",name:"activeStep",required:!0,type:{name:"number"}},lineClamp:{defaultValue:null,description:"Количество строк в шаге, все шаги по высоте вмещают одинаковое количество строк",name:"lineClamp",required:!1,type:{name:"enum",value:[{value:"1"},{value:"3"},{value:"2"}]}},stepWidth:{defaultValue:null,description:"Ширина шага\nЕсли данный параметр не задан, то ширина шага будет адаптивной:\n- при горизонтальной ориентации все шаги будут в равной степени делить между собой свободное пространство (ширину степпера);\n- при вертикальной ориентации каждый шаг займет 100% ширины степпера.\nТо есть шаги будут пропорционально увеличиваться/уменьшаться при изменении ширины степпера.",name:"stepWidth",required:!1,type:{name:"string | number"}},hideLastStepLine:{defaultValue:null,description:"В последнем шаге опционально можно выключать статусную полосу",name:"hideLastStepLine",required:!1,type:{name:"boolean"}},mobile:{defaultValue:null,description:"Мобильное отображение компонента\nВ мобильной версии компонента применяется только горизонтальный вариант компонента, ширина шагов фиксирована,\nпо мере прохождения шагов происходит автоматический скролл по горизонтали",name:"mobile",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Stepper/stories/StepperPlayground.template.tsx#StepperPlaygroundTemplate"]={docgenInfo:StepperPlaygroundTemplate.__docgenInfo,name:"StepperPlaygroundTemplate",path:"src/components/Stepper/stories/StepperPlayground.template.tsx#StepperPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}const StepperStepKinds_template_steps=[{key:0,content:"Шаг с предупреждением",warning:!0},{key:1,content:"Disabled шаг",disabled:!0},{key:2,content:"Шаг с ошибкой",error:!0},{key:3,content:"Завершенный шаг",completed:!0},{key:4,content:"Активный шаг"},{key:5,content:"Неактивный шаг"}],StepperStepKindsTemplate=()=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)("div",{style:{maxWidth:"800px",overflow:"hidden"},children:(0,jsx_runtime.jsx)(src.Stepper,{activeStep:4,children:StepperStepKinds_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))})})}),Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"StepperAdaptivetemplate__Separator",componentId:"sc-1aefpax-0"})(["height:20px;width:100%;"]),StepperAdaptive_template_steps=[{key:0,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",link:"#",completed:!0},{key:1,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",link:"#",completed:!0},{key:2,content:"Активный шаг, текст занимает максимум три строки",link:"#"},{key:3,content:"Неактивный шаг, текст занимает максимум три строки",link:"#"}],StepperAdaptiveTemplate=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src.Stepper,{activeStep:2,children:StepperAdaptive_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(src.Stepper,{activeStep:2,orientation:"vertical",style:{width:"25%"},children:StepperAdaptive_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))})]}),StepperClickableLinks_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"StepperClickableLinkstemplate__Separator",componentId:"sc-pqykes-0"})(["height:20px;width:100%;"]),StepperClickableLinks_template_steps=[{key:0,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",link:"#",completed:!0},{key:1,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",link:"#",completed:!0},{key:2,content:"Активный шаг, текст занимает максимум три строки",link:"#"},{key:3,content:"Неактивный шаг, текст занимает максимум три строки",link:"#"}],StepperClickableLinksTemplate=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src.Stepper,{activeStep:2,children:StepperClickableLinks_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))}),(0,jsx_runtime.jsx)(StepperClickableLinks_template_Separator,{}),(0,jsx_runtime.jsx)(src.Stepper,{activeStep:2,orientation:"vertical",style:{width:"25%"},children:StepperClickableLinks_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))})]}),StepperCustomStepContent_template_steps=[{key:0,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",completed:!0},{key:1,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",completed:!0},{key:2,content:"Активный шаг, текст занимает максимум три строки"},{key:3,content:"Неактивный шаг, текст занимает максимум три строки"}],StepperCustomStepContentTemplate=()=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(src.Stepper,{lineClamp:2,activeStep:2,children:StepperCustomStepContent_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,children:(0,jsx_runtime.jsx)("i",{children:content})})))})}),StepperClickProp_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"StepperClickProptemplate__Separator",componentId:"sc-j6bui8-0"})(["height:20px;width:100%;"]),StepperClickProp_template_steps=[{key:0,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",completed:!0},{key:1,content:"Завершенный шаг, текст занимает максимум три строки, далее идет сокращение",completed:!0},{key:2,content:"Активный шаг, текст занимает максимум три строки"},{key:3,content:"Неактивный шаг, текст занимает максимум три строки"}],StepperClickPropTemplate=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(src.Stepper,{activeStep:2,children:StepperClickProp_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,onClick:step=>console.log(step.index),children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))}),(0,jsx_runtime.jsx)(StepperClickProp_template_Separator,{}),(0,jsx_runtime.jsx)(src.Stepper,{activeStep:2,orientation:"vertical",style:{width:"225px"},children:StepperClickProp_template_steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,onClick:step=>console.log(step.index),children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))})]}),initialSteps=[{key:0,content:"1. Пройденный шаг",completed:!0},{key:1,content:"2. Ранее пройденный шаг, на котрый мы вернулись с 4го шага"},{key:2,content:"3. Пройденный шаг",completed:!0},{key:3,content:"4. Отсюда мы вернулись на 2 шаг.",completed:!0},{key:4,content:"5. Неактивный шаг, еще не пройденный"}],StepperPreviousStepsTemplate=()=>{const[activeStep,setActiveStep]=react.useState(1),[steps,setSteps]=react.useState(initialSteps),handleStepClick=({index})=>{const newSteps=[...steps].map(((step,i)=>i<4?{...step,completed:i!==index}:step));setSteps(newSteps),setActiveStep(index)};return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)("div",{style:{maxWidth:"800px",overflow:"hidden"},children:(0,jsx_runtime.jsx)(src.Stepper,{lineClamp:2,activeStep,children:steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,onClick:handleStepClick,children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))})})})};var Button=__webpack_require__("./src/components/Button/index.tsx");const StepperMobile_template_initialSteps=[{key:0,content:"Текст занимает максимум три строки, далее идет сокращение"},{key:1,content:"Текст занимает максимум три строки, далее идет сокращение"},{key:2,content:"Текст занимает максимум три строки, далее идет сокращение"},{key:3,content:"Текст занимает максимум три строки, далее идет сокращение"}],StepperMobileTemplate=()=>{const[activeStep,setActiveStep]=react.useState(0),[steps,setSteps]=react.useState(StepperMobile_template_initialSteps);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)("div",{style:{width:"400px",overflow:"hidden"},children:[(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"100%",justifyContent:"space-between",marginBottom:"40px"},children:[(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const newSteps=[...steps].map(((step,i)=>i===activeStep-1?{...step,completed:!1}:step));setSteps(newSteps),setActiveStep(activeStep-1)},disabled:0===activeStep,dimension:"s",children:"Шаг назад"}),(0,jsx_runtime.jsx)(Button.$n,{onClick:()=>{const newSteps=[...steps].map(((step,i)=>i===activeStep?{...step,completed:!0}:step));setSteps(newSteps),setActiveStep(activeStep+1)},disabled:3===activeStep,dimension:"s",children:"Шаг вперёд"})]}),(0,jsx_runtime.jsx)(src.Stepper,{activeStep,mobile:!0,children:steps.map((({content,...step})=>(0,jsx_runtime.jsx)(src.Step,{...step,children:(0,jsx_runtime.jsx)(src.StepContent,{tooltipProps:{style:{maxWidth:"300px"}},children:content})})))})]})})},Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"Stepperstories__Desc",componentId:"sc-17pvfai-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Stepper_stories_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"Stepperstories__Separator",componentId:"sc-17pvfai-1"})(["height:20px;width:100%;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Компонент Stepper — визуальное отображение пользовательского прогресса через набор шагов. Уведомляет пользователя о текущем положении на пути при выполнении конкретной задачи.",(0,jsx_runtime.jsx)(Stepper_stories_Separator,{}),"Названия шагов должны сопровождать индикатор прогресса, чтобы указать, что пользователь будет выполнять на каждом из этапов. Рекомендуется использовать короткие и емкие названия шагов для явного отображения сути.",(0,jsx_runtime.jsx)(Stepper_stories_Separator,{}),"Компонент представлен в двух вариантах — горизонтальном и вертикальном."]});Description.displayName="Description";const Stepper_stories={title:"Admiral-2.1/Stepper",decorators:void 0,component:src.Stepper,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A16671"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A16789"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A16767"}]},argTypes:{orientation:{options:["horizontal","vertical"],control:{type:"radio"}},lineClamp:{options:[1,2,3],control:{type:"radio"}},hideLastStepLine:{control:{type:"boolean"}},mobile:{control:{type:"boolean"}},stepWidth:{control:!1}}},PlaygroundStory=props=>(0,jsx_runtime.jsx)(StepperPlaygroundTemplate,{...props});PlaygroundStory.displayName="PlaygroundStory";const Playground={render:PlaygroundStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step, StepContent } from '@admiral-ds/react-ui';\nimport type { StepperProps } from '@admiral-ds/react-ui';\n\nconst steps = [\n  {\n    key: 0,\n    content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение',\n    completed: true,\n  },\n  { key: 1, content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение', completed: true },\n  { key: 2, content: 'Активный шаг, текст занимает максимум три строки' },\n  { key: 3, content: 'Неактивный шаг, текст занимает максимум три строки' },\n];\n\nexport const StepperPlaygroundTemplate = ({ lineClamp, activeStep, orientation, ...args }: StepperProps) => {\n  return (\n    <>\n      <Stepper lineClamp={lineClamp} activeStep={activeStep || 2} orientation={orientation} {...args}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step} onClick={(step: any) => console.log(step.index)}>\n              <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </>\n  );\n};\n"}}},name:"Stepper. Playground."},StepKindsStory=()=>(0,jsx_runtime.jsx)(StepperStepKindsTemplate,{});StepKindsStory.displayName="StepKindsStory";const StepKindsExample={render:StepKindsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step, StepContent } from '@admiral-ds/react-ui';\n\nconst steps = [\n  { key: 0, content: 'Шаг с предупреждением', warning: true },\n  { key: 1, content: 'Disabled шаг', disabled: true },\n  { key: 2, content: 'Шаг с ошибкой', error: true },\n  { key: 3, content: 'Завершенный шаг', completed: true },\n  { key: 4, content: 'Активный шаг' },\n  { key: 5, content: 'Неактивный шаг' },\n];\n\nexport const StepperStepKindsTemplate = () => {\n  return (\n    <>\n      <div style={{ maxWidth: '800px', overflow: 'hidden' }}>\n        <Stepper activeStep={4}>\n          {steps.map(({ content, ...step }) => {\n            return (\n              <Step {...step}>\n                <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n              </Step>\n            );\n          })}\n        </Stepper>\n      </div>\n    </>\n  );\n};\n"},description:{story:"Для обозначения активного шага в компонент Stepper нужно передать параметр activeStep, равный индексу активного шага.\n        Либо для самого Step можно задать параметр active (перезаписывает собой параметр activeStep). \n\n Чтобы обозначить завершенные \n        (пройденные) шаги, для соответствующих шагов необходимо задать параметр completed. Также компонент Step имеет параметры disabled, \n        error, warning.\n\nПройденные шаги могут быть кликабельными, для этого у них \n        должен быть задан колбек onClick или параметр link."}}},name:"Stepper. Виды шагов."},AdaptiveStory=()=>(0,jsx_runtime.jsx)(StepperAdaptiveTemplate,{});AdaptiveStory.displayName="AdaptiveStory";const AdaptiveExample={render:AdaptiveStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step, StepContent } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 100%;\n`;\n\nconst steps = [\n  {\n    key: 0,\n    content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение',\n    link: '#',\n    completed: true,\n  },\n  {\n    key: 1,\n    content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение',\n    link: '#',\n    completed: true,\n  },\n  { key: 2, content: 'Активный шаг, текст занимает максимум три строки', link: '#' },\n  { key: 3, content: 'Неактивный шаг, текст занимает максимум три строки', link: '#' },\n];\n\nexport const StepperAdaptiveTemplate = () => {\n  return (\n    <>\n      <Stepper activeStep={2}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step}>\n              <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <Separator />\n      <Stepper activeStep={2} orientation=\"vertical\" style={{ width: '25%' }}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step}>\n              <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </>\n  );\n};\n"},description:{story:"С помощью параметра stepWidth можно задать ширину шага. Если данный параметр не задан, \n        то ширина шага будет рассчитываться следующим образом:\n\n- при горизонтальной ориентации все \n        шаги будут в равной степени делить между собой свободное пространство;\n\n- при вертикальной \n        ориентации каждый шаг займет 100% ширины степпера.\n\nТаким образом шаги будут пропорционально \n        увеличиваться/уменьшаться при изменении ширины степпера."}}},name:"Stepper. Адаптив."},CustomStepContentStory=()=>(0,jsx_runtime.jsx)(StepperCustomStepContentTemplate,{});CustomStepContentStory.displayName="CustomStepContentStory";const CustomStepContentExample={render:CustomStepContentStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step } from '@admiral-ds/react-ui';\n\nconst steps = [\n  {\n    key: 0,\n    content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение',\n    completed: true,\n  },\n  { key: 1, content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение', completed: true },\n  { key: 2, content: 'Активный шаг, текст занимает максимум три строки' },\n  { key: 3, content: 'Неактивный шаг, текст занимает максимум три строки' },\n];\n\nexport const StepperCustomStepContentTemplate = () => {\n  return (\n    <>\n      <Stepper lineClamp={2} activeStep={2}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step}>\n              <i>{content}</i>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </>\n  );\n};\n"}}},name:"Stepper. Кастомный StepContent."},ClickableLinksStory=()=>(0,jsx_runtime.jsx)(StepperClickableLinksTemplate,{});ClickableLinksStory.displayName="ClickableLinksStory";const ClickableLinksExample={render:ClickableLinksStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step, StepContent } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 100%;\n`;\n\nconst steps = [\n  {\n    key: 0,\n    content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение',\n    link: '#',\n    completed: true,\n  },\n  {\n    key: 1,\n    content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение',\n    link: '#',\n    completed: true,\n  },\n  { key: 2, content: 'Активный шаг, текст занимает максимум три строки', link: '#' },\n  { key: 3, content: 'Неактивный шаг, текст занимает максимум три строки', link: '#' },\n];\n\nexport const StepperClickableLinksTemplate = () => {\n  return (\n    <>\n      <Stepper activeStep={2}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step}>\n              <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <Separator />\n      <Stepper activeStep={2} orientation=\"vertical\" style={{ width: '25%' }}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step}>\n              <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </>\n  );\n};\n"}}},name:"Stepper. Шаги в виде ссылок."},ClickPropStory=()=>(0,jsx_runtime.jsx)(StepperClickPropTemplate,{});ClickPropStory.displayName="ClickPropStory";const ClickPropExample={render:ClickPropStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step, StepContent } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 100%;\n`;\n\nconst steps = [\n  {\n    key: 0,\n    content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение',\n    completed: true,\n  },\n  { key: 1, content: 'Завершенный шаг, текст занимает максимум три строки, далее идет сокращение', completed: true },\n  { key: 2, content: 'Активный шаг, текст занимает максимум три строки' },\n  { key: 3, content: 'Неактивный шаг, текст занимает максимум три строки' },\n];\n\nexport const StepperClickPropTemplate = () => {\n  return (\n    <>\n      <Stepper activeStep={2}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step} onClick={(step: any) => console.log(step.index)}>\n              <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <Separator />\n      <Stepper activeStep={2} orientation=\"vertical\" style={{ width: '225px' }}>\n        {steps.map(({ content, ...step }) => {\n          return (\n            <Step {...step} onClick={(step: any) => console.log(step.index)}>\n              <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </>\n  );\n};\n"}}},name:"Stepper. Кликабельные шаги."},PreviousStepsStory=()=>(0,jsx_runtime.jsx)(StepperPreviousStepsTemplate,{});PreviousStepsStory.displayName="PreviousStepsStory";const PreviousStepsExample={render:PreviousStepsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step, StepContent } from '@admiral-ds/react-ui';\n\nconst initialSteps = [\n  {\n    key: 0,\n    content: '1. Пройденный шаг',\n    completed: true,\n  },\n  { key: 1, content: '2. Ранее пройденный шаг, на котрый мы вернулись с 4го шага' },\n  { key: 2, content: '3. Пройденный шаг', completed: true },\n  { key: 3, content: '4. Отсюда мы вернулись на 2 шаг.', completed: true },\n  { key: 4, content: '5. Неактивный шаг, еще не пройденный' },\n];\n\nexport const StepperPreviousStepsTemplate = () => {\n  const [activeStep, setActiveStep] = React.useState(1);\n  const [steps, setSteps] = React.useState(initialSteps);\n  const handleStepClick = ({ index }: any) => {\n    const newSteps = [...steps].map((step, i) => (i < 4 ? { ...step, completed: i !== index } : step));\n    setSteps(newSteps);\n    setActiveStep(index);\n  };\n  return (\n    <>\n      <div style={{ maxWidth: '800px', overflow: 'hidden' }}>\n        <Stepper lineClamp={2} activeStep={activeStep}>\n          {steps.map(({ content, ...step }) => {\n            return (\n              <Step {...step} onClick={handleStepClick}>\n                <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n              </Step>\n            );\n          })}\n        </Stepper>\n      </div>\n    </>\n  );\n};\n"},description:{story:"В случаях необходимости и когда это позволяет логика шагов, например, результаты предыдущих \n        шагов не влияют на последующие, допускается возможность возврата к предыдущим шагам."}}},name:"Stepper. Возврат к предыдущим шагам."},MobileStory=()=>(0,jsx_runtime.jsx)(StepperMobileTemplate,{});MobileStory.displayName="MobileStory";const MobileExample={render:MobileStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Stepper, Step, StepContent, Button } from '@admiral-ds/react-ui';\n\nconst initialSteps = [\n  {\n    key: 0,\n    content: 'Текст занимает максимум три строки, далее идет сокращение',\n  },\n  { key: 1, content: 'Текст занимает максимум три строки, далее идет сокращение' },\n  { key: 2, content: 'Текст занимает максимум три строки, далее идет сокращение' },\n  { key: 3, content: 'Текст занимает максимум три строки, далее идет сокращение' },\n];\n\nexport const StepperMobileTemplate = () => {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [steps, setSteps] = React.useState(initialSteps);\n\n  return (\n    <>\n      <div style={{ width: '400px', overflow: 'hidden' }}>\n        <div style={{ display: 'flex', width: '100%', justifyContent: 'space-between', marginBottom: '40px' }}>\n          <Button\n            onClick={() => {\n              const newSteps = [...steps].map((step, i) =>\n                i === activeStep - 1 ? { ...step, completed: false } : step,\n              );\n              setSteps(newSteps);\n              setActiveStep(activeStep - 1);\n            }}\n            disabled={activeStep === 0}\n            dimension=\"s\"\n          >\n            Шаг назад\n          </Button>\n          <Button\n            onClick={() => {\n              const newSteps = [...steps].map((step, i) => (i === activeStep ? { ...step, completed: true } : step));\n              setSteps(newSteps);\n              setActiveStep(activeStep + 1);\n            }}\n            disabled={activeStep === 3}\n            dimension=\"s\"\n          >\n            Шаг вперёд\n          </Button>\n        </div>\n        <Stepper activeStep={activeStep} mobile>\n          {steps.map(({ content, ...step }) => {\n            return (\n              <Step {...step}>\n                <StepContent tooltipProps={{ style: { maxWidth: '300px' } }}>{content}</StepContent>\n              </Step>\n            );\n          })}\n        </Stepper>\n      </div>\n    </>\n  );\n};\n"},description:{story:"В мобильной версии применяется только горизонтальный вариант компонента\n        с автоматическим скроллом по горизонтали по мере прохождения шагов.\n\nКомпонент можно скроллить пальцем,\n        если нужно посмотреть пройденные или будущие шаги.\n\nПри переходе на следующий шаг, который становится\n        текущим, он выравнивается относительно левого края на расстоянии 16px (боковой падинг). Шаг перед текущим\n        уходит за границы экрана.\n\nДля перевода компонента в мобильный вид используйте параметр mobile."}}},name:"Stepper. Мобильная версия."};Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  render: PlaygroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperPlaygroundRaw\n      }\n    }\n  },\n  name: 'Stepper. Playground.'\n}",...Playground.parameters?.docs?.source}}},StepKindsExample.parameters={...StepKindsExample.parameters,docs:{...StepKindsExample.parameters?.docs,source:{originalSource:"{\n  render: StepKindsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperStepKindsRaw\n      },\n      description: {\n        story: `Для обозначения активного шага в компонент Stepper нужно передать параметр activeStep, равный индексу активного шага.\n        Либо для самого Step можно задать параметр active (перезаписывает собой параметр activeStep). \\n\\n Чтобы обозначить завершенные \n        (пройденные) шаги, для соответствующих шагов необходимо задать параметр completed. Также компонент Step имеет параметры disabled, \n        error, warning.\\n\\nПройденные шаги могут быть кликабельными, для этого у них \n        должен быть задан колбек onClick или параметр link.`\n      }\n    }\n  },\n  name: 'Stepper. Виды шагов.'\n}",...StepKindsExample.parameters?.docs?.source}}},AdaptiveExample.parameters={...AdaptiveExample.parameters,docs:{...AdaptiveExample.parameters?.docs,source:{originalSource:"{\n  render: AdaptiveStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperAdaptiveRaw\n      },\n      description: {\n        story: `С помощью параметра stepWidth можно задать ширину шага. Если данный параметр не задан, \n        то ширина шага будет рассчитываться следующим образом:\\n\\n- при горизонтальной ориентации все \n        шаги будут в равной степени делить между собой свободное пространство;\\n\\n- при вертикальной \n        ориентации каждый шаг займет 100% ширины степпера.\\n\\nТаким образом шаги будут пропорционально \n        увеличиваться/уменьшаться при изменении ширины степпера.`\n      }\n    }\n  },\n  name: 'Stepper. Адаптив.'\n}",...AdaptiveExample.parameters?.docs?.source}}},CustomStepContentExample.parameters={...CustomStepContentExample.parameters,docs:{...CustomStepContentExample.parameters?.docs,source:{originalSource:"{\n  render: CustomStepContentStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperCustomStepContentRaw\n      }\n    }\n  },\n  name: 'Stepper. Кастомный StepContent.'\n}",...CustomStepContentExample.parameters?.docs?.source}}},ClickableLinksExample.parameters={...ClickableLinksExample.parameters,docs:{...ClickableLinksExample.parameters?.docs,source:{originalSource:"{\n  render: ClickableLinksStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperClickableLinksRaw\n      }\n    }\n  },\n  name: 'Stepper. Шаги в виде ссылок.'\n}",...ClickableLinksExample.parameters?.docs?.source}}},ClickPropExample.parameters={...ClickPropExample.parameters,docs:{...ClickPropExample.parameters?.docs,source:{originalSource:"{\n  render: ClickPropStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperClickPropRaw\n      }\n    }\n  },\n  name: 'Stepper. Кликабельные шаги.'\n}",...ClickPropExample.parameters?.docs?.source}}},PreviousStepsExample.parameters={...PreviousStepsExample.parameters,docs:{...PreviousStepsExample.parameters?.docs,source:{originalSource:"{\n  render: PreviousStepsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperPreviousStepsRaw\n      },\n      description: {\n        story: `В случаях необходимости и когда это позволяет логика шагов, например, результаты предыдущих \n        шагов не влияют на последующие, допускается возможность возврата к предыдущим шагам.`\n      }\n    }\n  },\n  name: 'Stepper. Возврат к предыдущим шагам.'\n}",...PreviousStepsExample.parameters?.docs?.source}}},MobileExample.parameters={...MobileExample.parameters,docs:{...MobileExample.parameters?.docs,source:{originalSource:"{\n  render: MobileStory,\n  parameters: {\n    docs: {\n      source: {\n        code: StepperMobileRaw\n      },\n      description: {\n        story: `В мобильной версии применяется только горизонтальный вариант компонента\n        с автоматическим скроллом по горизонтали по мере прохождения шагов.\\n\\nКомпонент можно скроллить пальцем,\n        если нужно посмотреть пройденные или будущие шаги.\\n\\nПри переходе на следующий шаг, который становится\n        текущим, он выравнивается относительно левого края на расстоянии 16px (боковой падинг). Шаг перед текущим\n        уходит за границы экрана.\\n\\nДля перевода компонента в мобильный вид используйте параметр mobile.`\n      }\n    }\n  },\n  name: 'Stepper. Мобильная версия.'\n}",...MobileExample.parameters?.docs?.source}}};const __namedExportsOrder=["Playground","StepKindsExample","AdaptiveExample","CustomStepContentExample","ClickableLinksExample","ClickPropExample","PreviousStepsExample","MobileExample"]}}]);