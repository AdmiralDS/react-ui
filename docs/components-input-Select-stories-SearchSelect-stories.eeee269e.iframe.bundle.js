"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[4083],{"./src/components/input/Select/stories/SearchSelect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AsyncSearchSelect:()=>AsyncSearchSelect,CustomChipMultiSearchSelect:()=>CustomChipMultiSearchSelect,CustomOption:()=>CustomOption,CustomOptionMultiSearchSelect:()=>CustomOptionMultiSearchSelect,ExpandedHeightMultiSearchSelect:()=>ExpandedHeightMultiSearchSelect,ExternalFilter:()=>ExternalFilter,LoadOnScroll:()=>LoadOnScroll,MultipleWithAddOption:()=>MultipleWithAddOption,MultipleWithApply:()=>MultipleWithApply,RenderProps:()=>RenderProps,RenderValue:()=>RenderValue,SearchSelectOptionGroup:()=>SearchSelectOptionGroup,SearchSelectWithFilter:()=>SearchSelectWithFilter,UncontrolledSearchSelect:()=>UncontrolledSearchSelect,VirtualScroll:()=>VirtualScroll,WithAddButton:()=>WithAddButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SearchSelect_stories});var queryClient=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/queryClient.js"),QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"),Select=__webpack_require__("./src/components/input/Select/index.tsx"),types=__webpack_require__("./src/components/input/types.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),Option=__webpack_require__("./src/components/input/Select/Option/index.tsx");const OPTIONS_SIMPLE=["teeext 1","Гигантский текст, который настолько большой, что, когда он проходил мимо телевизора, ты пропустил 2 серии любимого сериала","text 3","text 4","text 5","texttt 6","text 7","Ответ на «Главный вопрос жизни, вселенной и всего такого»","text 69"],OPTIONS_NAMES=["Саша Даль","Алексей Елесин","Константин Ионочкин","Анна Корженко","Фидель","Константин Колешонок","Алексей Орлов"],OPTIONS=[{value:"val1",text:"Текст 1",extraText:"Доооп Текст 1"},{value:"val2",text:"Текст 2",extraText:"Доп Теttкст 2"},{value:"val3",text:"Текст 3",extraText:"дддопТекст 3"},{value:"val4",text:"Текст 444",extraText:"Доооп Тексттт 41232"}],MULTISELECT_OPTIONS=[{text:"Здесь ооооочень большой текст, который может, так сказать, и не поместиться в одну строку",value:"big"}];var OptionGroup=__webpack_require__("./src/components/input/Select/OptionGroup.tsx"),typography=__webpack_require__("./src/components/Typography/typography.ts");const jump=(0,styled_components_browser_esm.F4)(["50%{transform:translate3d(0,-7px,0);}"]),animation=(0,styled_components_browser_esm.iv)(["animation:"," 0.35s ease-in-out;"],jump),Icon=styled_components_browser_esm.ZP.div.withConfig({displayName:"styled__Icon",componentId:"sc-oj88en-0"})(["width:20px;height:20px;border:1px solid #8a96a8;border-radius:50%;box-sizing:border-box;margin-right:10px;transform-origin:bottom center;",""],(({$shouldAnimate})=>$shouldAnimate?animation:"")),TextWrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"styled__TextWrapper",componentId:"sc-oj88en-1"})(["display:flex;flex-direction:row;align-items:center;column-gap:8px;"]),FormValuesWrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"styled__FormValuesWrapper",componentId:"sc-oj88en-2"})(["font-family:'VTB Group UI',serif;font-size:16px;line-height:24px;border:1px solid black;border-radius:",";min-height:100px;padding:12px;color:",";"],(p=>(0,borderRadius.c8)(p.theme.shape)),(({theme})=>theme.color["Neutral/Neutral 90"])),ExtraText=styled_components_browser_esm.ZP.div.withConfig({displayName:"styled__ExtraText",componentId:"sc-oj88en-3"})(["color:",";",""],(({theme})=>theme.color["Neutral/Neutral 30"]),typography.c["Body/Body 2 Short"]),Separator=styled_components_browser_esm.ZP.div.withConfig({displayName:"styled__Separator",componentId:"sc-oj88en-4"})(["height:20px;"]),Form=styled_components_browser_esm.ZP.form.withConfig({displayName:"styled__Form",componentId:"sc-oj88en-5"})(["> *{margin-bottom:12px;}"]),StyledGroup=(0,styled_components_browser_esm.ZP)(OptionGroup.Y).withConfig({displayName:"styled__StyledGroup",componentId:"sc-oj88en-6"})(["color:",";",""],(p=>p.theme.color["Purple/Purple 60 Main"]),typography.c["Main/S"]);var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const CustomOptionWrapper=(0,styled_components_browser_esm.ZP)(MenuItem.s).withConfig({displayName:"SearchSelectRenderPropstemplate__CustomOptionWrapper",componentId:"sc-9dapul-0"})(["justify-content:flex-start;flex-wrap:nowrap;white-space:pre-wrap;"]),MyIncredibleOption=({text,shouldAnimate,...props})=>(0,jsx_runtime.jsxs)(CustomOptionWrapper,{...props,children:[(0,jsx_runtime.jsx)(Icon,{$shouldAnimate:shouldAnimate}),(0,jsx_runtime.jsx)(TextWrapper,{children:text})]});MyIncredibleOption.displayName="MyIncredibleOption";const SearchSelectRenderPropsTemplate=props=>{const[selectValue,setSelectValue]=react.useState(props.value?String(props.value):OPTIONS[2].value);return(0,jsx_runtime.jsx)(Select.Ph,{...props,value:selectValue,mode:"searchSelect",onChange:e=>{setSelectValue(e.target.value),props.onChange?.(e)},children:OPTIONS.map((({text,value})=>(0,jsx_runtime.jsx)(Option.W,{value,renderOption:options=>(0,react.createElement)(MyIncredibleOption,{text,shouldAnimate:options.hovered&&value!==selectValue,...options,key:value})},value)))})};SearchSelectRenderPropsTemplate.displayName="SearchSelectRenderPropsTemplate";try{SearchSelectRenderPropsTemplate.displayName="SearchSelectRenderPropsTemplate",SearchSelectRenderPropsTemplate.__docgenInfo={description:"",displayName:"SearchSelectRenderPropsTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectRenderProps.template.tsx#SearchSelectRenderPropsTemplate"]={docgenInfo:SearchSelectRenderPropsTemplate.__docgenInfo,name:"SearchSelectRenderPropsTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectRenderProps.template.tsx#SearchSelectRenderPropsTemplate"})}catch(__react_docgen_typescript_loader_error){}const InvisibleItem=(0,styled_components_browser_esm.ZP)(MenuItem.s).withConfig({displayName:"SearchSelectLoadingOnScrolltemplate__InvisibleItem",componentId:"sc-gx9a3o-0"})(["height:1px;padding:0;"]),LastOption=({containerRef,onVisible,...props})=>{const[visible,setVisible]=react.useState(!1),ref=react.useRef(null),handleIntersection=entries=>{entries[0].isIntersecting&&!visible&&(setVisible(!0),onVisible?.()),!entries[0].isIntersecting&&visible&&setVisible(!1)};return react.useEffect((()=>{const observer=new IntersectionObserver(handleIntersection,{root:containerRef?.current,threshold:[0,1]});return containerRef?.current&&ref.current&&observer.observe(ref.current),()=>observer.disconnect()}),[containerRef,visible]),(0,jsx_runtime.jsx)(InvisibleItem,{ref,...props})};LastOption.displayName="LastOption";const LoadOnScrollTemplate=props=>{const[count,setCount]=react.useState(8),renderOptions=react.useMemo((()=>{const array=Array.from({length:count},((v,k)=>`${k}0000`)).map(((item,index)=>(0,jsx_runtime.jsx)(Option.W,{value:item,children:item},`${index}/${count}`)));return array.push((0,jsx_runtime.jsx)(Option.W,{value:"",renderOption:options=>(0,react.createElement)(LastOption,{...options,onVisible:()=>setCount(count+5),key:"last"})},`last/${count}`)),array}),[count]);return(0,jsx_runtime.jsx)(Select.Ph,{...props,mode:"searchSelect",children:renderOptions})};LoadOnScrollTemplate.displayName="LoadOnScrollTemplate";try{LoadOnScrollTemplate.displayName="LoadOnScrollTemplate",LoadOnScrollTemplate.__docgenInfo={description:"",displayName:"LoadOnScrollTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectLoadingOnScroll.template.tsx#LoadOnScrollTemplate"]={docgenInfo:LoadOnScrollTemplate.__docgenInfo,name:"LoadOnScrollTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectLoadingOnScroll.template.tsx#LoadOnScrollTemplate"})}catch(__react_docgen_typescript_loader_error){}var useQuery=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/useQuery.js"),useDebounce=__webpack_require__("./src/components/common/hooks/useDebounce.ts");const SearchSelectWithAsyncLoadingTemplate=props=>{const[selectValue,setSelectValue]=react.useState(props.value?String(props.value):""),[options,setOptions]=react.useState([]),[filter,setFilter]=react.useState(""),debouncedFilter=(0,useDebounce.N)(filter,500),{data,isLoading}=(0,useQuery.a)({queryKey:["products",debouncedFilter],queryFn:()=>async function searchPeopleByName(name){const response=await fetch("https://swapi.dev/api/people/?"+new URLSearchParams({search:name}));if(!response.ok)throw new Error("Network response was not ok");return response.json()}(debouncedFilter)});react.useEffect((()=>{if(data){const options=data.results.map((({name})=>({value:name,text:name})));setOptions(options)}}),[data]);return(0,jsx_runtime.jsx)(Select.Ph,{...props,value:selectValue,isLoading,onChange:e=>{setSelectValue(e.target.value),props.onChange?.(e)},onInputChange:e=>{setFilter(e.target.value)},mode:"searchSelect",children:options.map((option=>(0,jsx_runtime.jsx)(Option.W,{value:option.value,children:option.text},option.value)))})};SearchSelectWithAsyncLoadingTemplate.displayName="SearchSelectWithAsyncLoadingTemplate";try{SearchSelectWithAsyncLoadingTemplate.displayName="SearchSelectWithAsyncLoadingTemplate",SearchSelectWithAsyncLoadingTemplate.__docgenInfo={description:"",displayName:"SearchSelectWithAsyncLoadingTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectWithAsyncLoading.template.tsx#SearchSelectWithAsyncLoadingTemplate"]={docgenInfo:SearchSelectWithAsyncLoadingTemplate.__docgenInfo,name:"SearchSelectWithAsyncLoadingTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectWithAsyncLoading.template.tsx#SearchSelectWithAsyncLoadingTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelectWithFilterTemplate=({placeholder="Placeholder",...props})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.Ph,{...props,placeholder,mode:"searchSelect",dropContainerClassName:"dropContainerClass",children:OPTIONS_SIMPLE.map(((option,ind)=>(0,jsx_runtime.jsx)(Option.W,{value:option,disabled:4===ind,children:option},option)))})});try{SearchSelectWithFilterTemplate.displayName="SearchSelectWithFilterTemplate",SearchSelectWithFilterTemplate.__docgenInfo={description:"",displayName:"SearchSelectWithFilterTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectWithFilter.template.tsx#SearchSelectWithFilterTemplate"]={docgenInfo:SearchSelectWithFilterTemplate.__docgenInfo,name:"SearchSelectWithFilterTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectWithFilter.template.tsx#SearchSelectWithFilterTemplate"})}catch(__react_docgen_typescript_loader_error){}var utils=__webpack_require__("./src/components/input/Select/utils.ts"),T=__webpack_require__("./src/components/T/index.tsx");const SearchSelectCustomOptionTemplate=props=>{const[selectValue,setSelectValue]=react.useState(props.value?String(props.value):OPTIONS[2].value);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"div",children:"Фильтрация элементов значению, тексту и дополнительному тексту"}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(Select.Ph,{...props,value:selectValue,mode:"searchSelect",onFilterItem:(value,searchValue,searchFormat)=>{const option=OPTIONS.find((item=>item.value===value));return!!option&&((0,utils.j)(value,searchValue,searchFormat)||(0,utils.j)(option.text,searchValue,searchFormat)||(0,utils.j)(option.extraText,searchValue,searchFormat))},onChange:e=>{setSelectValue(e.target.value),props.onChange?.(e)},children:OPTIONS.map((option=>(0,jsx_runtime.jsxs)(Option.W,{value:option.value,children:[(0,jsx_runtime.jsx)(Icon,{}),(0,jsx_runtime.jsxs)(TextWrapper,{children:[option.text,(0,jsx_runtime.jsx)(ExtraText,{children:option.extraText})]})]},option.value)))})]})};try{SearchSelectCustomOptionTemplate.displayName="SearchSelectCustomOptionTemplate",SearchSelectCustomOptionTemplate.__docgenInfo={description:"",displayName:"SearchSelectCustomOptionTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectCustomOption.template.tsx#SearchSelectCustomOptionTemplate"]={docgenInfo:SearchSelectCustomOptionTemplate.__docgenInfo,name:"SearchSelectCustomOptionTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectCustomOption.template.tsx#SearchSelectCustomOptionTemplate"})}catch(__react_docgen_typescript_loader_error){}var Cuba=__webpack_require__("./node_modules/@admiral-ds/icons/build/flags/Cuba.svg"),Belarus=__webpack_require__("./node_modules/@admiral-ds/icons/build/flags/Belarus.svg"),RussianFederation=__webpack_require__("./node_modules/@admiral-ds/icons/build/flags/RussianFederation.svg");const RenderingValue=styled_components_browser_esm.ZP.div.withConfig({displayName:"SearchSelectRenderValuetemplate__RenderingValue",componentId:"sc-197k3tu-0"})(["color:",";display:flex;flex:1 1 100%;column-gap:8px;padding:0 3px;border-width:1px;border-style:dotted;border-radius:4px;border-color:",";background-color:",";box-sizing:border-box;"],(p=>p.theme.color["Teal/Teal 80"]),(p=>p.theme.color["Teal/Teal 80"]),(p=>p.theme.color["Teal/Teal 10"])),SearchSelectRenderValueTemplate=props=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.Ph,{...props,mode:"searchSelect",multiple:!1,placeholder:"Placeholder",renderSelectValue:value=>{if("string"==typeof value&&value){const Flag=(value=>"Фидель"===value?Cuba.r:"Константин Колешонок"===value?Belarus.r:RussianFederation.r)(value);return(0,jsx_runtime.jsxs)(RenderingValue,{children:[(0,jsx_runtime.jsx)(Flag,{height:24}),value]})}},children:OPTIONS_NAMES.map((option=>(0,jsx_runtime.jsx)(Option.W,{value:option,children:option},option)))})});try{SearchSelectRenderValueTemplate.displayName="SearchSelectRenderValueTemplate",SearchSelectRenderValueTemplate.__docgenInfo={description:"",displayName:"SearchSelectRenderValueTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectRenderValue.template.tsx#SearchSelectRenderValueTemplate"]={docgenInfo:SearchSelectRenderValueTemplate.__docgenInfo,name:"SearchSelectRenderValueTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectRenderValue.template.tsx#SearchSelectRenderValueTemplate"})}catch(__react_docgen_typescript_loader_error){}var MenuActionsPanel=__webpack_require__("./src/components/Menu/MenuActionsPanel.tsx"),TextButton=__webpack_require__("./src/components/TextButton/index.tsx"),PlusOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/PlusOutline.svg");const SearchSelectWithAddButtonTemplate=props=>{const[selectValue,setSelectValue]=react.useState(""),[searchValue,setSearchValue]=react.useState(""),[options,setOptions]=react.useState(OPTIONS_SIMPLE),handleAddButtonClick=()=>{searchValue&&!options.includes(searchValue)&&setOptions([...options,searchValue])},addButtonProps=react.useMemo((()=>({disabled:options.includes(searchValue)||!searchValue,text:searchValue?`Добавить «${searchValue}»`:"Добавить"})),[searchValue,options]),menuPanelContentDimension=void 0===props.dimension||"xl"===props.dimension?"l":props.dimension;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.Ph,{...props,onInputChange:e=>{setSearchValue(e.target.value)},placeholder:"Placeholder",mode:"searchSelect",value:selectValue,onChange:e=>{setSelectValue(e.target.value),props.onChange?.(e)},"data-menu-id":"test-menu",renderDropDownBottomPanel:({dimension=menuPanelContentDimension})=>(0,jsx_runtime.jsx)(MenuActionsPanel.q,{dimension,children:(0,jsx_runtime.jsx)(TextButton.A,{...addButtonProps,iconStart:(0,jsx_runtime.jsx)(PlusOutline.r,{}),onClick:handleAddButtonClick})}),children:options.map(((option,ind)=>(0,jsx_runtime.jsx)(Option.W,{value:option,disabled:4===ind,children:option},option)))})})};try{SearchSelectWithAddButtonTemplate.displayName="SearchSelectWithAddButtonTemplate",SearchSelectWithAddButtonTemplate.__docgenInfo={description:"",displayName:"SearchSelectWithAddButtonTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectWithAddButton.template.tsx#SearchSelectWithAddButtonTemplate"]={docgenInfo:SearchSelectWithAddButtonTemplate.__docgenInfo,name:"SearchSelectWithAddButtonTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectWithAddButton.template.tsx#SearchSelectWithAddButtonTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelectOptionGroupTemplate=props=>{const[selectValue,setSelectValue]=react.useState("Похо Торо Моронго");return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(Select.Ph,{...props,value:selectValue,mode:"searchSelect",onChange:e=>setSelectValue(e.target.value),dimension:"xl",children:[(0,jsx_runtime.jsxs)(StyledGroup,{label:"Сегодня выступают",children:[(0,jsx_runtime.jsx)(Option.W,{value:"Анигиляторная пушка",children:"Анигиляторная пушка"}),(0,jsx_runtime.jsx)(Option.W,{value:"Похо Торо Моронго",children:"Похо Торо Моронго"})]}),(0,jsx_runtime.jsxs)(OptionGroup.Y,{label:"Группа фрукты",disabled:!0,children:[(0,jsx_runtime.jsx)(Option.W,{value:"Саша Даль",children:"Саша Даль"}),(0,jsx_runtime.jsx)(Option.W,{value:"Алексей Елесин",children:"Алексей Елесин"}),(0,jsx_runtime.jsx)(Option.W,{value:"Константин Ионочкин",children:"Константин Ионочкин"}),(0,jsx_runtime.jsx)(Option.W,{value:"Анна Корженко",children:"Анна Корженко"}),(0,jsx_runtime.jsx)(Option.W,{value:"Фидель",children:"Фидель"}),(0,jsx_runtime.jsx)(Option.W,{value:"Константин Колешонок",children:"Константин Колешонок"}),(0,jsx_runtime.jsx)(Option.W,{value:"Алексей Орлов",children:"Алексей Орлов"})]})]})})};try{SearchSelectOptionGroupTemplate.displayName="SearchSelectOptionGroupTemplate",SearchSelectOptionGroupTemplate.__docgenInfo={description:"",displayName:"SearchSelectOptionGroupTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectOptionGroup.template.tsx#SearchSelectOptionGroupTemplate"]={docgenInfo:SearchSelectOptionGroupTemplate.__docgenInfo,name:"SearchSelectOptionGroupTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectOptionGroup.template.tsx#SearchSelectOptionGroupTemplate"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/Button/index.tsx");const createOptions=length=>MULTISELECT_OPTIONS.concat(Array.from({length}).map(((option,index)=>({text:`${index}0000`,value:String(index)})))),SearchSelectUncontrolledTemplate=props=>{const[submitValues,setSubmitValues]=react.useState(null);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(Form,{action:"",onSubmit:evt=>{evt.preventDefault();const formElem=evt.target;formElem&&setSubmitValues((data=>{const obj={};return data.forEach(((value,key)=>obj[key]=value)),obj})(new FormData(formElem)))},children:[(0,jsx_runtime.jsx)(Select.Ph,{...props,name:"myOwesomeField",mode:"searchSelect",defaultValue:OPTIONS_SIMPLE[0],children:OPTIONS_SIMPLE.map(((option,ind)=>(0,jsx_runtime.jsx)(Option.W,{value:option,disabled:4===ind,children:option},option)))}),(0,jsx_runtime.jsx)(Button.zx,{type:"submit",dimension:"m",children:"Cабмить меня, чего ты медлишь?!"}),(0,jsx_runtime.jsx)(FormValuesWrapper,{children:null===submitValues?"Здесь будут выводится значения, которые ты засабмитишь...":JSON.stringify(submitValues)})]})})};try{SearchSelectUncontrolledTemplate.displayName="SearchSelectUncontrolledTemplate",SearchSelectUncontrolledTemplate.__docgenInfo={description:"",displayName:"SearchSelectUncontrolledTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectUncontrolled.template.tsx#SearchSelectUncontrolledTemplate"]={docgenInfo:SearchSelectUncontrolledTemplate.__docgenInfo,name:"SearchSelectUncontrolledTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectUncontrolled.template.tsx#SearchSelectUncontrolledTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelectMultipleWithAddOptionTemplate=props=>{const[selectValue,setSelectValue]=react.useState([]),[searchValue,setSearchValue]=react.useState(""),[options,setOptions]=react.useState(createOptions(20)),renderedOptions=react.useMemo((()=>options.map(((option,ind)=>(0,jsx_runtime.jsx)(Option.W,{value:option.value,disabled:[2,4].includes(ind),children:option.text},option.value)))),[options]),handleAddButtonClick=()=>{searchValue&&!options.find((item=>item.text===searchValue))&&(setOptions([...options,{text:searchValue,value:searchValue}]),setSelectValue([...selectValue,searchValue]),setSearchValue(""))},addButtonProps=react.useMemo((()=>({disabled:!!options.find((item=>item.text===searchValue))||!searchValue,text:searchValue?`Добавить «${searchValue}»`:"Добавить"})),[searchValue,options]),menuPanelContentDimension=void 0===props.dimension||"xl"===props.dimension?"l":props.dimension;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.Ph,{...props,value:selectValue,inputValue:searchValue,multiple:!0,onSelectedChange:value=>{Array.isArray(value)&&setSelectValue(value)},dimension:"xl",displayClearIcon:!0,placeholder:"Placeholder",mode:"searchSelect",onInputChange:e=>{setSearchValue(e.target.value)},renderDropDownBottomPanel:({dimension=menuPanelContentDimension})=>(0,jsx_runtime.jsx)(MenuActionsPanel.q,{dimension,children:(0,jsx_runtime.jsx)(TextButton.A,{...addButtonProps,iconStart:(0,jsx_runtime.jsx)(PlusOutline.r,{}),onClick:handleAddButtonClick})}),children:renderedOptions})})};try{SearchSelectMultipleWithAddOptionTemplate.displayName="SearchSelectMultipleWithAddOptionTemplate",SearchSelectMultipleWithAddOptionTemplate.__docgenInfo={description:"",displayName:"SearchSelectMultipleWithAddOptionTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectMultipleWithAddOption.template.tsx#SearchSelectMultipleWithAddOptionTemplate"]={docgenInfo:SearchSelectMultipleWithAddOptionTemplate.__docgenInfo,name:"SearchSelectMultipleWithAddOptionTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectMultipleWithAddOption.template.tsx#SearchSelectMultipleWithAddOptionTemplate"})}catch(__react_docgen_typescript_loader_error){}const MultipleWithApplyOptions=createOptions(10),SearchSelectMultipleWithApplyTemplate=props=>{const[selectValue,setSelectValue]=react.useState(["big","1","3"]),[forcedOpen,setForcedOpen]=react.useState(!1),handleApplyButtonClick=()=>{setForcedOpen(!1),console.log("selected",selectValue.toString())},menuPanelContentDimension=void 0===props.dimension||"xl"===props.dimension?"l":props.dimension;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.Ph,{...props,forcedOpen,value:selectValue,multiple:!0,onSelectedChange:value=>{Array.isArray(value)&&setSelectValue(value)},displayClearIcon:!0,placeholder:"Placeholder",mode:"searchSelect",onChangeDropDownState:setForcedOpen,renderDropDownBottomPanel:({dimension=menuPanelContentDimension})=>(0,jsx_runtime.jsx)(MenuActionsPanel.q,{dimension,children:(0,jsx_runtime.jsx)(Button.zx,{dimension:"m",disabled:0===selectValue.length,onClick:handleApplyButtonClick,children:"Применить"})}),children:MultipleWithApplyOptions.map(((option,ind)=>(0,jsx_runtime.jsx)(Option.W,{value:option.value,disabled:[0,2,4].includes(ind),children:option.text},option.value)))})})};try{SearchSelectMultipleWithApplyTemplate.displayName="SearchSelectMultipleWithApplyTemplate",SearchSelectMultipleWithApplyTemplate.__docgenInfo={description:"",displayName:"SearchSelectMultipleWithApplyTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectMultipleWithApply.template.tsx#SearchSelectMultipleWithApplyTemplate"]={docgenInfo:SearchSelectMultipleWithApplyTemplate.__docgenInfo,name:"SearchSelectMultipleWithApplyTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectMultipleWithApply.template.tsx#SearchSelectMultipleWithApplyTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelectExpandedHeightMultiTemplate=props=>{const[selectValue,setSelectValue]=react.useState(Array.from({length:20}).map(((_,ind)=>String(ind))));return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.Ph,{...props,value:selectValue,mode:"searchSelect",multiple:!0,onSelectedChange:value=>{Array.isArray(value)&&setSelectValue(value)},maxRowCount:3,children:Array.from({length:20}).map(((_option,ind)=>(0,jsx_runtime.jsx)(Option.W,{value:String(ind),children:`${ind}0000`},ind)))})})};try{SearchSelectExpandedHeightMultiTemplate.displayName="SearchSelectExpandedHeightMultiTemplate",SearchSelectExpandedHeightMultiTemplate.__docgenInfo={description:"",displayName:"SearchSelectExpandedHeightMultiTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectExpandedHeightMulti.template.tsx#SearchSelectExpandedHeightMultiTemplate"]={docgenInfo:SearchSelectExpandedHeightMultiTemplate.__docgenInfo,name:"SearchSelectExpandedHeightMultiTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectExpandedHeightMulti.template.tsx#SearchSelectExpandedHeightMultiTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelectCustomOptionMultiTemplate=props=>{const[selectValue,setSelectValue]=react.useState(Array.from({length:15}).map(((_,ind)=>String(ind))));return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Select.Ph,{...props,value:selectValue,multiple:!0,onSelectedChange:value=>{Array.isArray(value)&&setSelectValue(value)},mode:"searchSelect",children:Array.from({length:20}).map(((_option,ind)=>(0,jsx_runtime.jsx)(Option.W,{value:String(ind),renderChip:()=>String(ind),children:(0,jsx_runtime.jsxs)(TextWrapper,{children:[`${ind}0000`,(0,jsx_runtime.jsx)(ExtraText,{children:`Доп ${ind}`})]})},ind)))})})};try{SearchSelectCustomOptionMultiTemplate.displayName="SearchSelectCustomOptionMultiTemplate",SearchSelectCustomOptionMultiTemplate.__docgenInfo={description:"",displayName:"SearchSelectCustomOptionMultiTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectCustomOptionMulti.template.tsx#SearchSelectCustomOptionMultiTemplate"]={docgenInfo:SearchSelectCustomOptionMultiTemplate.__docgenInfo,name:"SearchSelectCustomOptionMultiTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectCustomOptionMulti.template.tsx#SearchSelectCustomOptionMultiTemplate"})}catch(__react_docgen_typescript_loader_error){}var Modal=__webpack_require__("./src/components/Modal/index.tsx");const SearchSelectCustomChipMultiTemplate=props=>{const[selectValue,setSelectValue]=react.useState(Array.from({length:5}).map(((_,ind)=>String(ind)))),[modalOpened,setModalOpened]=react.useState(!1),[valueToDelete,setValueToDelete]=react.useState(null),onCloseModal=()=>{setValueToDelete(null),setModalOpened(!1)},onChipClose=data=>{console.log(data),setValueToDelete(data.value),setModalOpened(!0)},renderChip=ind=>()=>({children:`${ind} $`,onClose:onChipClose});return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Select.Ph,{...props,value:selectValue,multiple:!0,onSelectedChange:value=>{Array.isArray(value)&&setSelectValue(value)},mode:"searchSelect",children:Array.from({length:20}).map(((_option,ind)=>(0,jsx_runtime.jsx)(Option.W,{"data-id":`Id-${ind}`,"data-value":`My Value ${ind}`,value:String(ind),renderChip:renderChip(ind),disabled:[0,2].includes(ind),children:ind},ind)))}),modalOpened&&(0,jsx_runtime.jsxs)(Modal.u_,{onClose:onCloseModal,children:[(0,jsx_runtime.jsx)(Modal.r6,{children:"Попап неуверенности"}),(0,jsx_runtime.jsx)(Modal.hz,{children:"Уверены, что хотите удалить опцию?"}),(0,jsx_runtime.jsxs)(Modal.BM,{children:[(0,jsx_runtime.jsx)(Button.zx,{appearance:"primary",dimension:"m",onClick:()=>{var value;valueToDelete&&(value=valueToDelete,setSelectValue((prev=>prev.filter((prevValue=>prevValue!==value))))),onCloseModal()},children:"О да"}),(0,jsx_runtime.jsx)(Button.zx,{appearance:"secondary",dimension:"m",onClick:onCloseModal,children:"Нет, был не прав"})]})]})]})};try{SearchSelectCustomChipMultiTemplate.displayName="SearchSelectCustomChipMultiTemplate",SearchSelectCustomChipMultiTemplate.__docgenInfo={description:"",displayName:"SearchSelectCustomChipMultiTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectCustomChipMulti.template.tsx#SearchSelectCustomChipMultiTemplate"]={docgenInfo:SearchSelectCustomChipMultiTemplate.__docgenInfo,name:"SearchSelectCustomChipMultiTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectCustomChipMulti.template.tsx#SearchSelectCustomChipMultiTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelectExternalFilter_template_OPTIONS=[{value:"val1",text:"Текст 1",extraText:"Доооп Текст 1"},{value:"val12",text:"Текст 12",extraText:"Доооп Текст 12"},{value:"val2",text:"Текст 2",extraText:"Доп Теttкст 2"},{value:"val3",text:"Текст 3",disabled:!0,extraText:"дддопТекст 3"},{value:"val4",text:"Текст 444",extraText:"Доооп Тексттт 41232"}],Container=styled_components_browser_esm.ZP.div.withConfig({displayName:"SearchSelectExternalFiltertemplate__Container",componentId:"sc-1avhjau-0"})(["width:100%;row-gap:32px;display:flex;flex-direction:column;justify-content:space-between;margin-top:32px;& > *{flex:1 0 50%;}"]),SearchSelectExternalFilterTemplate=props=>{const[singleSelectValue,setSingleSelectValue]=react.useState(""),[singleSearchValue,setSingleSearchValue]=react.useState(""),[multipleSelectValue,setMultipleSelectValue]=react.useState([]),[multipleSearchValue,setMultipleSearchValue]=react.useState(""),renderOptions=value=>{const toSearch=value.trim().toLowerCase();return SearchSelectExternalFilter_template_OPTIONS.filter((option=>option.text.toLowerCase().includes(toSearch))).map((option=>(0,jsx_runtime.jsx)(Option.W,{value:option.text,disabled:option.disabled,children:option.text},`${toSearch}/${option.value}`)))};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"div",children:"Внешняя фильтрация элементов по значению"}),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"div",children:"Пример с одиночным выбором"}),(0,jsx_runtime.jsx)(Select.Ph,{...props,mode:"searchSelect",value:singleSelectValue,onSelectedChange:value=>{"string"==typeof value&&setSingleSelectValue(value)},inputValue:singleSearchValue,onInputChange:event=>{setSingleSearchValue(event.target.value)},placeholder:"пока ни чего не выбрано",onFilterItem:()=>!0,children:renderOptions(singleSearchValue)})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"div",children:"Пример с множественным выбором"}),(0,jsx_runtime.jsx)(Select.Ph,{...props,mode:"searchSelect",multiple:!0,value:multipleSelectValue,onSelectedChange:value=>{Array.isArray(value)&&setMultipleSelectValue(value)},inputValue:multipleSearchValue,onInputChange:event=>{setMultipleSearchValue(event.target.value)},placeholder:"пока ни чего не выбрано",onFilterItem:()=>!0,children:renderOptions(multipleSearchValue)})]})]})]})};try{SearchSelectExternalFilterTemplate.displayName="SearchSelectExternalFilterTemplate",SearchSelectExternalFilterTemplate.__docgenInfo={description:"",displayName:"SearchSelectExternalFilterTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectExternalFilter.template.tsx#SearchSelectExternalFilterTemplate"]={docgenInfo:SearchSelectExternalFilterTemplate.__docgenInfo,name:"SearchSelectExternalFilterTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectExternalFilter.template.tsx#SearchSelectExternalFilterTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelectVirtualScroll_template_OPTIONS=(length=20,Array.from({length}).map(((option,index)=>({text:`${index}0000`,value:String(index)}))));var length;const SearchSelectVirtualScrollTemplate=props=>{const renderOptions=react.useMemo((()=>SearchSelectVirtualScroll_template_OPTIONS.map(((item,index)=>(0,jsx_runtime.jsx)(Option.W,{value:item.value,children:item.text},`${index}`)))),[]);return(0,jsx_runtime.jsx)(Select.Ph,{...props,mode:"searchSelect",virtualScroll:{itemHeight:"auto"},children:renderOptions})};SearchSelectVirtualScrollTemplate.displayName="SearchSelectVirtualScrollTemplate";try{SearchSelectVirtualScrollTemplate.displayName="SearchSelectVirtualScrollTemplate",SearchSelectVirtualScrollTemplate.__docgenInfo={description:"",displayName:"SearchSelectVirtualScrollTemplate",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},mode:{defaultValue:null,description:"Позволяет использовать Select как select",name:"mode",required:!1,type:{name:"enum",value:[{value:'"select"'},{value:'"searchSelect"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},multiple:{defaultValue:null,description:"Добавить селекту возможность множественного выбора",name:"multiple",required:!1,type:{name:"boolean"}},showCheckbox:{defaultValue:null,description:"По умолчанию, если multiple = true, в опции присутствует checkbox. Данный флаг позволяет убрать его",name:"showCheckbox",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию для некотролируемого селекта",name:"defaultValue",required:!1,type:{name:"string | string[]"}},displayClearIcon:{defaultValue:null,description:"",name:"displayClearIcon",required:!1,type:{name:"boolean"}},onClearIconClick:{defaultValue:null,description:"Позволяет определить действия при нажатии на иконку очистки. По умолчанию произойдет очистка выбранных значений",name:"onClearIconClick",required:!1,type:{name:"(() => void)"}},idleHeight:{defaultValue:null,description:"@deprecated используйте maxRowCount *",name:"idleHeight",required:!1,type:{name:"enum",value:[{value:'"full"'},{value:'"fixed"'}]}},minRowCount:{defaultValue:null,description:"Минимальное количество строк поля в режиме multiple",name:"minRowCount",required:!1,type:{name:'number | "none"'}},maxRowCount:{defaultValue:null,description:"Максимальное количество строк поля в режиме multiple",name:"maxRowCount",required:!1,type:{name:'number | "none"'}},portalTargetRef:{defaultValue:null,description:"Референс на контейнер для правильного позиционирования выпадающего списка",name:"portalTargetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},inputTargetRef:{defaultValue:null,description:"Ref внутреннего input компонента",name:"inputTargetRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},renderSelectValue:{defaultValue:null,description:"",name:"renderSelectValue",required:!1,type:{name:"((value: string | string[], searchText: string) => ReactNode)"}},inputValue:{defaultValue:null,description:"Значение введенное пользователем для поиска",name:"inputValue",required:!1,type:{name:"string"}},defaultInputValue:{defaultValue:null,description:"первоначальное значение в строке поиска без переведения строки в контролируемый компонент",name:"defaultInputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"",name:"onInputChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((evt: FocusEvent<HTMLDivElement, Element>) => void)"}},alignDropdown:{defaultValue:null,description:"Принудительно выравнивает контейнер с опциями относительно компонента, значение по умолчанию 'stretch'",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},renderDropDownBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderDropDownBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderDropDownTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderDropDownTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},forcedOpen:{defaultValue:null,description:"Состояние принудительного открытия выпадающего списка опций",name:"forcedOpen",required:!1,type:{name:"boolean"}},onChangeDropDownState:{defaultValue:null,description:"Событие закрытия выпадающего списка опций",name:"onChangeDropDownState",required:!1,type:{name:"((opened: boolean) => void)"}},onInputKeyDown:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUp:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyUpCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},onInputKeyDownCapture:{defaultValue:null,description:"Inner input keyboard event handler",name:"onInputKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLInputElement>"}},searchFormat:{defaultValue:null,description:"Данная опция позволяет при фильтрации искать по строке целиком или по отдельным словам",name:"searchFormat",required:!1,type:{name:"enum",value:[{value:'"word"'},{value:'"wholly"'}]}},onFilterItem:{defaultValue:null,description:"Позволяет фильтровать отображаемые опции",name:"onFilterItem",required:!1,type:{name:"((value: string, searchValue: string, searchFormat: SearchFormat) => boolean)"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для меню.\nМаксимальная высота меню рассчитывается исходя из высоты 1 пункта, если параметр 'auto', то в расчет идет\nвысота согласно dimension",name:"virtualScroll",required:!1,type:{name:'{ itemHeight: number | "auto"; }'}},forceHideOverflowTooltip:{defaultValue:null,description:"Признак принудительного скрытия тултипа, показываемого при переполнении",name:"forceHideOverflowTooltip",required:!1,type:{name:"boolean"}},onSelectedChange:{defaultValue:null,description:"Событие, которое вызывается при изменении выбранных опций/опции",name:"onSelectedChange",required:!1,type:{name:"((value: string | string[]) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/stories/searchSelect/SearchSelectVirtualScroll.template.tsx#SearchSelectVirtualScrollTemplate"]={docgenInfo:SearchSelectVirtualScrollTemplate.__docgenInfo,name:"SearchSelectVirtualScrollTemplate",path:"src/components/input/Select/stories/searchSelect/SearchSelectVirtualScroll.template.tsx#SearchSelectVirtualScrollTemplate"})}catch(__react_docgen_typescript_loader_error){}const SearchSelect_stories_queryClient=new queryClient.S,SearchSelect_stories={title:'Admiral-2.1/Input/Select/режим "searchSelect"',component:Select.Ph,decorators:void 0,parameters:{design:{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A72429"}},argTypes:{dimension:{options:types.q,control:{type:"radio"}},disabled:{control:{type:"boolean"}},isLoading:{control:{type:"boolean"}},multiple:{control:!1},readOnly:{control:{type:"boolean"}},disableCopying:{control:{type:"boolean"}},showCheckbox:{control:{type:"boolean"}},status:{control:{type:"radio"},options:types.l},displayClearIcon:{control:{type:"boolean"}},placeholder:{control:{type:"text"}},onChange:{action:"onChange"},themeBorderKind:{control:{type:"radio"},options:borderRadius.g2},skeleton:{control:{type:"boolean"}},forceHideOverflowTooltip:{control:{type:"boolean"}},alignDropdown:{options:[void 0,"auto","flex-start","flex-end","center","baseline","stretch"],control:{type:"select"}},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1},ref:{control:!1},theme:{control:!1},as:{control:!1},forwardedAs:{control:!1}}},SearchSelectWithFilterStory=props=>(0,jsx_runtime.jsx)(SearchSelectWithFilterTemplate,{...props});SearchSelectWithFilterStory.displayName="SearchSelectWithFilterStory";const SearchSelectWithFilter={render:SearchSelectWithFilterStory,name:"Фильтрация опций",parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\n\nimport { OPTIONS_SIMPLE } from '#src/components/input/Select/stories/data';\n\nexport const SearchSelectWithFilterTemplate = ({ placeholder = 'Placeholder', ...props }: SelectProps) => {\n  const renderOptions = () => {\n    return OPTIONS_SIMPLE.map((option, ind) => (\n      <Option key={option} value={option} disabled={ind === 4}>\n        {option}\n      </Option>\n    ));\n  };\n\n  return (\n    <>\n      <Select {...props} placeholder={placeholder} mode=\"searchSelect\" dropContainerClassName=\"dropContainerClass\">\n        {renderOptions()}\n      </Select>\n    </>\n  );\n};\n"},description:{story:"Фильтрация списка опций осуществляется вызывающим кодом.\n\n В данном примере показан один из возможных способов"}}}},CustomOptionStory=props=>(0,jsx_runtime.jsx)(SearchSelectCustomOptionTemplate,{...props});CustomOptionStory.displayName="CustomOptionStory";const CustomOption={render:CustomOptionStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport type { ChangeEvent } from 'react';\n\nimport { defaultFilterItem, Option, Select, T } from '@admiral-ds/react-ui';\nimport type { SearchFormat, SelectProps } from '@admiral-ds/react-ui';\n\nimport { OPTIONS } from '#src/components/input/Select/stories/data';\nimport { ExtraText, Icon, Separator, TextWrapper } from '#src/components/input/Select/stories/styled';\n\nexport const SearchSelectCustomOptionTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState(props.value ? String(props.value) : OPTIONS[2].value);\n\n  const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(e.target.value);\n    props.onChange?.(e);\n  };\n\n  const handleFilterItem = (value: string, searchValue: string, searchFormat: SearchFormat) => {\n    const option = OPTIONS.find((item) => item.value === value);\n    return (\n      !!option &&\n      (defaultFilterItem(value, searchValue, searchFormat) ||\n        defaultFilterItem(option.text, searchValue, searchFormat) ||\n        defaultFilterItem(option.extraText, searchValue, searchFormat))\n    );\n  };\n\n  return (\n    <>\n      <T font=\"Body/Body 2 Long\" as=\"div\">\n        Фильтрация элементов значению, тексту и дополнительному тексту\n      </T>\n      <Separator />\n      <Select {...props} value={selectValue} mode=\"searchSelect\" onFilterItem={handleFilterItem} onChange={onChange}>\n        {OPTIONS.map((option) => (\n          <Option key={option.value} value={option.value}>\n            <Icon />\n            <TextWrapper>\n              {option.text}\n              <ExtraText>{option.extraText}</ExtraText>\n            </TextWrapper>\n          </Option>\n        ))}\n      </Select>\n    </>\n  );\n};\n"}}},name:"Кастомные опции с кастомной фильтрацией"},RenderPropsStory=props=>(0,jsx_runtime.jsx)(SearchSelectRenderPropsTemplate,{...props});RenderPropsStory.displayName="RenderPropsStory";const RenderProps={render:RenderPropsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { MenuItem, Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps, RenderOptionProps } from '@admiral-ds/react-ui';\n\nimport { OPTIONS } from '#src/components/input/Select/stories/data';\nimport { Icon, TextWrapper } from '#src/components/input/Select/stories/styled';\n\ninterface MyIncredibleOptionProps extends RenderOptionProps {\n  shouldAnimate?: boolean;\n  text: string;\n}\n\nconst CustomOptionWrapper = styled(MenuItem)`\n  justify-content: flex-start;\n  flex-wrap: nowrap;\n  white-space: pre-wrap;\n`;\n\nconst MyIncredibleOption = ({ text, shouldAnimate, ...props }: MyIncredibleOptionProps) => (\n  <CustomOptionWrapper {...props}>\n    <Icon $shouldAnimate={shouldAnimate} />\n    <TextWrapper>{text}</TextWrapper>\n  </CustomOptionWrapper>\n);\n\nexport const SearchSelectRenderPropsTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState(props.value ? String(props.value) : OPTIONS[2].value);\n\n  const onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(e.target.value);\n    props.onChange?.(e);\n  };\n\n  return (\n    <Select {...props} value={selectValue} mode=\"searchSelect\" onChange={onChange}>\n      {OPTIONS.map(({ text, value }) => (\n        <Option\n          key={value}\n          value={value}\n          renderOption={(options) => (\n            <MyIncredibleOption\n              text={text}\n              shouldAnimate={options.hovered && value !== selectValue}\n              {...options}\n              key={value}\n            />\n          )}\n        />\n      ))}\n    </Select>\n  );\n};\n"},description:{story:"Пример кастомизации select через renderProps"}}},name:"Кастомные опции через renderProps"},LoadOnScrollStory=props=>(0,jsx_runtime.jsx)(LoadOnScrollTemplate,{...props});LoadOnScrollStory.displayName="LoadOnScrollStory";const LoadOnScroll={render:LoadOnScrollStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Option, Select, MenuItem } from '@admiral-ds/react-ui';\nimport type { SelectProps, RenderOptionProps } from '@admiral-ds/react-ui';\n\nconst InvisibleItem = styled(MenuItem)`\n  height: 1px;\n  padding: 0;\n`;\n\ninterface LastOptionProps extends RenderOptionProps {\n  onVisible?: () => void;\n}\nconst LastOption = ({ containerRef, onVisible, ...props }: LastOptionProps) => {\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const handleIntersection = (entries: IntersectionObserverEntry[]) => {\n    if (entries[0].isIntersecting && !visible) {\n      setVisible(true);\n      onVisible?.();\n    }\n\n    if (!entries[0].isIntersecting && visible) {\n      setVisible(false);\n    }\n  };\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(handleIntersection, {\n      root: containerRef?.current,\n      threshold: [0, 1.0],\n    });\n\n    if (containerRef?.current && ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, [containerRef, visible]);\n\n  return <InvisibleItem ref={ref} {...props} />;\n};\n\nexport const LoadOnScrollTemplate = (props: SelectProps) => {\n  const [count, setCount] = React.useState<number>(8);\n\n  const renderOptions = React.useMemo(() => {\n    const array = Array.from({ length: count }, (v, k) => {\n      return `${k}0000`;\n    }).map((item, index) => (\n      <Option value={item} key={`${index}/${count}`}>\n        {item}\n      </Option>\n    ));\n    array.push(\n      <Option\n        key={`last/${count}`}\n        value={''}\n        renderOption={(options) => <LastOption {...options} onVisible={() => setCount(count + 5)} key={`last`} />}\n      />,\n    );\n\n    return array;\n  }, [count]);\n\n  return (\n    <Select {...props} mode=\"searchSelect\">\n      {renderOptions}\n    </Select>\n  );\n};\n"},description:{story:"Последним элементом списка опций select добавляется скрытый MenuItem, который отслеживает прокрутку списка до конца, и сообщает об этом вызывающему коду. По этому событию происходит изменение списка опций"}}},name:"Подгрузка данных при scroll"},RenderValueStory=props=>(0,jsx_runtime.jsx)(SearchSelectRenderValueTemplate,{...props});RenderValueStory.displayName="RenderValueStory";const RenderValue={render:RenderValueStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as Cuba } from '@admiral-ds/icons/build/flags/Cuba.svg';\nimport { ReactComponent as Belarus } from '@admiral-ds/icons/build/flags/Belarus.svg';\nimport { ReactComponent as RussianFederation } from '@admiral-ds/icons/build/flags/RussianFederation.svg';\n\nimport { OPTIONS_NAMES } from '#src/components/input/Select/stories/data';\n\nconst RenderingValue = styled.div`\n  color: ${(p) => p.theme.color['Teal/Teal 80']};\n  display: flex;\n  flex: 1 1 100%;\n  column-gap: 8px;\n  padding: 0 3px;\n  border-width: 1px;\n  border-style: dotted;\n  border-radius: 4px;\n  border-color: ${(p) => p.theme.color['Teal/Teal 80']};\n  background-color: ${(p) => p.theme.color['Teal/Teal 10']};\n  box-sizing: border-box;\n`;\n\nconst getFlag = (value: string) => {\n  return value === 'Фидель' ? Cuba : value === 'Константин Колешонок' ? Belarus : RussianFederation;\n};\n\nexport const SearchSelectRenderValueTemplate = (props: SelectProps) => {\n  const renderOptions = () => {\n    return OPTIONS_NAMES.map((option) => (\n      <Option key={option} value={option}>\n        {option}\n      </Option>\n    ));\n  };\n\n  const renderValue = (value: string | string[] | undefined) => {\n    if (typeof value === 'string' && !!value) {\n      const Flag = getFlag(value);\n\n      return (\n        <RenderingValue>\n          <Flag height={24} />\n          {value}\n        </RenderingValue>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Select {...props} mode=\"searchSelect\" multiple={false} placeholder=\"Placeholder\" renderSelectValue={renderValue}>\n        {renderOptions()}\n      </Select>\n    </>\n  );\n};\n"}}},args:{defaultValue:"Фидель"},name:"Кастомное отображение значения"},WithAddButtonStory=props=>(0,jsx_runtime.jsx)(SearchSelectWithAddButtonTemplate,{...props});WithAddButtonStory.displayName="WithAddButtonStory";const WithAddButton={render:WithAddButtonStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport type { ChangeEvent } from 'react';\n\nimport { MenuActionsPanel, Option, Select, TextButton } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as PlusOutline } from '@admiral-ds/icons/build/service/PlusOutline.svg';\n\nimport { OPTIONS_SIMPLE } from '#src/components/input/Select/stories/data';\n\nexport const SearchSelectWithAddButtonTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState('');\n  const [searchValue, setSearchValue] = React.useState('');\n  const [options, setOptions] = React.useState(OPTIONS_SIMPLE);\n\n  const onChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(e.target.value);\n    props.onChange?.(e);\n  };\n\n  const renderOptions = () => {\n    return options.map((option, ind) => (\n      <Option key={option} value={option} disabled={ind === 4}>\n        {option}\n      </Option>\n    ));\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleAddButtonClick = () => {\n    if (searchValue && !options.includes(searchValue)) {\n      setOptions([...options, searchValue]);\n    }\n  };\n\n  const addButtonProps = React.useMemo(() => {\n    return {\n      disabled: options.includes(searchValue) || !searchValue,\n      text: searchValue ? `Добавить «${searchValue}»` : 'Добавить',\n    };\n  }, [searchValue, options]);\n\n  const menuPanelContentDimension = props.dimension === undefined || props.dimension === 'xl' ? 'l' : props.dimension;\n\n  return (\n    <>\n      <Select\n        {...props}\n        onInputChange={handleInputChange}\n        placeholder=\"Placeholder\"\n        mode=\"searchSelect\"\n        value={selectValue}\n        onChange={onChange}\n        data-menu-id=\"test-menu\"\n        renderDropDownBottomPanel={({ dimension = menuPanelContentDimension }) => {\n          return (\n            <MenuActionsPanel dimension={dimension}>\n              <TextButton {...addButtonProps} iconStart={<PlusOutline />} onClick={handleAddButtonClick} />\n            </MenuActionsPanel>\n          );\n        }}\n      >\n        {renderOptions()}\n      </Select>\n    </>\n  );\n};\n"}}},name:'Нижняя панель с кнопкой "Добавить"'},SearchSelectOptionGroupStory=props=>(0,jsx_runtime.jsx)(SearchSelectOptionGroupTemplate,{...props});SearchSelectOptionGroupStory.displayName="SearchSelectOptionGroupStory";const SearchSelectOptionGroup={render:SearchSelectOptionGroupStory,parameters:{docs:{source:{code:'import * as React from \'react\';\nimport type { ChangeEvent } from \'react\';\n\nimport { Option, OptionGroup, Select } from \'@admiral-ds/react-ui\';\nimport type { SelectProps } from \'@admiral-ds/react-ui\';\n\nimport { StyledGroup } from \'#src/components/input/Select/stories/styled\';\n\nexport const SearchSelectOptionGroupTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState(\'Похо Торо Моронго\');\n\n  const onChange = (e: ChangeEvent<HTMLSelectElement>) => setSelectValue(e.target.value);\n\n  return (\n    <>\n      <Select {...props} value={selectValue} mode="searchSelect" onChange={onChange} dimension="xl">\n        <StyledGroup label="Сегодня выступают">\n          <Option value="Анигиляторная пушка">Анигиляторная пушка</Option>\n          <Option value="Похо Торо Моронго">Похо Торо Моронго</Option>\n        </StyledGroup>\n        <OptionGroup label="Группа фрукты" disabled>\n          <Option value="Саша Даль">Саша Даль</Option>\n          <Option value="Алексей Елесин">Алексей Елесин</Option>\n          <Option value="Константин Ионочкин">Константин Ионочкин</Option>\n          <Option value="Анна Корженко">Анна Корженко</Option>\n          <Option value="Фидель">Фидель</Option>\n          <Option value="Константин Колешонок">Константин Колешонок</Option>\n          <Option value="Алексей Орлов">Алексей Орлов</Option>\n        </OptionGroup>\n      </Select>\n    </>\n  );\n};\n'}}},name:"Использование групп"},AsyncSearchSelectStory=props=>(0,jsx_runtime.jsx)(QueryClientProvider.aH,{client:SearchSelect_stories_queryClient,children:(0,jsx_runtime.jsx)(SearchSelectWithAsyncLoadingTemplate,{...props})});AsyncSearchSelectStory.displayName="AsyncSearchSelectStory";const AsyncSearchSelect={render:AsyncSearchSelectStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { Option, Select, useDebounce } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\n\nasync function searchPeopleByName(name: string) {\n  const response = await fetch(\n    'https://swapi.dev/api/people/?' +\n      new URLSearchParams({\n        search: name,\n      }),\n  );\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n}\n\nexport const SearchSelectWithAsyncLoadingTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState(props.value ? String(props.value) : '');\n  const [options, setOptions] = React.useState<Array<{ value: string; text: string }>>([]);\n\n  const [filter, setFilter] = React.useState('');\n\n  const debouncedFilter = useDebounce(filter, 500);\n\n  const { data, isLoading } = useQuery({\n    queryKey: ['products', debouncedFilter],\n    queryFn: () => searchPeopleByName(debouncedFilter),\n  });\n\n  React.useEffect(() => {\n    if (data) {\n      const names = data['results'] as Array<{ name: string }>;\n      const options = names.map(({ name }) => ({ value: name, text: name }));\n      setOptions(options);\n    }\n  }, [data]);\n\n  const onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(e.target.value);\n    props.onChange?.(e);\n  };\n\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <Select\n      {...props}\n      value={selectValue}\n      isLoading={isLoading}\n      onChange={onChange}\n      onInputChange={onInputChange}\n      mode=\"searchSelect\"\n    >\n      {options.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.text}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n",source:{language:"tsx"}},description:{story:"Пример демонстрирует подгрузку данных для селекта с фильтром по имени"}}},name:"SearchSelect. Асинхронный"},UncontrolledSearchSelectStory=props=>(0,jsx_runtime.jsx)(SearchSelectUncontrolledTemplate,{...props});UncontrolledSearchSelectStory.displayName="UncontrolledSearchSelectStory";const UncontrolledSearchSelect={render:UncontrolledSearchSelectStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { Button, Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\n\nimport { formDataToObject } from '#src/components/input/Select/stories/utils';\nimport { Form, FormValuesWrapper } from '#src/components/input/Select/stories/styled';\nimport { OPTIONS_SIMPLE } from '#src/components/input/Select/stories/data';\n\nexport const SearchSelectUncontrolledTemplate = (props: SelectProps) => {\n  const [submitValues, setSubmitValues] = React.useState<null | Record<string, any>>(null);\n\n  const onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const formElem = evt.target as HTMLFormElement;\n\n    if (formElem) {\n      setSubmitValues(formDataToObject(new FormData(formElem)));\n    }\n  };\n\n  return (\n    <>\n      <Form action=\"\" onSubmit={onSubmit}>\n        <Select {...props} name=\"myOwesomeField\" mode=\"searchSelect\" defaultValue={OPTIONS_SIMPLE[0]}>\n          {OPTIONS_SIMPLE.map((option, ind) => (\n            <Option key={option} value={option} disabled={ind === 4}>\n              {option}\n            </Option>\n          ))}\n        </Select>\n        <Button type=\"submit\" dimension=\"m\">\n          Cабмить меня, чего ты медлишь?!\n        </Button>\n        <FormValuesWrapper>\n          {submitValues === null\n            ? 'Здесь будут выводится значения, которые ты засабмитишь...'\n            : JSON.stringify(submitValues)}\n        </FormValuesWrapper>\n      </Form>\n    </>\n  );\n};\n"}}},name:"SearchSelect. Неконтролируемый"},MultipleWithAddOptionStory=props=>(0,jsx_runtime.jsx)(SearchSelectMultipleWithAddOptionTemplate,{...props});MultipleWithAddOptionStory.displayName="MultipleWithAddOptionStory";const MultipleWithAddOption={render:MultipleWithAddOptionStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { MenuActionsPanel, Option, Select, TextButton } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as PlusOutline } from '@admiral-ds/icons/build/service/PlusOutline.svg';\n\nimport { createOptions } from '#src/components/input/Select/stories/utils';\n\nexport const SearchSelectMultipleWithAddOptionTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState<string[]>([]);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [options, setOptions] = React.useState(createOptions(20));\n\n  const handleSelectedChange = (value: string | Array<string>) => {\n    if (Array.isArray(value)) setSelectValue(value);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  };\n\n  const renderedOptions = React.useMemo(() => {\n    return options.map((option, ind) => (\n      <Option key={option.value} value={option.value} disabled={[2, 4].includes(ind)}>\n        {option.text}\n      </Option>\n    ));\n  }, [options]);\n\n  const handleAddButtonClick = () => {\n    if (searchValue && !options.find((item) => item.text === searchValue)) {\n      setOptions([...options, { text: searchValue, value: searchValue }]);\n      setSelectValue([...selectValue, searchValue]);\n      setSearchValue('');\n    }\n  };\n\n  const addButtonProps = React.useMemo(() => {\n    return {\n      disabled: !!options.find((item) => item.text === searchValue) || !searchValue,\n      text: searchValue ? `Добавить «${searchValue}»` : 'Добавить',\n    };\n  }, [searchValue, options]);\n\n  const menuPanelContentDimension = props.dimension === undefined || props.dimension === 'xl' ? 'l' : props.dimension;\n\n  return (\n    <>\n      <Select\n        {...props}\n        value={selectValue}\n        inputValue={searchValue}\n        multiple={true}\n        onSelectedChange={handleSelectedChange}\n        dimension=\"xl\"\n        displayClearIcon={true}\n        placeholder=\"Placeholder\"\n        mode=\"searchSelect\"\n        onInputChange={handleInputChange}\n        renderDropDownBottomPanel={({ dimension = menuPanelContentDimension }) => {\n          return (\n            <MenuActionsPanel dimension={dimension}>\n              <TextButton {...addButtonProps} iconStart={<PlusOutline />} onClick={handleAddButtonClick} />\n            </MenuActionsPanel>\n          );\n        }}\n      >\n        {renderedOptions}\n      </Select>\n    </>\n  );\n};\n"}}},name:"Multiple с добавлением опций"},MultipleWithApplyStory=props=>(0,jsx_runtime.jsx)(SearchSelectMultipleWithApplyTemplate,{...props});MultipleWithApplyStory.displayName="MultipleWithApplyStory";const MultipleWithApply={render:MultipleWithApplyStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { Button, MenuActionsPanel, Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\n\nimport { createOptions } from '#src/components/input/Select/stories/utils';\n\nconst MultipleWithApplyOptions = createOptions(10);\n\nexport const SearchSelectMultipleWithApplyTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState<string[]>(['big', '1', '3']);\n  const [forcedOpen, setForcedOpen] = React.useState(false);\n\n  const handleSelectedChange = (value: string | Array<string>) => {\n    if (Array.isArray(value)) setSelectValue(value);\n  };\n\n  const renderOptions = () => {\n    return MultipleWithApplyOptions.map((option, ind) => (\n      <Option key={option.value} value={option.value} disabled={[0, 2, 4].includes(ind)}>\n        {option.text}\n      </Option>\n    ));\n  };\n\n  const handleApplyButtonClick = () => {\n    setForcedOpen(false);\n    // eslint-disable-next-line no-console\n    console.log('selected', selectValue.toString());\n  };\n\n  const menuPanelContentDimension = props.dimension === undefined || props.dimension === 'xl' ? 'l' : props.dimension;\n\n  return (\n    <>\n      <Select\n        {...props}\n        forcedOpen={forcedOpen}\n        value={selectValue}\n        multiple={true}\n        onSelectedChange={handleSelectedChange}\n        displayClearIcon={true}\n        placeholder=\"Placeholder\"\n        mode=\"searchSelect\"\n        onChangeDropDownState={setForcedOpen}\n        renderDropDownBottomPanel={({ dimension = menuPanelContentDimension }) => {\n          return (\n            <MenuActionsPanel dimension={dimension}>\n              <Button dimension={'m'} disabled={selectValue.length === 0} onClick={handleApplyButtonClick}>\n                Применить\n              </Button>\n            </MenuActionsPanel>\n          );\n        }}\n      >\n        {renderOptions()}\n      </Select>\n    </>\n  );\n};\n"}}},name:'Multiple с кнопкой "Применить"'},ExpandedHeightMultiSearchSelectStory=props=>(0,jsx_runtime.jsx)(SearchSelectExpandedHeightMultiTemplate,{...props});ExpandedHeightMultiSearchSelectStory.displayName="ExpandedHeightMultiSearchSelectStory";const ExpandedHeightMultiSearchSelect={render:ExpandedHeightMultiSearchSelectStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\n\nexport const SearchSelectExpandedHeightMultiTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState<string[]>(\n    Array.from({ length: 20 }).map((_, ind) => String(ind)),\n  );\n\n  const handleSelectedChange = (value: string | Array<string>) => {\n    if (Array.isArray(value)) setSelectValue(value);\n  };\n\n  return (\n    <>\n      <Select\n        {...props}\n        value={selectValue}\n        mode=\"searchSelect\"\n        multiple={true}\n        onSelectedChange={handleSelectedChange}\n        maxRowCount={3}\n      >\n        {Array.from({ length: 20 }).map((_option, ind) => (\n          <Option key={ind} value={String(ind)}>\n            {`${ind}0000`}\n          </Option>\n        ))}\n      </Select>\n    </>\n  );\n};\n"}}},name:"Multiple с увеличенной по умолчанию высотой"},CustomOptionMultiSearchSelectStory=props=>(0,jsx_runtime.jsx)(SearchSelectCustomOptionMultiTemplate,{...props});CustomOptionMultiSearchSelectStory.displayName="CustomOptionMultiSearchSelectStory";const CustomOptionMultiSearchSelect={render:CustomOptionMultiSearchSelectStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\n\nimport { ExtraText, TextWrapper } from '#src/components/input/Select/stories/styled';\n\nexport const SearchSelectCustomOptionMultiTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState<string[]>(\n    Array.from({ length: 15 }).map((_, ind) => String(ind)),\n  );\n\n  const handleSelectedChange = (value: string | Array<string>) => {\n    if (Array.isArray(value)) setSelectValue(value);\n  };\n\n  return (\n    <>\n      <Select\n        {...props}\n        value={selectValue}\n        multiple={true}\n        onSelectedChange={handleSelectedChange}\n        mode=\"searchSelect\"\n      >\n        {Array.from({ length: 20 }).map((_option, ind) => (\n          <Option key={ind} value={String(ind)} renderChip={() => String(ind)}>\n            <TextWrapper>\n              {`${ind}0000`}\n              <ExtraText>{`Доп ${ind}`}</ExtraText>\n            </TextWrapper>\n          </Option>\n        ))}\n      </Select>\n    </>\n  );\n};\n"}}},name:"Multiple с кастомными опциями"},CustomChipMultiSearchSelectStory=props=>(0,jsx_runtime.jsx)(SearchSelectCustomChipMultiTemplate,{...props});CustomChipMultiSearchSelectStory.displayName="CustomChipMultiSearchSelectStory";const CustomChipMultiSearchSelect={render:CustomChipMultiSearchSelectStory,parameters:{docs:{source:{code:'import * as React from \'react\';\n\nimport { Button, Modal, ModalButtonPanel, ModalContent, ModalTitle, Option, Select } from \'@admiral-ds/react-ui\';\nimport type { SelectProps } from \'@admiral-ds/react-ui\';\n\nexport const SearchSelectCustomChipMultiTemplate = (props: SelectProps) => {\n  const [selectValue, setSelectValue] = React.useState<string[]>(\n    Array.from({ length: 5 }).map((_, ind) => String(ind)),\n  );\n  const [modalOpened, setModalOpened] = React.useState(false);\n  const [valueToDelete, setValueToDelete] = React.useState<string | null>(null);\n\n  const handleSelectedChange = (value: string | Array<string>) => {\n    if (Array.isArray(value)) setSelectValue(value);\n  };\n  const deleteValue = (value: string) => setSelectValue((prev) => prev.filter((prevValue) => prevValue !== value));\n\n  const onCloseModal = () => {\n    setValueToDelete(null);\n    setModalOpened(false);\n  };\n  const onOpenModal = () => setModalOpened(true);\n\n  const onChipClose = (data: any) => {\n    console.log(data);\n    setValueToDelete(data.value);\n    onOpenModal();\n  };\n\n  const renderChip = (ind: number) => () => ({ children: `${ind} $`, onClose: onChipClose });\n\n  const onYes = () => {\n    if (valueToDelete) deleteValue(valueToDelete);\n    onCloseModal();\n  };\n\n  return (\n    <>\n      <Select\n        {...props}\n        value={selectValue}\n        multiple={true}\n        onSelectedChange={handleSelectedChange}\n        mode="searchSelect"\n      >\n        {Array.from({ length: 20 }).map((_option, ind) => (\n          <Option\n            key={ind}\n            data-id={`Id-${ind}`}\n            data-value={`My Value ${ind}`}\n            value={String(ind)}\n            renderChip={renderChip(ind)}\n            disabled={[0, 2].includes(ind)}\n          >\n            {ind}\n          </Option>\n        ))}\n      </Select>\n      {modalOpened && (\n        <Modal onClose={onCloseModal}>\n          <ModalTitle>Попап неуверенности</ModalTitle>\n          <ModalContent>Уверены, что хотите удалить опцию?</ModalContent>\n          <ModalButtonPanel>\n            <Button appearance="primary" dimension="m" onClick={onYes}>\n              О да\n            </Button>\n            <Button appearance="secondary" dimension="m" onClick={onCloseModal}>\n              Нет, был не прав\n            </Button>\n          </ModalButtonPanel>\n        </Modal>\n      )}\n    </>\n  );\n};\n'}}},name:"Multiple с кастомным обработчиком удаления чипса"},ExternalFilterStory=props=>(0,jsx_runtime.jsx)(SearchSelectExternalFilterTemplate,{...props});ExternalFilterStory.displayName="ExternalFilterStory";const ExternalFilter={render:ExternalFilterStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Option, Select, T } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst OPTIONS = [\n  {\n    value: 'val1',\n    text: 'Текст 1',\n    extraText: 'Доооп Текст 1',\n  },\n  {\n    value: 'val12',\n    text: 'Текст 12',\n    extraText: 'Доооп Текст 12',\n  },\n  {\n    value: 'val2',\n    text: 'Текст 2',\n    extraText: 'Доп Теttкст 2',\n  },\n  {\n    value: 'val3',\n    text: 'Текст 3',\n    disabled: true,\n    extraText: 'дддопТекст 3',\n  },\n  {\n    value: 'val4',\n    text: 'Текст 444',\n    extraText: 'Доооп Тексттт 41232',\n  },\n] as Array<{ value: string; text: string; disabled?: boolean; extraText?: string }>;\n\nconst Container = styled.div`\n  width: 100%;\n  row-gap: 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-top: 32px;\n\n  & > * {\n    flex: 1 0 50%;\n  }\n`;\n\nexport const SearchSelectExternalFilterTemplate = (props: SelectProps) => {\n  const [singleSelectValue, setSingleSelectValue] = React.useState<string>('');\n  const [singleSearchValue, setSingleSearchValue] = React.useState('');\n  const [multipleSelectValue, setMultipleSelectValue] = React.useState<Array<string>>([]);\n  const [multipleSearchValue, setMultipleSearchValue] = React.useState('');\n\n  const handleSingleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSingleSearchValue(event.target.value);\n  };\n\n  const handleSingleSelectedChange = (value: string | Array<string>) => {\n    if (typeof value === 'string') setSingleSelectValue(value);\n  };\n\n  const handleMultipleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMultipleSearchValue(event.target.value);\n  };\n\n  const handleMultipleSelectedChange = (value: string | Array<string>) => {\n    if (Array.isArray(value)) setMultipleSelectValue(value);\n  };\n\n  const renderOptions = (value: string) => {\n    const toSearch = value.trim().toLowerCase();\n\n    return OPTIONS.filter((option) => option.text.toLowerCase().includes(toSearch)).map((option) => (\n      <Option key={`${toSearch}/${option.value}`} value={option.text} disabled={option.disabled}>\n        {option.text}\n      </Option>\n    ));\n  };\n\n  return (\n    <>\n      <T font=\"Body/Body 2 Long\" as=\"div\">\n        Внешняя фильтрация элементов по значению\n      </T>\n      <Container>\n        <div>\n          <T font=\"Body/Body 2 Long\" as=\"div\">\n            Пример с одиночным выбором\n          </T>\n          <Select\n            {...props}\n            mode=\"searchSelect\"\n            value={singleSelectValue}\n            onSelectedChange={handleSingleSelectedChange}\n            inputValue={singleSearchValue}\n            onInputChange={handleSingleInputChange}\n            placeholder=\"пока ни чего не выбрано\"\n            onFilterItem={() => true}\n          >\n            {renderOptions(singleSearchValue)}\n          </Select>\n        </div>\n        <div>\n          <T font=\"Body/Body 2 Long\" as=\"div\">\n            Пример с множественным выбором\n          </T>\n          <Select\n            {...props}\n            mode=\"searchSelect\"\n            multiple\n            value={multipleSelectValue}\n            onSelectedChange={handleMultipleSelectedChange}\n            inputValue={multipleSearchValue}\n            onInputChange={handleMultipleInputChange}\n            placeholder=\"пока ни чего не выбрано\"\n            onFilterItem={() => true}\n          >\n            {renderOptions(multipleSearchValue)}\n          </Select>\n        </div>\n      </Container>\n    </>\n  );\n};\n"},description:{story:"Так как компонент построен на нативном select, в выбранных значениях могут отображаться только те элементы, которые переданы в качестве списка option"}}},name:"Внешняя фильтрация"},VirtualScrollStory=props=>(0,jsx_runtime.jsx)(SearchSelectVirtualScrollTemplate,{...props});VirtualScrollStory.displayName="VirtualScrollStory";const VirtualScroll={render:VirtualScrollStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { Option, Select } from '@admiral-ds/react-ui';\nimport type { SelectProps } from '@admiral-ds/react-ui';\n\nimport { createClearOptions } from '#src/components/input/Select/stories/utils';\n\nconst OPTIONS = createClearOptions(20);\nexport const SearchSelectVirtualScrollTemplate = (props: SelectProps) => {\n  const renderOptions = React.useMemo(() => {\n    return OPTIONS.map((item, index) => (\n      <Option value={item.value} key={`${index}`}>\n        {item.text}\n      </Option>\n    ));\n  }, []);\n\n  return (\n    <Select {...props} mode=\"searchSelect\" virtualScroll={{ itemHeight: 'auto' }}>\n      {renderOptions}\n    </Select>\n  );\n};\n"}}},name:"VirtualScroll"};SearchSelectWithFilter.parameters={...SearchSelectWithFilter.parameters,docs:{...SearchSelectWithFilter.parameters?.docs,source:{originalSource:"{\n  render: SearchSelectWithFilterStory,\n  name: 'Фильтрация опций',\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectWithFilterRaw\n      },\n      description: {\n        story: `Фильтрация списка опций осуществляется вызывающим кодом.\\n\\n В данном примере показан один из возможных способов`\n      }\n    }\n  }\n}",...SearchSelectWithFilter.parameters?.docs?.source}}},CustomOption.parameters={...CustomOption.parameters,docs:{...CustomOption.parameters?.docs,source:{originalSource:"{\n  render: CustomOptionStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectCustomOptionRaw\n      }\n    }\n  },\n  name: 'Кастомные опции с кастомной фильтрацией'\n}",...CustomOption.parameters?.docs?.source}}},RenderProps.parameters={...RenderProps.parameters,docs:{...RenderProps.parameters?.docs,source:{originalSource:"{\n  render: RenderPropsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectRenderPropsRaw\n      },\n      description: {\n        story: 'Пример кастомизации select через renderProps'\n      }\n    }\n  },\n  name: 'Кастомные опции через renderProps'\n}",...RenderProps.parameters?.docs?.source}}},LoadOnScroll.parameters={...LoadOnScroll.parameters,docs:{...LoadOnScroll.parameters?.docs,source:{originalSource:"{\n  render: LoadOnScrollStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectLoadOnScrollRaw\n      },\n      description: {\n        story: 'Последним элементом списка опций select добавляется скрытый MenuItem, ' + 'который отслеживает прокрутку списка до конца, и сообщает об этом ' + 'вызывающему коду. По этому событию происходит изменение списка опций'\n      }\n    }\n  },\n  name: 'Подгрузка данных при scroll'\n}",...LoadOnScroll.parameters?.docs?.source}}},RenderValue.parameters={...RenderValue.parameters,docs:{...RenderValue.parameters?.docs,source:{originalSource:"{\n  render: RenderValueStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectRenderValueRaw\n      }\n    }\n  },\n  args: {\n    defaultValue: 'Фидель'\n  },\n  name: 'Кастомное отображение значения'\n}",...RenderValue.parameters?.docs?.source}}},WithAddButton.parameters={...WithAddButton.parameters,docs:{...WithAddButton.parameters?.docs,source:{originalSource:"{\n  render: WithAddButtonStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectWithAddButtonRaw\n      }\n    }\n  },\n  name: 'Нижняя панель с кнопкой \"Добавить\"'\n}",...WithAddButton.parameters?.docs?.source}}},SearchSelectOptionGroup.parameters={...SearchSelectOptionGroup.parameters,docs:{...SearchSelectOptionGroup.parameters?.docs,source:{originalSource:"{\n  render: SearchSelectOptionGroupStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectOptionGroupRaw\n      }\n    }\n  },\n  name: 'Использование групп'\n}",...SearchSelectOptionGroup.parameters?.docs?.source}}},AsyncSearchSelect.parameters={...AsyncSearchSelect.parameters,docs:{...AsyncSearchSelect.parameters?.docs,source:{originalSource:"{\n  render: AsyncSearchSelectStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectWithAsyncLoadingRaw,\n        source: {\n          language: 'tsx'\n        }\n      },\n      description: {\n        story: 'Пример демонстрирует подгрузку данных для селекта с фильтром по имени'\n      }\n    }\n  },\n  name: 'SearchSelect. Асинхронный'\n}",...AsyncSearchSelect.parameters?.docs?.source}}},UncontrolledSearchSelect.parameters={...UncontrolledSearchSelect.parameters,docs:{...UncontrolledSearchSelect.parameters?.docs,source:{originalSource:"{\n  render: UncontrolledSearchSelectStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectUncontrolledRaw\n      }\n    }\n  },\n  name: 'SearchSelect. Неконтролируемый'\n}",...UncontrolledSearchSelect.parameters?.docs?.source}}},MultipleWithAddOption.parameters={...MultipleWithAddOption.parameters,docs:{...MultipleWithAddOption.parameters?.docs,source:{originalSource:"{\n  render: MultipleWithAddOptionStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectMultipleWithAddOptionRaw\n      }\n    }\n  },\n  name: 'Multiple с добавлением опций'\n}",...MultipleWithAddOption.parameters?.docs?.source}}},MultipleWithApply.parameters={...MultipleWithApply.parameters,docs:{...MultipleWithApply.parameters?.docs,source:{originalSource:"{\n  render: MultipleWithApplyStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectMultipleWithApplyRaw\n      }\n    }\n  },\n  name: 'Multiple с кнопкой \"Применить\"'\n}",...MultipleWithApply.parameters?.docs?.source}}},ExpandedHeightMultiSearchSelect.parameters={...ExpandedHeightMultiSearchSelect.parameters,docs:{...ExpandedHeightMultiSearchSelect.parameters?.docs,source:{originalSource:"{\n  render: ExpandedHeightMultiSearchSelectStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectExpandedHeightMultiRaw\n      }\n    }\n  },\n  name: 'Multiple с увеличенной по умолчанию высотой'\n}",...ExpandedHeightMultiSearchSelect.parameters?.docs?.source}}},CustomOptionMultiSearchSelect.parameters={...CustomOptionMultiSearchSelect.parameters,docs:{...CustomOptionMultiSearchSelect.parameters?.docs,source:{originalSource:"{\n  render: CustomOptionMultiSearchSelectStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectCustomOptionMultiRaw\n      }\n    }\n  },\n  name: 'Multiple с кастомными опциями'\n}",...CustomOptionMultiSearchSelect.parameters?.docs?.source}}},CustomChipMultiSearchSelect.parameters={...CustomChipMultiSearchSelect.parameters,docs:{...CustomChipMultiSearchSelect.parameters?.docs,source:{originalSource:"{\n  render: CustomChipMultiSearchSelectStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectCustomChipMultiRaw\n      }\n    }\n  },\n  name: 'Multiple с кастомным обработчиком удаления чипса'\n}",...CustomChipMultiSearchSelect.parameters?.docs?.source}}},ExternalFilter.parameters={...ExternalFilter.parameters,docs:{...ExternalFilter.parameters?.docs,source:{originalSource:"{\n  render: ExternalFilterStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectExternalFilterRaw\n      },\n      description: {\n        story: 'Так как компонент построен на нативном select, в выбранных значениях могут отображаться только те элементы, ' + 'которые переданы в качестве списка option'\n      }\n    }\n  },\n  name: 'Внешняя фильтрация'\n}",...ExternalFilter.parameters?.docs?.source}}},VirtualScroll.parameters={...VirtualScroll.parameters,docs:{...VirtualScroll.parameters?.docs,source:{originalSource:"{\n  render: VirtualScrollStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SearchSelectVirtualScrollRaw\n      }\n    }\n  },\n  name: 'VirtualScroll'\n}",...VirtualScroll.parameters?.docs?.source}}};const __namedExportsOrder=["SearchSelectWithFilter","CustomOption","RenderProps","LoadOnScroll","RenderValue","WithAddButton","SearchSelectOptionGroup","AsyncSearchSelect","UncontrolledSearchSelect","MultipleWithAddOption","MultipleWithApply","ExpandedHeightMultiSearchSelect","CustomOptionMultiSearchSelect","CustomChipMultiSearchSelect","ExternalFilter","VirtualScroll"]},"./node_modules/@admiral-ds/icons/build/flags/Belarus.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgBelarus});var _rect,_rect2,_g,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgBelarus=function SvgBelarus(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 28 28"},props),_rect||(_rect=react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect",{width:28,height:20,y:4,fill:"#fff",rx:3})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("mask",{id:"Belarus_svg__a",width:28,height:20,x:0,y:4,maskUnits:"userSpaceOnUse",style:{maskType:"luminance"}},_rect2||(_rect2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect",{width:28,height:20,y:4,fill:"#fff",rx:3}))),_g||(_g=react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{fillRule:"evenodd",clipRule:"evenodd",mask:"url(#Belarus_svg__a)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#E54252",d:"M0 17.333h28V4H0z"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#5CBE6B",d:"M0 24h28v-6.667H0z"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#fff",d:"M0 4h4v3l-.667 1L4 9v2l-.667 1L4 13v2l-.667 1L4 17v2l-.667 1L4 21v3H0z"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#E54252",d:"M-.667 6-2 8l1.333 2L-2 12l1.333 2L-2 16l1.333 2L-2 20l1.333 2 1.334-2-1.334-2 1.334-2-1.334-2 1.334-2-1.334-2L.667 8zM.667 6 2 4l1.333 2L2 8zM2 12 .667 10 2 8l1.333 2zm0 4L.667 14 2 12l1.333 2zm0 4 1.333-2L2 16 .667 18zm0 0 1.333 2L2 24 .667 22z"}))))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/flags/Cuba.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgCuba});var _rect,_rect2,_g,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgCuba=function SvgCuba(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 28 28"},props),_rect||(_rect=react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect",{width:27.5,height:19.5,x:.25,y:4.25,fill:"#fff",stroke:"#D6D8DD",strokeWidth:.5,rx:2.75})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("mask",{id:"Cuba_svg__a",width:28,height:20,x:0,y:4,maskUnits:"userSpaceOnUse",style:{maskType:"luminance"}},_rect2||(_rect2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect",{width:27.5,height:19.5,x:.25,y:4.25,fill:"#fff",stroke:"#fff",strokeWidth:.5,rx:2.75}))),_g||(_g=react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{fillRule:"evenodd",clipRule:"evenodd",mask:"url(#Cuba_svg__a)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#0B389F",d:"M0 8h28V4H0zm0 8h28v-4H0zm0 8h28v-4H0z"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#E12A43",d:"m0 4 13.333 10L0 24z"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#fff",d:"m4.667 15.023-1.568 1.134.595-1.841-1.563-1.14 1.935-.003.6-1.84.602 1.84 1.935.003-1.564 1.14.595 1.841z"}))))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/flags/RussianFederation.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgRussianFederation});var _rect,_rect2,_g,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgRussianFederation=function SvgRussianFederation(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 28 28"},props),_rect||(_rect=react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect",{width:27.5,height:19.5,x:.25,y:4.25,fill:"#fff",stroke:"#D6D8DD",strokeWidth:.5,rx:2.75})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("mask",{id:"RussianFederation_svg__a",width:28,height:20,x:0,y:4,maskUnits:"userSpaceOnUse",style:{maskType:"luminance"}},_rect2||(_rect2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect",{width:27.5,height:19.5,x:.25,y:4.25,fill:"#fff",stroke:"#fff",strokeWidth:.5,rx:2.75}))),_g||(_g=react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{fillRule:"evenodd",clipRule:"evenodd",mask:"url(#RussianFederation_svg__a)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#0C47B7",d:"M0 17.333h28v-6.666H0z"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#E53B35",d:"M0 24h28v-6.667H0z"}))))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/PlusOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgPlusOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgPlusOutline=function SvgPlusOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M12.65 5a.65.65 0 1 0-1.3 0v6.35H5a.65.65 0 1 0 0 1.3h6.35V19a.65.65 0 1 0 1.3 0v-6.35H19a.65.65 0 1 0 0-1.3h-6.35z"})))};__webpack_require__.p},"./src/components/InputIconButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>InputIconButton});__webpack_require__("./node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function AnyIcon({icon,...props}){const Icon=icon;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Icon,{...props})}AnyIcon.displayName="AnyIcon";const InputIconButton=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(AnyIcon).withConfig({displayName:"InputIconButton",componentId:"sc-1brcj1d-0"})(["& *[fill^='#']{fill:",";}[disabled] &&&{pointer-events:none;& *[fill^='#']{fill:",";}}&:hover{cursor:pointer;}&:hover *[fill^='#']{fill:",";}"],(props=>props.theme.color["Neutral/Neutral 50"]),(props=>props.theme.color["Neutral/Neutral 30"]),(props=>props.theme.color["Primary/Primary 70"]));try{AnyIcon.displayName="AnyIcon",AnyIcon.__docgenInfo={description:"",displayName:"AnyIcon",props:{icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/InputIconButton.tsx#AnyIcon"]={docgenInfo:AnyIcon.__docgenInfo,name:"AnyIcon",path:"src/components/InputIconButton.tsx#AnyIcon"})}catch(__react_docgen_typescript_loader_error){}try{InputIconButton.displayName="InputIconButton",InputIconButton.__docgenInfo={description:"",displayName:"InputIconButton",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/InputIconButton.tsx#InputIconButton"]={docgenInfo:InputIconButton.__docgenInfo,name:"InputIconButton",path:"src/components/InputIconButton.tsx#InputIconButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Menu/MenuActionsPanel.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{q:()=>MenuActionsPanel,x:()=>getHighlightedFilteredOptions});var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_getTextHighlightMeta__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/utils/getTextHighlightMeta.ts"),_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Menu/MenuItem.tsx"),_src_components_common_uid__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/common/uid.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const MenuActionsPanelDiv=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"MenuActionsPanel__MenuActionsPanelDiv",componentId:"sc-ssytv1-0"})(["padding:",";",""],(p=>"s"===p.$dimension?"10px 12px":"12px 16px"),(p=>p.$menuActionsPanelCssMixin)),MenuActionsPanel=({dimension,menuActionsPanelCssMixin,...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MenuActionsPanelDiv,{...props,$dimension:dimension,$menuActionsPanelCssMixin:menuActionsPanelCssMixin});MenuActionsPanel.displayName="MenuActionsPanel";const HighlightText=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.span.withConfig({displayName:"MenuActionsPanel__HighlightText",componentId:"sc-ssytv1-1"})(["color:",";"],(p=>p.theme.color["Primary/Primary 60 Main"])),TextWrapper=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"MenuActionsPanel__TextWrapper",componentId:"sc-ssytv1-2"})(["overflow:hidden;text-overflow:ellipsis;white-space:nowrap;"]),StyledMenuItem=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s).withConfig({displayName:"MenuActionsPanel__StyledMenuItem",componentId:"sc-ssytv1-3"})(["color:",";pointer-events:none;&&[data-disabled='true']{background-color:",";color:",";&& *[fill^='#']{fill:",";}}"],(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Special/Elevated BG"]),(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Neutral/Neutral 50"]));function getHighlightedFilteredOptions(options,searchValue="",emptyMessage,dimension,highlightFunction=_src_components_common_utils_getTextHighlightMeta__WEBPACK_IMPORTED_MODULE_4__.k){const model=[];if(options.forEach((option=>{const{shouldHighlight,parts,chunks}=highlightFunction(option.label,searchValue,"wholly"),itemValue=shouldHighlight?parts.map(((part,i)=>chunks.includes(part.toLowerCase())?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(HighlightText,{children:part},i):part)):searchValue?null:option.label;itemValue&&model.push({id:option.id,render:options=>(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s,{dimension,...options,key:option.id},(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TextWrapper,{children:itemValue}))})})),0===model.length){const id=(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_5__.h)();model.push({id,render:options=>(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(StyledMenuItem,{dimension,...options,key:id},emptyMessage),disabled:!0})}return model}try{MenuActionsPanel.displayName="MenuActionsPanel",MenuActionsPanel.__docgenInfo={description:"",displayName:"MenuActionsPanel",props:{dimension:{defaultValue:null,description:"",name:"dimension",required:!0,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuActionsPanelCssMixin:{defaultValue:null,description:"",name:"menuActionsPanelCssMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Menu/MenuActionsPanel.tsx#MenuActionsPanel"]={docgenInfo:MenuActionsPanel.__docgenInfo,name:"MenuActionsPanel",path:"src/components/Menu/MenuActionsPanel.tsx#MenuActionsPanel"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Spinner/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Spinner});var _path,react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgSubtractXl=function SvgSubtractXl(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:64,height:64,fill:"none"},props),_path||(_path=react.createElement("path",{d:"M58.607 49.778a32 32 0 0 0 5.252-14.782C64.016 33.346 62.658 32 61 32s-2.982 1.349-3.17 2.995C56.343 47.944 45.346 58 32 58 17.64 58 6 46.36 6 32 6 18.654 16.056 7.656 29.005 6.17 30.651 5.983 32 4.658 32 3S30.654-.015 29.004.14a32 32 0 1 0 29.603 49.638",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_l_path;function Subtract_l_extends(){return Subtract_l_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_l_extends.apply(this,arguments)}var SvgSubtractL=function SvgSubtractL(props){return react.createElement("svg",Subtract_l_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none"},props),Subtract_l_path||(Subtract_l_path=react.createElement("path",{d:"M43.955 37.334a24.001 24.001 0 0 0 3.915-10.838C48.014 25.122 46.88 24 45.5 24c-1.38 0-2.483 1.125-2.662 2.494C41.616 35.81 33.648 43 24 43 13.507 43 5 34.493 5 24c0-9.648 7.191-17.616 16.506-18.838C22.875 4.982 24 3.881 24 2.5c0-1.38-1.122-2.513-2.496-2.37a24 24 0 1 0 22.451 37.204",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_m_path;function Subtract_m_extends(){return Subtract_m_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_m_extends.apply(this,arguments)}var SvgSubtractM=function SvgSubtractM(props){return react.createElement("svg",Subtract_m_extends({xmlns:"http://www.w3.org/2000/svg",width:24,height:24,fill:"none"},props),Subtract_m_path||(Subtract_m_path=react.createElement("path",{d:"M21.978 18.667a12 12 0 0 0 1.928-5.17C24.01 12.673 23.328 12 22.5 12s-1.487.677-1.623 1.494C20.165 17.754 16.462 21 12 21a9 9 0 0 1-1.494-17.877C11.323 2.987 12 2.328 12 1.5S11.326-.01 10.504.094a12 12 0 1 0 11.474 18.573",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_ms_path;function Subtract_ms_extends(){return Subtract_ms_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_ms_extends.apply(this,arguments)}var SvgSubtractMs=function SvgSubtractMs(props){return react.createElement("svg",Subtract_ms_extends({xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none"},props),Subtract_ms_path||(Subtract_ms_path=react.createElement("path",{d:"M18.378 15.54a10.035 10.035 0 0 0 1.613-4.324c.087-.687-.483-1.25-1.176-1.25-.692 0-1.243.565-1.357 1.248a7.526 7.526 0 1 1-8.672-8.672c.683-.114 1.249-.665 1.249-1.357 0-.693-.564-1.263-1.251-1.176a10.035 10.035 0 1 0 9.594 15.531",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_s_path;function Subtract_s_extends(){return Subtract_s_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_s_extends.apply(this,arguments)}var SvgSubtractS=function SvgSubtractS(props){return react.createElement("svg",Subtract_s_extends({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none"},props),Subtract_s_path||(Subtract_s_path=react.createElement("path",{d:"M14.652 12.445a8 8 0 0 0 1.286-3.448C16.006 8.45 15.552 8 15 8c-.552 0-.991.451-1.082.996A6.002 6.002 0 0 1 2 8a6.002 6.002 0 0 1 5.004-5.918C7.55 1.992 8 1.552 8 1S7.55-.006 7.003.062a8 8 0 1 0 7.649 12.383",clipRule:"evenodd"})))};__webpack_require__.p;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const sizes=(0,styled_components_browser_esm.iv)(["width:",";height:",";"],(({$dimension})=>{switch($dimension){case"s":return"16px";case"ms":return"20px";case"m":return"24px";case"xl":return"64px";default:return"48px"}}),(({$dimension})=>{switch($dimension){case"s":return"16px";case"ms":return"20px";case"m":return"24px";case"xl":return"64px";default:return"48px"}})),spin=(0,styled_components_browser_esm.F4)(["0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}"]),SpinnerWrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"Spinner__SpinnerWrapper",componentId:"sc-1ehr66t-0"})(["position:relative;",";& svg{"," animation:"," 1s linear infinite;path{fill:",";}}"],sizes,(p=>p.$svgMixin||""),spin,(({$inverse,theme})=>$inverse?theme.color["Special/Static White"]:theme.color["Primary/Primary 60 Main"])),Spinner=({dimension="m",inverse=!1,svgMixin,...props})=>{const SpinnerIcon=(dimension=>{switch(dimension){case"s":return SvgSubtractS;case"ms":return SvgSubtractMs;case"m":return SvgSubtractM;case"xl":return SvgSubtractXl;default:return SvgSubtractL}})(dimension);return(0,jsx_runtime.jsx)(SpinnerWrapper,{$inverse:inverse,$dimension:dimension,$svgMixin:svgMixin,role:"alert","aria-live":"assertive",...props,children:(0,jsx_runtime.jsx)(SpinnerIcon,{})})};Spinner.displayName="Spinner",Spinner.displayName="Spinner";try{Spinner.displayName="Spinner",Spinner.__docgenInfo={description:"",displayName:"Spinner",props:{dimension:{defaultValue:{value:"m"},description:"Рзамер спиннера",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"ms"'}]}},inverse:{defaultValue:{value:"false"},description:"Белый цвет компонента",name:"inverse",required:!1,type:{name:"boolean"}},svgMixin:{defaultValue:null,description:"Миксин svg иконки",name:"svgMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Spinner/index.tsx#Spinner"]={docgenInfo:Spinner.__docgenInfo,name:"Spinner",path:"src/components/Spinner/index.tsx#Spinner"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/T/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>T});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Typography__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Typography/typography.ts"),_src_components_themes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/common/index.ts"),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/skeleton/animation.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.iv)(["",";pointer-events:none;"],_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__.x),Tspan=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.span.withConfig({displayName:"T__Tspan",componentId:"sc-1bd4slr-0"})(["color:",";",";"," ",""],(({$color,theme,$skeleton})=>$skeleton?"transparent":$color?theme.color[$color]?theme.color[$color]:$color:theme.color[_src_components_themes__WEBPACK_IMPORTED_MODULE_4__.rG]),(p=>_src_components_Typography__WEBPACK_IMPORTED_MODULE_5__.c[p.$font]),(p=>p.$cssMixin?p.$cssMixin:""),(p=>p.$skeleton&&skeletonMixin)),T=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((({font,color,cssMixin,skeleton,...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Tspan,{ref,...props,$font:font,$color:color,$cssMixin:cssMixin,$skeleton:skeleton})));T.displayName="T";try{T.displayName="T",T.__docgenInfo={description:"",displayName:"T",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/T/index.tsx#T"]={docgenInfo:T.__docgenInfo,name:"T",path:"src/components/T/index.tsx#T"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/TextButton/commonMixin.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c8:()=>skeletonMixin,qO:()=>ButtonContainer,qk:()=>IconContainer});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const IconContainer=styled_components__WEBPACK_IMPORTED_MODULE_0__.ZP.div.withConfig({displayName:"commonMixin__IconContainer",componentId:"sc-4cq1gw-0"})([""]),ButtonContainer=styled_components__WEBPACK_IMPORTED_MODULE_0__.ZP.div.withConfig({displayName:"commonMixin__ButtonContainer",componentId:"sc-4cq1gw-1"})([""]),loadingKeyframes=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.F4)(["to{background-position:315px 0,0 0,0 190px,50px 195px;}"]),skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.iv)(["cursor:progress;background-image:linear-gradient(0.25turn,transparent,#fff,transparent),linear-gradient(#eee,#eee),radial-gradient(38px circle at 19px 19px,#eee 50%,transparent 51%),linear-gradient(#eee,#eee);background-repeat:no-repeat;background-size:315px 250px,315px 180px,100px 100px,225px 30px;background-position:-315px 0,0 0,0 190px,50px 195px;animation:"," 1.5s infinite;"],loadingKeyframes)},"./src/components/TextButton/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>TextButton});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Spinner=__webpack_require__("./src/components/Spinner/index.tsx"),commonMixin=__webpack_require__("./src/components/TextButton/commonMixin.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts");const defaultAppearanceMixin=(0,styled_components_browser_esm.iv)(["","{",";border-radius:",";svg{visibility:",";}}border-radius:",";&:focus-visible{outline-offset:2px;outline:"," solid 2px;}&:hover{cursor:pointer;color:",";","{svg{path{fill:",";}}}}&:active{color:",";","{svg{path{fill:",";}}}}&:disabled{cursor:not-allowed;color:",";","{svg{path{fill:",";}}}}"],commonMixin.qk,(({$skeleton})=>$skeleton&&commonMixin.c8),(({$skeleton})=>$skeleton?"50%":""),(p=>p.$skeleton||p.$loading?"hidden":"visible"),(p=>p.$skeleton?0:(0,borderRadius.c8)(p.theme.shape)),(p=>p.theme.color["Primary/Primary 60 Main"]),(({theme})=>theme.color["Primary/Primary 70"]),commonMixin.qk,(({theme})=>theme.color["Primary/Primary 70"]),(({theme})=>theme.color["Primary/Primary 80"]),commonMixin.qk,(({theme})=>theme.color["Primary/Primary 80"]),(({theme})=>theme.color["Neutral/Neutral 30"]),commonMixin.qk,(({theme})=>theme.color["Neutral/Neutral 30"])),primaryAppearanceMixin=(0,styled_components_browser_esm.iv)(["color:",";","{svg{path{fill:",";}}}"],(({theme})=>theme.color["Primary/Primary 60 Main"]),commonMixin.qk,(({theme})=>theme.color["Primary/Primary 60 Main"])),secondaryAppearanceMixin=(0,styled_components_browser_esm.iv)(["color:",";","{svg{path{fill:",";}}}"],(({theme})=>theme.color["Neutral/Neutral 90"]),commonMixin.qk,(({theme})=>theme.color["Neutral/Neutral 50"])),appearanceMixin=(0,styled_components_browser_esm.iv)(["&[data-appearance='primary']{","}&[data-appearance='secondary']{","}",""],primaryAppearanceMixin,secondaryAppearanceMixin,defaultAppearanceMixin);var typography=__webpack_require__("./src/components/Typography/typography.ts");const dimensionMixin=(0,styled_components_browser_esm.iv)(["&[data-dimension='m']{","{width:24px;height:24px;}",";}&[data-dimension='s']{","{width:20px;height:20px;}",";}"],commonMixin.qk,typography.c["Button/Button 1"],commonMixin.qk,typography.c["Button/Button 2"]);var animation=__webpack_require__("./src/components/skeleton/animation.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const StyledSpinner=(0,styled_components_browser_esm.ZP)(Spinner.$).withConfig({displayName:"TextButton__StyledSpinner",componentId:"sc-1tmi7dj-0"})(["position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);"]),StyledButton=styled_components_browser_esm.ZP.button.withConfig({displayName:"TextButton__StyledButton",componentId:"sc-1tmi7dj-1"})(["position:relative;box-sizing:border-box;display:inline-flex;flex-direction:row;gap:8px;align-items:center;vertical-align:middle;appearance:none;border:none;background:transparent;padding:0;white-space:nowrap;",";","{visibility:",";}","{visibility:",";}",";",";"],(p=>p.$skeleton&&animation.x),commonMixin.qO,(p=>p.$skeleton||p.$loading?"hidden":"visible"),commonMixin.qk,(p=>p.$skeleton||p.$loading?"hidden":"visible"),appearanceMixin,dimensionMixin),TextButton=react.forwardRef((({appearance="primary",dimension="m",icon,iconStart,iconEnd,type="button",text,displayRight=!1,loading=!1,skeleton=!1,...props},ref)=>{const disabled=props.disabled||loading||skeleton;return(0,jsx_runtime.jsxs)(StyledButton,{...props,"data-dimension":dimension,"data-appearance":appearance,ref,$appearance:appearance,$dimension:dimension,type,disabled,$loading:loading,$skeleton:skeleton,children:[loading&&(0,jsx_runtime.jsx)(StyledSpinner,{dimension:"s"===dimension?"ms":"m"}),iconStart?(0,jsx_runtime.jsx)(commonMixin.qk,{children:iconStart}):icon&&!displayRight?(0,jsx_runtime.jsx)(commonMixin.qk,{children:icon}):null,(0,jsx_runtime.jsx)(commonMixin.qO,{children:(0,jsx_runtime.jsx)("span",{children:text})}),iconEnd?(0,jsx_runtime.jsx)(commonMixin.qk,{children:iconEnd}):icon&&displayRight?(0,jsx_runtime.jsx)(commonMixin.qk,{children:icon}):null]})}));TextButton.displayName="TextButton";try{TextButton.displayName="TextButton",TextButton.__docgenInfo={description:"",displayName:"TextButton",props:{appearance:{defaultValue:{value:"primary"},description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},dimension:{defaultValue:{value:"m"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},text:{defaultValue:null,description:"Текст кнопки",name:"text",required:!1,type:{name:"string"}},displayRight:{defaultValue:{value:"false"},description:"@deprecated Используйте iconStart или iconEnd\nПозиционирование иконки. По умолчанию - слева",name:"displayRight",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:{value:"false"},description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TextButton/index.tsx#TextButton"]={docgenInfo:TextButton.__docgenInfo,name:"TextButton",path:"src/components/TextButton/index.tsx#TextButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/dom/changeInputData.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function isInputDataDifferent(data1,data2){return data1.value!==data2.value||data1.selectionStart!==data2.selectionStart||data1.selectionEnd!==data2.selectionEnd}function changeInputData(input,toChangeData){const{value=input.value,selectionStart,selectionEnd}=toChangeData;if(isInputDataDifferent(input,{value,selectionStart,selectionEnd})){const nativeInputValueSetter=Object.getOwnPropertyDescriptor(Object.getPrototypeOf(input),"value")?.set;let event;nativeInputValueSetter?.call(input,value),"number"==typeof selectionStart&&"number"==typeof selectionEnd&&input.setSelectionRange(selectionStart,selectionEnd),"function"==typeof Event?event=new Event("input",{bubbles:!0}):(event=document.createEvent("Event"),event.initEvent("input",!0,!0)),input.dispatchEvent(event)}}__webpack_require__.d(__webpack_exports__,{F:()=>isInputDataDifferent,j:()=>changeInputData})},"./src/components/common/hooks/useDebounce.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>useDebounce});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useDebounce(value,delay){const[debouncedValue,setDebouncedValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const handler=setTimeout((()=>{setDebouncedValue(value)}),delay);return()=>{clearTimeout(handler)}}),[value,delay]),debouncedValue}},"./src/components/common/utils/checkOverflow.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>checkOverflow});const checkOverflow=textContainer=>!!textContainer&&(textContainer.offsetHeight<textContainer.scrollHeight||textContainer.offsetWidth<textContainer.scrollWidth)},"./src/components/common/utils/getTextHighlightMeta.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>getTextHighlightMeta});const getTextHighlightMeta=(text="",highlight="",highlightFormat="word")=>{const chunks=("word"===highlightFormat?highlight.split(" "):[highlight]).filter(Boolean).map((chunk=>chunk.toLowerCase())),specialCharacters=[".","?","*","+","-","^","$","[","]","\\","(",")","{","}","|"],pattern=chunks.map((chunk=>`(${chunk.split("").map((letter=>specialCharacters.includes(letter)?`\\${letter}`:letter)).join("")})?`)).join(""),parts=text.split(new RegExp(pattern,"gi")).filter(Boolean);return{shouldHighlight:!highlight||parts.some((part=>chunks.includes(part.toLowerCase()))),parts,chunks}}},"./src/components/input/Container.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W2:()=>Container,c8:()=>skeletonMixin,pT:()=>containerHeights,xj:()=>HeightLimitedContainer});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/themes/borderRadius.ts"),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/skeleton/animation.tsx");const containerHeights=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.iv)(["height:",";"],(({$dimension})=>{switch($dimension){case"xl":return"56px";case"s":return"32px";default:return"40px"}})),skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.iv)([""," & > *{visibility:hidden;}"],_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_1__.x),Container=styled_components__WEBPACK_IMPORTED_MODULE_0__.ZP.div.withConfig({displayName:"Container",componentId:"sc-1p357h8-0"})(["position:relative;display:flex;align-items:stretch;border:none;border-radius:",";pointer-events:",";",";"],(p=>p.$skeleton?0:(0,_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_2__.c8)(p.theme.shape)),(p=>p.$skeleton?"none":"all"),(({$skeleton})=>$skeleton&&skeletonMixin)),HeightLimitedContainer=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.ZP)(Container).withConfig({displayName:"Container__HeightLimitedContainer",componentId:"sc-1p357h8-1"})(["",";"],containerHeights);try{Container.displayName="Container",Container.__docgenInfo={description:"",displayName:"Container",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Container.tsx#Container"]={docgenInfo:Container.__docgenInfo,name:"Container",path:"src/components/input/Container.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{HeightLimitedContainer.displayName="HeightLimitedContainer",HeightLimitedContainer.__docgenInfo={description:"",displayName:"HeightLimitedContainer",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Container.tsx#HeightLimitedContainer"]={docgenInfo:HeightLimitedContainer.__docgenInfo,name:"HeightLimitedContainer",path:"src/components/input/Container.tsx#HeightLimitedContainer"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/input/Select/OptionGroup.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>OptionGroup});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_useSelectContext__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/input/Select/useSelectContext.tsx"),_styled__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/input/Select/styled.ts"),_Option__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/input/Select/Option/index.tsx"),_src_components_input_Select_DropDownContext__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/input/Select/DropDownContext.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Category=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_styled__WEBPACK_IMPORTED_MODULE_3__.Mb).withConfig({displayName:"OptionGroup__Category",componentId:"sc-1yz9kyf-0"})(["font-weight:500;color:",";user-select:none;"],(props=>props.theme.color["Neutral/Neutral 90"])),OptionGroup=({label,disabled,children,...props})=>{const selectContext=(0,_src_components_input_Select_DropDownContext__WEBPACK_IMPORTED_MODULE_4__.U)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_useSelectContext__WEBPACK_IMPORTED_MODULE_5__.in,{disabled,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Option__WEBPACK_IMPORTED_MODULE_6__.W,{value:label,readOnly:!0,renderOption:()=>(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Category,{...props,$dimension:selectContext?.dimension,key:label},label)},label),children]})};OptionGroup.displayName="OptionGroup";try{OptionGroup.displayName="OptionGroup",OptionGroup.__docgenInfo={description:"",displayName:"OptionGroup",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Select/OptionGroup.tsx#OptionGroup"]={docgenInfo:OptionGroup.__docgenInfo,name:"OptionGroup",path:"src/components/input/Select/OptionGroup.tsx#OptionGroup"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/input/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>INPUT_STATUS_VALUES,q:()=>INPUT_DIMENSIONS_VALUES});const INPUT_DIMENSIONS_VALUES=["xl","m","s"],INPUT_STATUS_VALUES=["error","success"]},"./src/components/skeleton/animation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>skeletonAnimationMixin});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const skeletonAnimation=props=>(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.F4)(["0%{background-color:",";border-color:",";}50%{background-color:",";border-color:",";}100%{background-color:",";border-color:",";}"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"]),skeletonAnimationMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.iv)(["animation:"," 2s ease infinite;"],(props=>skeletonAnimation(props)));try{skeletonAnimation.displayName="skeletonAnimation",skeletonAnimation.__docgenInfo={description:"",displayName:"skeletonAnimation",props:{as:{defaultValue:null,description:'Dynamically adjust the rendered component or HTML tag, e.g.\n```\nconst StyledButton = styled.button``\n\n<StyledButton as="a" href="/foo">\n  I\'m an anchor now\n</StyledButton>\n```',name:"as",required:!1,type:{name:"KnownTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"KnownTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/skeleton/animation.tsx#skeletonAnimation"]={docgenInfo:skeletonAnimation.__docgenInfo,name:"skeletonAnimation",path:"src/components/skeleton/animation.tsx#skeletonAnimation"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/themes/common/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{lI:()=>MainPrimaryColorName,rG:()=>DefaultFontColorName,sl:()=>DefaultBackgroundColorName});const DefaultFontColorName="Neutral/Neutral 90",DefaultBackgroundColorName="Neutral/Neutral 00",MainPrimaryColorName="Primary/Primary 60 Main"}}]);