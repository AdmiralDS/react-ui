"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[7207],{"./node_modules/@admiral-ds/icons/build/finance/CardSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgCardSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgCardSolid=function SvgCardSolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M6 19a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6Zm.019-10.104c0-.426.351-.771.785-.771h1.932c.433 0 .785.345.785.77v1.961a.778.778 0 0 1-.785.771H6.804a.778.778 0 0 1-.785-.77V8.895Zm.65 5.935a.65.65 0 1 0 0 1.3H8.36a.65.65 0 1 0 0-1.3H6.67Zm8.346.65a.65.65 0 0 1 .65-.65h1.693a.65.65 0 1 1 0 1.3h-1.693a.65.65 0 0 1-.65-.65Zm-3.861-.65a.65.65 0 1 0 0 1.3h1.693a.65.65 0 1 0 0-1.3h-1.693Z",clipRule:"evenodd"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/ChevronDownOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgChevronDownOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgChevronDownOutline=function SvgChevronDownOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M5.226 8.56c0-.18.07-.35.21-.48.27-.24.68-.22.92.04l5.74 6.37 5.55-6.41a.65.65 0 0 1 .92-.04c.26.24.28.65.04.92l-5.99 6.9c-.28.31-.76.31-1.04 0L5.396 9a.627.627 0 0 1-.17-.44Z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/SmallArrowRightOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgSmallArrowRightOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgSmallArrowRightOutline=function SvgSmallArrowRightOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M9.996 16.211c-.18 0-.35-.07-.48-.21a.658.658 0 0 1 .04-.92l3.494-3.146-3.49-3.018a.65.65 0 0 1-.04-.92c.24-.26.65-.28.92-.04l3.98 3.458c.31.28.31.76 0 1.04l-3.984 3.586c-.13.12-.28.17-.44.17Z"})))};__webpack_require__.p},"./.storybook/createBorderRadiusSwapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>createBorderRadiusSwapper});var _admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/themes/light/index.ts");function createBorderRadiusSwapper(borderRadiusKind){return function swapBorder(theme){return theme?(theme.shape.borderRadiusKind=borderRadiusKind||theme.shape.borderRadiusKind,theme):(_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.f.shape.borderRadiusKind=borderRadiusKind||_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.f.shape.borderRadiusKind,_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.f)}}},"./src/components/DropMenu/stories/DropMenu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CategoryExample:()=>CategoryExample,DropMenuCheckboxExample:()=>DropMenuCheckboxExample,DropMenuRadiobuttonExample:()=>DropMenuRadiobuttonExample,DropMenuTooltipExample:()=>DropMenuTooltipExample,SimpleExample:()=>SimpleExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DropMenu_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),DropMenu=__webpack_require__("./src/components/DropMenu/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),Button=__webpack_require__("./src/components/Button/index.tsx"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const STORY_ITEMS=[{id:"1",label:"Option one",value:1},{id:"2",label:"Option two",value:2},{id:"3",label:"Option three",value:3},{id:"4",label:"Option four",value:4,disabled:!0},{id:"5",label:"Option five with long item",value:5},{id:"6",label:"Option six",value:6},{id:"7",label:"Option seven",value:7}],WrapperVertical=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuSimpletemplate__WrapperVertical",componentId:"sc-lhqf5w-0"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:center;gap:20px;"]),Desc=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuSimpletemplate__Desc",componentId:"sc-lhqf5w-1"})(["font-family:'VTB Group UI';color:",";font-size:16px;line-height:24px;"],(p=>p.theme.color["Neutral/Neutral 90"])),handleVisibilityChangeUnControlledState=isVisible=>{console.log("onVisibilityChange with uncontrolled state"),isVisible?console.log("Menu opened"):console.log("Menu closed")},DropMenuSimpleTemplate=({themeBorderKind,...props})=>{const[selected,setSelected]=react.useState(void 0),model=react.useMemo((()=>STORY_ITEMS.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.s,{dimension:props.dimension,...options,key:item.id},item.label)})))),[props.dimension]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.f6,{theme:(0,createBorderRadiusSwapper.z)(themeBorderKind),children:(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsxs)(Desc,{children:["Неконтроллируемое состояние видимости меню:",(0,jsx_runtime.jsx)("br",{}),"- isVisible не передается в DropMenu, ",(0,jsx_runtime.jsx)("br",{}),"- обработчик onVisibilityChange выполняется из DropMenu",(0,jsx_runtime.jsx)("br",{}),"- для открытия/закрытия меню при клике на кнопке используется обработчик handleClick из DropMenu",(0,jsx_runtime.jsx)("br",{}),"По умолчанию DropMenu открывает/закрывает выпадающий список при нажатии на переданный компонент, а также закрывает выпадающий список при выборе опции"]}),(0,jsx_runtime.jsx)(DropMenu.m,{...props,items:model,onSelectItem:id=>{console.log(`selected: ${id}`),setSelected(id)},onVisibilityChange:handleVisibilityChangeUnControlledState,selected,dropContainerClassName:"dropContainerClass",renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,disabled})=>(0,jsx_runtime.jsxs)(Button.zx,{ref:buttonRef,loading:props.loading,disabled,onKeyDown:handleKeyDown,onClick:handleClick,dimension:props.dimension,children:["Нажми",statusIcon]})})]})})};DropMenuSimpleTemplate.displayName="DropMenuSimpleTemplate";try{DropMenuSimpleTemplate.displayName="DropMenuSimpleTemplate",DropMenuSimpleTemplate.__docgenInfo={description:"",displayName:"DropMenuSimpleTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},loading:{defaultValue:null,description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignMenuRef:{defaultValue:null,description:"Компонент, относительно которого необходимо выравнивать выпадающее меню",name:"alignMenuRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал",name:"targetElement",required:!1,type:{name:"Element"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},renderContentProp:{defaultValue:null,description:"Компонент, для которого необходимо Menu",name:"renderContentProp",required:!0,type:{name:"(options: RenderContentProps) => ReactNode"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},multiSelection:{defaultValue:null,description:"Возможность множественного выбора (опции с Checkbox)\n@deprecated use disableSelectedOptionHighlight instead",name:"multiSelection",required:!1,type:{name:"boolean"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DropMenu/stories/DropMenuSimple.template.tsx#DropMenuSimpleTemplate"]={docgenInfo:DropMenuSimpleTemplate.__docgenInfo,name:"DropMenuSimpleTemplate",path:"src/components/DropMenu/stories/DropMenuSimple.template.tsx#DropMenuSimpleTemplate"})}catch(__react_docgen_typescript_loader_error){}var typography=__webpack_require__("./src/components/Typography/typography.ts"),CardSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/finance/CardSolid.svg");const DropMenuCategory_template_WrapperVertical=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuCategorytemplate__WrapperVertical",componentId:"sc-wistvr-0"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:center;gap:20px;"]),DropMenuCategory_template_Desc=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuCategorytemplate__Desc",componentId:"sc-wistvr-1"})(["font-family:'VTB Group UI';color:",";font-size:16px;line-height:24px;"],(p=>p.theme.color["Neutral/Neutral 90"])),DropMenuCategory_template_handleVisibilityChangeUnControlledState=isVisible=>{console.log("onVisibilityChange with uncontrolled state"),isVisible?console.log("Menu opened"):console.log("Menu closed")},StyledAdditionalText=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuCategorytemplate__StyledAdditionalText",componentId:"sc-wistvr-2"})([""," color:",";pointer-events:none;"],typography.c["Body/Body 2 Long"],(({theme})=>theme.color["Neutral/Neutral 50"])),StyledMenuItem=(0,styled_components_browser_esm.ZP)(MenuItem.s).withConfig({displayName:"DropMenuCategorytemplate__StyledMenuItem",componentId:"sc-wistvr-3"})(["padding:6px 8px;margin:0 8px 0 24px;border-bottom:",";flex-direction:column;align-items:flex-start;"],(({theme})=>`1px solid ${theme.color["Neutral/Neutral 20"]}`)),StyledDropMenu=(0,styled_components_browser_esm.ZP)(DropMenu.m).withConfig({displayName:"DropMenuCategorytemplate__StyledDropMenu",componentId:"sc-wistvr-4"})(["min-width:400px;"]),CATEGORIES=[{name:"Категория 1",id:"1",content:[{id:"2",label:"Номер Карты /****45",value:1},{id:"3",label:"Номер Карты /****75",value:2},{id:"4",label:"Номер Карты /****22",value:3},{id:"5",label:"Номер Карты /****33",value:4}]},{name:"Категория 2",id:"9",content:[{id:"10",label:"Номер Карты /****21",value:5},{id:"11",label:"Номер Карты /****35",value:6},{id:"12",label:"Номер Карты /****39",value:7},{id:"13",label:"Номер Карты /****41",value:8}]}],DropMenuCategoryTemplate=props=>{const model=react.useMemo((()=>CATEGORIES.reduce(((acc,item)=>(acc.push({id:item.id,render:options=>(0,jsx_runtime.jsx)(MenuItem.s,{dimension:props.dimension,...options,children:item.name},item.id),disabled:!0}),acc.concat(item.content.map((subitem=>({id:subitem.id,render:options=>(0,jsx_runtime.jsxs)(StyledMenuItem,{dimension:props.dimension,...options,children:[(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"center",justifyContent:"space-between"},children:[subitem.label," ",(0,jsx_runtime.jsx)(CardSolid.r,{width:24,height:24})]}),(0,jsx_runtime.jsx)(StyledAdditionalText,{children:"Дополнительный текст"})]},subitem.id)})))))),[])),[props.dimension]),[selected,setSelected]=react.useState(""),[active,setActive]=react.useState("");return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(DropMenuCategory_template_WrapperVertical,{children:[(0,jsx_runtime.jsxs)(DropMenuCategory_template_Desc,{children:["Неконтроллируемое состояние видимости меню:",(0,jsx_runtime.jsx)("br",{}),"- isVisible не передается в DropMenu; ",(0,jsx_runtime.jsx)("br",{}),"- обработчик onVisibilityChange выполняется из DropMenu;",(0,jsx_runtime.jsx)("br",{}),"- для открытия/закрытия меню при клике на кнопке используется обработчик handleClick из DropMenu.",(0,jsx_runtime.jsx)("br",{}),"По умолчанию DropMenu открывает/закрывает выпадающий список при нажатии на переданный компонент, а также закрывает выпадающий список при выборе опции."]}),(0,jsx_runtime.jsx)(StyledDropMenu,{...props,items:model,onSelectItem:id=>{console.log(`selected: ${id}`),setSelected(id)},onVisibilityChange:DropMenuCategory_template_handleVisibilityChangeUnControlledState,selected,active,onActivateItem:setActive,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,disabled})=>(0,jsx_runtime.jsxs)(Button.zx,{ref:buttonRef,loading:props.loading,disabled,onKeyDown:handleKeyDown,onClick:handleClick,dimension:props.dimension,children:["Нажми",statusIcon]})})]})})};try{DropMenuCategoryTemplate.displayName="DropMenuCategoryTemplate",DropMenuCategoryTemplate.__docgenInfo={description:"",displayName:"DropMenuCategoryTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},loading:{defaultValue:null,description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignMenuRef:{defaultValue:null,description:"Компонент, относительно которого необходимо выравнивать выпадающее меню",name:"alignMenuRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал",name:"targetElement",required:!1,type:{name:"Element"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},renderContentProp:{defaultValue:null,description:"Компонент, для которого необходимо Menu",name:"renderContentProp",required:!0,type:{name:"(options: RenderContentProps) => ReactNode"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},multiSelection:{defaultValue:null,description:"Возможность множественного выбора (опции с Checkbox)\n@deprecated use disableSelectedOptionHighlight instead",name:"multiSelection",required:!1,type:{name:"boolean"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DropMenu/stories/DropMenuCategory.template.tsx#DropMenuCategoryTemplate"]={docgenInfo:DropMenuCategoryTemplate.__docgenInfo,name:"DropMenuCategoryTemplate",path:"src/components/DropMenu/stories/DropMenuCategory.template.tsx#DropMenuCategoryTemplate"})}catch(__react_docgen_typescript_loader_error){}var TooltipHOC=__webpack_require__("./src/components/TooltipHOC/index.tsx");const DropMenuTooltip_template_STORY_ITEMS=[{id:"1",label:"Option one",value:1},{id:"2",label:"Option two",value:2},{id:"3",label:"Привет, пупсик! Хотел тебе сказать, что ты андроид.",value:3},{id:"4",label:"Option four",value:4},{id:"5",label:"Option five",value:5},{id:"6",label:"Option six",value:7},{id:"7",label:"Option seven",value:6}],DropMenuTooltip_template_WrapperVertical=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuTooltiptemplate__WrapperVertical",componentId:"sc-fbcyyr-0"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:center;gap:20px;"]),DropMenuTooltip_template_Desc=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuTooltiptemplate__Desc",componentId:"sc-fbcyyr-1"})(["font-family:'VTB Group UI';color:",";font-size:16px;line-height:24px;"],(p=>p.theme.color["Neutral/Neutral 90"])),MenuItemWithTooltip=(0,TooltipHOC.u)(MenuItem.s),DropMenuTooltipTemplate=props=>{const[selected,setSelected]=react.useState(void 0),[isVisible,setIsVisible]=react.useState(!1),model=react.useMemo((()=>DropMenuTooltip_template_STORY_ITEMS.map((item=>{const tooltip=item.label.length>20;return{id:item.id,render:options=>tooltip?(0,react.createElement)(MenuItemWithTooltip,{renderContent:()=>item.label,dimension:props.dimension,...options,key:item.id},item.label.slice(0,17)+"..."):(0,react.createElement)(MenuItem.s,{dimension:props.dimension,...options,key:item.id},item.label)}}))),[props.dimension]),handleVisibilityChange=isVisible=>{(isVisible=>{console.log("onVisibilityChange with controlled state"),isVisible?console.log("Menu opened"):console.log("Menu closed")})(isVisible),setIsVisible(isVisible)},handleButtonClick=e=>{handleVisibilityChange(!isVisible),props.onClick?.(e)};return(0,jsx_runtime.jsxs)(DropMenuTooltip_template_WrapperVertical,{children:[(0,jsx_runtime.jsxs)(DropMenuTooltip_template_Desc,{children:["Состояние видимости меню полностью контроллируется вне DropMenu:",(0,jsx_runtime.jsx)("br",{}),"- используется кастомный обработчик клика по кнопке (handleButtonClick) для открытия/закрытия выпадающего списка;",(0,jsx_runtime.jsx)("br",{}),"- после выбора опции из выпадающего списка (handleSelectItem) происходит закрытие меню;",(0,jsx_runtime.jsx)("br",{}),"- используется кастомный обработчик при клике вне области выпадающего списка (handleClickOutside)."]}),(0,jsx_runtime.jsx)(DropMenu.m,{...props,items:model,isVisible,onVisibilityChange:handleVisibilityChange,onSelectItem:id=>{console.log(`Option ${id} clicked`),setSelected(id),handleVisibilityChange(!1)},onClickOutside:()=>{console.log("handleClickOutside from stories"),handleVisibilityChange(!1)},selected,renderContentProp:({buttonRef,handleKeyDown,statusIcon,disabled})=>(0,jsx_runtime.jsxs)(Button.zx,{ref:buttonRef,loading:props.loading,disabled,onKeyDown:handleKeyDown,onClick:handleButtonClick,dimension:props.dimension,children:["Нажми",statusIcon]})})]})};DropMenuTooltipTemplate.displayName="DropMenuTooltipTemplate";try{DropMenuTooltipTemplate.displayName="DropMenuTooltipTemplate",DropMenuTooltipTemplate.__docgenInfo={description:"",displayName:"DropMenuTooltipTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},loading:{defaultValue:null,description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignMenuRef:{defaultValue:null,description:"Компонент, относительно которого необходимо выравнивать выпадающее меню",name:"alignMenuRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал",name:"targetElement",required:!1,type:{name:"Element"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},renderContentProp:{defaultValue:null,description:"Компонент, для которого необходимо Menu",name:"renderContentProp",required:!0,type:{name:"(options: RenderContentProps) => ReactNode"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},multiSelection:{defaultValue:null,description:"Возможность множественного выбора (опции с Checkbox)\n@deprecated use disableSelectedOptionHighlight instead",name:"multiSelection",required:!1,type:{name:"boolean"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DropMenu/stories/DropMenuTooltip.template.tsx#DropMenuTooltipTemplate"]={docgenInfo:DropMenuTooltipTemplate.__docgenInfo,name:"DropMenuTooltipTemplate",path:"src/components/DropMenu/stories/DropMenuTooltip.template.tsx#DropMenuTooltipTemplate"})}catch(__react_docgen_typescript_loader_error){}var MenuItemWithCheckbox=__webpack_require__("./src/components/Menu/MenuItemWithCheckbox.tsx");const DropMenuCheckbox_template_STORY_ITEMS=[{id:"1",label:"Option one"},{id:"2",label:"Option two"},{id:"3",label:"Option three"},{id:"4",label:"Option four"},{id:"5",label:"Option five"},{id:"6",label:"Option six"},{id:"7",label:"Option seven"}],DropMenuCheckbox_template_WrapperVertical=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuCheckboxtemplate__WrapperVertical",componentId:"sc-1iupyjl-0"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:center;gap:20px;"]),DropMenuCheckbox_template_Desc=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuCheckboxtemplate__Desc",componentId:"sc-1iupyjl-1"})(["font-family:'VTB Group UI';color:",";font-size:16px;line-height:24px;"],(p=>p.theme.color["Neutral/Neutral 90"])),DropMenuCheckboxTemplate=props=>{const[innerState,setInnerState]=react.useState(DropMenuCheckbox_template_STORY_ITEMS.map((item=>item))),[activeOption,setActiveOption]=react.useState(innerState[0].id),[selectedOption,setSelectedOption]=react.useState(),[isVisible,setIsVisible]=react.useState(!1),model=react.useMemo((()=>innerState.map((item=>({id:item.id,render:options=>(0,jsx_runtime.jsx)(MenuItemWithCheckbox.N,{id:item.id,dimension:props.dimension,checked:!!item.checked,...options,children:item.label},item.id)})))),[innerState,activeOption,props.dimension]),handleVisibilityChange=isVisible=>{(isVisible=>{console.log("onVisibilityChange with controlled state"),isVisible?console.log("Menu opened"):console.log("Menu closed")})(isVisible),setIsVisible(isVisible)},handleButtonClick=e=>{handleVisibilityChange(!isVisible),props.onClick?.(e)};return(0,jsx_runtime.jsxs)(DropMenuCheckbox_template_WrapperVertical,{children:[(0,jsx_runtime.jsxs)(DropMenuCheckbox_template_Desc,{children:["Состояние видимости меню полностью контроллируется вне DropMenu:",(0,jsx_runtime.jsx)("br",{}),"- используется кастомный обработчик клика по кнопке (handleButtonClick) для открытия/закрытия выпадающего списка;",(0,jsx_runtime.jsx)("br",{}),"- после выбора опции из выпадающего списка (handleSelectItem) происходит закрытие меню;",(0,jsx_runtime.jsx)("br",{}),"- используется кастомный обработчик при клике вне области выпадающего списка (handleClickOutside)."]}),(0,jsx_runtime.jsx)(DropMenu.m,{...props,items:model,active:activeOption,onActivateItem:id=>{setActiveOption(id)},selected:selectedOption,onSelectItem:id=>{console.log(`Option ${id} clicked`);const updatedInnerState=[...innerState],itemToUpdate=updatedInnerState.find((item=>item.id===id));itemToUpdate&&(itemToUpdate.checked=!itemToUpdate.checked),setInnerState(updatedInnerState),setSelectedOption(void 0)},isVisible,onVisibilityChange:handleVisibilityChange,onClickOutside:()=>{console.log("handleClickOutside from stories"),handleVisibilityChange(!1)},disableSelectedOptionHighlight:!0,renderContentProp:({buttonRef,handleKeyDown,statusIcon,disabled})=>(0,jsx_runtime.jsxs)(Button.zx,{ref:buttonRef,loading:props.loading,disabled,onKeyDown:handleKeyDown,onClick:handleButtonClick,dimension:props.dimension,children:["Нажми",statusIcon]})})]})};DropMenuCheckboxTemplate.displayName="DropMenuCheckboxTemplate";try{DropMenuCheckboxTemplate.displayName="DropMenuCheckboxTemplate",DropMenuCheckboxTemplate.__docgenInfo={description:"",displayName:"DropMenuCheckboxTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},loading:{defaultValue:null,description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignMenuRef:{defaultValue:null,description:"Компонент, относительно которого необходимо выравнивать выпадающее меню",name:"alignMenuRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал",name:"targetElement",required:!1,type:{name:"Element"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},renderContentProp:{defaultValue:null,description:"Компонент, для которого необходимо Menu",name:"renderContentProp",required:!0,type:{name:"(options: RenderContentProps) => ReactNode"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},multiSelection:{defaultValue:null,description:"Возможность множественного выбора (опции с Checkbox)\n@deprecated use disableSelectedOptionHighlight instead",name:"multiSelection",required:!1,type:{name:"boolean"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DropMenu/stories/DropMenuCheckbox.template.tsx#DropMenuCheckboxTemplate"]={docgenInfo:DropMenuCheckboxTemplate.__docgenInfo,name:"DropMenuCheckboxTemplate",path:"src/components/DropMenu/stories/DropMenuCheckbox.template.tsx#DropMenuCheckboxTemplate"})}catch(__react_docgen_typescript_loader_error){}var RadioButton=__webpack_require__("./src/components/RadioButton/index.tsx");const DropMenuRadiobutton_template_STORY_ITEMS=[{id:"1",label:"Option one",value:1},{id:"2",label:"Option two",value:2},{id:"3",label:"Option three",value:3},{id:"4",label:"Option four",value:4,disabled:!0},{id:"5",label:"Option five with very very long text",value:5},{id:"6",label:"Option six",value:6},{id:"7",label:"Option seven",value:7}],DropMenuRadiobutton_template_WrapperVertical=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuRadiobuttontemplate__WrapperVertical",componentId:"sc-ncbw80-0"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:center;gap:20px;"]),DropMenuRadiobutton_template_Desc=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenuRadiobuttontemplate__Desc",componentId:"sc-ncbw80-1"})(["font-family:'VTB Group UI';color:",";font-size:16px;line-height:24px;"],(p=>p.theme.color["Neutral/Neutral 90"])),DropMenuRadiobutton_template_handleVisibilityChangeUnControlledState=isVisible=>{console.log("onVisibilityChange with uncontrolled state"),isVisible?console.log("Menu opened"):console.log("Menu closed")},DropMenuRadiobuttonTemplate=props=>{const[selected,setSelected]=react.useState(void 0),[checkedState,setCheckedState]=react.useState(DropMenuRadiobutton_template_STORY_ITEMS.map((item=>({id:item.id,checked:!1})))),model=react.useMemo((()=>DropMenuRadiobutton_template_STORY_ITEMS.map(((item,index)=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.s,{dimension:props.dimension,...options,key:item.id},(0,jsx_runtime.jsx)(RadioButton.E,{dimension:"s"!==props.dimension?"m":props.dimension,disabled:item.disabled,checked:checkedState[index].checked,onChange:()=>!1,children:item.label},item.id)),disabled:item.disabled})))),[props.dimension,checkedState]);return(0,jsx_runtime.jsxs)(DropMenuRadiobutton_template_WrapperVertical,{children:[(0,jsx_runtime.jsxs)(DropMenuRadiobutton_template_Desc,{children:["Неконтроллируемое состояние видимости меню:",(0,jsx_runtime.jsx)("br",{}),"- isVisible не передается в DropMenu; ",(0,jsx_runtime.jsx)("br",{}),"- обработчик onVisibilityChange выполняется из DropMenu;",(0,jsx_runtime.jsx)("br",{}),"- для открытия/закрытия меню при клике на кнопке используется обработчик handleClick из DropMenu.",(0,jsx_runtime.jsx)("br",{}),"По умолчанию DropMenu открывает/закрывает выпадающий список при нажатии на переданный компонент, а также закрывает выпадающий список при выборе опции."]}),(0,jsx_runtime.jsx)(DropMenu.m,{...props,items:model,onSelectItem:id=>{console.log(`selected: ${id}`);const newCheckedState=checkedState.map((item=>({...item,checked:item.id===id||item.id===selected?!item.checked:item.checked})));setCheckedState(newCheckedState),setSelected(id)},onVisibilityChange:DropMenuRadiobutton_template_handleVisibilityChangeUnControlledState,selected,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,disabled})=>(0,jsx_runtime.jsxs)(Button.zx,{ref:buttonRef,loading:props.loading,disabled,onKeyDown:handleKeyDown,onClick:handleClick,dimension:props.dimension,children:["Нажми",statusIcon]})})]})};DropMenuRadiobuttonTemplate.displayName="DropMenuRadiobuttonTemplate";try{DropMenuRadiobuttonTemplate.displayName="DropMenuRadiobuttonTemplate",DropMenuRadiobuttonTemplate.__docgenInfo={description:"",displayName:"DropMenuRadiobuttonTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},loading:{defaultValue:null,description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignMenuRef:{defaultValue:null,description:"Компонент, относительно которого необходимо выравнивать выпадающее меню",name:"alignMenuRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал",name:"targetElement",required:!1,type:{name:"Element"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},renderContentProp:{defaultValue:null,description:"Компонент, для которого необходимо Menu",name:"renderContentProp",required:!0,type:{name:"(options: RenderContentProps) => ReactNode"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},multiSelection:{defaultValue:null,description:"Возможность множественного выбора (опции с Checkbox)\n@deprecated use disableSelectedOptionHighlight instead",name:"multiSelection",required:!1,type:{name:"boolean"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DropMenu/stories/DropMenuRadiobutton.template.tsx#DropMenuRadiobuttonTemplate"]={docgenInfo:DropMenuRadiobuttonTemplate.__docgenInfo,name:"DropMenuRadiobuttonTemplate",path:"src/components/DropMenu/stories/DropMenuRadiobutton.template.tsx#DropMenuRadiobuttonTemplate"})}catch(__react_docgen_typescript_loader_error){}const DropMenu_stories_Desc=styled_components_browser_esm.ZP.div.withConfig({displayName:"DropMenustories__Desc",componentId:"sc-ekg5oc-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsx)(DropMenu_stories_Desc,{children:"Компонент Dropdown Menu имеет три размера и может быть с иконкой или без. Высота строки : l - 48px, m - 40px, s - 32px"});Description.displayName="Description";const DropMenu_stories={title:"Admiral-2.1/DropMenu",decorators:void 0,component:DropMenu.m,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A68931"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A68967"}]},args:{dimension:"l"},argTypes:{dimension:{options:["l","m","s"],control:{type:"radio"}},themeBorderKind:{options:borderRadius.g2,control:{type:"radio"}},loading:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},multiSelection:{control:{type:"boolean"}},disableSelectedOptionHighlight:{control:{type:"boolean"}},isVisible:{control:{type:"boolean"}},menuWidth:{control:{type:"text"}},menuMaxHeight:{control:{type:"text"}},selected:{control:{type:"text"}},active:{control:{type:"text"}},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1},items:{control:!1},alignMenuRef:{control:!1},targetElement:{control:!1}}},SimpleStory=props=>(0,jsx_runtime.jsx)(DropMenuSimpleTemplate,{...props});SimpleStory.displayName="SimpleStory";const SimpleExample={render:SimpleStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Button, DropMenu, MenuItem } from '@admiral-ds/react-ui';\nimport type { DropMenuProps, RenderOptionProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst STORY_ITEMS = [\n  {\n    id: '1',\n    label: 'Option one',\n    value: 1,\n  },\n  {\n    id: '2',\n    label: 'Option two',\n    value: 2,\n  },\n  {\n    id: '3',\n    label: 'Option three',\n    value: 3,\n  },\n  {\n    id: '4',\n    label: 'Option four',\n    value: 4,\n    disabled: true,\n  },\n  {\n    id: '5',\n    label: 'Option five with long item',\n    value: 5,\n  },\n  {\n    id: '6',\n    label: 'Option six',\n    value: 6,\n  },\n  {\n    id: '7',\n    label: 'Option seven',\n    value: 7,\n  },\n];\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst Desc = styled.div`\n  font-family: 'VTB Group UI';\n  color: ${(p) => p.theme.color['Neutral/Neutral 90']};\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst handleVisibilityChangeUnControlledState = (isVisible: boolean) => {\n  console.log('onVisibilityChange with uncontrolled state');\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nexport const DropMenuSimpleTemplate = ({\n  themeBorderKind,\n  ...props\n}: DropMenuProps & { themeBorderKind?: BorderRadiusType }) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n\n  const model = React.useMemo(() => {\n    return STORY_ITEMS.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension} {...options} key={item.id}>\n          {item.label}\n        </MenuItem>\n      ),\n    }));\n  }, [props.dimension]);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <WrapperVertical>\n        <Desc>\n          Неконтроллируемое состояние видимости меню:\n          <br />\n          - isVisible не передается в DropMenu, <br />- обработчик onVisibilityChange выполняется из DropMenu\n          <br />- для открытия/закрытия меню при клике на кнопке используется обработчик handleClick из DropMenu\n          <br />\n          По умолчанию DropMenu открывает/закрывает выпадающий список при нажатии на переданный компонент, а также\n          закрывает выпадающий список при выборе опции\n        </Desc>\n        <DropMenu\n          {...props}\n          items={model}\n          onSelectItem={(id) => {\n            console.log(`selected: ${id}`);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChangeUnControlledState}\n          selected={selected}\n          dropContainerClassName=\"dropContainerClass\"\n          renderContentProp={({ buttonRef, handleKeyDown, handleClick, statusIcon, disabled }) => {\n            return (\n              <Button\n                ref={buttonRef as React.Ref<HTMLButtonElement>}\n                loading={props.loading}\n                disabled={disabled}\n                onKeyDown={handleKeyDown}\n                onClick={handleClick}\n                dimension={props.dimension}\n              >\n                Нажми\n                {statusIcon}\n              </Button>\n            );\n          }}\n        />\n      </WrapperVertical>\n    </ThemeProvider>\n  );\n};\n"},description:{story:"Базовый пример использования DropMenu"}}},name:"Базовый пример"},CategoryStory=props=>(0,jsx_runtime.jsx)(DropMenuCategoryTemplate,{...props});CategoryStory.displayName="CategoryStory";const CategoryExample={render:CategoryStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\nimport { Button, DropMenu, MenuItem, typography } from '@admiral-ds/react-ui';\nimport { ReactComponent as CardSolid } from '@admiral-ds/icons/build/finance/CardSolid.svg';\nimport type { DropMenuProps, RenderOptionProps } from '@admiral-ds/react-ui';\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst Desc = styled.div`\n  font-family: 'VTB Group UI';\n  color: ${(p) => p.theme.color['Neutral/Neutral 90']};\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst handleVisibilityChangeUnControlledState = (isVisible: boolean) => {\n  console.log('onVisibilityChange with uncontrolled state');\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst StyledAdditionalText = styled.div`\n  ${typography['Body/Body 2 Long']}\n  color: ${({ theme }) => theme.color['Neutral/Neutral 50']};\n  pointer-events: none;\n`;\n\nconst StyledMenuItem = styled(MenuItem)`\n  padding: 6px 8px;\n  margin: 0 8px 0 24px;\n  border-bottom: ${({ theme }) => `1px solid ${theme.color['Neutral/Neutral 20']}`};\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst StyledDropMenu = styled(DropMenu)`\n  min-width: 400px;\n`;\n\nconst CATEGORIES = [\n  {\n    name: 'Категория 1',\n    id: '1',\n    content: [\n      {\n        id: '2',\n        label: 'Номер Карты /****45',\n        value: 1,\n      },\n      {\n        id: '3',\n        label: 'Номер Карты /****75',\n        value: 2,\n      },\n      { id: '4', label: 'Номер Карты /****22', value: 3 },\n      {\n        id: '5',\n        label: 'Номер Карты /****33',\n        value: 4,\n      },\n    ],\n  },\n  {\n    name: 'Категория 2',\n    id: '9',\n    content: [\n      {\n        id: '10',\n        label: 'Номер Карты /****21',\n        value: 5,\n      },\n      {\n        id: '11',\n        label: 'Номер Карты /****35',\n        value: 6,\n      },\n      { id: '12', label: 'Номер Карты /****39', value: 7 },\n      {\n        id: '13',\n        label: 'Номер Карты /****41',\n        value: 8,\n      },\n    ],\n  },\n];\n\nexport const DropMenuCategoryTemplate = (props: DropMenuProps) => {\n  const model = React.useMemo(() => {\n    return CATEGORIES.reduce((acc: any, item: any) => {\n      acc.push({\n        id: item.id,\n        render: (options: RenderOptionProps) => (\n          <MenuItem dimension={props.dimension} key={item.id} {...options}>\n            {item.name}\n          </MenuItem>\n        ),\n        disabled: true,\n      });\n      return acc.concat(\n        item.content.map((subitem: any) => {\n          return {\n            id: subitem.id,\n            render: (options: RenderOptionProps) => (\n              <StyledMenuItem dimension={props.dimension} key={subitem.id} {...options}>\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                  {subitem.label} <CardSolid width={24} height={24} />\n                </div>\n                <StyledAdditionalText>Дополнительный текст</StyledAdditionalText>\n              </StyledMenuItem>\n            ),\n          };\n        }),\n      );\n    }, []);\n  }, [props.dimension]);\n\n  const [selected, setSelected] = React.useState<string | undefined>('');\n  const [active, setActive] = React.useState<string | undefined>('');\n\n  return (\n    <>\n      <WrapperVertical>\n        <Desc>\n          Неконтроллируемое состояние видимости меню:\n          <br />\n          - isVisible не передается в DropMenu; <br />- обработчик onVisibilityChange выполняется из DropMenu;\n          <br />- для открытия/закрытия меню при клике на кнопке используется обработчик handleClick из DropMenu.\n          <br />\n          По умолчанию DropMenu открывает/закрывает выпадающий список при нажатии на переданный компонент, а также\n          закрывает выпадающий список при выборе опции.\n        </Desc>\n        <StyledDropMenu\n          {...props}\n          items={model}\n          onSelectItem={(id) => {\n            console.log(`selected: ${id}`);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChangeUnControlledState}\n          selected={selected}\n          active={active}\n          onActivateItem={setActive}\n          renderContentProp={({ buttonRef, handleKeyDown, handleClick, statusIcon, disabled }) => {\n            return (\n              <Button\n                ref={buttonRef as React.Ref<HTMLButtonElement>}\n                loading={props.loading}\n                disabled={disabled}\n                onKeyDown={handleKeyDown}\n                onClick={handleClick}\n                dimension={props.dimension}\n              >\n                Нажми\n                {statusIcon}\n              </Button>\n            );\n          }}\n        />\n      </WrapperVertical>\n    </>\n  );\n};\n"},description:{story:"Пример с группировкой опций по категориям"}}},name:"Пример с группами"},DropMenuTooltipStory=props=>(0,jsx_runtime.jsx)(DropMenuTooltipTemplate,{...props});DropMenuTooltipStory.displayName="DropMenuTooltipStory";const DropMenuTooltipExample={render:DropMenuTooltipStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\nimport type { DropMenuProps, RenderOptionProps } from '@admiral-ds/react-ui';\nimport { Button, DropMenu, MenuItem, TooltipHoc } from '@admiral-ds/react-ui';\n\nconst STORY_ITEMS = [\n  {\n    id: '1',\n    label: 'Option one',\n    value: 1,\n  },\n  {\n    id: '2',\n    label: 'Option two',\n    value: 2,\n  },\n  {\n    id: '3',\n    label: 'Привет, пупсик! Хотел тебе сказать, что ты андроид.',\n    value: 3,\n  },\n  {\n    id: '4',\n    label: 'Option four',\n    value: 4,\n  },\n  {\n    id: '5',\n    label: 'Option five',\n    value: 5,\n  },\n  {\n    id: '6',\n    label: 'Option six',\n    value: 7,\n  },\n  {\n    id: '7',\n    label: 'Option seven',\n    value: 6,\n  },\n];\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst Desc = styled.div`\n  font-family: 'VTB Group UI';\n  color: ${(p) => p.theme.color['Neutral/Neutral 90']};\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst handleVisibilityChangeControlledState = (isVisible: boolean) => {\n  console.log('onVisibilityChange with controlled state');\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst MenuItemWithTooltip = TooltipHoc(MenuItem);\n\nexport const DropMenuTooltipTemplate = (props: DropMenuProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const [isVisible, setIsVisible] = React.useState<boolean>(false);\n\n  const model = React.useMemo(() => {\n    return STORY_ITEMS.map((item) => {\n      const tooltip = item.label.length > 20;\n\n      return {\n        id: item.id,\n        render: (options: RenderOptionProps) =>\n          tooltip ? (\n            <MenuItemWithTooltip\n              renderContent={() => item.label}\n              dimension={props.dimension}\n              {...options}\n              key={item.id}\n            >\n              {item.label.slice(0, 17) + '...'}\n            </MenuItemWithTooltip>\n          ) : (\n            <MenuItem dimension={props.dimension} {...options} key={item.id}>\n              {item.label}\n            </MenuItem>\n          ),\n      };\n    });\n  }, [props.dimension]);\n\n  const handleVisibilityChange = (isVisible: boolean) => {\n    handleVisibilityChangeControlledState(isVisible);\n    setIsVisible(isVisible);\n  };\n\n  const handleButtonClick = (e: React.MouseEvent<HTMLElement>) => {\n    handleVisibilityChange(!isVisible);\n    props.onClick?.(e);\n  };\n\n  const handleSelectItem = (id: string) => {\n    console.log(`Option ${id} clicked`);\n    setSelected(id);\n    handleVisibilityChange(false);\n  };\n\n  const handleClickOutside = () => {\n    console.log('handleClickOutside from stories');\n    handleVisibilityChange(false);\n  };\n\n  return (\n    <WrapperVertical>\n      <Desc>\n        Состояние видимости меню полностью контроллируется вне DropMenu:\n        <br />\n        - используется кастомный обработчик клика по кнопке (handleButtonClick) для открытия/закрытия выпадающего\n        списка;\n        <br />- после выбора опции из выпадающего списка (handleSelectItem) происходит закрытие меню;\n        <br />- используется кастомный обработчик при клике вне области выпадающего списка (handleClickOutside).\n      </Desc>\n      <DropMenu\n        {...props}\n        items={model}\n        isVisible={isVisible}\n        onVisibilityChange={handleVisibilityChange}\n        onSelectItem={handleSelectItem}\n        onClickOutside={handleClickOutside}\n        selected={selected}\n        renderContentProp={({ buttonRef, handleKeyDown, statusIcon, disabled }) => {\n          return (\n            <Button\n              ref={buttonRef as React.Ref<HTMLButtonElement>}\n              loading={props.loading}\n              disabled={disabled}\n              onKeyDown={handleKeyDown}\n              onClick={handleButtonClick}\n              dimension={props.dimension}\n            >\n              Нажми\n              {statusIcon}\n            </Button>\n          );\n        }}\n      />\n    </WrapperVertical>\n  );\n};\n"},description:{story:"Для того чтобы добавить tooltip к пункту меню, его необходимо обернуть TooltipHoc"}}},name:"Пример с Tooltip"},DropMenuCheckboxStory=props=>(0,jsx_runtime.jsx)(DropMenuCheckboxTemplate,{...props});DropMenuCheckboxStory.displayName="DropMenuCheckboxStory";const DropMenuCheckboxExample={render:DropMenuCheckboxStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\nimport { Button, DropMenu, MenuItemWithCheckbox } from '@admiral-ds/react-ui';\nimport type { DropMenuProps, ItemWithCheckbox, RenderOptionProps } from '@admiral-ds/react-ui';\n\nconst STORY_ITEMS: Array<ItemWithCheckbox> = [\n  {\n    id: '1',\n    label: 'Option one',\n  },\n  {\n    id: '2',\n    label: 'Option two',\n  },\n  {\n    id: '3',\n    label: 'Option three',\n  },\n  {\n    id: '4',\n    label: 'Option four',\n  },\n  {\n    id: '5',\n    label: 'Option five',\n  },\n  {\n    id: '6',\n    label: 'Option six',\n  },\n  {\n    id: '7',\n    label: 'Option seven',\n  },\n];\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst Desc = styled.div`\n  font-family: 'VTB Group UI';\n  color: ${(p) => p.theme.color['Neutral/Neutral 90']};\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst handleVisibilityChangeControlledState = (isVisible: boolean) => {\n  console.log('onVisibilityChange with controlled state');\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nexport const DropMenuCheckboxTemplate = (props: DropMenuProps) => {\n  const [innerState, setInnerState] = React.useState<Array<ItemWithCheckbox>>(STORY_ITEMS.map((item) => item));\n  const [activeOption, setActiveOption] = React.useState<string | undefined>(innerState[0].id);\n  const [selectedOption, setSelectedOption] = React.useState<string | undefined>();\n  const [isVisible, setIsVisible] = React.useState<boolean>(false);\n\n  const model = React.useMemo(() => {\n    return innerState.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItemWithCheckbox\n          key={item.id}\n          id={item.id}\n          dimension={props.dimension}\n          checked={!!item.checked}\n          {...options}\n        >\n          {item.label}\n        </MenuItemWithCheckbox>\n      ),\n    }));\n  }, [innerState, activeOption, props.dimension]);\n\n  const handleActivateItem = (id: string | undefined) => {\n    setActiveOption(id);\n  };\n\n  const handleVisibilityChange = (isVisible: boolean) => {\n    handleVisibilityChangeControlledState(isVisible);\n    setIsVisible(isVisible);\n  };\n\n  const handleSelectItem = (id: string) => {\n    console.log(`Option ${id} clicked`);\n    const updatedInnerState = [...innerState];\n    const itemToUpdate = updatedInnerState.find((item) => item.id === id);\n    if (itemToUpdate) {\n      itemToUpdate.checked = !itemToUpdate.checked;\n    }\n    setInnerState(updatedInnerState);\n    setSelectedOption(undefined);\n  };\n\n  const handleButtonClick = (e: React.MouseEvent<HTMLElement>) => {\n    handleVisibilityChange(!isVisible);\n    props.onClick?.(e);\n  };\n\n  const handleClickOutside = () => {\n    console.log('handleClickOutside from stories');\n    handleVisibilityChange(false);\n  };\n\n  return (\n    <WrapperVertical>\n      <Desc>\n        Состояние видимости меню полностью контроллируется вне DropMenu:\n        <br />\n        - используется кастомный обработчик клика по кнопке (handleButtonClick) для открытия/закрытия выпадающего\n        списка;\n        <br />- после выбора опции из выпадающего списка (handleSelectItem) происходит закрытие меню;\n        <br />- используется кастомный обработчик при клике вне области выпадающего списка (handleClickOutside).\n      </Desc>\n      <DropMenu\n        {...props}\n        items={model}\n        active={activeOption}\n        onActivateItem={handleActivateItem}\n        selected={selectedOption}\n        onSelectItem={handleSelectItem}\n        isVisible={isVisible}\n        onVisibilityChange={handleVisibilityChange}\n        onClickOutside={handleClickOutside}\n        disableSelectedOptionHighlight={true}\n        renderContentProp={({ buttonRef, handleKeyDown, statusIcon, disabled }) => {\n          return (\n            <Button\n              ref={buttonRef as React.Ref<HTMLButtonElement>}\n              loading={props.loading}\n              disabled={disabled}\n              onKeyDown={handleKeyDown}\n              onClick={handleButtonClick}\n              dimension={props.dimension}\n            >\n              Нажми\n              {statusIcon}\n            </Button>\n          );\n        }}\n      />\n    </WrapperVertical>\n  );\n};\n"},description:{story:"Пример меню с пунктами, содержащими Checkbox"}}},name:"Пример с Checkbox"},DropMenuRadiobuttonStory=props=>(0,jsx_runtime.jsx)(DropMenuRadiobuttonTemplate,{...props});DropMenuRadiobuttonStory.displayName="DropMenuRadiobuttonStory";const DropMenuRadiobuttonExample={render:DropMenuRadiobuttonStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\nimport { Button, DropMenu, MenuItem, RadioButton } from '@admiral-ds/react-ui';\nimport type { DropMenuProps, RenderOptionProps } from '@admiral-ds/react-ui';\n\nconst STORY_ITEMS = [\n  {\n    id: '1',\n    label: 'Option one',\n    value: 1,\n  },\n  {\n    id: '2',\n    label: 'Option two',\n    value: 2,\n  },\n  {\n    id: '3',\n    label: 'Option three',\n    value: 3,\n  },\n  {\n    id: '4',\n    label: 'Option four',\n    value: 4,\n    disabled: true,\n  },\n  {\n    id: '5',\n    label: 'Option five with very very long text',\n    value: 5,\n  },\n  {\n    id: '6',\n    label: 'Option six',\n    value: 6,\n  },\n  {\n    id: '7',\n    label: 'Option seven',\n    value: 7,\n  },\n];\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst Desc = styled.div`\n  font-family: 'VTB Group UI';\n  color: ${(p) => p.theme.color['Neutral/Neutral 90']};\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst handleVisibilityChangeUnControlledState = (isVisible: boolean) => {\n  console.log('onVisibilityChange with uncontrolled state');\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nexport const DropMenuRadiobuttonTemplate = (props: DropMenuProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const [checkedState, setCheckedState] = React.useState(STORY_ITEMS.map((item) => ({ id: item.id, checked: false })));\n\n  const model = React.useMemo(() => {\n    return STORY_ITEMS.map((item, index) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension} {...options} key={item.id}>\n          <RadioButton\n            dimension={props.dimension !== 's' ? 'm' : props.dimension}\n            disabled={item.disabled}\n            key={item.id}\n            checked={checkedState[index].checked}\n            onChange={() => false}\n          >\n            {item.label}\n          </RadioButton>\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension, checkedState]);\n\n  return (\n    <WrapperVertical>\n      <Desc>\n        Неконтроллируемое состояние видимости меню:\n        <br />\n        - isVisible не передается в DropMenu; <br />- обработчик onVisibilityChange выполняется из DropMenu;\n        <br />- для открытия/закрытия меню при клике на кнопке используется обработчик handleClick из DropMenu.\n        <br />\n        По умолчанию DropMenu открывает/закрывает выпадающий список при нажатии на переданный компонент, а также\n        закрывает выпадающий список при выборе опции.\n      </Desc>\n      <DropMenu\n        {...props}\n        items={model}\n        onSelectItem={(id) => {\n          console.log(`selected: ${id}`);\n          const newCheckedState = checkedState.map((item) => ({\n            ...item,\n            checked: item.id === id || item.id === selected ? !item.checked : item.checked,\n          }));\n          setCheckedState(newCheckedState);\n          setSelected(id);\n        }}\n        onVisibilityChange={handleVisibilityChangeUnControlledState}\n        selected={selected}\n        renderContentProp={({ buttonRef, handleKeyDown, handleClick, statusIcon, disabled }) => {\n          return (\n            <Button\n              ref={buttonRef as React.Ref<HTMLButtonElement>}\n              loading={props.loading}\n              disabled={disabled}\n              onKeyDown={handleKeyDown}\n              onClick={handleClick}\n              dimension={props.dimension}\n            >\n              Нажми\n              {statusIcon}\n            </Button>\n          );\n        }}\n      />\n    </WrapperVertical>\n  );\n};\n"},description:{story:"Пример меню с пунктами, содержащими RadioButton"}}},name:"Пример с Radiobutton"};SimpleExample.parameters={...SimpleExample.parameters,docs:{...SimpleExample.parameters?.docs,source:{originalSource:"{\n  render: SimpleStory,\n  parameters: {\n    docs: {\n      source: {\n        code: DropMenuSimpleRaw\n      },\n      description: {\n        story: 'Базовый пример использования DropMenu'\n      }\n    }\n  },\n  name: 'Базовый пример'\n}",...SimpleExample.parameters?.docs?.source}}},CategoryExample.parameters={...CategoryExample.parameters,docs:{...CategoryExample.parameters?.docs,source:{originalSource:"{\n  render: CategoryStory,\n  parameters: {\n    docs: {\n      source: {\n        code: DropMenuCategoryRaw\n      },\n      description: {\n        story: 'Пример с группировкой опций по категориям'\n      }\n    }\n  },\n  name: 'Пример с группами'\n}",...CategoryExample.parameters?.docs?.source}}},DropMenuTooltipExample.parameters={...DropMenuTooltipExample.parameters,docs:{...DropMenuTooltipExample.parameters?.docs,source:{originalSource:"{\n  render: DropMenuTooltipStory,\n  parameters: {\n    docs: {\n      source: {\n        code: DropMenuTooltipRaw\n      },\n      description: {\n        story: 'Для того чтобы добавить tooltip к пункту меню, его необходимо обернуть TooltipHoc'\n      }\n    }\n  },\n  name: 'Пример с Tooltip'\n}",...DropMenuTooltipExample.parameters?.docs?.source}}},DropMenuCheckboxExample.parameters={...DropMenuCheckboxExample.parameters,docs:{...DropMenuCheckboxExample.parameters?.docs,source:{originalSource:"{\n  render: DropMenuCheckboxStory,\n  parameters: {\n    docs: {\n      source: {\n        code: DropMenuCheckboxRaw\n      },\n      description: {\n        story: 'Пример меню с пунктами, содержащими Checkbox'\n      }\n    }\n  },\n  name: 'Пример с Checkbox'\n}",...DropMenuCheckboxExample.parameters?.docs?.source}}},DropMenuRadiobuttonExample.parameters={...DropMenuRadiobuttonExample.parameters,docs:{...DropMenuRadiobuttonExample.parameters?.docs,source:{originalSource:"{\n  render: DropMenuRadiobuttonStory,\n  parameters: {\n    docs: {\n      source: {\n        code: DropMenuRadiobuttonRaw\n      },\n      description: {\n        story: 'Пример меню с пунктами, содержащими RadioButton'\n      }\n    }\n  },\n  name: 'Пример с Radiobutton'\n}",...DropMenuRadiobuttonExample.parameters?.docs?.source}}};const __namedExportsOrder=["SimpleExample","CategoryExample","DropMenuTooltipExample","DropMenuCheckboxExample","DropMenuRadiobuttonExample"]},"./src/components/Checkbox/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XZ:()=>Checkbox});var _path,react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}__webpack_require__.p;var _rect;function Minus_extends(){return Minus_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Minus_extends.apply(this,arguments)}__webpack_require__.p;var borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),keyboardKey=__webpack_require__("./src/components/common/keyboardKey.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const width=(0,styled_components_browser_esm.iv)(["width:",";fieldset[data-dimension='s'] &{width:16px;}"],(({$dimension})=>{switch($dimension){case"m":default:return"20px";case"s":return"16px"}})),height=(0,styled_components_browser_esm.iv)(["height:",";fieldset[data-dimension='s'] &{height:16px;}"],(({$dimension})=>{switch($dimension){case"m":default:return"20px";case"s":return"16px"}})),Check=(0,styled_components_browser_esm.ZP)((function SvgSuccess(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props),_path||(_path=react.createElement("path",{fill:"#fff",d:"M13.471 5.805a.667.667 0 1 0-.942-.943L7 10.39 4.138 7.53a.667.667 0 0 0-.943.942l3.334 3.334c.26.26.682.26.942 0l6-6Z"})))})).withConfig({displayName:"Checkbox__Check",componentId:"sc-16etnr2-0"})(["pointer-events:none;"]),Indeterminate=(0,styled_components_browser_esm.ZP)((function SvgMinus(props){return react.createElement("svg",Minus_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"-5 -9 20 20"},props),_rect||(_rect=react.createElement("rect",{width:10,height:2,fill:"#fff",rx:1})))})).withConfig({displayName:"Checkbox__Indeterminate",componentId:"sc-16etnr2-1"})(["pointer-events:none;& *[fill^='#']{fill:",";}"],(({theme})=>theme.color["Special/Static White"])),Container=styled_components_browser_esm.ZP.div.withConfig({displayName:"Checkbox__Container",componentId:"sc-16etnr2-2"})(["position:relative;box-sizing:border-box;overflow:visible;",";",";"],width,height),Background=styled_components_browser_esm.ZP.div.withConfig({displayName:"Checkbox__Background",componentId:"sc-16etnr2-3"})(["pointer-events:none;display:inline-block;position:absolute;margin:0;top:0;left:0;right:0;bottom:0;border-radius:",";outline:0;transition:background 0.1s ease-in;line-height:initial;background-color:",";border:1px solid ",";& *[fill^='#']{fill:",";}"],(p=>(0,borderRadius.pk)(p.theme.shape)),(({theme})=>theme.color["Neutral/Neutral 00"]),(({$error,theme})=>$error?theme.color["Error/Error 60 Main"]:theme.color["Neutral/Neutral 50"]),(({theme})=>theme.color["Special/Static White"])),indeterminateCss=(0,styled_components_browser_esm.iv)(["&:not(:checked) + ","{background-color:",";border:",";> *{display:",";}}"],Background,(({theme,$indeterminate})=>$indeterminate&&theme.color["Primary/Primary 60 Main"]),(({$indeterminate})=>$indeterminate&&"none"),(p=>p.$indeterminate?"block":"none")),hoveredCss=(0,styled_components_browser_esm.iv)(["&:not(:disabled){&::after{content:'';position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);border-radius:50%;width:calc(100% + 16px);height:calc(100% + 16px);background-color:",";}}"],(({theme})=>theme.color["Opacity/Hover"])),disabledCss=(0,styled_components_browser_esm.iv)(["pointer-events:none;& + ","{border:1px solid ",";background-color:",";}"],Background,(({theme})=>theme.color["Neutral/Neutral 30"]),(({theme})=>theme.color["Neutral/Neutral 10"])),disabledCheckedBackgroundCss=(0,styled_components_browser_esm.iv)(["background-color:",";border:none;& *[fill^='#']{fill:",";}"],(({theme})=>theme.color["Primary/Primary 30"]),(({theme})=>theme.color["Neutral/Neutral 00"])),checkedBackgroundCss=(0,styled_components_browser_esm.iv)(["background-color:",";border:none;"],(({theme})=>theme.color["Primary/Primary 60 Main"])),Input=styled_components_browser_esm.ZP.input.withConfig({displayName:"Checkbox__Input",componentId:"sc-16etnr2-4"})(["appearance:none;::-ms-check{display:none;}width:100%;height:100%;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);box-sizing:border-box;cursor:pointer;border-radius:",";margin:0;padding:0;"," &:checked + ","{","}&:disabled{",";}"," "," &:hover:not(:disabled),&:focus:not(:disabled) + "," &:checked:disabled + ","{","}&:focus-visible{outline-offset:2px;outline:"," solid 2px;}"],(p=>(0,borderRadius.pk)(p.theme.shape)),(props=>props.readOnly&&disabledCss),Background,(props=>props.readOnly?disabledCheckedBackgroundCss:checkedBackgroundCss),disabledCss,(props=>!props.readOnly&&props.$hovered&&hoveredCss),indeterminateCss,hoveredCss,Background,disabledCheckedBackgroundCss,(p=>p.theme.color["Primary/Primary 60 Main"])),Checkbox=react.forwardRef((({className,dimension="m",disabled,readOnly,hovered,indeterminate,error,...props},ref)=>(0,jsx_runtime.jsxs)(Container,{$dimension:dimension,className,children:[(0,jsx_runtime.jsx)(Input,{ref,disabled,readOnly,...props,type:"checkbox",$indeterminate:indeterminate,onKeyDown:e=>{if(readOnly){keyboardKey.y.getCode(e)===keyboardKey.y[" "]&&e.preventDefault()}props.onKeyDown?.(e)},"data-hovered":hovered,$hovered:hovered}),(0,jsx_runtime.jsx)(Background,{$error:error,children:indeterminate?(0,jsx_runtime.jsx)(Indeterminate,{"aria-hidden":"true",focusable:"false"}):(0,jsx_runtime.jsx)(Check,{"aria-hidden":"true",focusable:"false"})})]})));Checkbox.displayName="Checkbox";try{Background.displayName="Checkbox",Background.__docgenInfo={description:"",displayName:"Checkbox",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/index.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"src/components/Checkbox/index.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/DropMenu/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>DropMenu});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_common_keyboardKey__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/common/keyboardKey.js"),_src_components_OpenStatusButton__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/OpenStatusButton.tsx"),_src_components_DropdownContainer__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/DropdownContainer/index.tsx"),_src_components_Menu__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Menu/index.tsx"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const StyledMenu=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_Menu__WEBPACK_IMPORTED_MODULE_3__.v).withConfig({displayName:"DropMenu__StyledMenu",componentId:"sc-19qa2e-0"})(["width:",";"],(({$width})=>$width||"auto")),DropMenuContainer=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_DropdownContainer__WEBPACK_IMPORTED_MODULE_4__.I).withConfig({displayName:"DropMenu__DropMenuContainer",componentId:"sc-19qa2e-1"})(["",""],(p=>p.$dropContainerCssMixin||"")),DropMenu=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({dimension="m",menuWidth,disabled=!1,loading=!1,alignSelf="flex-end",onClose,onOpen,items,selected,active,onSelectItem,onActivateItem,onChange,onClick,onKeyDown,alignMenuRef,targetElement,renderContentProp,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,multiSelection=!1,disableSelectedOptionHighlight=!1,isVisible,onVisibilityChange=()=>{},onClickOutside,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove,...props},ref)=>{const[isMenuOpenState,setIsMenuOpenState]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),btnRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),isMenuOpen=isVisible??isMenuOpenState,setIsMenuOpen=newMenuOpenState=>{setIsMenuOpenState(newMenuOpenState),onVisibilityChange(newMenuOpenState)},closeMenu=()=>{setIsMenuOpen(!1),onClose?.(),btnRef.current?.focus()};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[renderContentProp({disabled,buttonRef:btnRef,handleKeyDown:e=>{const code=_common_keyboardKey__WEBPACK_IMPORTED_MODULE_5__.y.getCode(e);switch(onKeyDown?.(e),code){case _common_keyboardKey__WEBPACK_IMPORTED_MODULE_5__.y.Escape:isMenuOpen&&closeMenu();break;case _common_keyboardKey__WEBPACK_IMPORTED_MODULE_5__.y.Enter:case _common_keyboardKey__WEBPACK_IMPORTED_MODULE_5__.y[" "]:isMenuOpen||(e.stopPropagation(),setIsMenuOpen(!0),onOpen?.(),e.preventDefault())}},handleClick:e=>{isMenuOpen?onClose?.():onOpen?.(),setIsMenuOpen(!isMenuOpen),onClick?.(e)},statusIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_OpenStatusButton__WEBPACK_IMPORTED_MODULE_6__.e,{$isOpen:isMenuOpen,"aria-hidden":!0}),menuState:isMenuOpen}),isMenuOpen&&!loading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DropMenuContainer,{ref,role:"listbox",alignSelf,targetElement:targetElement||alignMenuRef?.current||btnRef.current,onClickOutside:e=>{e.target&&btnRef.current?.contains(e.target)||(onClickOutside?onClickOutside(e):(setIsMenuOpen(!1),onClose?.()))},$dropContainerCssMixin:dropContainerCssMixin,className:dropContainerClassName,style:dropContainerStyle,...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(StyledMenu,{maxHeight:menuMaxHeight,$width:menuWidth,model:items,selected,onSelectItem:id=>{onChange?.(id),onSelectItem?.(id),void 0!==isVisible||multiSelection||disableSelectedOptionHighlight||closeMenu()},dimension,active,onActivateItem,multiSelection,disableSelectedOptionHighlight,renderTopPanel,renderBottomPanel,onForwardCycleApprove,onBackwardCycleApprove})})]})}));DropMenu.displayName="DropMenu";try{DropMenu.displayName="DropMenu",DropMenu.__docgenInfo={description:"",displayName:"DropMenu",props:{dimension:{defaultValue:{value:"m"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},loading:{defaultValue:{value:"false"},description:"Состояние загрузки",name:"loading",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use isVisible and onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},disabled:{defaultValue:{value:"false"},description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignMenuRef:{defaultValue:null,description:"Компонент, относительно которого необходимо выравнивать выпадающее меню",name:"alignMenuRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал",name:"targetElement",required:!1,type:{name:"Element"}},alignSelf:{defaultValue:{value:"flex-end"},description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},renderContentProp:{defaultValue:null,description:"Компонент, для которого необходимо Menu",name:"renderContentProp",required:!0,type:{name:"(options: RenderContentProps) => ReactNode"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:{value:"() => undefined"},description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},disableSelectedOptionHighlight:{defaultValue:{value:"false"},description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},multiSelection:{defaultValue:{value:"false"},description:"Возможность множественного выбора (опции с Checkbox)\n@deprecated use disableSelectedOptionHighlight instead",name:"multiSelection",required:!1,type:{name:"boolean"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DropMenu/index.tsx#DropMenu"]={docgenInfo:DropMenu.__docgenInfo,name:"DropMenu",path:"src/components/DropMenu/index.tsx#DropMenu"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/DropdownContainer/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>DropdownContainer,I:()=>StyledDropdownContainer});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/common/hooks/useClickOutside.ts"),_src_components_PositionInPortal__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/PositionInPortal.tsx"),_src_components_common_hooks_useInterval__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/common/hooks/useInterval.ts"),_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/common/utils/refSetter.ts"),_src_components_DropdownProvider__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/DropdownProvider.tsx"),_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/themes/borderRadius.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Container=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"DropdownContainer__Container",componentId:"sc-1eulg01-0"})(["pointer-events:initial;margin:8px 0;flex:0 0 auto;",";max-width:calc(100vw - 32px);opacity:0;transition-delay:200ms;transition-property:opacity;&:focus-visible{border:2px solid blue;}",""],(p=>p.$alignSelf?`align-self: ${p.$alignSelf};`:""),(p=>p.$dropContainerCssMixin)),FakeTarget=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"DropdownContainer__FakeTarget",componentId:"sc-1eulg01-1"})(["pointer-events:none;height:100%;flex:0 0 auto;"]),Portal=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_PositionInPortal__WEBPACK_IMPORTED_MODULE_3__.k).withConfig({displayName:"DropdownContainer__Portal",componentId:"sc-1eulg01-2"})(["display:flex;flex-direction:",";flex-wrap:nowrap;"],(p=>p.$reverse?"column-reverse":"column")),DropdownContainer=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({targetRef,targetElement,onClickOutside=()=>null,className="",alignSelf,dropContainerCssMixin,...props},ref)=>{const containerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),[displayUpward,setDisplayUpward]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),targetNode=targetElement??targetRef?.current,{addDropdown,removeDropdown,dropdowns}=(0,_src_components_DropdownProvider__WEBPACK_IMPORTED_MODULE_4__.xN)(containerRef),{rootRef}=react__WEBPACK_IMPORTED_MODULE_0__.useContext(_src_components_DropdownProvider__WEBPACK_IMPORTED_MODULE_4__.Dl);(0,_src_components_common_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__.O)([containerRef],(e=>{(0,_src_components_DropdownProvider__WEBPACK_IMPORTED_MODULE_4__.DD)(e,dropdowns)&&onClickOutside(e)})),react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect((()=>{containerRef.current!==document.activeElement&&containerRef?.current?.focus()}),[]);const checkDropdownPosition=react__WEBPACK_IMPORTED_MODULE_0__.useCallback((()=>{const node=containerRef.current;if(node&&targetNode){const rect=node.getBoundingClientRect(),targetRect=targetNode.getBoundingClientRect(),viewportHeight=window.innerHeight,viewportWidth=window.innerWidth;if(viewportHeight-rect.bottom<0&&targetRect.top>viewportHeight-targetRect.bottom?displayUpward||setDisplayUpward(!0):(targetRect.bottom+(targetRect.top-rect.top)<viewportHeight-8||targetRect.top<viewportHeight-targetRect.bottom)&&displayUpward&&setDisplayUpward(!1),alignSelf&&"auto"!==alignSelf)return;const rectWidth=rect.right-rect.left,enoughWidthOnTheRight=viewportWidth-targetRect.left>=rectWidth,enoughWidthOnTheLeft=targetRect.right-16>=rectWidth,containerWiderTarget=rectWidth>targetRect.width;if(enoughWidthOnTheLeft||enoughWidthOnTheRight)node.style.transform="translateX(0)",enoughWidthOnTheLeft&&enoughWidthOnTheRight?node.style.alignSelf="flex-end":containerWiderTarget&&!enoughWidthOnTheLeft&&enoughWidthOnTheRight?node.style.alignSelf="flex-start":containerWiderTarget&&!enoughWidthOnTheRight&&enoughWidthOnTheLeft&&(node.style.alignSelf="flex-end");else{node.style.alignSelf="center";const offset=(viewportWidth-rect.width)/2-(targetRect.left-(rectWidth-targetRect.width)/2);node.style.transform=`translateX(${offset}px)`}}}),[displayUpward,targetRef,targetElement]);return(0,_src_components_common_hooks_useInterval__WEBPACK_IMPORTED_MODULE_6__.Y)(checkDropdownPosition,100),react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{containerRef.current&&(containerRef.current.style.opacity="1")}),[]),react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect((()=>(addDropdown?.(containerRef),()=>{removeDropdown?.(containerRef)})),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Portal,{targetElement:targetNode,$reverse:displayUpward,rootRef,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FakeTarget,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Container,{ref:(0,_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_7__.O)(ref,containerRef),...props,className:className+" dropdown-container",$alignSelf:alignSelf,$dropContainerCssMixin:dropContainerCssMixin})]})})}));DropdownContainer.displayName="DropdownContainer";const StyledDropdownContainer=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(DropdownContainer).withConfig({displayName:"DropdownContainer__StyledDropdownContainer",componentId:"sc-1eulg01-3"})([""," border-radius:",";overflow:hidden;width:max-content;"],(p=>p.theme.shadow["Shadow 08"]),(p=>(0,_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_8__.c8)(p.theme.shape)));StyledDropdownContainer.displayName="StyledDropdownContainer";try{DropdownContainer.displayName="DropdownContainer",DropdownContainer.__docgenInfo={description:"",displayName:"DropdownContainer",props:{targetRef:{defaultValue:null,description:"@deprecated Будет удалено в 8.x.x версии.\nВзамен используйте параметр targetElement.\n\nRef на элемент, относительно которого позиционируется выпадающее меню",name:"targetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется выпадающее меню\nВ 8.x.x версии данный параметр станет обязательным, заменив собой targetRef",name:"targetElement",required:!1,type:{name:"Element | null"}},onClickOutside:{defaultValue:{value:"() => null"},description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DropdownContainer/index.tsx#DropdownContainer"]={docgenInfo:DropdownContainer.__docgenInfo,name:"DropdownContainer",path:"src/components/DropdownContainer/index.tsx#DropdownContainer"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Menu/MenuItemWithCheckbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>MenuItemWithCheckbox,W:()=>checkboxTreeToMap});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Menu/MenuItem.tsx"),_src_components_Checkbox__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Checkbox/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const checkboxTreeToMap=(checkboxTree,level=0,dependencies)=>checkboxTree.reduce(((acc,item)=>{const key=item.id,currentNode={level,node:item};if(acc.set(key,currentNode),dependencies&&!item.children&&dependencies.forEach((dependency=>dependency.push(key))),item.children){const allDependencies=dependencies?[...dependencies]:[],itemDependencies=[];currentNode.dependencies=itemDependencies,acc.set(key,currentNode),allDependencies.push(itemDependencies);const map=checkboxTreeToMap(item.children,level+1,allDependencies);return new Map([...acc,...map])}return acc}),new Map),paddingLeft=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.iv)(["padding-left:","px;"],(({$dimension,$level=0})=>"s"===$dimension?12+28*$level:16+32*$level)),CheckboxGroupMenuItem=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s).withConfig({displayName:"MenuItemWithCheckbox__CheckboxGroupMenuItem",componentId:"sc-aoffmn-0"})(["",""],paddingLeft),OptionContent=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"MenuItemWithCheckbox__OptionContent",componentId:"sc-aoffmn-1"})(["position:relative;padding:0 0 0 ","px;"],(props=>"s"===props.$dimension?28:32)),PositionedCheckbox=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_Checkbox__WEBPACK_IMPORTED_MODULE_4__.XZ).withConfig({displayName:"MenuItemWithCheckbox__PositionedCheckbox",componentId:"sc-aoffmn-2"})(["position:absolute;top:2px;left:2px;"]),MenuItemWithCheckbox=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({checked,indeterminate,checkboxRef,level=0,children,dimension="l",...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CheckboxGroupMenuItem,{$dimension:dimension||"l",$level:level,ref,...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(OptionContent,{$dimension:dimension||"l",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PositionedCheckbox,{dimension:"s"===dimension?"s":"m",checked,indeterminate,hovered:props.hovered,disabled:props.disabled,readOnly:props.readOnly,ref:checkboxRef,onChange:()=>!1}),children]})})));try{MenuItemWithCheckbox.displayName="MenuItemWithCheckbox",MenuItemWithCheckbox.__docgenInfo={description:"",displayName:"MenuItemWithCheckbox",props:{checked:{defaultValue:null,description:"Значение Checkbox",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"Неопределенное состояние Checkbox",name:"indeterminate",required:!1,type:{name:"boolean"}},checkboxIsHovered:{defaultValue:null,description:"Состояние hovered для Checkbox",name:"checkboxIsHovered",required:!1,type:{name:"boolean"}},checkboxRef:{defaultValue:null,description:"Ref на Checkbox",name:"checkboxRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},level:{defaultValue:{value:"0"},description:"Сдвиг внутри MenuItem при наличии нескольких уровней (например при использовании составной группы чекбоксов внутри Menu)",name:"level",required:!1,type:{name:"number"}},dimension:{defaultValue:{value:"l"},description:"Размер MenuItems",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string | number"}},selected:{defaultValue:null,description:"Активная секция MenuItems",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Акцентная секция MenuItems",name:"hovered",required:!1,type:{name:"boolean"}},onHover:{defaultValue:null,description:"Обработчик наведения мыши на item",name:"onHover",required:!1,type:{name:"(() => void)"}},onLeave:{defaultValue:null,description:"обработчик выхода мыши за пределы item",name:"onLeave",required:!1,type:{name:"MouseEventHandler<HTMLElement>"}},containerRef:{defaultValue:null,description:"ссылка на контейнер, в котором находится Menu",name:"containerRef",required:!1,type:{name:"RefObject<HTMLElement>"}},expandIcon:{defaultValue:null,description:"",name:"expandIcon",required:!1,type:{name:"ReactNode"}},hasSubmenu:{defaultValue:null,description:"",name:"hasSubmenu",required:!1,type:{name:"boolean"}},selfRef:{defaultValue:null,description:"",name:"selfRef",required:!1,type:{name:"RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null"}},disabled:{defaultValue:null,description:"Отключение секции",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Menu/MenuItemWithCheckbox.tsx#MenuItemWithCheckbox"]={docgenInfo:MenuItemWithCheckbox.__docgenInfo,name:"MenuItemWithCheckbox",path:"src/components/Menu/MenuItemWithCheckbox.tsx#MenuItemWithCheckbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/OpenStatusButton.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>OpenStatusButton});var _admiral_ds_icons_build_system_ChevronDownOutline_svg__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/ChevronDownOutline.svg");const OpenStatusButton=(0,__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").ZP)(_admiral_ds_icons_build_system_ChevronDownOutline_svg__WEBPACK_IMPORTED_MODULE_0__.r).withConfig({displayName:"OpenStatusButton",componentId:"sc-126g2c3-0"})(["transition:transform 0.3s ease-in-out;transform:rotate(","deg);& *[fill^='#']{fill:",";}&:hover *[fill^='#']{fill:",";}&[data-disabled]{pointer-events:none;*[fill^='#']{fill:",";}}"],(p=>p.$isOpen?180:0),(({appearance,theme})=>"white"===appearance?theme.color["Special/Static White"]:theme.color["Neutral/Neutral 50"]),(props=>"white"===props.appearance?"":props.theme.color["Primary/Primary 70"]),(({theme})=>theme.color["Neutral/Neutral 30"]))},"./src/components/RadioButton/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>RadioButton});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),typography=__webpack_require__("./src/components/Typography/typography.ts");const Span=styled_components_browser_esm.ZP.span.withConfig({displayName:"style__Span",componentId:"sc-10rp66c-0"})(["display:inline-block;position:absolute;margin:0;top:0;left:0;right:0;bottom:0;content:'';box-sizing:border-box;pointer-events:none;"," fieldset[data-dimension='s'] &{width:","px;height:","px;}border:","px solid ",";fieldset:disabled &{border:","px solid ",";}border-radius:50%;transition:all 0.25s ease-in-out;"],(({theme,$dimension})=>`\n    background-color: ${theme.color["Neutral/Neutral 00"]};\n    width: ${"s"===$dimension?18:20}px;\n    height: ${"s"===$dimension?18:20}px;\n  `),18,18,1,(({disabled,$error,theme})=>disabled?theme.color["Neutral/Neutral 30"]:$error?theme.color["Error/Error 60 Main"]:theme.color["Neutral/Neutral 50"]),1,(({theme})=>theme.color["Neutral/Neutral 30"])),InputContainer=styled_components_browser_esm.ZP.div.withConfig({displayName:"style__InputContainer",componentId:"sc-10rp66c-1"})(["position:absolute;top:","px;left:","px;display:inline-block;"," fieldset[data-dimension='s'] &{min-width:","px;height:","px;}"],(p=>"s"===p.$dimension?1:2),(p=>"s"===p.$dimension?1:2),(({$dimension})=>`\n    min-width: ${"s"===$dimension?18:20}px;\n    height: ${"s"===$dimension?18:20}px;\n  `),18,18),readOnlyCss=(0,styled_components_browser_esm.iv)(["pointer-events:none;&:not(:checked) + ","{background-color:",";}"],Span,(({theme})=>theme.color["Neutral/Neutral 10"])),Input=styled_components_browser_esm.ZP.input.withConfig({displayName:"style__Input",componentId:"sc-10rp66c-2"})(["appearance:none;::-ms-check{display:none;}width:100%;height:100%;position:absolute;margin:0;padding:0;top:50%;left:50%;transform:translate(-50%,-50%);box-sizing:border-box;cursor:pointer;border-radius:50%;",";&:not(:checked):disabled + ","{background-color:",";}&:checked:disabled + ","{border:","px solid ",";}&:checked:not(:disabled) + ","{border:",";}&:not(:disabled):hover{&::after{content:'';position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);border-radius:50%;"," background-color:",";}}&:focus-visible{outline-offset:","px;outline:"," solid ","px;}"],(({readOnly})=>readOnly&&readOnlyCss),Span,(({theme})=>theme.color["Neutral/Neutral 10"]),Span,5,(({theme})=>theme.color["Primary/Primary 30"]),Span,(({theme,readOnly})=>readOnly?`5px solid ${theme.color["Primary/Primary 30"]}`:`5px solid ${theme.color["Primary/Primary 60 Main"]}`),(({$dimension})=>`\n        width: calc(100% + ${"s"===$dimension?14:16}px);\n        height: calc(100% + ${"s"===$dimension?14:16}px);\n      `),(({theme})=>theme.color["Opacity/Hover"]),2,(p=>p.theme.color["Primary/Primary 60 Main"]),2),Hint=styled_components_browser_esm.ZP.div.withConfig({displayName:"style__Hint",componentId:"sc-10rp66c-3"})(["margin-top:6px;"," color:",";fieldset[data-dimension='s'] &&{"," color:",";}"],(({$dimension})=>"s"===$dimension?typography.c["Caption/Caption 1"]:typography.c["Body/Body 2 Short"]),(({disabled,theme})=>disabled?theme.color["Neutral/Neutral 30"]:theme.color["Neutral/Neutral 50"]),typography.c["Caption/Caption 1"],(({disabled,theme})=>disabled?theme.color["Neutral/Neutral 30"]:theme.color["Neutral/Neutral 50"])),RadioButtonComponent=styled_components_browser_esm.ZP.label.withConfig({displayName:"style__RadioButtonComponent",componentId:"sc-10rp66c-4"})(["margin:0;"," display:inline-block;position:relative;box-sizing:content-box;cursor:",";"," color:",";fieldset[data-dimension='s'] &&{"," color:",";}fieldset:disabled &&{color:",";}fieldset:disabled &{cursor:default;}",";"],(({$dimension})=>`\n    padding-top: 2px;\n    padding-bottom: 2px;\n    padding-left: ${"s"===$dimension?28:32}px;\n  `),(({disabled,readOnly})=>disabled||readOnly?"default":"pointer"),(({$dimension})=>"s"===$dimension?typography.c["Body/Body 2 Short"]:typography.c["Body/Body 1 Short"]),(({disabled,theme})=>disabled?theme.color["Neutral/Neutral 30"]:theme.color["Neutral/Neutral 90"]),typography.c["Body/Body 2 Short"],(({disabled,theme})=>disabled?theme.color["Neutral/Neutral 30"]:theme.color["Neutral/Neutral 90"]),(({theme})=>theme.color["Neutral/Neutral 30"]),(({readOnly})=>readOnly&&"pointer-events: none"));var keyboardKey=__webpack_require__("./src/components/common/keyboardKey.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const RadioButton=react.forwardRef((({children,disabled,readOnly,error=!1,dimension="m",extraText,className,...props},ref)=>(0,jsx_runtime.jsxs)(RadioButtonComponent,{disabled,readOnly,className,$dimension:dimension,children:[(0,jsx_runtime.jsxs)(InputContainer,{$dimension:dimension,children:[(0,jsx_runtime.jsx)(Input,{ref,type:"radio",disabled,readOnly,$dimension:dimension,...props,onKeyDown:e=>{if(readOnly){keyboardKey.y.getCode(e)===keyboardKey.y[" "]&&e.preventDefault()}props.onKeyDown?.(e)}}),(0,jsx_runtime.jsx)(Span,{disabled:disabled||readOnly,$dimension:dimension,$error:error})]}),children,extraText&&(0,jsx_runtime.jsx)(Hint,{disabled,$dimension:dimension,children:extraText})]})));RadioButton.displayName="RadioButton";try{RadioButton.displayName="RadioButton",RadioButton.__docgenInfo={description:"",displayName:"RadioButton",props:{checked:{defaultValue:null,description:"Состояние кнопки, выбрана или нет",name:"checked",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Отключение кнопки",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}},dimension:{defaultValue:{value:"m"},description:"Размер радиокнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},extraText:{defaultValue:null,description:"Дополнительный текст (подсказка), который выводится нижней строкой",name:"extraText",required:!1,type:{name:"ReactNode"}},error:{defaultValue:{value:"false"},description:"Состояние ошибки",name:"error",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/RadioButton/index.tsx#RadioButton"]={docgenInfo:RadioButton.__docgenInfo,name:"RadioButton",path:"src/components/RadioButton/index.tsx#RadioButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/TooltipHOC/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>TooltipHoc});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/refSetter.ts"),_src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Tooltip/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function TooltipHoc(Component){const WrappedComponent=props=>{const{forwardedRef,renderContent,container,withDelay,tooltipRef,tooltipPosition,...wrappedCompProps}=props,emptyContent=!renderContent()&&0!==renderContent(),anchorElementRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),[visible,setVisible]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[node,setNode]=react__WEBPACK_IMPORTED_MODULE_0__.useState(null),[timer,setTimer]=react__WEBPACK_IMPORTED_MODULE_0__.useState();return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{function show(){setTimer(window.setTimeout((()=>setVisible(!0)),withDelay?_src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.g:0))}function hide(){clearTimeout(timer),setVisible(!1)}if(node)return node.addEventListener("mouseenter",show),node.addEventListener("focus",show),node.addEventListener("mouseleave",hide),node.addEventListener("blur",hide),()=>{timer&&clearTimeout(timer),node.removeEventListener("mouseenter",show),node.removeEventListener("focus",show),node.removeEventListener("mouseleave",hide),node.removeEventListener("blur",hide)}}),[node,setTimer,setVisible,timer]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Component,{...wrappedCompProps,ref:(0,_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_3__.O)(forwardedRef,anchorElementRef,setNode)}),visible&&!emptyContent&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.u,{targetElement:anchorElementRef.current,renderContent,container,tooltipPosition,ref:tooltipRef})]})};return react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(WrappedComponent,{forwardedRef:ref,...props})))}try{TooltipHoc.displayName="TooltipHoc",TooltipHoc.__docgenInfo={description:"",displayName:"TooltipHoc",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TooltipHOC/index.tsx#TooltipHoc"]={docgenInfo:TooltipHoc.__docgenInfo,name:"TooltipHoc",path:"src/components/TooltipHOC/index.tsx#TooltipHoc"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/hooks/useInterval.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>useInterval});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useInterval(callback,delay){const intervalRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),callbackRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{callbackRef.current=callback}),[callback]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if("number"==typeof delay)return intervalRef.current=window.setInterval((()=>callbackRef.current()),delay),()=>window.clearInterval(intervalRef.current||0)}),[delay]),intervalRef}}}]);