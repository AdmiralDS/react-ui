"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[1742],{"./src/components/form/ReadOnlyMaskedField/stories/ReadOnlyMaskedField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ReadOnlyMaskedField:()=>ReadOnlyMaskedField,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ReadOnlyMaskedField_stories});var react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),Field=__webpack_require__("./src/components/Field/index.tsx"),types=__webpack_require__("./src/components/input/types.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),InputField=__webpack_require__("./src/components/form/InputField/index.tsx"),InputIconButton=__webpack_require__("./src/components/InputIconButton.tsx"),DateField=__webpack_require__("./src/components/form/DateField/index.tsx"),PhoneInputField=__webpack_require__("./src/components/form/PhoneInputField/index.tsx"),EyeCloseOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/EyeCloseOutline.svg"),EyeOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/EyeOutline.svg"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const FormContainer=styled_components_browser_esm.Ay.form.withConfig({displayName:"ReadOnlyMaskedFieldtemplate__FormContainer",componentId:"sc-whqlab-0"})(["> *{margin-bottom:24px;}"]),ReadOnlyMaskedFieldTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const Icon=isMasked=>isMasked?EyeOutline.h:EyeCloseOutline.h,[cardNumber,setCardNumber]=react.useState("•••• •••• •••• •548"),[isCardNumberVisible,setCardNumberVisible]=react.useState(!1),[birthDate,setBirthDate]=react.useState("08.05.••••"),[isBirthDateVisible,setBirthDateVisible]=react.useState(!1),[email,setEmail]=react.useState("a•••••@mail.ru"),[isEmailVisible,setEmailVisible]=react.useState(!1),[surname,setSurname]=react.useState("С••••••а"),[isSurnameVisible,setSurnameVisible]=react.useState(!1),[phoneNumber,setPhoneNumber]=react.useState("+7 095 ••• •• 75"),[isPhoneNumberVisible,setPhoneNumberVisible]=react.useState(!1);return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsxs)(FormContainer,{children:[(0,jsx_runtime.jsx)(InputField.F,{dimension:props.dimension,"data-container-id":"cardNumberField",value:cardNumber,readOnly:!0,label:"Номер карты",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isCardNumberVisible),onClick:()=>{setCardNumberVisible(!isCardNumberVisible),setCardNumber(isCardNumberVisible?"•••• •••• •••• •548":"5543 9764 3143 2548")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(DateField.v,{dimension:props.dimension,"data-container-id":"birthDateField",value:birthDate,readOnly:!0,label:"Дата рождения",id:"birth date",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isBirthDateVisible),onClick:()=>{setBirthDateVisible(!isBirthDateVisible),setBirthDate(isBirthDateVisible?"08.05.••••":"08.05.1992")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(InputField.F,{dimension:props.dimension,"data-container-id":"emailField",value:email,readOnly:!0,label:"Электронная почта",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isEmailVisible),onClick:()=>{setEmailVisible(!isEmailVisible),setEmail(isEmailVisible?"a•••••@mail.ru":"apolon13@mail.ru")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(InputField.F,{dimension:props.dimension,"data-container-id":"surnameField",value:surname,readOnly:!0,label:"Фамилия",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isSurnameVisible),onClick:()=>{setSurnameVisible(!isSurnameVisible),setSurname(isSurnameVisible?"С••••••а":"Смирнова")},"aria-hidden":!0},"eye-icon")}),(0,jsx_runtime.jsx)(PhoneInputField.$,{dimension:props.dimension,defaultCountry:"RUS","data-container-id":"phoneNumberField",value:phoneNumber,readOnly:!0,label:"Телефон",icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:Icon(isPhoneNumberVisible),onClick:()=>{setPhoneNumberVisible(!isPhoneNumberVisible),setPhoneNumber(isPhoneNumberVisible?"+7 095 ••• •• 75":"+7 095 364 83 75")},"aria-hidden":!0},"eye-icon")})]})})};ReadOnlyMaskedFieldTemplate.displayName="ReadOnlyMaskedFieldTemplate";try{ReadOnlyMaskedFieldTemplate.displayName="ReadOnlyMaskedFieldTemplate",ReadOnlyMaskedFieldTemplate.__docgenInfo={description:"",displayName:"ReadOnlyMaskedFieldTemplate",props:{dimension:{defaultValue:null,description:"",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Установка статуса поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},required:{defaultValue:null,description:"Установка статуса поле обязательно для заполнения",name:"required",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Установка статуса disabled",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"RefObject<HTMLInputElement | HTMLTextAreaElement>"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/ReadOnlyMaskedField/stories/ReadOnlyMaskedField.template.tsx#ReadOnlyMaskedFieldTemplate"]={docgenInfo:ReadOnlyMaskedFieldTemplate.__docgenInfo,name:"ReadOnlyMaskedFieldTemplate",path:"src/components/form/ReadOnlyMaskedField/stories/ReadOnlyMaskedField.template.tsx#ReadOnlyMaskedFieldTemplate"})}catch(__react_docgen_typescript_loader_error){}var common=__webpack_require__("./src/components/form/common.tsx");const ReadOnlyMaskedField_stories={title:"Admiral-2.1/Form Field/ReadOnlyMaskedField",component:Field.D0,decorators:void 0,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(common.u,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=149351%3A119027&t=0hLwy6SkOu2Lc4PO-1"}]},args:{dimension:"m"},argTypes:{dimension:{options:types.o,control:{type:"radio"}},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},skeleton:{control:!1},theme:{control:!1},ref:{control:!1}}},ReadOnlyMaskedFieldStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(ReadOnlyMaskedFieldTemplate,{...props,CSSCustomProps})};ReadOnlyMaskedFieldStory.displayName="ReadOnlyMaskedFieldStory";const ReadOnlyMaskedField={render:ReadOnlyMaskedFieldStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport { DateField, InputField, InputIconButton, PhoneInputField } from '@admiral-ds/react-ui';\nimport type { ComponentDimension, FieldProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ReactComponent as EyeCloseOutlineSvg } from '@admiral-ds/icons/build/service/EyeCloseOutline.svg';\nimport { ReactComponent as EyeOutlineSvg } from '@admiral-ds/icons/build/service/EyeOutline.svg';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\ninterface FieldPropsWithDimension extends FieldProps {\n  dimension?: ComponentDimension;\n}\n\nconst FormContainer = styled.form`\n  > * {\n    margin-bottom: 24px;\n  }\n`;\n\nconst initialCardNumber = '5543 9764 3143 2548';\nconst maskedCardNumber = '•••• •••• •••• •548';\n\nconst initialBirthDate = '08.05.1992';\nconst maskedBirthDate = '08.05.••••';\n\nconst initialEmail = 'apolon13@mail.ru';\nconst maskedEmail = 'a•••••@mail.ru';\n\nconst initialSurname = 'Смирнова';\nconst maskedSurname = 'С••••••а';\n\nconst initialPhoneNumber = '+7 095 364 83 75';\nconst maskedPhoneNumber = '+7 095 ••• •• 75';\n\nexport const ReadOnlyMaskedFieldTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: FieldPropsWithDimension & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const Icon = (isMasked: boolean) => (isMasked ? EyeOutlineSvg : EyeCloseOutlineSvg);\n\n  const [cardNumber, setCardNumber] = React.useState(maskedCardNumber);\n  const [isCardNumberVisible, setCardNumberVisible] = React.useState(false);\n\n  const [birthDate, setBirthDate] = React.useState(maskedBirthDate);\n  const [isBirthDateVisible, setBirthDateVisible] = React.useState(false);\n\n  const [email, setEmail] = React.useState(maskedEmail);\n  const [isEmailVisible, setEmailVisible] = React.useState(false);\n\n  const [surname, setSurname] = React.useState(maskedSurname);\n  const [isSurnameVisible, setSurnameVisible] = React.useState(false);\n\n  const [phoneNumber, setPhoneNumber] = React.useState(maskedPhoneNumber);\n  const [isPhoneNumberVisible, setPhoneNumberVisible] = React.useState(false);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <FormContainer>\n        <InputField\n          dimension={props.dimension}\n          data-container-id=\"cardNumberField\"\n          value={cardNumber}\n          readOnly\n          label=\"Номер карты\"\n          icons={\n            <InputIconButton\n              icon={Icon(isCardNumberVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setCardNumberVisible(!isCardNumberVisible);\n                setCardNumber(isCardNumberVisible ? maskedCardNumber : initialCardNumber);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <DateField\n          dimension={props.dimension}\n          data-container-id=\"birthDateField\"\n          value={birthDate}\n          readOnly\n          label=\"Дата рождения\"\n          id={'birth date'}\n          icons={\n            <InputIconButton\n              icon={Icon(isBirthDateVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setBirthDateVisible(!isBirthDateVisible);\n                setBirthDate(isBirthDateVisible ? maskedBirthDate : initialBirthDate);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <InputField\n          dimension={props.dimension}\n          data-container-id=\"emailField\"\n          value={email}\n          readOnly\n          label=\"Электронная почта\"\n          icons={\n            <InputIconButton\n              icon={Icon(isEmailVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setEmailVisible(!isEmailVisible);\n                setEmail(isEmailVisible ? maskedEmail : initialEmail);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <InputField\n          dimension={props.dimension}\n          data-container-id=\"surnameField\"\n          value={surname}\n          readOnly\n          label=\"Фамилия\"\n          icons={\n            <InputIconButton\n              icon={Icon(isSurnameVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setSurnameVisible(!isSurnameVisible);\n                setSurname(isSurnameVisible ? maskedSurname : initialSurname);\n              }}\n              aria-hidden\n            />\n          }\n        />\n        <PhoneInputField\n          dimension={props.dimension}\n          defaultCountry=\"RUS\"\n          data-container-id=\"phoneNumberField\"\n          value={phoneNumber}\n          readOnly\n          label=\"Телефон\"\n          icons={\n            <InputIconButton\n              icon={Icon(isPhoneNumberVisible)}\n              key=\"eye-icon\"\n              onClick={() => {\n                setPhoneNumberVisible(!isPhoneNumberVisible);\n                setPhoneNumber(isPhoneNumberVisible ? maskedPhoneNumber : initialPhoneNumber);\n              }}\n              aria-hidden\n            />\n          }\n        />\n      </FormContainer>\n    </ThemeProvider>\n  );\n};\n"}}},name:"ReadOnly masked field"};ReadOnlyMaskedField.parameters={...ReadOnlyMaskedField.parameters,docs:{...ReadOnlyMaskedField.parameters?.docs,source:{originalSource:"{\n  render: ReadOnlyMaskedFieldStory,\n  parameters: {\n    docs: {\n      source: {\n        code: ReadOnlyMaskedFieldRaw\n      }\n    }\n  },\n  name: 'ReadOnly masked field'\n}",...ReadOnlyMaskedField.parameters?.docs?.source}}};const __namedExportsOrder=["ReadOnlyMaskedField"]},"./src/components/IconPlacement/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>CloseIconPlacementButton,_:()=>IconPlacement});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/borderRadius.ts"),_admiral_ds_icons_build_service_CloseOutline_svg__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const IconSizeL=24,IconSizeM=20,IconSizeS=16,HighlighterOffsetBig=6,HighlighterOffsetSmall=4;function getIconSize(dimension){switch(dimension){case"lSmall":case"lBig":default:return IconSizeL;case"mSmall":case"mBig":return IconSizeM;case"s":return IconSizeS}}function getHighlighterOffset(dimension){switch(dimension){case"lBig":case"mBig":default:return HighlighterOffsetBig;case"lSmall":case"mSmall":case"s":return HighlighterOffsetSmall}}function getHighlighterSize(dimension){return getIconSize(dimension)+2*getHighlighterOffset(dimension)}const IconColor=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.AH)(["& *[fill^='#']{fill:",";}"],(p=>{switch(p.$iconColor){case"primary":return`var(--admiral-color-Primary_Primary60Main, ${p.theme.color["Primary/Primary 60 Main"]})`;case"secondary":return`var(--admiral-color-Neutral_Neutral50, ${p.theme.color["Neutral/Neutral 50"]})`;default:return p.$iconColor}})),IconPlacementContent=styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay.div.withConfig({displayName:"IconPlacement__IconPlacementContent",componentId:"sc-144koov-0"})(["position:absolute;top:0;left:0;height:100%;"," & > svg{height:","px;width:","px;}"],IconColor,(p=>getIconSize(p.$dimension)),(p=>getIconSize(p.$dimension))),ActivityHighlighter=styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay.div.withConfig({displayName:"IconPlacement__ActivityHighlighter",componentId:"sc-144koov-1"})(["width:","px;height:","px;border-radius:50%;background-color:transparent;pointer-events:none;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);"],(p=>getHighlighterSize(p.$dimension)),(p=>getHighlighterSize(p.$dimension))),eventsMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.AH)(["&:focus-visible{outline-offset:2px;outline:var(--admiral-color-Primary_Primary60Main,",") solid 2px;}&:focus{> ","{background-color:",";}}&:hover{> ","{background-color:var(--admiral-color-Opacity_Hover,",");}}&:active{> ","{background-color:var(--admiral-color-Opacity_Press,",");}}&:focus-visible{> ","{background-color:transparent;}}"],(p=>p.theme.color["Primary/Primary 60 Main"]),ActivityHighlighter,(p=>p.$highlightFocus?`var(--admiral-color-Opacity_Focus, ${p.theme.color["Opacity/Focus"]})`:"transparent"),ActivityHighlighter,(p=>p.theme.color["Opacity/Hover"]),ActivityHighlighter,(p=>p.theme.color["Opacity/Press"]),ActivityHighlighter),IconPlacementButton=styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay.button.withConfig({displayName:"IconPlacement__IconPlacementButton",componentId:"sc-144koov-2"})(["position:relative;padding:0;margin:","px;box-sizing:border-box;border:none;background-color:transparent;appearance:none;flex:0 0 auto;height:","px;width:","px;border-radius:var(--admiral-border-radius-Small,",");overflow:visible;cursor:pointer;> *{pointer-events:none;}&:disabled{cursor:not-allowed;& *[fill^='#']{fill:var(--admiral-color-Neutral_Neutral30,",");}}&:not(:disabled){","}"],(p=>getHighlighterOffset(p.$dimension)),(p=>getIconSize(p.$dimension)),(p=>getIconSize(p.$dimension)),(p=>(0,_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_4__.r2)(p.theme.shape)),(p=>p.theme.color["Neutral/Neutral 30"]),eventsMixin),IconPlacement=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({type="button",dimension="lBig",disabled=!1,highlightFocus=!0,appearance,children,...props},ref)=>{const iconColor="object"==typeof appearance?appearance.iconColor?appearance.iconColor:"secondary":appearance;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(IconPlacementButton,{ref,type,$dimension:dimension,disabled,$highlightFocus:highlightFocus,...props,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ActivityHighlighter,{$dimension:dimension,"aria-hidden":!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(IconPlacementContent,{$dimension:dimension,$iconColor:iconColor,"aria-hidden":!0,children})]})})),CloseIconPlacementButton=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({className,...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(IconPlacement,{ref,className:`close-button ${className||""}`,...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_admiral_ds_icons_build_service_CloseOutline_svg__WEBPACK_IMPORTED_MODULE_1__.h,{"aria-hidden":!0})})));try{IconPlacement.displayName="IconPlacement",IconPlacement.__docgenInfo={description:"",displayName:"IconPlacement",props:{dimension:{defaultValue:{value:"lBig"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"lBig"'},{value:'"lSmall"'},{value:'"mBig"'},{value:'"mSmall"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение кнопки",name:"disabled",required:!1,type:{name:"boolean"}},highlightFocus:{defaultValue:{value:"true"},description:"Позволяет управлять подсветкой в состоянии фокуса, по умолчанию состояние фокуса подсвечивается",name:"highlightFocus",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"IconPlacementAppearance | { iconColor: string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/IconPlacement/index.tsx#IconPlacement"]={docgenInfo:IconPlacement.__docgenInfo,name:"IconPlacement",path:"src/components/IconPlacement/index.tsx#IconPlacement"})}catch(__react_docgen_typescript_loader_error){}try{CloseIconPlacementButton.displayName="CloseIconPlacementButton",CloseIconPlacementButton.__docgenInfo={description:"",displayName:"CloseIconPlacementButton",props:{dimension:{defaultValue:{value:"lBig"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"lBig"'},{value:'"lSmall"'},{value:'"mBig"'},{value:'"mSmall"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение кнопки",name:"disabled",required:!1,type:{name:"boolean"}},highlightFocus:{defaultValue:{value:"true"},description:"Позволяет управлять подсветкой в состоянии фокуса, по умолчанию состояние фокуса подсвечивается",name:"highlightFocus",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"IconPlacementAppearance | { iconColor: string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/IconPlacement/index.tsx#CloseIconPlacementButton"]={docgenInfo:CloseIconPlacementButton.__docgenInfo,name:"CloseIconPlacementButton",path:"src/components/IconPlacement/index.tsx#CloseIconPlacementButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/utils/splice.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function splice(oldString,start,delCount,newSubStr){return oldString.slice(0,start)+newSubStr+oldString.slice(start+Math.abs(delCount))}__webpack_require__.d(__webpack_exports__,{V:()=>splice})},"./src/components/form/DateField/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{v:()=>DateField});var _src_components_Field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Field/index.tsx"),_src_components_input_DateInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/input/DateInput/index.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/common/uid.ts"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const DateField=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,ref)=>{const{className,displayInline,status,required,extraText,label,id=(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__.L)(),name,disabled,skeleton,...restProps}=props,fieldContainerProps={className,extraText,status,required,label,id,skeleton,"data-field-id":id,"data-field-name":name,displayInline,disabled};(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.$e)(restProps,fieldContainerProps),(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G)(restProps,fieldContainerProps);const inputProps={ref,id,name,"aria-required":required,status,disabled,skeleton,...restProps};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_Field__WEBPACK_IMPORTED_MODULE_4__.D0,{...fieldContainerProps,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_DateInput__WEBPACK_IMPORTED_MODULE_5__.J,{...inputProps})})}));DateField.displayName="DateField";try{DateField.displayName="DateField",DateField.__docgenInfo={description:"",displayName:"DateField",props:{type:{defaultValue:null,description:"Устанавливает тип ввода даты или интервала даты",name:"type",required:!1,type:{name:"enum",value:[{value:'"date"'},{value:'"date-range"'}]}},defaultIsCalendarOpen:{defaultValue:null,description:"Устанавливает начальное состояние видимости календаря",name:"defaultIsCalendarOpen",required:!1,type:{name:"boolean"}},formatter:{defaultValue:null,description:"",name:"formatter",required:!1,type:{name:"((isoValues: string[], joinString?: string) => string)"}},parser:{defaultValue:null,description:"",name:"parser",required:!1,type:{name:"((stringValue?: string, isDateRangeValue?: boolean) => Date[]) | undefined"}},alignDropdown:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПринудительно выравнивает контейнер календаря относительно компонента",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},calendarRef:{defaultValue:null,description:"Ref для календаря",name:"calendarRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icon:{defaultValue:null,description:"Компонент для отображения альтернативной иконки",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Выбранное значение даты",name:"selected",required:!1,type:{name:"Date | null"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ backwardText?: string; forwardText?: string; nextMonthText?: string | undefined; previousMonthText?: string | undefined; returnText?: string | undefined; selectYearText?: string | undefined; selectMonthText?: string | undefined; } | undefined"}},tooltipContainer:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.11.1, будет удалено в версии 9.х.х.\nВзамен используйте rootRef пропсу на DropdownProvider.\n\nКонтейнер, в котором при необходимости можно отрисовать тултип через ReactDOM.createPortal",name:"tooltipContainer",required:!1,type:{name:"undefined"}},currentActiveView:{defaultValue:null,description:"Показать экран выбора дат (месяц/год/день)",name:"currentActiveView",required:!1,type:{name:"ViewScreenType | null"}},currentActiveViewImportant:{defaultValue:null,description:"Приоритет экрана currentActiveView",name:"currentActiveViewImportant",required:!1,type:{name:"boolean"}},onDateIncreaseDecrease:{defaultValue:null,description:"Коллбэк срабатывает при клике на стрелках переключения дат",name:"onDateIncreaseDecrease",required:!1,type:{name:"((date: Date | (Date | null)[] | null, event?: SyntheticEvent<any, Event>) => void)"}},onMonthSelect:{defaultValue:null,description:"Коллбэк при изменении месяца",name:"onMonthSelect",required:!1,type:{name:"((date: Date | (Date | null)[] | null) => void)"}},onYearSelect:{defaultValue:null,description:"Коллбэк при изменении года",name:"onYearSelect",required:!1,type:{name:"((date: Date | (Date | null)[] | null) => void)"}},onViewEnter:{defaultValue:null,description:"Срабатывает при открытии экрана выбора года",name:"onViewEnter",required:!1,type:{name:"((view: ViewScreenType) => void)"}},onViewLeave:{defaultValue:null,description:"Срабатывает при открытии экрана выбора месяца",name:"onViewLeave",required:!1,type:{name:"((view: ViewScreenType) => void)"}},onViewMonthSelect:{defaultValue:null,description:"Выбор вкладки - Месяц",name:"onViewMonthSelect",required:!1,type:{name:"(() => void)"}},onViewYearSelect:{defaultValue:null,description:"Выбор вкладки - Год",name:"onViewYearSelect",required:!1,type:{name:"(() => void)"}},highlightSpecialDay:{defaultValue:null,description:"Позволяет добавлять стили на необходимые даты",name:"highlightSpecialDay",required:!1,type:{name:"((date: Date) => RuleSet<object>)"}},minDate:{defaultValue:null,description:"Минимально возможная для выбора дата",name:"minDate",required:!1,type:{name:"Date"}},maxDate:{defaultValue:null,description:"Максимально возможная для выбора дата",name:"maxDate",required:!1,type:{name:"Date"}},startDate:{defaultValue:null,description:"Начальная дата диапазона",name:"startDate",required:!1,type:{name:"Date | null"}},endDate:{defaultValue:null,description:"Конечная дата диапазона",name:"endDate",required:!1,type:{name:"Date | null"}},validator:{defaultValue:null,description:"Предоставляет функции проверки корректности даты, возможности её выбора в календаре.\nЕсли возвращаемое значение не 'null', то дата считается некорректной, а возвращаемое\nфункцией значение является текстом ошибки",name:"validator",required:!1,type:{name:"DateValidator"}},filterDate:{defaultValue:null,description:"Функция фильтрации даты. Если функция возвращает false для конкретного дня, то этот день будет задизейблен и его нельзя будет выбрать\nПример функции https://reactdatepicker.com/#example-filter-dates",name:"filterDate",required:!1,type:{name:"((date: Date) => boolean)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/DateField/index.tsx#DateField"]={docgenInfo:DateField.__docgenInfo,name:"DateField",path:"src/components/form/DateField/index.tsx#DateField"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/PhoneInputField/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>PhoneInputField});var _src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/common/uid.ts"),_src_components_Field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Field/index.tsx"),_src_components_input_PhoneNumberInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/input/PhoneNumberInput/index.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const PhoneInputField=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((props,ref)=>{const inputRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null),{className,displayInline,status,required,extraText,label,id=(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__.L)(),disabled,displayCharacterCounter,skeleton,...restProps}=props,fieldContainerProps={className,extraText,status,required,label,id,displayInline,disabled,displayCharacterCounter,ref:inputRef,skeleton,"data-field-id":id,"data-field-name":restProps.name};(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.$e)(restProps,fieldContainerProps),(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G)(restProps,fieldContainerProps);const inputProps={ref,id,"aria-required":required,status,disabled,skeleton,...restProps};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_Field__WEBPACK_IMPORTED_MODULE_4__.D0,{...fieldContainerProps,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_PhoneNumberInput__WEBPACK_IMPORTED_MODULE_5__.y,{...inputProps})})}));PhoneInputField.displayName="PhoneInputField";try{PhoneInputField.displayName="PhoneInputField",PhoneInputField.__docgenInfo={description:"",displayName:"PhoneInputField",props:{value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},defaultCountry:{defaultValue:null,description:"Код ISO A3 страны для определения префикса номера по умолчанию",name:"defaultCountry",required:!1,type:{name:"string"}},onlyCountries:{defaultValue:null,description:"Список стран для выпадающего списка. Отмечается кодом ISO A3 страны",name:"onlyCountries",required:!1,type:{name:"string[]"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/PhoneInputField/index.tsx#PhoneInputField"]={docgenInfo:PhoneInputField.__docgenInfo,name:"PhoneInputField",path:"src/components/form/PhoneInputField/index.tsx#PhoneInputField"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/common.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>DataAttributesDescription});__webpack_require__("./node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Desc=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.div.withConfig({displayName:"common__Desc",componentId:"sc-1vhod0x-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),DataAttributesDescription=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Desc,{children:["Компоненту можно прокидывать дата аттрибуты вида [",_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G$,"-...]. Этот аттрибут попадет только на контейнер самого компонента.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("br",{}),' Например: data-container-id="fieldIdOne" - контейнер компонента получит аттрибут data-container-id="fieldIdOne", на нативный input этот аттрибут прокинут не будет.']});DataAttributesDescription.displayName="DataAttributesDescription"},"./src/components/input/DateInput/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{J:()=>DateInput});var _path,react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgCalendarOutline=function SvgCalendarOutline(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M8.14 1.94c.35 0 .65.3.65.65v1.39h2.56V2.59c0-.35.29-.65.65-.65.35 0 .64.3.64.65v1.39h2.56V2.59c0-.35.29-.65.65-.65.35 0 .65.3.65.65v1.39h.5c1.64 0 3 1.34 3 3v10.13c0 1.67-1.34 3-3 3H7c-1.67 0-3-1.33-3-3V6.98c0-1.66 1.33-3 3-3h.48V2.59c0-.35.3-.65.66-.65m-.66 4.91V5.28H7c-.94 0-1.71.76-1.71 1.7v2.36H18.7V6.98c0-.94-.77-1.7-1.7-1.7h-.5v1.57c0 .36-.3.65-.65.65-.36 0-.65-.29-.65-.65V5.28h-2.56v1.57c0 .36-.29.65-.64.65-.36 0-.65-.29-.65-.65V5.28H8.79v1.57a.655.655 0 0 1-1.31 0m11.22 3.8H5.29v6.46c0 .94.77 1.7 1.71 1.7h10c.93 0 1.7-.76 1.7-1.7zM7.52 13.99c0-.74.61-1.34 1.35-1.34h2.33c.74 0 1.34.6 1.34 1.34v1.32c0 .75-.6 1.36-1.34 1.36H8.87c-.74 0-1.35-.61-1.35-1.36zm1.32-.03c-.01.01-.01.02-.01.03v1.32c0 .02 0 .03.01.04s.02.01.03.01h2.33c.01 0 .02 0 .03-.01s.02-.02.02-.04v-1.32c0-.01-.01-.02-.02-.03s-.02-.01-.03-.01H8.87c-.01 0-.02 0-.03.01"})))};__webpack_require__.p;var TextInput=__webpack_require__("./src/components/input/TextInput/index.tsx"),Calendar=__webpack_require__("./src/components/Calendar/index.tsx"),refSetter=__webpack_require__("./src/components/common/utils/refSetter.ts"),splice=__webpack_require__("./src/components/common/utils/splice.ts");const MASK_VALUE="__.__.____",formatDate=value=>`${value.substring(0,2).replace(/\D/g,"_").padEnd(2,"_")}.${value.substring(2,4).replace(/\D/g,"_").padEnd(2,"_")}.${value.substring(4,8).replace(/\D/g,"_").padEnd(4,"_")}`,calcCursorPosition=(inputValue,selectionStart)=>{const underlinePos=inputValue.indexOf("_"),valueLength=-1===underlinePos?inputValue.length:underlinePos||1;return selectionStart<valueLength?"."===inputValue.charAt(selectionStart-1)?selectionStart+1:selectionStart:valueLength};function defaultDateInputHandle(inputData){if(null===inputData)return{value:MASK_VALUE,selectionStart:0,selectionEnd:0};const selectionStart=inputData.selectionStart||0;let inputValue=inputData.value||"";const lengthDifference=inputValue.length-MASK_VALUE.length;if(inputValue.replace(/\d/g,"_")===MASK_VALUE)return inputData;if(lengthDifference<0)return inputValue=(0,splice.V)(inputValue,selectionStart,0,MASK_VALUE.substr(selectionStart,-lengthDifference)),{...inputData,value:inputValue};let addCount=0;"."===inputValue.charAt(selectionStart-1)&&(addCount=-1),"."===inputValue.charAt(selectionStart)&&(addCount=/\d/.test(inputValue.charAt(selectionStart-1))?1:-1);const clearValue=(0,splice.V)(inputValue,selectionStart+addCount,lengthDifference,"").replace(/[^\d_]/g,"");inputValue=formatDate(clearValue);const cursorPos=calcCursorPosition(inputValue,selectionStart);return{...inputData,value:inputValue,selectionStart:cursorPos,selectionEnd:cursorPos}}var changeInputData=__webpack_require__("./src/components/common/dom/changeInputData.ts");function isValidDate(d){return d instanceof Date&&!isNaN(d.getTime())}function parseStringToDate(str=""){const[ddStr,mmStr,yyyyStr]=str.split("."),date=new Date(`${yyyyStr}-${mmStr}-${ddStr}`);return date.setDate(date.getUTCDate()),date.setHours(0,0,0,0),isValidDate(date)?date:null}function defaultParser(stringValue="",isDateRangeValue,dateRangeSeparatorSymbols=" - "){const result=stringValue.split(dateRangeSeparatorSymbols).map(parseStringToDate);return isDateRangeValue?result:result[0]}const defaultDateRangeInputHandle_MASK_VALUE=MASK_VALUE+" - "+MASK_VALUE;function defaultDateRangeInputHandle(inputData){if(!inputData||!inputData.value){return{value:defaultDateRangeInputHandle_MASK_VALUE,selectionStart:0,selectionEnd:0}}const inputValue=inputData.value||defaultDateRangeInputHandle_MASK_VALUE;if(inputValue.replace(/\d/g,"_")===defaultDateRangeInputHandle_MASK_VALUE)return inputData;const selectionStart=inputData.selectionStart||0,symbolsChanged=inputValue.length-defaultDateRangeInputHandle_MASK_VALUE.length;if(MASK_VALUE.length<selectionStart+1&&MASK_VALUE.length+3>selectionStart){const selectionPos=inputValue.length<defaultDateRangeInputHandle_MASK_VALUE.length?MASK_VALUE.length:MASK_VALUE.length+3;return{value:defaultDateInputHandle({...inputData,value:inputValue.substring(0,MASK_VALUE.length)}).value+" - "+inputValue.slice(-10),selectionStart:selectionPos,selectionEnd:selectionPos}}if(selectionStart<=MASK_VALUE.length){const handledData=defaultDateInputHandle({...inputData,value:inputValue.length>MASK_VALUE.length?inputValue.substring(0,MASK_VALUE.length+Math.max(symbolsChanged,-MASK_VALUE.length)):inputValue}),rightHandleData=defaultDateInputHandle({value:inputValue.length>MASK_VALUE.length?inputValue.substring(inputValue.length-MASK_VALUE.length,inputValue.length):""});return{value:handledData.value+" - "+rightHandleData.value,selectionStart:handledData.selectionStart,selectionEnd:handledData.selectionEnd}}const handledData=defaultDateInputHandle({value:inputValue.slice(-10-symbolsChanged),selectionStart:selectionStart-(MASK_VALUE.length+3),selectionEnd:selectionStart-(MASK_VALUE.length+3)});return{value:inputValue.substring(0,MASK_VALUE.length)+" - "+handledData.value,selectionStart:(handledData.selectionStart||0)+MASK_VALUE.length+3,selectionEnd:(handledData.selectionEnd||0)+MASK_VALUE.length+3}}var InputIconButton=__webpack_require__("./src/components/InputIconButton.tsx"),DropdownContainer=__webpack_require__("./src/components/DropdownContainer/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Input=(0,styled_components_browser_esm.Ay)(TextInput.ks).withConfig({displayName:"DateInput__Input",componentId:"sc-yf2ks1-0"})(["min-width:150px;"]);function defaultFormatter(isoValues,joinString=" - "){return isoValues.map((iso=>new Date(iso))).map((date=>isValidDate(date)?date.toLocaleDateString("ru",{timeZone:"UTC"}).replace(/[^ -~]/g,""):"__.__.____")).join(joinString)}const DateInput=react.forwardRef((({type="date",defaultIsCalendarOpen=!1,formatter=defaultFormatter,parser=defaultParser,minDate,maxDate,validator,filterDate,alignDropdown="auto",alignSelf="auto",currentActiveView,currentActiveViewImportant,onMonthSelect,onYearSelect,onViewEnter,onViewLeave,onViewMonthSelect,onViewYearSelect,selected,calendarRef,icon=SvgCalendarOutline,icons,skeleton=!1,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,isVisible,onVisibilityChange=()=>{},highlightSpecialDay,locale,onDateIncreaseDecrease,dimension="m",...props},ref)=>{const calendarProps={minDate,maxDate,validator,filterDate,currentActiveView,currentActiveViewImportant,onMonthSelect,onYearSelect,onViewEnter,onViewLeave,onViewMonthSelect,onViewYearSelect,selected,highlightSpecialDay,locale,onDateIncreaseDecrease},isDateRange="date-range"===type,handleInput=props.handleInput||(isDateRange?defaultDateRangeInputHandle:defaultDateInputHandle),[calendarValue,setCalendarValue]=(0,react.useState)(null),inputRef=(0,react.useRef)(null),inputContainerRef=(0,react.useRef)(null),[isCalendarOpenState,setCalendarOpenState]=(0,react.useState)(defaultIsCalendarOpen),isCalendarOpen=isVisible??isCalendarOpenState,setCalendarOpen=newCalendarOpenState=>{setCalendarOpenState(newCalendarOpenState),onVisibilityChange(newCalendarOpenState)},[startDate,endDate,selectedCalendarValue]=Array.isArray(calendarValue)?calendarValue:[void 0,void 0,calendarValue],handleButtonClick=()=>{const calValue=parser(inputRef.current?.value,isDateRange);setCalendarValue(calValue),isCalendarOpen||inputRef.current?.focus(),setCalendarOpen(!isCalendarOpen)},iconArray=react.Children.toArray(icons);return props.readOnly||iconArray.push((0,jsx_runtime.jsx)(InputIconButton.G,{icon,onClick:handleButtonClick,tabIndex:0})),(0,jsx_runtime.jsx)(Input,{dimension,...props,ref:(0,refSetter.d)(ref,inputRef),handleInput,icons:iconArray,containerRef:inputContainerRef,skeleton,children:isCalendarOpen&&!skeleton&&(0,jsx_runtime.jsx)(DropdownContainer.a,{targetElement:inputRef.current,alignSelf:alignDropdown||alignSelf,onClickOutside:e=>{e.target&&inputContainerRef.current?.contains(e.target)||setCalendarOpen(!1)},dropContainerCssMixin,className:dropContainerClassName,style:dropContainerStyle,children:(0,jsx_runtime.jsx)(StyledCalendar,{...calendarProps,ref:calendarRef,selected:selectedCalendarValue,startDate,endDate,onChange:maybeDate=>{if(setCalendarValue(maybeDate),inputRef.current){if(!maybeDate)return void(0,changeInputData.B)(inputRef.current,{value:""});const values=Array.isArray(maybeDate)?maybeDate:[maybeDate],toFormatValues=values.map((date=>date?function toUTCDateIsoString(date){return new Date(Date.UTC(date.getFullYear(),date.getMonth(),date.getDate())).toISOString()}(date):"")),value=formatter(toFormatValues);(0,changeInputData.B)(inputRef.current,{value}),isDateRange&&values.includes(null)||setCalendarOpen(!1)}},range:isDateRange})})})})),StyledCalendar=(0,styled_components_browser_esm.Ay)(Calendar.V).withConfig({displayName:"DateInput__StyledCalendar",componentId:"sc-yf2ks1-1"})(["box-shadow:none;border-radius:0;"]);DateInput.displayName="DateInput";try{DateInput.displayName="DateInput",DateInput.__docgenInfo={description:"",displayName:"DateInput",props:{type:{defaultValue:{value:"date"},description:"Устанавливает тип ввода даты или интервала даты",name:"type",required:!1,type:{name:"enum",value:[{value:'"date"'},{value:'"date-range"'}]}},defaultIsCalendarOpen:{defaultValue:{value:"false"},description:"Устанавливает начальное состояние видимости календаря",name:"defaultIsCalendarOpen",required:!1,type:{name:"boolean"}},formatter:{defaultValue:null,description:"",name:"formatter",required:!1,type:{name:"((isoValues: string[], joinString?: string) => string)"}},parser:{defaultValue:null,description:"",name:"parser",required:!1,type:{name:"((stringValue?: string, isDateRangeValue?: boolean) => Date[]) | undefined"}},alignDropdown:{defaultValue:{value:"auto"},description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПринудительно выравнивает контейнер календаря относительно компонента",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},calendarRef:{defaultValue:null,description:"Ref для календаря",name:"calendarRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icon:{defaultValue:null,description:"Компонент для отображения альтернативной иконки",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},dimension:{defaultValue:{value:"m"},description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:{value:"false"},description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Выбранное значение даты",name:"selected",required:!1,type:{name:"Date | null"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ backwardText?: string; forwardText?: string; nextMonthText?: string | undefined; previousMonthText?: string | undefined; returnText?: string | undefined; selectYearText?: string | undefined; selectMonthText?: string | undefined; } | undefined"}},tooltipContainer:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.11.1, будет удалено в версии 9.х.х.\nВзамен используйте rootRef пропсу на DropdownProvider.\n\nКонтейнер, в котором при необходимости можно отрисовать тултип через ReactDOM.createPortal",name:"tooltipContainer",required:!1,type:{name:"undefined"}},currentActiveView:{defaultValue:null,description:"Показать экран выбора дат (месяц/год/день)",name:"currentActiveView",required:!1,type:{name:"ViewScreenType | null"}},currentActiveViewImportant:{defaultValue:null,description:"Приоритет экрана currentActiveView",name:"currentActiveViewImportant",required:!1,type:{name:"boolean"}},onDateIncreaseDecrease:{defaultValue:null,description:"Коллбэк срабатывает при клике на стрелках переключения дат",name:"onDateIncreaseDecrease",required:!1,type:{name:"((date: Date | (Date | null)[] | null, event?: SyntheticEvent<any, Event>) => void)"}},onMonthSelect:{defaultValue:null,description:"Коллбэк при изменении месяца",name:"onMonthSelect",required:!1,type:{name:"((date: Date | (Date | null)[] | null) => void)"}},onYearSelect:{defaultValue:null,description:"Коллбэк при изменении года",name:"onYearSelect",required:!1,type:{name:"((date: Date | (Date | null)[] | null) => void)"}},onViewEnter:{defaultValue:null,description:"Срабатывает при открытии экрана выбора года",name:"onViewEnter",required:!1,type:{name:"((view: ViewScreenType) => void)"}},onViewLeave:{defaultValue:null,description:"Срабатывает при открытии экрана выбора месяца",name:"onViewLeave",required:!1,type:{name:"((view: ViewScreenType) => void)"}},onViewMonthSelect:{defaultValue:null,description:"Выбор вкладки - Месяц",name:"onViewMonthSelect",required:!1,type:{name:"(() => void)"}},onViewYearSelect:{defaultValue:null,description:"Выбор вкладки - Год",name:"onViewYearSelect",required:!1,type:{name:"(() => void)"}},highlightSpecialDay:{defaultValue:null,description:"Позволяет добавлять стили на необходимые даты",name:"highlightSpecialDay",required:!1,type:{name:"((date: Date) => RuleSet<object>)"}},minDate:{defaultValue:null,description:"Минимально возможная для выбора дата",name:"minDate",required:!1,type:{name:"Date"}},maxDate:{defaultValue:null,description:"Максимально возможная для выбора дата",name:"maxDate",required:!1,type:{name:"Date"}},startDate:{defaultValue:null,description:"Начальная дата диапазона",name:"startDate",required:!1,type:{name:"Date | null"}},endDate:{defaultValue:null,description:"Конечная дата диапазона",name:"endDate",required:!1,type:{name:"Date | null"}},validator:{defaultValue:null,description:"Предоставляет функции проверки корректности даты, возможности её выбора в календаре.\nЕсли возвращаемое значение не 'null', то дата считается некорректной, а возвращаемое\nфункцией значение является текстом ошибки",name:"validator",required:!1,type:{name:"DateValidator"}},filterDate:{defaultValue:null,description:"Функция фильтрации даты. Если функция возвращает false для конкретного дня, то этот день будет задизейблен и его нельзя будет выбрать\nПример функции https://reactdatepicker.com/#example-filter-dates",name:"filterDate",required:!1,type:{name:"((date: Date) => boolean)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:{value:"() => undefined"},description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},alignSelf:{defaultValue:{value:"auto"},description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/DateInput/index.tsx#DateInput"]={docgenInfo:DateInput.__docgenInfo,name:"DateInput",path:"src/components/input/DateInput/index.tsx#DateInput"})}catch(__react_docgen_typescript_loader_error){}}}]);