"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[4315],{"./src/components/OverflowMenu/stories/OverflowMenu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OverflowMenuBase:()=>OverflowMenuBase,OverflowMenuOptions:()=>OverflowMenuOptions,OverflowMenuSizesOrientation:()=>OverflowMenuSizesOrientation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>OverflowMenu_stories});var react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),OverflowMenu=__webpack_require__("./src/components/OverflowMenu/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},items=[{id:"1",display:"Option one"},{id:"2",display:"Option two"},{id:"3",display:"Option three"},{id:"4",display:"Option four"},{id:"5",display:"Option five"},{id:"6",display:"Option six"},{id:"7",display:"Option seven"}],OverflowMenuBaseTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const[selected,setSelected]=react.useState(void 0),model=react.useMemo((()=>items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.D,{dimension:props.dimension,...options,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:model,selected,onSelectItem:id=>{(id=>{console.log(`selected: ${id}`)})(id),setSelected(id)},onVisibilityChange:handleVisibilityChange,"aria-label":"Overflow Menu component","data-dropdown-container-id":"overflow-menu-with-dropdown",className:"overflow-menu-class",dropContainerClassName:"dropContainerClass"})})};OverflowMenuBaseTemplate.displayName="OverflowMenuBaseTemplate";try{OverflowMenuBaseTemplate.displayName="OverflowMenuBaseTemplate",OverflowMenuBaseTemplate.__docgenInfo={description:"",displayName:"OverflowMenuBaseTemplate",props:{selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте onSelectItem\n\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте onVisibilityChange\n\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте nVisibilityChange\n\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},isVertical:{defaultValue:null,description:"Ориентация компонента",name:"isVertical",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox)",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/OverflowMenu/stories/OverflowMenuBase.template.tsx#OverflowMenuBaseTemplate"]={docgenInfo:OverflowMenuBaseTemplate.__docgenInfo,name:"OverflowMenuBaseTemplate",path:"src/components/OverflowMenu/stories/OverflowMenuBase.template.tsx#OverflowMenuBaseTemplate"})}catch(__react_docgen_typescript_loader_error){}var MinusCircleOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg");const Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"OverflowMenuOptionstemplate__Separator",componentId:"sc-onsf1x-0"})(["height:20px;width:8px;"]),DisplayBlock=styled_components_browser_esm.Ay.div.withConfig({displayName:"OverflowMenuOptionstemplate__DisplayBlock",componentId:"sc-onsf1x-1"})(["display:flex;align-items:flex-start;"]),OverflowMenuOptions_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},OverflowMenuOptions_template_logSelectedId=id=>{console.log(`selected: ${id}`)},OverflowMenuOptions_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.h,{width:20,height:20}),"Option two"]})},{id:"3",display:"Option three",disabled:!0},{id:"4",display:"Option four"}],OverflowMenuOptionsTemplate=props=>{const model=react.useMemo((()=>OverflowMenuOptions_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.D,{dimension:props.dimension,...options,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]),[selected,setSelected]=react.useState(void 0);return(0,jsx_runtime.jsxs)(DisplayBlock,{children:[(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:model,selected,onSelectItem:id=>{OverflowMenuOptions_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuOptions_template_handleVisibilityChange,"aria-label":"Overflow Menu component"}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:model,selected,onSelectItem:id=>{OverflowMenuOptions_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuOptions_template_handleVisibilityChange,"aria-label":"Overflow Menu component",disabled:!0})]})};OverflowMenuOptionsTemplate.displayName="OverflowMenuOptionsTemplate";try{OverflowMenuOptionsTemplate.displayName="OverflowMenuOptionsTemplate",OverflowMenuOptionsTemplate.__docgenInfo={description:"",displayName:"OverflowMenuOptionsTemplate",props:{selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте onSelectItem\n\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте onVisibilityChange\n\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте nVisibilityChange\n\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},isVertical:{defaultValue:null,description:"Ориентация компонента",name:"isVertical",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox)",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/OverflowMenu/stories/OverflowMenuOptions.template.tsx#OverflowMenuOptionsTemplate"]={docgenInfo:OverflowMenuOptionsTemplate.__docgenInfo,name:"OverflowMenuOptionsTemplate",path:"src/components/OverflowMenu/stories/OverflowMenuOptions.template.tsx#OverflowMenuOptionsTemplate"})}catch(__react_docgen_typescript_loader_error){}const OverflowMenuSizesOrientation_template_Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"OverflowMenuSizesOrientationtemplate__Separator",componentId:"sc-ovz85m-0"})(["height:20px;width:8px;"]),OverflowMenuSizesOrientation_template_DisplayBlock=styled_components_browser_esm.Ay.div.withConfig({displayName:"OverflowMenuSizesOrientationtemplate__DisplayBlock",componentId:"sc-ovz85m-1"})(["display:flex;align-items:flex-start;"]),OverflowMenuSizesOrientation_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},OverflowMenuSizesOrientation_template_logSelectedId=id=>{console.log(`selected: ${id}`)},OverflowMenuSizesOrientation_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.h,{width:20,height:20}),"Option two"]})},{id:"3",display:"Option three",disabled:!0},{id:"4",display:"Option four"}],OverflowMenuSizesOrientationTemplate=props=>{const modelL=react.useMemo((()=>OverflowMenuSizesOrientation_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.D,{dimension:"l",...options,key:item.id},item.display),disabled:item.disabled})))),[]),modelM=react.useMemo((()=>OverflowMenuSizesOrientation_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.D,{dimension:"m",...options,key:item.id},item.display),disabled:"1"===item.id})))),[]),modelS=react.useMemo((()=>OverflowMenuSizesOrientation_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.D,{dimension:"s",...options,key:item.id},item.display),disabled:item.disabled})))),[]),[selected,setSelected]=react.useState(void 0);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(OverflowMenuSizesOrientation_template_DisplayBlock,{children:[(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:modelL,selected,dimension:"l",onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component L"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:modelM,dimension:"m",selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component M"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:modelS,dimension:"s",selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component S"})]}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsxs)(OverflowMenuSizesOrientation_template_DisplayBlock,{children:[(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,alignSelf:"flex-start",items:modelL,dimension:"l",isVertical:!0,selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component vertical L"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:modelM,dimension:"m",isVertical:!0,selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component vertical M"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.o,{...props,items:modelS,dimension:"s",isVertical:!0,selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component vertical S"})]})]})};try{OverflowMenuSizesOrientationTemplate.displayName="OverflowMenuSizesOrientationTemplate",OverflowMenuSizesOrientationTemplate.__docgenInfo={description:"",displayName:"OverflowMenuSizesOrientationTemplate",props:{selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте onSelectItem\n\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте onVisibilityChange\n\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 3.2.0, будет удалено в 10.x.x версии.\nВзамен используйте nVisibilityChange\n\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},isVertical:{defaultValue:null,description:"Ориентация компонента",name:"isVertical",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox)",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/OverflowMenu/stories/OverflowMenuSizesOrientation.template.tsx#OverflowMenuSizesOrientationTemplate"]={docgenInfo:OverflowMenuSizesOrientationTemplate.__docgenInfo,name:"OverflowMenuSizesOrientationTemplate",path:"src/components/OverflowMenu/stories/OverflowMenuSizesOrientation.template.tsx#OverflowMenuSizesOrientationTemplate"})}catch(__react_docgen_typescript_loader_error){}const OverflowMenu_stories={title:"Admiral-2.1/OverflowMenu",decorators:void 0,component:OverflowMenu.o,parameters:{docs:{source:{code:null}},layout:"centered",design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A25623"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A25674"}]},argTypes:{dimension:{options:["l","m","s"],control:{type:"radio"}},disabled:{control:{type:"boolean"}},isVertical:{control:{type:"boolean"}},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1},items:{control:!1},selected:{control:{type:"text"}},active:{control:{type:"text"}},menuWidth:{control:{type:"text"}},menuMaxHeight:{control:{type:"text"}},isVisible:{control:{type:"boolean"}},disableSelectedOptionHighlight:{control:{type:"boolean"}}}},OverflowMenuBaseStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(OverflowMenuBaseTemplate,{...props,CSSCustomProps})};OverflowMenuBaseStory.displayName="OverflowMenuBaseStory";const OverflowMenuBase={render:OverflowMenuBaseStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { MenuItem, OverflowMenu } from '@admiral-ds/react-ui';\nimport type { OverflowMenuProps, RenderOptionProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items: Array<any> = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: 'Option two',\n  },\n  {\n    id: '3',\n    display: 'Option three',\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n  {\n    id: '5',\n    display: 'Option five',\n  },\n  {\n    id: '6',\n    display: 'Option six',\n  },\n  {\n    id: '7',\n    display: 'Option seven',\n  },\n];\n\nexport const OverflowMenuBaseTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: OverflowMenuProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <OverflowMenu\n        {...props}\n        items={model}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        onVisibilityChange={handleVisibilityChange}\n        aria-label=\"Overflow Menu component\"\n        data-dropdown-container-id=\"overflow-menu-with-dropdown\"\n        className=\"overflow-menu-class\"\n        dropContainerClassName=\"dropContainerClass\"\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"OverflowMenu. Базовый пример."},OverflowMenuOptionsStory=props=>(0,jsx_runtime.jsx)(OverflowMenuOptionsTemplate,{...props});OverflowMenuOptionsStory.displayName="OverflowMenuOptionsStory";const OverflowMenuOptions={render:OverflowMenuOptionsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { MenuItem, OverflowMenu } from '@admiral-ds/react-ui';\nimport type { RenderOptionProps, OverflowMenuProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 8px;\n`;\n\nconst DisplayBlock = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items: Array<any> = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: (\n      <div style={{ display: 'flex', width: '115px', justifyContent: 'space-between', alignItems: 'center' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n  },\n  {\n    id: '3',\n    display: 'Option three',\n    disabled: true,\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n];\n\nexport const OverflowMenuOptionsTemplate = (props: OverflowMenuProps) => {\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n\n  return (\n    <DisplayBlock>\n      <OverflowMenu\n        {...props}\n        items={model}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        onVisibilityChange={handleVisibilityChange}\n        aria-label=\"Overflow Menu component\"\n      />\n      <Separator />\n      <OverflowMenu\n        {...props}\n        items={model}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        onVisibilityChange={handleVisibilityChange}\n        aria-label=\"Overflow Menu component\"\n        disabled\n      />\n    </DisplayBlock>\n  );\n};\n"}}},name:"OverflowMenu. Задизейбленные и кастомизированные опции."},OverflowMenuSizesOrientationStory=props=>(0,jsx_runtime.jsx)(OverflowMenuSizesOrientationTemplate,{...props});OverflowMenuSizesOrientationStory.displayName="OverflowMenuSizesOrientationStory";const OverflowMenuSizesOrientation={render:OverflowMenuSizesOrientationStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { MenuItem, OverflowMenu } from '@admiral-ds/react-ui';\nimport type { OverflowMenuProps, RenderOptionProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 8px;\n`;\n\nconst DisplayBlock = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items: Array<any> = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: (\n      <div style={{ display: 'flex', width: '115px', justifyContent: 'space-between', alignItems: 'center' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n  },\n  {\n    id: '3',\n    display: 'Option three',\n    disabled: true,\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n];\n\nexport const OverflowMenuSizesOrientationTemplate = (props: OverflowMenuProps) => {\n  const dimensionL = 'l';\n  const dimensionM = 'm';\n  const dimensionS = 's';\n  const modelL = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={dimensionL} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelM = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={dimensionM} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.id === '1',\n    }));\n  }, []);\n  const modelS = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={dimensionS} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n\n  return (\n    <>\n      <DisplayBlock>\n        <OverflowMenu\n          {...props}\n          items={modelL}\n          selected={selected}\n          dimension={dimensionL}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component L\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelM}\n          dimension={dimensionM}\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component M\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelS}\n          dimension={dimensionS}\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component S\"\n        />\n      </DisplayBlock>\n      <Separator />\n      <DisplayBlock>\n        <OverflowMenu\n          {...props}\n          alignSelf=\"flex-start\"\n          items={modelL}\n          dimension={dimensionL}\n          isVertical\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component vertical L\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelM}\n          dimension={dimensionM}\n          isVertical\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component vertical M\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelS}\n          dimension={dimensionS}\n          isVertical\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component vertical S\"\n        />\n      </DisplayBlock>\n    </>\n  );\n};\n"}}},name:"OverflowMenu. Размеры и ориентация."};OverflowMenuBase.parameters={...OverflowMenuBase.parameters,docs:{...OverflowMenuBase.parameters?.docs,source:{originalSource:"{\n  render: OverflowMenuBaseStory,\n  parameters: {\n    docs: {\n      source: {\n        code: OverflowMenuBaseRaw\n      }\n    }\n  },\n  name: 'OverflowMenu. Базовый пример.'\n}",...OverflowMenuBase.parameters?.docs?.source}}},OverflowMenuOptions.parameters={...OverflowMenuOptions.parameters,docs:{...OverflowMenuOptions.parameters?.docs,source:{originalSource:"{\n  render: OverflowMenuOptionsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: OverflowMenuOptionsRaw\n      }\n    }\n  },\n  name: 'OverflowMenu. Задизейбленные и кастомизированные опции.'\n}",...OverflowMenuOptions.parameters?.docs?.source}}},OverflowMenuSizesOrientation.parameters={...OverflowMenuSizesOrientation.parameters,docs:{...OverflowMenuSizesOrientation.parameters?.docs,source:{originalSource:"{\n  render: OverflowMenuSizesOrientationStory,\n  parameters: {\n    docs: {\n      source: {\n        code: OverflowMenuSizesOrientationRaw\n      }\n    }\n  },\n  name: 'OverflowMenu. Размеры и ориентация.'\n}",...OverflowMenuSizesOrientation.parameters?.docs?.source}}};const __namedExportsOrder=["OverflowMenuBase","OverflowMenuOptions","OverflowMenuSizesOrientation"]},"./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgCloseOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgCloseOutline=function SvgCloseOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M6.4 5.49a.63.63 0 0 0-.91 0c-.26.25-.26.66 0 .91l5.59 5.59-5.49 5.5c-.26.25-.26.66 0 .91.25.26.66.26.91 0l5.5-5.49 5.49 5.49c.25.26.66.26.91 0 .26-.25.26-.66 0-.91l-5.49-5.5L18.5 6.4c.26-.25.26-.66 0-.91a.63.63 0 0 0-.91 0L12 11.08z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgMinusCircleOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgMinusCircleOutline=function SvgMinusCircleOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M3 12c0-4.98 4.02-9 9-9 4.97 0 9 4.02 9 9a9 9 0 0 1-9 9c-4.98 0-9-4.03-9-9m9-7.7a7.7 7.7 0 1 0 0 15.4c4.25 0 7.7-3.45 7.7-7.7 0-4.26-3.45-7.7-7.7-7.7M7 12c0-.36.29-.65.64-.65h8.71c.35 0 .65.29.65.65 0 .35-.3.65-.65.65H7.64c-.35 0-.64-.3-.64-.65"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/ChevronDownOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgChevronDownOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgChevronDownOutline=function SvgChevronDownOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M5.22 8.56c0-.18.07-.35.21-.48.27-.24.68-.22.92.04l5.74 6.36 5.55-6.4a.65.65 0 0 1 .92-.04c.26.24.28.65.04.92l-5.99 6.89c-.28.31-.76.31-1.04 0L5.39 9a.63.63 0 0 1-.17-.44"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/MoreHorizontalOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgMoreHorizontalOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgMoreHorizontalOutline=function SvgMoreHorizontalOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M5 10a2 2 0 1 1-2 2c0-1.11.89-2 2-2m7 0a2 2 0 1 1-2 2c0-1.11.89-2 2-2m7 0a2 2 0 1 1-2 2c0-1.11.89-2 2-2"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/MoreVerticalOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgMoreVerticalOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgMoreVerticalOutline=function SvgMoreVerticalOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M10 19c0-1.11.89-2 2-2a2 2 0 1 1-2 2m0-7c0-1.11.89-2 2-2a2 2 0 1 1-2 2m0-7c0-1.11.89-2 2-2a2 2 0 1 1-2 2"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/SmallArrowRightOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgSmallArrowRightOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgSmallArrowRightOutline=function SvgSmallArrowRightOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M9.99 16.21c-.18 0-.35-.07-.48-.21a.66.66 0 0 1 .04-.92l3.49-3.15-3.48-3.02a.65.65 0 0 1-.04-.92c.24-.26.65-.28.92-.04l3.97 3.46c.31.28.31.76 0 1.04l-3.98 3.59c-.13.12-.28.17-.44.17"})))};__webpack_require__.p},"./.storybook/createBorderRadiusSwapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>createBorderRadiusSwapper});var _admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/themes/light/index.ts");const getNumFromStr=str=>str.replace(/^\D+/g,"");function createBorderRadiusSwapper(borderRadiusKind,CSSCustomProps){if(borderRadiusKind&&CSSCustomProps){const cssPropValueSmall=`var(--admiral-border-kind-Small_${getNumFromStr(borderRadiusKind)})`,cssPropValueMedium=`var(--admiral-border-kind-Medium_${getNumFromStr(borderRadiusKind)})`,cssPropValueLarge=`var(--admiral-border-kind-Large_${getNumFromStr(borderRadiusKind)})`;document.body.style.setProperty("--admiral-border-radius-Small",cssPropValueSmall),document.body.style.setProperty("--admiral-border-radius-Medium",cssPropValueMedium),document.body.style.setProperty("--admiral-border-radius-Large",cssPropValueLarge)}else CSSCustomProps||(document.body.style.removeProperty("--admiral-border-radius-Small"),document.body.style.removeProperty("--admiral-border-radius-Medium"),document.body.style.removeProperty("--admiral-border-radius-Large"));return function swapBorder(theme){return theme?(theme.shape.borderRadiusKind=borderRadiusKind||theme.shape.borderRadiusKind,theme):(_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind=borderRadiusKind||_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind,_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d)}}},"./src/components/PositionInPortal.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>PositionInPortal});var styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_observeRect__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/observeRect.ts"),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-dom/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const PositionedPortalContainer=styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay.div.withConfig({displayName:"PositionInPortal__PositionedPortalContainer",componentId:"sc-e6ntdu-0"})(["pointer-events:none;position:fixed;overflow:visible;z-index:var(--admiral-z-index-dropdown,",");"],(({theme})=>theme.zIndex.dropdown)),PositionInPortal=({targetRef,targetElement,rootRef,fullContainerWidth,...props})=>{const positionedPortalContainerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{const node=positionedPortalContainerRef.current,targetNode=targetElement??targetRef?.current;if(node&&targetNode){const observer=(0,_src_components_common_observeRect__WEBPACK_IMPORTED_MODULE_4__.A)(targetNode,(rect=>{if(rect){const{x,y,height,width}=rect,{style}=node;style.top=`${y}px`,style.left=fullContainerWidth?"0px":`${x}px`,style.height=`${height}px`,style.width=fullContainerWidth?"100%":`${width}px`}}));return observer.observe(),()=>{observer.unobserve()}}}),[targetRef,targetElement,fullContainerWidth]),(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PositionedPortalContainer,{ref:positionedPortalContainerRef,...props}),rootRef?.current||document.body)};try{PositionedPortalContainer.displayName="PositionedPortalContainer",PositionedPortalContainer.__docgenInfo={description:"",displayName:"PositionedPortalContainer",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PositionInPortal.tsx#PositionedPortalContainer"]={docgenInfo:PositionedPortalContainer.__docgenInfo,name:"PositionedPortalContainer",path:"src/components/PositionInPortal.tsx#PositionedPortalContainer"})}catch(__react_docgen_typescript_loader_error){}try{PositionInPortal.displayName="PositionInPortal",PositionInPortal.__docgenInfo={description:"При фиксированном позиционировании (как у PositionedPortalContainer) элемент позиционируется\nвсегда относительно исходного содержащего блока (окна браузера).\nИсключение, когда один из его предков имеет свойство transform, perspective, или filter,\nустановленное на что-то иное, кроме none, в этом случае этот предок ведет\nсебя как содержащий блок. Тогда top, right, bottom и left элемента рассчитываются относительно этого содержащего блока.\nЕсли у такого предка кроме transform задано свойство overflow: hidden, то элемент будет обрезаться по его краям.\n\nВ связи с вышеописанным в качестве контейнера для портала рекомендуется выбирать элемент, у предков которого нет свойств\ntransform, perspective, или filter отличных от none. Также рекомендуется размещать контейнер портала в самом низу dom-дерева,\nчтобы избежать возможных конфликтов стилей.",displayName:"PositionInPortal",props:{targetRef:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 6.1.0, будет удалено в 8.x.x версии.\nВзамен используйте параметр targetElement.\n\nRef на элемент, относительно которого позиционируется портал",name:"targetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал\nВ 8.x.x версии данный параметр станет обязательным, заменив собой targetRef",name:"targetElement",required:!1,type:{name:"Element | null"}},rootRef:{defaultValue:null,description:"Контейнер, внутри которого будет отрисован портал, по умолчанию портал рендерится в document.body",name:"rootRef",required:!1,type:{name:"RefObject<HTMLElement>"}},fullContainerWidth:{defaultValue:null,description:"Отрисовка портала на всю ширину контейнера",name:"fullContainerWidth",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PositionInPortal.tsx#PositionInPortal"]={docgenInfo:PositionInPortal.__docgenInfo,name:"PositionInPortal",path:"src/components/PositionInPortal.tsx#PositionInPortal"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/observeRect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>observeRect});const props=["bottom","height","left","right","top","width"],rectChanged=(a={},b={})=>props.some((prop=>a[prop]!==b[prop]));function observeRect(node,cb){const state={};return{observe(){state.rafId&&cancelAnimationFrame(state.rafId);const run=()=>{if(state.isObserving){const{bottom,height,left,right,top,width,x,y}=node.getBoundingClientRect(),newRect={bottom,height,left,right,top,width,x:x||left,y:y||top};rectChanged(newRect,state.rect)&&(state.rect=newRect,cb(state.rect)),state.rafId=requestAnimationFrame(run)}};state.rafId=requestAnimationFrame(run),state.isObserving=!0},unobserve(){state.rafId&&cancelAnimationFrame(state.rafId),state.isObserving&&(state.isObserving=!1)}}}},"./src/components/common/utils/parseShadowFromTheme.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>parseShadow});const parseShadow=token=>{let result=token;return result=result.replace("box-shadow: ",""),result=result.replace(";",""),result}},"./src/components/common/utils/refSetter.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function refSetter(...refs){return ref=>{refs.forEach((someRef=>{someRef&&("function"==typeof someRef?someRef(ref):someRef.current=ref)}))}}__webpack_require__.d(__webpack_exports__,{d:()=>refSetter})},"./src/components/themes/borderRadius.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$t:()=>ALL_BORDER_RADIUS_VALUES,VM:()=>mediumGroupBorderRadius,Z3:()=>largeGroupBorderRadius,r2:()=>smallGroupBorderRadius});const ALL_BORDER_RADIUS_VALUES=["Border radius 0","Border radius 2","Border radius 4","Border radius 6","Border radius 8","Border radius 10"];function smallGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"2px";default:return"4px"}}function mediumGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"2px";case"Border radius 4":default:return"4px";case"Border radius 6":return"6px";case"Border radius 8":return"8px";case"Border radius 10":return"10px"}}function largeGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"4px";case"Border radius 4":default:return"8px";case"Border radius 6":return"12px";case"Border radius 8":return"16px";case"Border radius 10":return"20px"}}}}]);