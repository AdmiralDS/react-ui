"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[438],{"./src/components/form/EditModeAreaField/stories/EditModeAreaField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EditModeAreaFieldErrorState:()=>EditModeAreaFieldErrorState,EditModeAreaFieldExtraText:()=>EditModeAreaFieldExtraText,EditModeAreaFieldPlayground:()=>EditModeAreaFieldPlayground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>EditModeAreaField_stories});var react=__webpack_require__("./node_modules/react/index.js"),uid=__webpack_require__("./src/components/common/uid.ts"),refSetter=__webpack_require__("./src/components/common/utils/refSetter.ts"),Field=__webpack_require__("./src/components/Field/index.tsx"),EditModeArea=__webpack_require__("./src/components/input/EditModeArea/index.tsx"),splitDataAttributes=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const EditModeAreaField=(0,react.forwardRef)(((props,ref)=>{const inputRef=(0,react.useRef)(null),{className,maxLength,displayInline,status,required,extraText,label,id=(0,uid.L)(),disabled,displayCharacterCounter,...restProps}=props,fieldContainerProps={className,extraText,status,required,label,id,displayInline,disabled,maxLength,inputRef,displayCharacterCounter,"data-field-id":id,"data-field-name":restProps.name};(0,splitDataAttributes.$e)(restProps,fieldContainerProps),(0,splitDataAttributes.G)(restProps,fieldContainerProps);const inputProps={ref:(0,refSetter.d)(ref,inputRef),id,"aria-required":required,status,disabled,maxLength,...restProps};return(0,jsx_runtime.jsx)(Field.D0,{...fieldContainerProps,children:(0,jsx_runtime.jsx)(EditModeArea.p,{...inputProps})})}));EditModeAreaField.displayName="EditModeAreaField";try{EditModeAreaField.displayName="EditModeAreaField",EditModeAreaField.__docgenInfo={description:"",displayName:"EditModeAreaField",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:null,description:"Значение компонента",name:"value",required:!0,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/index.tsx#EditModeAreaField"]={docgenInfo:EditModeAreaField.__docgenInfo,name:"EditModeAreaField",path:"src/components/form/EditModeAreaField/index.tsx#EditModeAreaField"})}catch(__react_docgen_typescript_loader_error){}var types=__webpack_require__("./src/components/input/types.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");const EditModeAreaFieldPlaygroundTemplate=({value="Admin",themeBorderKind,...props})=>{const[localValue,setValue]=react.useState(String(value)??"");return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsx)(EditModeAreaField,{"data-container-id":"editModeFieldIdOne",...props,value:localValue,onChange:e=>{const inputValue=e.target.value;setValue(inputValue),props.onChange?.(e)},label:"Label"})})};EditModeAreaFieldPlaygroundTemplate.displayName="EditModeAreaFieldPlaygroundTemplate";try{EditModeAreaFieldPlaygroundTemplate.displayName="EditModeAreaFieldPlaygroundTemplate",EditModeAreaFieldPlaygroundTemplate.__docgenInfo={description:"",displayName:"EditModeAreaFieldPlaygroundTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Admin"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/stories/EditModeAreaFieldPlayground.template.tsx#EditModeAreaFieldPlaygroundTemplate"]={docgenInfo:EditModeAreaFieldPlaygroundTemplate.__docgenInfo,name:"EditModeAreaFieldPlaygroundTemplate",path:"src/components/form/EditModeAreaField/stories/EditModeAreaFieldPlayground.template.tsx#EditModeAreaFieldPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}const EditModeAreaFieldErrorStateTemplate=({value="Admin",...props})=>{const[localValue,setValue]=react.useState(String(value)??""),[status,setStatus]=react.useState(void 0),[extraText,setExtraText]=react.useState(void 0);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(EditModeAreaField,{value:localValue,onChange:e=>{const inputValue=e.target.value;inputValue.length>6?(setStatus("error"),setExtraText("Поле не прошло валидацию, необходимо ввести корректное значение")):(setStatus(void 0),setExtraText(void 0)),setValue(inputValue),props.onChange?.(e)},onSubmit:()=>setExtraText(void 0),status,label:"Поле для ввода логина (не более 6 символов)",extraText})})};try{EditModeAreaFieldErrorStateTemplate.displayName="EditModeAreaFieldErrorStateTemplate",EditModeAreaFieldErrorStateTemplate.__docgenInfo={description:"",displayName:"EditModeAreaFieldErrorStateTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Admin"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/stories/EditModeAreaFieldErrorState.template.tsx#EditModeAreaFieldErrorStateTemplate"]={docgenInfo:EditModeAreaFieldErrorStateTemplate.__docgenInfo,name:"EditModeAreaFieldErrorStateTemplate",path:"src/components/form/EditModeAreaField/stories/EditModeAreaFieldErrorState.template.tsx#EditModeAreaFieldErrorStateTemplate"})}catch(__react_docgen_typescript_loader_error){}const EditModeAreaFieldExtraTextTemplate=({value="Admin",...props})=>{const[localValue,setValue]=react.useState(String(value)??""),[extraText,setExtraText]=react.useState(void 0);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(EditModeAreaField,{value:localValue,onChange:e=>{const inputValue=e.target.value;setValue(inputValue),props.onChange?.(e)},onEdit:()=>setExtraText("Additional text"),onConfirm:()=>setExtraText(void 0),label:"Поле для ввода логина (не более 6 символов)",extraText})})};try{EditModeAreaFieldExtraTextTemplate.displayName="EditModeAreaFieldExtraTextTemplate",EditModeAreaFieldExtraTextTemplate.__docgenInfo={description:"",displayName:"EditModeAreaFieldExtraTextTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Admin"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/stories/EditModeAreaFieldExtraText.template.tsx#EditModeAreaFieldExtraTextTemplate"]={docgenInfo:EditModeAreaFieldExtraTextTemplate.__docgenInfo,name:"EditModeAreaFieldExtraTextTemplate",path:"src/components/form/EditModeAreaField/stories/EditModeAreaFieldExtraText.template.tsx#EditModeAreaFieldExtraTextTemplate"})}catch(__react_docgen_typescript_loader_error){}var common=__webpack_require__("./src/components/form/common.tsx");const EditModeAreaField_stories={title:"Admiral-2.1/Form Field/EditModeAreaField",component:EditModeAreaField,decorators:void 0,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(common.u,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=38%3A10602"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=38%3A10901"}]},argTypes:{dimension:{options:["xxl","xl","m","s"],control:{type:"radio"}},status:{control:{type:"radio"},options:types.j},bold:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},disableCopying:{control:{type:"boolean"}},displayClearIcon:{control:{type:"boolean"}},displayInline:{control:{type:"boolean"}},displayCharacterCounter:{control:{type:"boolean"}},showTooltip:{control:{type:"boolean"}},skeleton:{control:{type:"boolean"}},isLoading:{control:{type:"boolean"}},multilineView:{control:{type:"boolean"}},placeholder:{control:{type:"text"}},onChange:{action:"onChange"},containerRef:{control:!1},handleInput:{control:!1},containerCssMixin:{control:!1},extraText:{control:{type:"text"}},label:{control:{type:"text"}},icons:{control:!1},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}}}},EditModeAreaFieldPlaygroundStory=props=>(0,jsx_runtime.jsx)(EditModeAreaFieldPlaygroundTemplate,{...props});EditModeAreaFieldPlaygroundStory.displayName="EditModeAreaFieldPlaygroundStory";const EditModeAreaFieldPlayground={render:EditModeAreaFieldPlaygroundStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { EditModeAreaField } from '@admiral-ds/react-ui';\nimport type { EditModeAreaFieldProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const EditModeAreaFieldPlaygroundTemplate = ({\n  value = 'Admin',\n  themeBorderKind,\n  ...props\n}: EditModeAreaFieldProps & { themeBorderKind?: BorderRadiusType }) => {\n  const [localValue, setValue] = React.useState<string>(String(value) ?? '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const inputValue = e.target.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <EditModeAreaField\n        data-container-id=\"editModeFieldIdOne\"\n        {...props}\n        value={localValue}\n        onChange={handleChange}\n        label=\"Label\"\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"EditModeAreaField. Playground"},EditModeAreaFieldExtraTextStory=props=>(0,jsx_runtime.jsx)(EditModeAreaFieldExtraTextTemplate,{...props});EditModeAreaFieldExtraTextStory.displayName="EditModeAreaFieldExtraTextStory";const EditModeAreaFieldExtraText={render:EditModeAreaFieldExtraTextStory,name:"Пример с поясняющим текстом",parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { EditModeAreaField } from '@admiral-ds/react-ui';\nimport type { EditModeAreaFieldProps } from '@admiral-ds/react-ui';\n\nexport const EditModeAreaFieldExtraTextTemplate = ({ value = 'Admin', ...props }: EditModeAreaFieldProps) => {\n  const [localValue, setValue] = React.useState<string>(String(value) ?? '');\n  const [extraText, setExtraText] = React.useState<any>(undefined);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const inputValue = e.target.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <>\n      <EditModeAreaField\n        value={localValue}\n        onChange={handleChange}\n        onEdit={() => setExtraText('Additional text')}\n        onConfirm={() => setExtraText(undefined)}\n        label=\"Поле для ввода логина (не более 6 символов)\"\n        extraText={extraText}\n      />\n    </>\n  );\n};\n"},description:{story:"В режиме редактирования допускается использование поясняющего текста для инпута."}}}},EditModeAreaFieldErrorStateStory=props=>(0,jsx_runtime.jsx)(EditModeAreaFieldErrorStateTemplate,{...props});EditModeAreaFieldErrorStateStory.displayName="EditModeAreaFieldErrorStateStory";const EditModeAreaFieldErrorState={render:EditModeAreaFieldErrorStateStory,parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { EditModeAreaField } from '@admiral-ds/react-ui';\nimport type { EditModeAreaFieldProps } from '@admiral-ds/react-ui';\n\nexport const EditModeAreaFieldErrorStateTemplate = ({ value = 'Admin', ...props }: EditModeAreaFieldProps) => {\n  const [localValue, setValue] = React.useState<string>(String(value) ?? '');\n  const [status, setStatus] = React.useState<any>(undefined);\n  const [extraText, setExtraText] = React.useState<any>(undefined);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const inputValue = e.target.value;\n    if (inputValue.length > 6) {\n      setStatus('error');\n      setExtraText('Поле не прошло валидацию, необходимо ввести корректное значение');\n    } else {\n      setStatus(undefined);\n      setExtraText(undefined);\n    }\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <>\n      <EditModeAreaField\n        value={localValue}\n        onChange={handleChange}\n        onSubmit={() => setExtraText(undefined)}\n        status={status}\n        label=\"Поле для ввода логина (не более 6 символов)\"\n        extraText={extraText}\n      />\n    </>\n  );\n};\n"}}},name:"Пример с состоянием ошибки"};EditModeAreaFieldPlayground.parameters={...EditModeAreaFieldPlayground.parameters,docs:{...EditModeAreaFieldPlayground.parameters?.docs,source:{originalSource:"{\n  render: EditModeAreaFieldPlaygroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: EditModeAreaFieldPlaygroundRaw\n      }\n    }\n  },\n  name: 'EditModeAreaField. Playground'\n}",...EditModeAreaFieldPlayground.parameters?.docs?.source}}},EditModeAreaFieldExtraText.parameters={...EditModeAreaFieldExtraText.parameters,docs:{...EditModeAreaFieldExtraText.parameters?.docs,source:{originalSource:"{\n  render: EditModeAreaFieldExtraTextStory,\n  name: 'Пример с поясняющим текстом',\n  parameters: {\n    docs: {\n      source: {\n        code: EditModeAreaFieldExtraTextRaw\n      },\n      description: {\n        story: `В режиме редактирования допускается использование поясняющего текста для инпута.`\n      }\n    }\n  }\n}",...EditModeAreaFieldExtraText.parameters?.docs?.source}}},EditModeAreaFieldErrorState.parameters={...EditModeAreaFieldErrorState.parameters,docs:{...EditModeAreaFieldErrorState.parameters?.docs,source:{originalSource:"{\n  render: EditModeAreaFieldErrorStateStory,\n  parameters: {\n    docs: {\n      source: {\n        code: EditModeAreaFieldErrorStateRaw\n      }\n    }\n  },\n  name: 'Пример с состоянием ошибки'\n}",...EditModeAreaFieldErrorState.parameters?.docs?.source}}};const __namedExportsOrder=["EditModeAreaFieldPlayground","EditModeAreaFieldExtraText","EditModeAreaFieldErrorState"]},"./src/components/Field/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{bV:()=>ExtraTextContainer,D0:()=>Field});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),refSetter=__webpack_require__("./src/components/common/utils/refSetter.ts"),Container=__webpack_require__("./src/components/input/Container.tsx"),typography=__webpack_require__("./src/components/Typography/typography.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const CharacterCounter_Container=styled_components_browser_esm.Ay.div.withConfig({displayName:"CharacterCounter__Container",componentId:"sc-1sngjg6-0"})(["white-space:nowrap;"," color:",";transition:all 0.5s,color 0.5s;opacity:",";max-width:",";overflow:hidden;"],typography.Il["Body/Body 2 Long"],(p=>p.error?`var(--admiral-color-Error_Error60Main, ${p.theme.color["Error/Error 60 Main"]})`:`var(--admiral-color-Neutral_Neutral50, ${p.theme.color["Neutral/Neutral 50"]})`),(p=>p.transparent&&!p.error?0:1),(p=>p.transparent&&!p.error?0:"none")),CharacterCounter=({maxLength,inputRef,...props})=>{const[currentCount,setCurrentCount]=react.useState(0);return react.useEffect((()=>{const timer=setInterval((()=>{const node=inputRef.current;node&&setCurrentCount(node.value.length)}),250);return()=>clearInterval(timer)}),[inputRef]),currentCount>.8*maxLength?(0,jsx_runtime.jsxs)(CharacterCounter_Container,{...props,error:currentCount>=maxLength,transparent:currentCount<.8*maxLength,children:[currentCount," / ",maxLength]}):null};try{CharacterCounter.displayName="CharacterCounter",CharacterCounter.__docgenInfo={description:"",displayName:"CharacterCounter",props:{maxLength:{defaultValue:null,description:"",name:"maxLength",required:!0,type:{name:"number"}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!0,type:{name:"RefObject<HTMLInputElement | HTMLTextAreaElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/TextArea/CharacterCounter.tsx#CharacterCounter"]={docgenInfo:CharacterCounter.__docgenInfo,name:"CharacterCounter",path:"src/components/input/TextArea/CharacterCounter.tsx#CharacterCounter"})}catch(__react_docgen_typescript_loader_error){}var Label=__webpack_require__("./src/components/Label/index.tsx"),uid=__webpack_require__("./src/components/common/uid.ts");const inlineMixin=(0,styled_components_browser_esm.AH)(["flex-direction:row;justify-content:space-between;align-items:center;> *{flex:1 1 auto;}","{margin:0 8px 0 0;}"],Label.J),Field_Container=styled_components_browser_esm.Ay.div.withConfig({displayName:"Field__Container",componentId:"sc-1wrg3lg-0"})(["display:flex;overflow:hidden;",""],(props=>props.$displayInline?inlineMixin:"flex-direction: column;")),SkeletonLabel=styled_components_browser_esm.Ay.div.withConfig({displayName:"Field__SkeletonLabel",componentId:"sc-1wrg3lg-1"})(["position:absolute;top:0;left:0;height:16px;width:50%;margin-bottom:8px;",""],Container.vy),LabelContainer=styled_components_browser_esm.Ay.div.withConfig({displayName:"Field__LabelContainer",componentId:"sc-1wrg3lg-2"})(["position:relative;text-align:left;"]),textSkeletonMixin=(0,styled_components_browser_esm.AH)(["color:transparent;"]),StyledLabel=(0,styled_components_browser_esm.Ay)(Label.J).withConfig({displayName:"Field__StyledLabel",componentId:"sc-1wrg3lg-3"})(["",";"],(p=>p.$skeleton&&textSkeletonMixin)),containerSkeletonMixin=(0,styled_components_browser_esm.AH)(["visibility:hidden;"]),ExtrasContainer=styled_components_browser_esm.Ay.div.withConfig({displayName:"Field__ExtrasContainer",componentId:"sc-1wrg3lg-4"})(["display:flex;justify-content:space-between;",";"],(p=>p.$skeleton&&containerSkeletonMixin)),ExtraTextContainer=styled_components_browser_esm.Ay.div.withConfig({displayName:"Field__ExtraTextContainer",componentId:"sc-1wrg3lg-5"})(["flex:1 1 auto;padding-top:8px;text-align:left;"," color:var(--admiral-color-Neutral_Neutral50,",");[data-disabled] &{color:var(--admiral-color-Neutral_Neutral30,",");}[data-status='error'] &{color:var(--admiral-color-Error_Error60Main,",");}[data-status='success'] &{color:var(--admiral-color-Success_Success50Main,",");}"],typography.Il["Body/Body 2 Short"],(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Neutral/Neutral 30"]),(p=>p.theme.color["Error/Error 60 Main"]),(p=>p.theme.color["Success/Success 50 Main"])),PositionedCharacterCounter=(0,styled_components_browser_esm.Ay)(CharacterCounter).withConfig({displayName:"Field__PositionedCharacterCounter",componentId:"sc-1wrg3lg-6"})(["flex:0 0 auto;padding:8px 0 0 8px;"]),Field=react.forwardRef((({children,maxLength,inputRef,displayCharacterCounter=!0,...props},ref)=>{const containerRef=react.useRef(null),[hasFocus,setFocus]=react.useState(!1),{className,style,displayInline,status,extraText,label,required,disabled,id,skeleton=!1,...restFieldProps}=props,[defaultID]=(0,react.useState)((0,uid.L)()),fieldContainerProps={className,style,...restFieldProps},labelProps={htmlFor:id??defaultID,children:label,required,disabled};return react.useEffect((()=>{const onFocusIn=()=>{setFocus(!0)},onFocusOut=()=>{setFocus(!1)},containerNode=containerRef.current;return containerNode&&(containerNode.addEventListener("focusin",onFocusIn),containerNode.addEventListener("focusout",onFocusOut)),()=>{containerNode&&(containerNode.removeEventListener("focusin",onFocusIn),containerNode.removeEventListener("focusout",onFocusOut))}}),[]),(0,jsx_runtime.jsxs)(Field_Container,{...fieldContainerProps,$displayInline:displayInline,"data-status":status,"data-focus-within":hasFocus?"":void 0,"data-required-within":required?"":void 0,"data-disabled":disabled?"":void 0,"data-read-only":!!props.readOnly||void 0,ref:(0,refSetter.d)(containerRef,ref),children:[labelProps.children&&(0,jsx_runtime.jsxs)(LabelContainer,{children:[skeleton&&(0,jsx_runtime.jsx)(SkeletonLabel,{}),(0,jsx_runtime.jsx)(StyledLabel,{$skeleton:skeleton,...labelProps})]}),(0,jsx_runtime.jsxs)("div",{children:[children,(0,jsx_runtime.jsxs)(ExtrasContainer,{$skeleton:skeleton,children:[extraText&&(0,jsx_runtime.jsx)(ExtraTextContainer,{children:extraText}),displayCharacterCounter&&inputRef&&void 0!==maxLength&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{}),(0,jsx_runtime.jsx)(PositionedCharacterCounter,{maxLength,inputRef})]})]})]})]})}));Field.displayName="Field";try{ExtrasContainer.displayName="Field",ExtrasContainer.__docgenInfo={description:"",displayName:"Field",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Field/index.tsx#Field"]={docgenInfo:Field.__docgenInfo,name:"Field",path:"src/components/Field/index.tsx#Field"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Label/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{J:()=>Label});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Typography__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Typography/typography.ts");const Label=styled_components__WEBPACK_IMPORTED_MODULE_0__.Ay.label.withConfig({displayName:"Label",componentId:"sc-13m0084-0"})(["display:block;text-align:left;"," color:var(--admiral-color-Neutral_Neutral50,",");[data-disabled] &{color:var(--admiral-color-Neutral_Neutral30,",");}[data-focus-within] &{color:",";}[data-required-within] &:after{content:' *';color:var(--admiral-color-Error_Error60Main,",");}margin-bottom:8px;"],_src_components_Typography__WEBPACK_IMPORTED_MODULE_1__.Il["Body/Body 2 Short"],(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Neutral/Neutral 30"]),(p=>p.disabled?"":`var(--admiral-color-Neutral_Neutral50, ${p.theme.color["Neutral/Neutral 50"]})`),(p=>p.theme.color["Error/Error 60 Main"]));Label.displayName="Label";try{Label.displayName="Label",Label.__docgenInfo={description:"",displayName:"Label",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Label/index.tsx#Label"]={docgenInfo:Label.__docgenInfo,name:"Label",path:"src/components/Label/index.tsx#Label"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/uid.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function uid(){return(performance.now().toString(36)+Math.random().toString(36)).replace(/\./g,"")}__webpack_require__.d(__webpack_exports__,{L:()=>uid})},"./src/components/common/utils/splitDataAttributes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$e:()=>passFormFieldDataAttributes,CR:()=>passMenuDataAttributes,D9:()=>passDataAttributes,G:()=>passFormFieldContainerDataAttributes,G$:()=>FORM_FIELD_DATA_CONTAINER_ATTRIBUTE,c$:()=>passDropdownDataAttributes});const FORM_FIELD_DATA_CONTAINER_ATTRIBUTE="data-container",FORM_FIELD_DATA_ATTRIBUTE="data-field",DROPDOWN_DATA_ATTRIBUTE="data-dropdown-container",MENU_DATA_ATTRIBUTE="data-menu";function passFormFieldContainerDataAttributes(initialProps,containerProps){passDataAttributes(initialProps,containerProps,FORM_FIELD_DATA_CONTAINER_ATTRIBUTE,!0)}function passFormFieldDataAttributes(initialProps,containerProps){passDataAttributes(initialProps,containerProps,FORM_FIELD_DATA_ATTRIBUTE,!1)}function passDropdownDataAttributes(initialProps){const dropMenuProps={};return passDataAttributes(initialProps,dropMenuProps,DROPDOWN_DATA_ATTRIBUTE,!0),dropMenuProps}function passMenuDataAttributes(initialProps){const menuProps={};return passDataAttributes(initialProps,menuProps,MENU_DATA_ATTRIBUTE,!0),menuProps}function passDataAttributes(sourceProps,destinationProps,dataAttributesStart,deleteProp){Object.keys(sourceProps).forEach((key=>{"string"==typeof key&&key.startsWith(dataAttributesStart)&&(destinationProps[key]=sourceProps[key],deleteProp&&delete sourceProps[key])}))}},"./src/components/form/common.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>DataAttributesDescription});__webpack_require__("./node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Desc=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.div.withConfig({displayName:"common__Desc",componentId:"sc-1vhod0x-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),DataAttributesDescription=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Desc,{children:["Компоненту можно прокидывать дата аттрибуты вида [",_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G$,"-...]. Этот аттрибут попадет только на контейнер самого компонента.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("br",{}),' Например: data-container-id="fieldIdOne" - контейнер компонента получит аттрибут data-container-id="fieldIdOne", на нативный input этот аттрибут прокинут не будет.']});DataAttributesDescription.displayName="DataAttributesDescription"},"./src/components/input/EditModeArea/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>EditModeArea});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/utils/refSetter.ts"),_src_components_common_dom_changeInputData__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/common/dom/changeInputData.ts"),_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/input/EditMode/style.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const stopEvent=e=>e.preventDefault(),EditModeArea=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((({dimension="m",bold=!1,containerCssMixin,disabled=!1,onEdit,onConfirm,onCancel,value,rows=1,autoHeight=!0,...props},ref)=>{const[edit,setEdit]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[valueBeforeEdit,setValueBeforeEdit]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value),iconSize="s"===dimension?20:24,inputRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),wrapperRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),enableEdit=()=>{setEdit(!0),setValueBeforeEdit(value),onEdit?.(value)},editDimension="xxl"===dimension?"xl":dimension;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.mO,{"data-dimension":`${dimension}${bold&&"xl"!==editDimension?"-bold":""}`,"data-disabled":disabled,$cssMixin:containerCssMixin,ref:wrapperRef,"data-disable-copying":!!props.disableCopying||void 0,...props.disableCopying&&{onMouseDown:stopEvent},children:edit?!disabled&&!props.readOnly&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.m6,{ref:(0,_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_4__.d)(ref,inputRef),autoFocus:!0,disabled,dimension:editDimension,value,containerRef:wrapperRef,rows,autoHeight,...props}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.lg,{appearance:"secondary",dimension:editDimension,displayAsSquare:!0,disabled:"error"===props.status,onClick:()=>{if(setEdit(!1),inputRef.current){const inputValue=inputRef.current.value;onConfirm?.(inputValue)}},iconStart:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.Mw,{height:iconSize,width:iconSize}),$multiline:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.lg,{appearance:"secondary",dimension:editDimension,displayAsSquare:!0,onClick:()=>{setEdit(!1),inputRef.current&&((0,_src_components_common_dom_changeInputData__WEBPACK_IMPORTED_MODULE_2__.B)(inputRef.current,{value:valueBeforeEdit.toString()}),onCancel?.(valueBeforeEdit))},iconStart:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.EO,{height:iconSize,width:iconSize}),$multiline:!0})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.EY,{$multiline:!0,onClick:props.readOnly?void 0:enableEdit,children:value}),!props.readOnly&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_input_EditMode_style__WEBPACK_IMPORTED_MODULE_3__.qU,{$multiline:!0,height:iconSize,width:iconSize,onClick:enableEdit})]})})}));EditModeArea.displayName="EditMode";try{EditModeArea.displayName="EditMode",EditModeArea.__docgenInfo={description:"",displayName:"EditMode",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:null,description:"Значение компонента",name:"value",required:!0,type:{name:"string | number"}},dimension:{defaultValue:{value:"m"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:{value:"false"},description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:{value:"1"},description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:{value:"true"},description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/EditModeArea/index.tsx#EditMode"]={docgenInfo:EditMode.__docgenInfo,name:"EditMode",path:"src/components/input/EditModeArea/index.tsx#EditMode"})}catch(__react_docgen_typescript_loader_error){}}}]);