"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[4989],{"./src/components/form/FileInputField/stories/FileInputField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FileInputFieldBase:()=>FileInputFieldBase,FileInputFieldRequired:()=>FileInputFieldRequired,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FileInputField_stories});var react=__webpack_require__("./node_modules/react/index.js"),uid=__webpack_require__("./src/components/common/uid.ts"),refSetter=__webpack_require__("./src/components/common/utils/refSetter.ts"),Field=__webpack_require__("./src/components/Field/index.tsx"),FileInput=__webpack_require__("./src/components/input/FileInput/index.tsx"),splitDataAttributes=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const FileInputField_Field=(0,styled_components_browser_esm.ZP)(Field.gN).withConfig({displayName:"FileInputField__Field",componentId:"sc-16d5izg-0"})(["& ","{padding-top:20px;}"],Field.bP),FileInputField=react.forwardRef(((props,ref)=>{const inputRef=react.useRef(null),{className,maxLength,displayInline,status,required,extraText,label,id=(0,uid.h)(),disabled,displayCharacterCounter,skeleton,...restProps}=props,fieldContainerProps={className,extraText,status,required,label,id,displayInline,disabled,maxLength,inputRef,displayCharacterCounter,skeleton,"data-field-id":id,"data-field-name":restProps.name};(0,splitDataAttributes.$l)(restProps,fieldContainerProps),(0,splitDataAttributes.Od)(restProps,fieldContainerProps);const inputProps={ref:(0,refSetter.O)(ref,inputRef),id,"aria-required":required,disabled,maxLength,skeleton,...restProps};return(0,jsx_runtime.jsx)(FileInputField_Field,{...fieldContainerProps,children:(0,jsx_runtime.jsx)(FileInput.S2,{...inputProps})})}));FileInputField.displayName="FileInputField";try{FileInputField.displayName="FileInputField",FileInputField.__docgenInfo={description:"",displayName:"FileInputField",props:{title:{defaultValue:null,description:"Текстовое описание компонента (текст внутри области загрузки файлов).\nЕсли к компоненту также нужно добавить label, используйте компонент FileInputField и его проп label",name:"title",required:!1,type:{name:"ReactNode"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!0,type:{name:"enum",value:[{value:'"m"'},{value:'"xl"'}]}},width:{defaultValue:null,description:"Задает ширину",name:"width",required:!1,type:{name:"string | number"}},description:{defaultValue:null,description:"@deprecated Используйте взамен проп title\nТекст для кнопки при dimension M",name:"description",required:!1,type:{name:"ReactNode"}},renderCustomFileInput:{defaultValue:null,description:'Функция, возвращающая компонент, на который нужно "повесить" файловый инпут',name:"renderCustomFileInput",required:!1,type:{name:"((option: RenderFileInputProps) => ReactNode)"}},files:{defaultValue:null,description:"Список файлов для синхронизации с нативным инпутом",name:"files",required:!1,type:{name:"File[]"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Установка статуса поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/FileInputField/index.tsx#FileInputField"]={docgenInfo:FileInputField.__docgenInfo,name:"FileInputField",path:"src/components/form/FileInputField/index.tsx#FileInputField"})}catch(__react_docgen_typescript_loader_error){}var borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),common=__webpack_require__("./src/components/form/common.tsx"),FileItem=__webpack_require__("./src/components/input/FileInput/FileItem.tsx"),style=__webpack_require__("./src/components/input/FileInput/style.ts"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");const FileInputFieldBaseTemplate=({dimension="xl",label="Label",themeBorderKind,...props})=>{const inputRef=react.useRef(null),[fileList,setFileList]=react.useState([]),[fileAttributesMap,setFileAttributesMap]=react.useState(new Map),[status,setStatus]=react.useState(void 0),[extraText,setExtraText]=react.useState(void 0),filesAreEqual=(file1,file2)=>file1.name===file2.name&&file1.size===file2.size&&file1.type===file2.type&&file1.lastModified===file2.lastModified,accept=["image/*",".pdf","application/json"];return(0,jsx_runtime.jsx)(styled_components_browser_esm.f6,{theme:(0,createBorderRadiusSwapper.z)(themeBorderKind),children:(0,jsx_runtime.jsx)("div",{style:{width:"480px"},children:(0,jsx_runtime.jsx)(FileInputField,{...props,dimension,disabled:props.disabled,title:"xl"===dimension?`Загрузите не более 3-х файлов типа ${accept.join(", ")}`:"Добавьте файлы",ref:inputRef,onInput:e=>{const userSelectedFileList=Array.from(e.target.files||[]),updatedFileAttributesMap=new Map(fileAttributesMap),updatedFileList=fileList.reduce(((acc,file)=>(-1===userSelectedFileList.findIndex((userFile=>filesAreEqual(userFile,file)))?acc.push(file):updatedFileAttributesMap.delete(file),acc)),[]);userSelectedFileList.length+updatedFileList.length>3?(userSelectedFileList.splice(3-updatedFileList.length),setStatus("error"),setExtraText("Несколько файлов не было загружено, так как превышен лимит количества загружаемых файлов")):(setStatus(void 0),setExtraText(void 0)),userSelectedFileList.forEach((file=>{const imageURL=file.type.startsWith("image")?URL.createObjectURL(file):void 0,onPreviewIconClick=file.type.startsWith("image")?()=>(file=>{console.log(`Preview icon on file "${file.name}" was clicked`)})(file):void 0;updatedFileAttributesMap.set(file,{fileId:(0,uid.h)(),fileName:file.name.substring(0,file.name.lastIndexOf(".")),fileType:file.type,fileSize:file.size,status:"Uploaded",errorMessage:"Что-то явно пошло не так...",previewImageURL:imageURL,onPreviewIconClick})})),setFileList([...updatedFileList,...userSelectedFileList]),setFileAttributesMap(updatedFileAttributesMap)},accept:accept.join(", "),files:fileList,status,extraText,label,children:fileList.map((file=>{const attributes=fileAttributesMap.get(file);if(attributes)return(0,jsx_runtime.jsx)(FileItem.j,{fileId:attributes.fileId,fileName:attributes.fileName,fileType:attributes.fileType,fileSize:attributes.fileSize,status:attributes.status,errorMessage:attributes.errorMessage,previewImageURL:attributes.previewImageURL,onCloseIconClick:()=>(fileToRemove=>{const updatedFileList=fileList.filter((file=>!filesAreEqual(file,fileToRemove))),updatedFileAttributesMap=new Map(fileAttributesMap),attributes=fileAttributesMap.get(fileToRemove);attributes&&attributes.previewImageURL&&URL.revokeObjectURL(attributes.previewImageURL),updatedFileAttributesMap.delete(fileToRemove),setFileList(updatedFileList),setFileAttributesMap(updatedFileAttributesMap),setStatus(void 0),setExtraText(void 0)})(file),onPreviewIconClick:attributes.onPreviewIconClick,dimension,filesLayoutCssMixin:"xl"===dimension?style.F$:style.qr},attributes.fileId)}))})})})};FileInputFieldBaseTemplate.displayName="FileInputFieldBaseTemplate";try{FileInputFieldBaseTemplate.displayName="FileInputFieldBaseTemplate",FileInputFieldBaseTemplate.__docgenInfo={description:"",displayName:"FileInputFieldBaseTemplate",props:{title:{defaultValue:null,description:"Текстовое описание компонента (текст внутри области загрузки файлов).\nЕсли к компоненту также нужно добавить label, используйте компонент FileInputField и его проп label",name:"title",required:!1,type:{name:"ReactNode"}},dimension:{defaultValue:{value:"xl"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"xl"'}]}},width:{defaultValue:null,description:"Задает ширину",name:"width",required:!1,type:{name:"string | number"}},description:{defaultValue:null,description:"@deprecated Используйте взамен проп title\nТекст для кнопки при dimension M",name:"description",required:!1,type:{name:"ReactNode"}},renderCustomFileInput:{defaultValue:null,description:'Функция, возвращающая компонент, на который нужно "повесить" файловый инпут',name:"renderCustomFileInput",required:!1,type:{name:"((option: RenderFileInputProps) => ReactNode)"}},files:{defaultValue:null,description:"Список файлов для синхронизации с нативным инпутом",name:"files",required:!1,type:{name:"File[]"}},label:{defaultValue:{value:"Label"},description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Установка статуса поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/FileInputField/stories/FileInputFieldBase.template.tsx#FileInputFieldBaseTemplate"]={docgenInfo:FileInputFieldBaseTemplate.__docgenInfo,name:"FileInputFieldBaseTemplate",path:"src/components/form/FileInputField/stories/FileInputFieldBase.template.tsx#FileInputFieldBaseTemplate"})}catch(__react_docgen_typescript_loader_error){}const FileInputFieldRequiredTemplate=({dimension="xl",label="Обязательно для заполнения",required=!0,themeBorderKind,...props})=>{const inputRef=react.useRef(null),[fileList,setFileList]=react.useState([]),[fileAttributesMap,setFileAttributesMap]=react.useState(new Map),[status,setStatus]=react.useState(void 0),[extraText,setExtraText]=react.useState(void 0),filesAreEqual=(file1,file2)=>file1.name===file2.name&&file1.size===file2.size&&file1.type===file2.type&&file1.lastModified===file2.lastModified,accept=["image/*",".pdf","application/json"];return(0,jsx_runtime.jsx)(styled_components_browser_esm.f6,{theme:(0,createBorderRadiusSwapper.z)(themeBorderKind),children:(0,jsx_runtime.jsx)("div",{style:{width:"480px"},children:(0,jsx_runtime.jsx)(FileInputField,{...props,dimension,disabled:props.disabled,title:"xl"===dimension?`Загрузите не более 3-х файлов типа ${accept.join(", ")}`:"Добавьте файлы",ref:inputRef,onInput:e=>{const userSelectedFileList=Array.from(e.target.files||[]),updatedFileAttributesMap=new Map(fileAttributesMap),updatedFileList=fileList.reduce(((acc,file)=>(-1===userSelectedFileList.findIndex((userFile=>filesAreEqual(userFile,file)))?acc.push(file):updatedFileAttributesMap.delete(file),acc)),[]);userSelectedFileList.length+updatedFileList.length>3?(userSelectedFileList.splice(3-updatedFileList.length),setStatus("error"),setExtraText("Несколько файлов не было загружено, так как превышен лимит количества загружаемых файлов")):(setStatus(void 0),setExtraText(void 0)),userSelectedFileList.forEach((file=>{const imageURL=file.type.startsWith("image")?URL.createObjectURL(file):void 0,onPreviewIconClick=file.type.startsWith("image")?()=>(file=>{console.log(`Preview icon on file "${file.name}" was clicked`)})(file):void 0;updatedFileAttributesMap.set(file,{fileId:(0,uid.h)(),fileName:file.name.substring(0,file.name.lastIndexOf(".")),fileType:file.type,fileSize:file.size,status:"Uploaded",errorMessage:"Что-то явно пошло не так...",previewImageURL:imageURL,onPreviewIconClick})})),setFileList([...updatedFileList,...userSelectedFileList]),setFileAttributesMap(updatedFileAttributesMap)},accept:accept.join(", "),files:fileList,status,extraText,label,required,children:fileList.map((file=>{const attributes=fileAttributesMap.get(file);if(attributes)return(0,jsx_runtime.jsx)(FileItem.j,{fileId:attributes.fileId,fileName:attributes.fileName,fileType:attributes.fileType,fileSize:attributes.fileSize,status:attributes.status,errorMessage:attributes.errorMessage,previewImageURL:attributes.previewImageURL,onCloseIconClick:()=>(fileToRemove=>{const updatedFileList=fileList.filter((file=>!filesAreEqual(file,fileToRemove))),updatedFileAttributesMap=new Map(fileAttributesMap),attributes=fileAttributesMap.get(fileToRemove);attributes&&attributes.previewImageURL&&URL.revokeObjectURL(attributes.previewImageURL),updatedFileAttributesMap.delete(fileToRemove),setFileList(updatedFileList),setFileAttributesMap(updatedFileAttributesMap),setStatus(void 0),setExtraText(void 0)})(file),onPreviewIconClick:attributes.onPreviewIconClick,dimension,filesLayoutCssMixin:"xl"===dimension?style.F$:style.qr},attributes.fileId)}))})})})};FileInputFieldRequiredTemplate.displayName="FileInputFieldRequiredTemplate";try{FileInputFieldRequiredTemplate.displayName="FileInputFieldRequiredTemplate",FileInputFieldRequiredTemplate.__docgenInfo={description:"",displayName:"FileInputFieldRequiredTemplate",props:{title:{defaultValue:null,description:"Текстовое описание компонента (текст внутри области загрузки файлов).\nЕсли к компоненту также нужно добавить label, используйте компонент FileInputField и его проп label",name:"title",required:!1,type:{name:"ReactNode"}},dimension:{defaultValue:{value:"xl"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"xl"'}]}},width:{defaultValue:null,description:"Задает ширину",name:"width",required:!1,type:{name:"string | number"}},description:{defaultValue:null,description:"@deprecated Используйте взамен проп title\nТекст для кнопки при dimension M",name:"description",required:!1,type:{name:"ReactNode"}},renderCustomFileInput:{defaultValue:null,description:'Функция, возвращающая компонент, на который нужно "повесить" файловый инпут',name:"renderCustomFileInput",required:!1,type:{name:"((option: RenderFileInputProps) => ReactNode)"}},files:{defaultValue:null,description:"Список файлов для синхронизации с нативным инпутом",name:"files",required:!1,type:{name:"File[]"}},label:{defaultValue:{value:"Обязательно для заполнения"},description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},status:{defaultValue:null,description:"Установка статуса поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/FileInputField/stories/FileInputFieldRequired.template.tsx#FileInputFieldRequiredTemplate"]={docgenInfo:FileInputFieldRequiredTemplate.__docgenInfo,name:"FileInputFieldRequiredTemplate",path:"src/components/form/FileInputField/stories/FileInputFieldRequired.template.tsx#FileInputFieldRequiredTemplate"})}catch(__react_docgen_typescript_loader_error){}const FileInputField_stories={title:"Admiral-2.1/Form Field/FileInputField",component:FileInputField,decorators:void 0,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(common.t,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A27281"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A27389"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A27519"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A27563"}]},argTypes:{dimension:{options:["xl","m"],control:{type:"radio"}},extraText:{control:{type:"text"}},title:{control:{type:"text"}},description:{control:{type:"text"}},label:{control:{type:"text"}},themeBorderKind:{options:borderRadius.g2,control:{type:"radio"}},skeleton:{control:{type:"boolean"}},displayCharacterCounter:{control:{type:"boolean"}},displayInline:{control:{type:"boolean"}},width:{control:!1},files:{control:!1}}},FileInputFieldBaseStory=props=>(0,jsx_runtime.jsx)(FileInputFieldBaseTemplate,{...props});FileInputFieldBaseStory.displayName="FileInputFieldBaseStory";const FileInputFieldBase={render:FileInputFieldBaseStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { FileInputField, FileItem, fullWidthPositionMixin, halfWidthPositionMixin } from '@admiral-ds/react-ui';\nimport type { FileAttributeProps, FileInputFieldProps, InputStatus, BorderRadiusType } from '@admiral-ds/react-ui';\n\nimport { uid } from '#src/components/common/uid';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const FileInputFieldBaseTemplate = ({\n  dimension = 'xl',\n  label = 'Label',\n  themeBorderKind,\n  ...props\n}: FileInputFieldProps & { themeBorderKind?: BorderRadiusType }) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [fileList, setFileList] = React.useState<File[]>([]);\n  const [fileAttributesMap, setFileAttributesMap] = React.useState(new Map<File, FileAttributeProps>());\n  const [status, setStatus] = React.useState<InputStatus | undefined>(undefined);\n  const [extraText, setExtraText] = React.useState<React.ReactNode | undefined>(undefined);\n\n  const filesAreEqual = (file1: File, file2: File) =>\n    file1.name === file2.name &&\n    file1.size === file2.size &&\n    file1.type === file2.type &&\n    file1.lastModified === file2.lastModified;\n\n  const accept = ['image/*', '.pdf', 'application/json'];\n  const maxFilesNumber = 3;\n\n  const handlePreviewIconClick = (file: File) => {\n    console.log(`Preview icon on file \"${file.name}\" was clicked`);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const userSelectedFileList = Array.from(e.target.files || []);\n    const updatedFileAttributesMap = new Map<File, FileAttributeProps>(fileAttributesMap);\n    const updatedFileList = fileList.reduce((acc: File[], file) => {\n      if (userSelectedFileList.findIndex((userFile) => filesAreEqual(userFile, file)) === -1) {\n        acc.push(file);\n      } else {\n        updatedFileAttributesMap.delete(file);\n      }\n      return acc;\n    }, []);\n    if (userSelectedFileList.length + updatedFileList.length > maxFilesNumber) {\n      userSelectedFileList.splice(maxFilesNumber - updatedFileList.length);\n      setStatus('error');\n      setExtraText('Несколько файлов не было загружено, так как превышен лимит количества загружаемых файлов');\n    } else {\n      setStatus(undefined);\n      setExtraText(undefined);\n    }\n    userSelectedFileList.forEach((file) => {\n      const imageURL = file.type.startsWith('image') ? URL.createObjectURL(file) : undefined;\n      const onPreviewIconClick = file.type.startsWith('image') ? () => handlePreviewIconClick(file) : undefined;\n      updatedFileAttributesMap.set(file, {\n        fileId: uid(),\n        fileName: file.name.substring(0, file.name.lastIndexOf('.')),\n        fileType: file.type,\n        fileSize: file.size,\n        status: 'Uploaded',\n        errorMessage: 'Что-то явно пошло не так...',\n        previewImageURL: imageURL,\n        onPreviewIconClick: onPreviewIconClick,\n      });\n    });\n    setFileList([...updatedFileList, ...userSelectedFileList]);\n    setFileAttributesMap(updatedFileAttributesMap);\n  };\n\n  const handleRemoveFile = (fileToRemove: File) => {\n    const updatedFileList = fileList.filter((file) => !filesAreEqual(file, fileToRemove));\n    const updatedFileAttributesMap = new Map<File, FileAttributeProps>(fileAttributesMap);\n    const attributes = fileAttributesMap.get(fileToRemove);\n    if (attributes && attributes.previewImageURL) {\n      URL.revokeObjectURL(attributes.previewImageURL);\n    }\n    updatedFileAttributesMap.delete(fileToRemove);\n    setFileList(updatedFileList);\n    setFileAttributesMap(updatedFileAttributesMap);\n    setStatus(undefined);\n    setExtraText(undefined);\n  };\n\n  const renderFileList = () => {\n    return fileList.map((file) => {\n      const attributes = fileAttributesMap.get(file);\n      if (attributes) {\n        return (\n          <FileItem\n            fileId={attributes.fileId}\n            key={attributes.fileId}\n            fileName={attributes.fileName}\n            fileType={attributes.fileType}\n            fileSize={attributes.fileSize}\n            status={attributes.status}\n            errorMessage={attributes.errorMessage}\n            previewImageURL={attributes.previewImageURL}\n            onCloseIconClick={() => handleRemoveFile(file)}\n            onPreviewIconClick={attributes.onPreviewIconClick}\n            dimension={dimension}\n            filesLayoutCssMixin={dimension === 'xl' ? halfWidthPositionMixin : fullWidthPositionMixin}\n          />\n        );\n      }\n    });\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <div style={{ width: '480px' }}>\n        <FileInputField\n          {...props}\n          dimension={dimension}\n          disabled={props.disabled}\n          title={dimension === 'xl' ? `Загрузите не более 3-х файлов типа ${accept.join(', ')}` : 'Добавьте файлы'}\n          ref={inputRef}\n          onInput={handleChange}\n          accept={accept.join(', ')}\n          files={fileList}\n          status={status}\n          extraText={extraText}\n          label={label}\n        >\n          {renderFileList()}\n        </FileInputField>\n      </div>\n    </ThemeProvider>\n  );\n};\n"}}},name:"FileInputField. Example"},FileInputFieldRequiredStory=props=>(0,jsx_runtime.jsx)(FileInputFieldRequiredTemplate,{...props});FileInputFieldRequiredStory.displayName="FileInputFieldRequiredStory";const FileInputFieldRequired={render:FileInputFieldRequiredStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { FileInputField, FileItem, fullWidthPositionMixin, halfWidthPositionMixin } from '@admiral-ds/react-ui';\nimport type { FileAttributeProps, FileInputFieldProps, InputStatus, BorderRadiusType } from '@admiral-ds/react-ui';\n\nimport { uid } from '#src/components/common/uid';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const FileInputFieldRequiredTemplate = ({\n  dimension = 'xl',\n  label = 'Обязательно для заполнения',\n  required = true,\n  themeBorderKind,\n  ...props\n}: FileInputFieldProps & { themeBorderKind?: BorderRadiusType }) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [fileList, setFileList] = React.useState<File[]>([]);\n  const [fileAttributesMap, setFileAttributesMap] = React.useState(new Map<File, FileAttributeProps>());\n  const [status, setStatus] = React.useState<InputStatus | undefined>(undefined);\n  const [extraText, setExtraText] = React.useState<React.ReactNode | undefined>(undefined);\n\n  const filesAreEqual = (file1: File, file2: File) =>\n    file1.name === file2.name &&\n    file1.size === file2.size &&\n    file1.type === file2.type &&\n    file1.lastModified === file2.lastModified;\n\n  const accept = ['image/*', '.pdf', 'application/json'];\n  const maxFilesNumber = 3;\n\n  const handlePreviewIconClick = (file: File) => {\n    console.log(`Preview icon on file \"${file.name}\" was clicked`);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const userSelectedFileList = Array.from(e.target.files || []);\n    const updatedFileAttributesMap = new Map<File, FileAttributeProps>(fileAttributesMap);\n    const updatedFileList = fileList.reduce((acc: File[], file) => {\n      if (userSelectedFileList.findIndex((userFile) => filesAreEqual(userFile, file)) === -1) {\n        acc.push(file);\n      } else {\n        updatedFileAttributesMap.delete(file);\n      }\n      return acc;\n    }, []);\n    if (userSelectedFileList.length + updatedFileList.length > maxFilesNumber) {\n      userSelectedFileList.splice(maxFilesNumber - updatedFileList.length);\n      setStatus('error');\n      setExtraText('Несколько файлов не было загружено, так как превышен лимит количества загружаемых файлов');\n    } else {\n      setStatus(undefined);\n      setExtraText(undefined);\n    }\n    userSelectedFileList.forEach((file) => {\n      const imageURL = file.type.startsWith('image') ? URL.createObjectURL(file) : undefined;\n      const onPreviewIconClick = file.type.startsWith('image') ? () => handlePreviewIconClick(file) : undefined;\n      updatedFileAttributesMap.set(file, {\n        fileId: uid(),\n        fileName: file.name.substring(0, file.name.lastIndexOf('.')),\n        fileType: file.type,\n        fileSize: file.size,\n        status: 'Uploaded',\n        errorMessage: 'Что-то явно пошло не так...',\n        previewImageURL: imageURL,\n        onPreviewIconClick: onPreviewIconClick,\n      });\n    });\n    setFileList([...updatedFileList, ...userSelectedFileList]);\n    setFileAttributesMap(updatedFileAttributesMap);\n  };\n\n  const handleRemoveFile = (fileToRemove: File) => {\n    const updatedFileList = fileList.filter((file) => !filesAreEqual(file, fileToRemove));\n    const updatedFileAttributesMap = new Map<File, FileAttributeProps>(fileAttributesMap);\n    const attributes = fileAttributesMap.get(fileToRemove);\n    if (attributes && attributes.previewImageURL) {\n      URL.revokeObjectURL(attributes.previewImageURL);\n    }\n    updatedFileAttributesMap.delete(fileToRemove);\n    setFileList(updatedFileList);\n    setFileAttributesMap(updatedFileAttributesMap);\n    setStatus(undefined);\n    setExtraText(undefined);\n  };\n\n  const renderFileList = () => {\n    return fileList.map((file) => {\n      const attributes = fileAttributesMap.get(file);\n      if (attributes) {\n        return (\n          <FileItem\n            fileId={attributes.fileId}\n            key={attributes.fileId}\n            fileName={attributes.fileName}\n            fileType={attributes.fileType}\n            fileSize={attributes.fileSize}\n            status={attributes.status}\n            errorMessage={attributes.errorMessage}\n            previewImageURL={attributes.previewImageURL}\n            onCloseIconClick={() => handleRemoveFile(file)}\n            onPreviewIconClick={attributes.onPreviewIconClick}\n            dimension={dimension}\n            filesLayoutCssMixin={dimension === 'xl' ? halfWidthPositionMixin : fullWidthPositionMixin}\n          />\n        );\n      }\n    });\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <div style={{ width: '480px' }}>\n        <FileInputField\n          {...props}\n          dimension={dimension}\n          disabled={props.disabled}\n          title={dimension === 'xl' ? `Загрузите не более 3-х файлов типа ${accept.join(', ')}` : 'Добавьте файлы'}\n          ref={inputRef}\n          onInput={handleChange}\n          accept={accept.join(', ')}\n          files={fileList}\n          status={status}\n          extraText={extraText}\n          label={label}\n          required={required}\n        >\n          {renderFileList()}\n        </FileInputField>\n      </div>\n    </ThemeProvider>\n  );\n};\n"}}},name:"FileInputField. Required"};FileInputFieldBase.parameters={...FileInputFieldBase.parameters,docs:{...FileInputFieldBase.parameters?.docs,source:{originalSource:"{\n  render: FileInputFieldBaseStory,\n  parameters: {\n    docs: {\n      source: {\n        code: FileInputFieldBaseRaw\n      }\n    }\n  },\n  name: 'FileInputField. Example'\n}",...FileInputFieldBase.parameters?.docs?.source}}},FileInputFieldRequired.parameters={...FileInputFieldRequired.parameters,docs:{...FileInputFieldRequired.parameters?.docs,source:{originalSource:"{\n  render: FileInputFieldRequiredStory,\n  parameters: {\n    docs: {\n      source: {\n        code: FileInputFieldRequiredRaw\n      }\n    }\n  },\n  name: 'FileInputField. Required'\n}",...FileInputFieldRequired.parameters?.docs?.source}}};const __namedExportsOrder=["FileInputFieldBase","FileInputFieldRequired"]},"./src/components/Spinner/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Spinner});var _path,react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgSubtractXl=function SvgSubtractXl(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:64,height:64,fill:"none"},props),_path||(_path=react.createElement("path",{d:"M58.607 49.778a32 32 0 0 0 5.252-14.782C64.016 33.346 62.657 32 61 32s-2.982 1.349-3.17 2.995C56.343 47.944 45.346 58 32 58 17.64 58 6 46.36 6 32 6 18.654 16.056 7.656 29.005 6.17 30.651 5.983 32 4.658 32 3S30.654-.015 29.004.14a32 32 0 1 0 29.603 49.638Z",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_l_path;function Subtract_l_extends(){return Subtract_l_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_l_extends.apply(this,arguments)}var SvgSubtractL=function SvgSubtractL(props){return react.createElement("svg",Subtract_l_extends({xmlns:"http://www.w3.org/2000/svg",width:48,height:48,fill:"none"},props),Subtract_l_path||(Subtract_l_path=react.createElement("path",{d:"M43.955 37.334a24.001 24.001 0 0 0 3.915-10.838C48.014 25.122 46.88 24 45.5 24c-1.38 0-2.483 1.125-2.662 2.494C41.616 35.81 33.648 43 24 43 13.507 43 5 34.493 5 24c0-9.648 7.191-17.616 16.506-18.838C22.875 4.982 24 3.881 24 2.5c0-1.38-1.122-2.513-2.496-2.37a24 24 0 1 0 22.451 37.204Z",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_m_path;function Subtract_m_extends(){return Subtract_m_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_m_extends.apply(this,arguments)}var SvgSubtractM=function SvgSubtractM(props){return react.createElement("svg",Subtract_m_extends({xmlns:"http://www.w3.org/2000/svg",width:24,height:24,fill:"none"},props),Subtract_m_path||(Subtract_m_path=react.createElement("path",{d:"M21.978 18.667a12 12 0 0 0 1.928-5.17C24.01 12.673 23.328 12 22.5 12s-1.487.677-1.623 1.494C20.165 17.754 16.462 21 12 21a9 9 0 0 1-1.494-17.877C11.323 2.987 12 2.328 12 1.5S11.326-.01 10.504.094a12 12 0 1 0 11.474 18.573Z",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_ms_path;function Subtract_ms_extends(){return Subtract_ms_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_ms_extends.apply(this,arguments)}var SvgSubtractMs=function SvgSubtractMs(props){return react.createElement("svg",Subtract_ms_extends({xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none"},props),Subtract_ms_path||(Subtract_ms_path=react.createElement("path",{d:"M18.378 15.54a10.035 10.035 0 0 0 1.613-4.324c.087-.687-.483-1.25-1.176-1.25-.692 0-1.243.565-1.357 1.248a7.526 7.526 0 1 1-8.672-8.672c.683-.114 1.249-.665 1.249-1.357 0-.693-.564-1.263-1.251-1.176a10.035 10.035 0 1 0 9.594 15.531Z",clipRule:"evenodd"})))};__webpack_require__.p;var Subtract_s_path;function Subtract_s_extends(){return Subtract_s_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Subtract_s_extends.apply(this,arguments)}var SvgSubtractS=function SvgSubtractS(props){return react.createElement("svg",Subtract_s_extends({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none"},props),Subtract_s_path||(Subtract_s_path=react.createElement("path",{d:"M14.652 12.445a8 8 0 0 0 1.286-3.448C16.006 8.45 15.552 8 15 8c-.552 0-.991.451-1.082.996A6.002 6.002 0 0 1 2 8a6.002 6.002 0 0 1 5.004-5.918C7.55 1.992 8 1.552 8 1S7.55-.006 7.003.062a8 8 0 1 0 7.649 12.383Z",clipRule:"evenodd"})))};__webpack_require__.p;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const sizes=(0,styled_components_browser_esm.iv)(["width:",";height:",";"],(({$dimension})=>{switch($dimension){case"s":return"16px";case"ms":return"20px";case"m":return"24px";case"xl":return"64px";default:return"48px"}}),(({$dimension})=>{switch($dimension){case"s":return"16px";case"ms":return"20px";case"m":return"24px";case"xl":return"64px";default:return"48px"}})),spin=(0,styled_components_browser_esm.F4)(["0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}"]),SpinnerWrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"Spinner__SpinnerWrapper",componentId:"sc-1ehr66t-0"})(["position:relative;",";& svg{"," animation:"," 1s linear infinite;path{fill:",";}}"],sizes,(p=>p.$svgMixin||""),spin,(({$inverse,theme})=>$inverse?theme.color["Special/Static White"]:theme.color["Primary/Primary 60 Main"])),Spinner=({dimension="m",inverse=!1,svgMixin,...props})=>{const SpinnerIcon=(dimension=>{switch(dimension){case"s":return SvgSubtractS;case"ms":return SvgSubtractMs;case"m":return SvgSubtractM;case"xl":return SvgSubtractXl;default:return SvgSubtractL}})(dimension);return(0,jsx_runtime.jsx)(SpinnerWrapper,{$inverse:inverse,$dimension:dimension,$svgMixin:svgMixin,role:"alert","aria-live":"assertive",...props,children:(0,jsx_runtime.jsx)(SpinnerIcon,{})})};Spinner.displayName="Spinner",Spinner.displayName="Spinner";try{Spinner.displayName="Spinner",Spinner.__docgenInfo={description:"",displayName:"Spinner",props:{dimension:{defaultValue:{value:"m"},description:"Рзамер спиннера",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"ms"'}]}},inverse:{defaultValue:{value:"false"},description:"Белый цвет компонента",name:"inverse",required:!1,type:{name:"boolean"}},svgMixin:{defaultValue:null,description:"Миксин svg иконки",name:"svgMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Spinner/index.tsx#Spinner"]={docgenInfo:Spinner.__docgenInfo,name:"Spinner",path:"src/components/Spinner/index.tsx#Spinner"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/utils/splitDataAttributes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$l:()=>passFormFieldDataAttributes,Od:()=>passFormFieldContainerDataAttributes,R_:()=>passMenuDataAttributes,cP:()=>FORM_FIELD_DATA_CONTAINER_ATTRIBUTE,l$:()=>passDataAttributes,wP:()=>passDropdownDataAttributes});const FORM_FIELD_DATA_CONTAINER_ATTRIBUTE="data-container",FORM_FIELD_DATA_ATTRIBUTE="data-field",DROPDOWN_DATA_ATTRIBUTE="data-dropdown-container",MENU_DATA_ATTRIBUTE="data-menu";function passFormFieldContainerDataAttributes(initialProps,containerProps){passDataAttributes(initialProps,containerProps,FORM_FIELD_DATA_CONTAINER_ATTRIBUTE,!0)}function passFormFieldDataAttributes(initialProps,containerProps){passDataAttributes(initialProps,containerProps,FORM_FIELD_DATA_ATTRIBUTE,!1)}function passDropdownDataAttributes(initialProps){const dropMenuProps={};return passDataAttributes(initialProps,dropMenuProps,DROPDOWN_DATA_ATTRIBUTE,!0),dropMenuProps}function passMenuDataAttributes(initialProps){const menuProps={};return passDataAttributes(initialProps,menuProps,MENU_DATA_ATTRIBUTE,!0),menuProps}function passDataAttributes(sourceProps,destinationProps,dataAttributesStart,deleteProp){Object.keys(sourceProps).forEach((key=>{"string"==typeof key&&key.startsWith(dataAttributesStart)&&(destinationProps[key]=sourceProps[key],deleteProp&&delete sourceProps[key])}))}},"./src/components/form/common.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>DataAttributesDescription});__webpack_require__("./node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Desc=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"common__Desc",componentId:"sc-1vhod0x-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),DataAttributesDescription=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Desc,{children:["Компоненту можно прокидывать дата аттрибуты вида [",_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.cP,"-...]. Этот аттрибут попадет только на контейнер самого компонента.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("br",{}),' Например: data-container-id="fieldIdOne" - контейнер компонента получит аттрибут data-container-id="fieldIdOne", на нативный input этот аттрибут прокинут не будет.']});DataAttributesDescription.displayName="DataAttributesDescription"},"./src/components/skeleton/animation.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>skeletonAnimationMixin});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const skeletonAnimation=props=>(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.F4)(["0%{background-color:",";border-color:",";}50%{background-color:",";border-color:",";}100%{background-color:",";border-color:",";}"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 20"],props.theme.color["Neutral/Neutral 10"],props.theme.color["Neutral/Neutral 10"]),skeletonAnimationMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.iv)(["animation:"," 2s ease infinite;"],(props=>skeletonAnimation(props)));try{skeletonAnimation.displayName="skeletonAnimation",skeletonAnimation.__docgenInfo={description:"",displayName:"skeletonAnimation",props:{as:{defaultValue:null,description:'Dynamically adjust the rendered component or HTML tag, e.g.\n```\nconst StyledButton = styled.button``\n\n<StyledButton as="a" href="/foo">\n  I\'m an anchor now\n</StyledButton>\n```',name:"as",required:!1,type:{name:"KnownTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"KnownTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/skeleton/animation.tsx#skeletonAnimation"]={docgenInfo:skeletonAnimation.__docgenInfo,name:"skeletonAnimation",path:"src/components/skeleton/animation.tsx#skeletonAnimation"})}catch(__react_docgen_typescript_loader_error){}}}]);