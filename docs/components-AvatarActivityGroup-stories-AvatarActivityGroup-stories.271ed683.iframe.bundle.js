"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[9011],{"./src/components/AvatarActivityGroup/stories/AvatarActivityGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AvatarGroupPlayground:()=>AvatarGroupPlayground,AvatarGroupWidth:()=>AvatarGroupWidth,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AvatarActivityGroup_stories});var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),AvatarBaseGroup=__webpack_require__("./src/components/AvatarBaseGroup/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const AvatarActivityGroup=({items,...props})=>{const itemsBase=items.map((item=>({...item,withActivityRing:!0})));return(0,jsx_runtime.jsx)(AvatarBaseGroup.W,{...props,items:itemsBase,withActivityRing:!0})};AvatarActivityGroup.displayName="AvatarActivityGroup",AvatarActivityGroup.displayName="AvatarActivityGroup";try{AvatarActivityGroup.displayName="AvatarActivityGroup",AvatarActivityGroup.__docgenInfo={description:"",displayName:"AvatarActivityGroup",props:{items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"AvatarActivityProps[]"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"xs"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},appearance:{defaultValue:null,description:"Внешний вид компонента (цвет заливки и текста) - можно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов",name:"appearance",required:!1,type:{name:"AvatarAppearance | { background?: string; text?: string; icon?: string | undefined; } | undefined"}},onAvatarSelect:{defaultValue:null,description:"Колбек на выбор аватара (по клику или нажатию клавиши). Возвращает id выбранного аватара",name:"onAvatarSelect",required:!1,type:{name:"((id: string) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AvatarActivityGroup/index.tsx#AvatarActivityGroup"]={docgenInfo:AvatarActivityGroup.__docgenInfo,name:"AvatarActivityGroup",path:"src/components/AvatarActivityGroup/index.tsx#AvatarActivityGroup"})}catch(__react_docgen_typescript_loader_error){}var common=__webpack_require__("./src/components/themes/common/index.ts"),PersonSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/PersonSolid.svg");const imageURL="https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg",Text=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarActivityGroupWidthtemplate__Text",componentId:"sc-1hhq848-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;margin-bottom:8px;color:var(--admiral-color-Neutral_Neutral90,",");"],(p=>p.theme.color[common.jn])),onSelectAvatar=id=>{console.log("Select item with id: ",id)},items1=[{userName:"Lena Ivanova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"1"},{userName:"Petr Lesov",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"2"},{userName:"Agata Petrova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"3"},{userName:"Arina Leskova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"4",showActivityRing:!0},{userName:"Rita",appearance:"neutral4",id:"5"},{userName:"Важный Кот",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),href:imageURL,id:"6"},{userName:"Lisa Kotova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"7"},{userName:"Ирина Глушко",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"8"},{userName:"Rosa Farrel",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"9"},{userName:"Tom Hidlton",appearance:"neutral4",id:"10"}],items2=[{userName:"Lena Ivanova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"1",appearance:{background:"#3F7DFE",icon:"#001157"}},{userName:"Petr Lesov",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"2"},{userName:"Agata Petrova",id:"3",appearance:{background:"#D92020",text:"#FFFFFF"}},{userName:"Arina Leskova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"4",showActivityRing:!0},{userName:"Rita",appearance:"neutral2",id:"5"},{userName:"Важный Кот",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),href:imageURL,id:"6"},{userName:"Lisa Kotova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"7"},{userName:"Ирина Глушко",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"8"},{userName:"Rosa Farrel",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"9"},{userName:"Tom Hidlton",appearance:"neutral2",id:"10"}],AvatarActivityGroupWidthTemplate=props=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Text,{children:"Пример AvatarGroup с единым для всех аватаров внешним видом (appearance)"}),(0,jsx_runtime.jsx)(AvatarActivityGroup,{...props,style:{width:"300px"},items:items1,onAvatarSelect:onSelectAvatar,dropContainerClassName:"dropContainerClass"}),(0,jsx_runtime.jsx)("div",{style:{height:"40px"}}),(0,jsx_runtime.jsx)(Text,{children:"Пример AvatarGroup с различными по внешнему виду (appearance) аватарами"}),(0,jsx_runtime.jsx)(AvatarActivityGroup,{...props,style:{width:"300px"},items:items2,onAvatarSelect:onSelectAvatar,appearance:"neutral4",dropContainerClassName:"dropContainerClass",dropContainerStyle:{width:"250px"}})]});try{AvatarActivityGroupWidthTemplate.displayName="AvatarActivityGroupWidthTemplate",AvatarActivityGroupWidthTemplate.__docgenInfo={description:"",displayName:"AvatarActivityGroupWidthTemplate",props:{items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"AvatarActivityProps[]"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"xs"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},appearance:{defaultValue:null,description:"Внешний вид компонента (цвет заливки и текста) - можно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов",name:"appearance",required:!1,type:{name:"AvatarAppearance | { background?: string; text?: string; icon?: string | undefined; } | undefined"}},onAvatarSelect:{defaultValue:null,description:"Колбек на выбор аватара (по клику или нажатию клавиши). Возвращает id выбранного аватара",name:"onAvatarSelect",required:!1,type:{name:"((id: string) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AvatarActivityGroup/stories/AvatarActivityGroupWidth.template.tsx#AvatarActivityGroupWidthTemplate"]={docgenInfo:AvatarActivityGroupWidthTemplate.__docgenInfo,name:"AvatarActivityGroupWidthTemplate",path:"src/components/AvatarActivityGroup/stories/AvatarActivityGroupWidth.template.tsx#AvatarActivityGroupWidthTemplate"})}catch(__react_docgen_typescript_loader_error){}const AvatarActivityGroupPlayground_template_onSelectAvatar=id=>{console.log("Select item with id: ",id)},items=[{userName:"Lena Ivanova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"1"},{userName:"Petr Lesov",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"2"},{userName:"Agata Petrova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"3"},{userName:"Arina Leskova",appearance:"neutral3",id:"4",showActivityRing:!0},{userName:"Rita",appearance:"neutral4",id:"5"},{userName:"Важный Кот",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),href:"https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg",id:"6"},{userName:"Lisa Kotova",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"7"},{userName:"Ирина Глушко",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"8"},{userName:"Rosa Farrel",icon:(0,jsx_runtime.jsx)(PersonSolid.h,{}),id:"9"},{userName:"Tom Hidlton",appearance:{background:"#3F7DFE",text:"#001157"},id:"10"}],AvatarActivityGroupPlaygroundTemplate=({onAvatarSelect,...props})=>(0,jsx_runtime.jsx)(AvatarActivityGroup,{...props,items,onAvatarSelect:onAvatarSelect||AvatarActivityGroupPlayground_template_onSelectAvatar,"data-dropdown-container-id":"avatar-group-with-dropdown",className:"avatar-group-class"});AvatarActivityGroupPlaygroundTemplate.displayName="AvatarActivityGroupPlaygroundTemplate";try{AvatarActivityGroupPlaygroundTemplate.displayName="AvatarActivityGroupPlaygroundTemplate",AvatarActivityGroupPlaygroundTemplate.__docgenInfo={description:"",displayName:"AvatarActivityGroupPlaygroundTemplate",props:{items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"AvatarActivityProps[]"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'},{value:'"xs"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},appearance:{defaultValue:null,description:"Внешний вид компонента (цвет заливки и текста) - можно выбрать один из четырех исходных вариантов, либо задать свою комбинацию цветов",name:"appearance",required:!1,type:{name:"AvatarAppearance | { background?: string; text?: string; icon?: string | undefined; } | undefined"}},onAvatarSelect:{defaultValue:null,description:"Колбек на выбор аватара (по клику или нажатию клавиши). Возвращает id выбранного аватара",name:"onAvatarSelect",required:!1,type:{name:"((id: string) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AvatarActivityGroup/stories/AvatarActivityGroupPlayground.template.tsx#AvatarActivityGroupPlaygroundTemplate"]={docgenInfo:AvatarActivityGroupPlaygroundTemplate.__docgenInfo,name:"AvatarActivityGroupPlaygroundTemplate",path:"src/components/AvatarActivityGroup/stories/AvatarActivityGroupPlayground.template.tsx#AvatarActivityGroupPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}const Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"AvatarActivityGroupstories__Desc",componentId:"sc-o2ol8s-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),AvatarActivityGroup_stories={title:"Admiral-2.1/AvatarActivityGroup",component:AvatarActivityGroup,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Desc,{children:"При необходимости компоненты AvatarActivity можно группировать. В этом случае они выстраиваются по горизонтали с отрицательным отступом -10 px и внешней обводкой 2px в цвет фона страницы. При группировке статусы не отображаются."}),design:{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A32367"}},argTypes:{dimension:{options:["xl","l","m","s","xs"],control:{type:"radio"}},items:{control:!1},appearance:{options:["neutral1","neutral2","neutral3","neutral4"],control:{type:"radio"}},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1},menuWidth:{control:!1},menuMaxHeight:{control:!1}}},AvatarGroupPlaygroundStory=props=>(0,jsx_runtime.jsx)(AvatarActivityGroupPlaygroundTemplate,{...props});AvatarGroupPlaygroundStory.displayName="AvatarGroupPlaygroundStory";const AvatarGroupPlayground={render:AvatarGroupPlaygroundStory,name:"Playground",parameters:{docs:{source:{code:"import { AvatarActivityGroup } from '@admiral-ds/react-ui';\nimport type { AvatarActivityGroupProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as PersonSolid } from '@admiral-ds/icons/build/system/PersonSolid.svg';\n\nconst imageURL = 'https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg';\n\nconst onSelectAvatar = (id: string) => {\n  // eslint-disable-next-line no-console\n  console.log('Select item with id: ', id);\n};\n\nconst items: AvatarActivityGroupProps['items'] = [\n  { userName: 'Lena Ivanova', icon: <PersonSolid />, id: '1' },\n  { userName: 'Petr Lesov', icon: <PersonSolid />, id: '2' },\n  { userName: 'Agata Petrova', icon: <PersonSolid />, id: '3' },\n  { userName: 'Arina Leskova', appearance: 'neutral3', id: '4', showActivityRing: true },\n  { userName: 'Rita', appearance: 'neutral4', id: '5' },\n  { userName: 'Важный Кот', icon: <PersonSolid />, href: imageURL, id: '6' },\n  { userName: 'Lisa Kotova', icon: <PersonSolid />, id: '7' },\n  { userName: 'Ирина Глушко', icon: <PersonSolid />, id: '8' },\n  { userName: 'Rosa Farrel', icon: <PersonSolid />, id: '9' },\n  { userName: 'Tom Hidlton', appearance: { background: '#3F7DFE', text: '#001157' }, id: '10' },\n];\n\nexport const AvatarActivityGroupPlaygroundTemplate = ({ onAvatarSelect, ...props }: AvatarActivityGroupProps) => {\n  return (\n    <AvatarActivityGroup\n      {...props}\n      items={items}\n      onAvatarSelect={onAvatarSelect || onSelectAvatar}\n      data-dropdown-container-id=\"avatar-group-with-dropdown\"\n      className=\"avatar-group-class\"\n    />\n  );\n};\n"}}}},AvatarGroupWidthStory=props=>(0,jsx_runtime.jsx)(AvatarActivityGroupWidthTemplate,{...props});AvatarGroupWidthStory.displayName="AvatarGroupWidthStory";const AvatarGroupWidth={render:AvatarGroupWidthStory,name:"Пример с ограниченной шириной",parameters:{docs:{source:{code:"import styled from 'styled-components';\n\nimport { AvatarActivityGroup, DefaultFontColorName } from '@admiral-ds/react-ui';\nimport type { AvatarActivityGroupProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as PersonSolid } from '@admiral-ds/icons/build/system/PersonSolid.svg';\n\nconst imageURL = 'https://avavatar.ru/images/full/3/Ya4mRgF2LYW9hNdk.jpg';\n\nconst Text = styled.div`\n  font-family: 'VTB Group UI';\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n  color: var(--admiral-color-Neutral_Neutral90, ${(p) => p.theme.color[DefaultFontColorName]});\n`;\n\nconst onSelectAvatar = (id: string) => {\n  // eslint-disable-next-line no-console\n  console.log('Select item with id: ', id);\n};\n\nconst items1: AvatarActivityGroupProps['items'] = [\n  { userName: 'Lena Ivanova', icon: <PersonSolid />, id: '1' },\n  { userName: 'Petr Lesov', icon: <PersonSolid />, id: '2' },\n  { userName: 'Agata Petrova', icon: <PersonSolid />, id: '3' },\n  { userName: 'Arina Leskova', icon: <PersonSolid />, id: '4', showActivityRing: true },\n  { userName: 'Rita', appearance: 'neutral4', id: '5' },\n  { userName: 'Важный Кот', icon: <PersonSolid />, href: imageURL, id: '6' },\n  { userName: 'Lisa Kotova', icon: <PersonSolid />, id: '7' },\n  { userName: 'Ирина Глушко', icon: <PersonSolid />, id: '8' },\n  { userName: 'Rosa Farrel', icon: <PersonSolid />, id: '9' },\n  { userName: 'Tom Hidlton', appearance: 'neutral4', id: '10' },\n];\n\nconst items2: AvatarActivityGroupProps['items'] = [\n  {\n    userName: 'Lena Ivanova',\n    icon: <PersonSolid />,\n    id: '1',\n    appearance: { background: '#3F7DFE', icon: '#001157' },\n  },\n  { userName: 'Petr Lesov', icon: <PersonSolid />, id: '2' },\n  {\n    userName: 'Agata Petrova',\n    id: '3',\n    appearance: { background: '#D92020', text: '#FFFFFF' },\n  },\n  { userName: 'Arina Leskova', icon: <PersonSolid />, id: '4', showActivityRing: true },\n  { userName: 'Rita', appearance: 'neutral2', id: '5' },\n  { userName: 'Важный Кот', icon: <PersonSolid />, href: imageURL, id: '6' },\n  { userName: 'Lisa Kotova', icon: <PersonSolid />, id: '7' },\n  { userName: 'Ирина Глушко', icon: <PersonSolid />, id: '8' },\n  { userName: 'Rosa Farrel', icon: <PersonSolid />, id: '9' },\n  { userName: 'Tom Hidlton', appearance: 'neutral2', id: '10' },\n];\n\nexport const AvatarActivityGroupWidthTemplate = (props: AvatarActivityGroupProps) => {\n  return (\n    <>\n      <Text>Пример AvatarGroup с единым для всех аватаров внешним видом (appearance)</Text>\n      <AvatarActivityGroup\n        {...props}\n        style={{ width: '300px' }}\n        items={items1}\n        onAvatarSelect={onSelectAvatar}\n        dropContainerClassName=\"dropContainerClass\"\n      />\n      <div style={{ height: '40px' }} />\n      <Text>Пример AvatarGroup с различными по внешнему виду (appearance) аватарами</Text>\n      <AvatarActivityGroup\n        {...props}\n        style={{ width: '300px' }}\n        items={items2}\n        onAvatarSelect={onSelectAvatar}\n        appearance=\"neutral4\"\n        dropContainerClassName=\"dropContainerClass\"\n        dropContainerStyle={{ width: '250px' }}\n      />\n    </>\n  );\n};\n"},description:{story:"При достижении условного максимума отображаемых аватаров, последним ставится аватар с отображением \n        количества скрытых элементов. Внешний вид такого аватара (цвет заливки и текста) контролируется с помощью \n        параметра appearance, переданного в компонент AvatarActivityGroup.\n\nЧтобы задать для всех аватаров, \n        входящих в группу, единый внешний вид, достаточно задать для компонента AvatarActivityGroup соответствующее \n        значение параметра appearance. Если для каких-то аватаров нужно задать отличный от остальных внешний вид, \n        необходимо задать параметр appearance непосредственно для компонента AvatarActivity. Параметр appearance, \n        заданный для AvatarActivity, имеет больший приоритет, чем параметр appearance, заданный для AvatarActivityGroup."}}}};AvatarGroupPlayground.parameters={...AvatarGroupPlayground.parameters,docs:{...AvatarGroupPlayground.parameters?.docs,source:{originalSource:"{\n  render: AvatarGroupPlaygroundStory,\n  name: 'Playground',\n  parameters: {\n    docs: {\n      source: {\n        code: AvatarActivityGroupPlaygroundRaw\n      }\n    }\n  }\n}",...AvatarGroupPlayground.parameters?.docs?.source}}},AvatarGroupWidth.parameters={...AvatarGroupWidth.parameters,docs:{...AvatarGroupWidth.parameters?.docs,source:{originalSource:"{\n  render: AvatarGroupWidthStory,\n  name: 'Пример с ограниченной шириной',\n  parameters: {\n    docs: {\n      source: {\n        code: AvatarActivityGroupWidthRaw\n      },\n      description: {\n        story: `При достижении условного максимума отображаемых аватаров, последним ставится аватар с отображением \n        количества скрытых элементов. Внешний вид такого аватара (цвет заливки и текста) контролируется с помощью \n        параметра appearance, переданного в компонент AvatarActivityGroup.\\n\\nЧтобы задать для всех аватаров, \n        входящих в группу, единый внешний вид, достаточно задать для компонента AvatarActivityGroup соответствующее \n        значение параметра appearance. Если для каких-то аватаров нужно задать отличный от остальных внешний вид, \n        необходимо задать параметр appearance непосредственно для компонента AvatarActivity. Параметр appearance, \n        заданный для AvatarActivity, имеет больший приоритет, чем параметр appearance, заданный для AvatarActivityGroup.`\n      }\n    }\n  }\n}",...AvatarGroupWidth.parameters?.docs?.source}}};const __namedExportsOrder=["AvatarGroupPlayground","AvatarGroupWidth"]}}]);