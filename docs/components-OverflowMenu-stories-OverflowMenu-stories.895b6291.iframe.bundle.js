"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[4912],{"./src/components/OverflowMenu/stories/OverflowMenu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OverflowMenuBase:()=>OverflowMenuBase,OverflowMenuOptions:()=>OverflowMenuOptions,OverflowMenuSizesOrientation:()=>OverflowMenuSizesOrientation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>OverflowMenu_stories});var react=__webpack_require__("./node_modules/react/index.js"),OverflowMenu=__webpack_require__("./src/components/OverflowMenu/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},items=[{id:"1",display:"Option one"},{id:"2",display:"Option two"},{id:"3",display:"Option three"},{id:"4",display:"Option four"},{id:"5",display:"Option five"},{id:"6",display:"Option six"},{id:"7",display:"Option seven"}],OverflowMenuBaseTemplate=({themeBorderKind,...props})=>{const[selected,setSelected]=react.useState(void 0),model=react.useMemo((()=>items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.I,{dimension:props.dimension,...options,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.Mp,{theme:(0,createBorderRadiusSwapper.M)(themeBorderKind),children:(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:model,selected,onSelectItem:id=>{(id=>{console.log(`selected: ${id}`)})(id),setSelected(id)},onVisibilityChange:handleVisibilityChange,"aria-label":"Overflow Menu component","data-dropdown-container-id":"overflow-menu-with-dropdown",className:"overflow-menu-class",dropContainerClassName:"dropContainerClass"})})};OverflowMenuBaseTemplate.displayName="OverflowMenuBaseTemplate";try{OverflowMenuBaseTemplate.displayName="OverflowMenuBaseTemplate",OverflowMenuBaseTemplate.__docgenInfo={description:"",displayName:"OverflowMenuBaseTemplate",props:{selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVertical:{defaultValue:null,description:"Ориентация компонента",name:"isVertical",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/OverflowMenu/stories/OverflowMenuBase.template.tsx#OverflowMenuBaseTemplate"]={docgenInfo:OverflowMenuBaseTemplate.__docgenInfo,name:"OverflowMenuBaseTemplate",path:"src/components/OverflowMenu/stories/OverflowMenuBase.template.tsx#OverflowMenuBaseTemplate"})}catch(__react_docgen_typescript_loader_error){}var MinusCircleOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg");const Separator=styled_components_browser_esm.cp.div.withConfig({displayName:"OverflowMenuOptionstemplate__Separator",componentId:"sc-onsf1x-0"})(["height:20px;width:8px;"]),DisplayBlock=styled_components_browser_esm.cp.div.withConfig({displayName:"OverflowMenuOptionstemplate__DisplayBlock",componentId:"sc-onsf1x-1"})(["display:flex;align-items:flex-start;"]),OverflowMenuOptions_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},OverflowMenuOptions_template_logSelectedId=id=>{console.log(`selected: ${id}`)},OverflowMenuOptions_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline._,{width:20,height:20}),"Option two"]})},{id:"3",display:"Option three",disabled:!0},{id:"4",display:"Option four"}],OverflowMenuOptionsTemplate=props=>{const model=react.useMemo((()=>OverflowMenuOptions_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.I,{dimension:props.dimension,...options,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]),[selected,setSelected]=react.useState(void 0);return(0,jsx_runtime.jsxs)(DisplayBlock,{children:[(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:model,selected,onSelectItem:id=>{OverflowMenuOptions_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuOptions_template_handleVisibilityChange,"aria-label":"Overflow Menu component"}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:model,selected,onSelectItem:id=>{OverflowMenuOptions_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuOptions_template_handleVisibilityChange,"aria-label":"Overflow Menu component",disabled:!0})]})};OverflowMenuOptionsTemplate.displayName="OverflowMenuOptionsTemplate";try{OverflowMenuOptionsTemplate.displayName="OverflowMenuOptionsTemplate",OverflowMenuOptionsTemplate.__docgenInfo={description:"",displayName:"OverflowMenuOptionsTemplate",props:{selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVertical:{defaultValue:null,description:"Ориентация компонента",name:"isVertical",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/OverflowMenu/stories/OverflowMenuOptions.template.tsx#OverflowMenuOptionsTemplate"]={docgenInfo:OverflowMenuOptionsTemplate.__docgenInfo,name:"OverflowMenuOptionsTemplate",path:"src/components/OverflowMenu/stories/OverflowMenuOptions.template.tsx#OverflowMenuOptionsTemplate"})}catch(__react_docgen_typescript_loader_error){}const OverflowMenuSizesOrientation_template_Separator=styled_components_browser_esm.cp.div.withConfig({displayName:"OverflowMenuSizesOrientationtemplate__Separator",componentId:"sc-ovz85m-0"})(["height:20px;width:8px;"]),OverflowMenuSizesOrientation_template_DisplayBlock=styled_components_browser_esm.cp.div.withConfig({displayName:"OverflowMenuSizesOrientationtemplate__DisplayBlock",componentId:"sc-ovz85m-1"})(["display:flex;align-items:flex-start;"]),OverflowMenuSizesOrientation_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},OverflowMenuSizesOrientation_template_logSelectedId=id=>{console.log(`selected: ${id}`)},OverflowMenuSizesOrientation_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline._,{width:20,height:20}),"Option two"]})},{id:"3",display:"Option three",disabled:!0},{id:"4",display:"Option four"}],OverflowMenuSizesOrientationTemplate=props=>{const modelL=react.useMemo((()=>OverflowMenuSizesOrientation_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.I,{dimension:"l",...options,key:item.id},item.display),disabled:item.disabled})))),[]),modelM=react.useMemo((()=>OverflowMenuSizesOrientation_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.I,{dimension:"m",...options,key:item.id},item.display),disabled:"1"===item.id})))),[]),modelS=react.useMemo((()=>OverflowMenuSizesOrientation_template_items.map((item=>({id:item.id,render:options=>(0,react.createElement)(MenuItem.I,{dimension:"s",...options,key:item.id},item.display),disabled:item.disabled})))),[]),[selected,setSelected]=react.useState(void 0);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(OverflowMenuSizesOrientation_template_DisplayBlock,{children:[(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:modelL,selected,dimension:"l",onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component L"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:modelM,dimension:"m",selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component M"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:modelS,dimension:"s",selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component S"})]}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsxs)(OverflowMenuSizesOrientation_template_DisplayBlock,{children:[(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,alignSelf:"flex-start",items:modelL,dimension:"l",isVertical:!0,selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component vertical L"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:modelM,dimension:"m",isVertical:!0,selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component vertical M"}),(0,jsx_runtime.jsx)(OverflowMenuSizesOrientation_template_Separator,{}),(0,jsx_runtime.jsx)(OverflowMenu.g,{...props,items:modelS,dimension:"s",isVertical:!0,selected,onSelectItem:id=>{OverflowMenuSizesOrientation_template_logSelectedId(id),setSelected(id)},onVisibilityChange:OverflowMenuSizesOrientation_template_handleVisibilityChange,"aria-label":"Overflow Menu component vertical S"})]})]})};try{OverflowMenuSizesOrientationTemplate.displayName="OverflowMenuSizesOrientationTemplate",OverflowMenuSizesOrientationTemplate.__docgenInfo={description:"",displayName:"OverflowMenuSizesOrientationTemplate",props:{selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVertical:{defaultValue:null,description:"Ориентация компонента",name:"isVertical",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/OverflowMenu/stories/OverflowMenuSizesOrientation.template.tsx#OverflowMenuSizesOrientationTemplate"]={docgenInfo:OverflowMenuSizesOrientationTemplate.__docgenInfo,name:"OverflowMenuSizesOrientationTemplate",path:"src/components/OverflowMenu/stories/OverflowMenuSizesOrientation.template.tsx#OverflowMenuSizesOrientationTemplate"})}catch(__react_docgen_typescript_loader_error){}const OverflowMenu_stories={title:"Admiral-2.1/OverflowMenu",decorators:void 0,component:OverflowMenu.g,parameters:{docs:{source:{code:null}},layout:"centered",design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A25623"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A25674"}]},argTypes:{dimension:{options:["l","m","s"],control:{type:"radio"}},disabled:{control:{type:"boolean"}},isVertical:{control:{type:"boolean"}},themeBorderKind:{options:borderRadius.LX,control:{type:"radio"}},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1},items:{control:!1},selected:{control:{type:"text"}},active:{control:{type:"text"}},menuWidth:{control:{type:"text"}},menuMaxHeight:{control:{type:"text"}},isVisible:{control:{type:"boolean"}},disableSelectedOptionHighlight:{control:{type:"boolean"}}}},OverflowMenuBaseStory=props=>(0,jsx_runtime.jsx)(OverflowMenuBaseTemplate,{...props});OverflowMenuBaseStory.displayName="OverflowMenuBaseStory";const OverflowMenuBase={render:OverflowMenuBaseStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { MenuItem, OverflowMenu } from '@admiral-ds/react-ui';\nimport type { OverflowMenuProps, RenderOptionProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items: Array<any> = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: 'Option two',\n  },\n  {\n    id: '3',\n    display: 'Option three',\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n  {\n    id: '5',\n    display: 'Option five',\n  },\n  {\n    id: '6',\n    display: 'Option six',\n  },\n  {\n    id: '7',\n    display: 'Option seven',\n  },\n];\n\nexport const OverflowMenuBaseTemplate = ({\n  themeBorderKind,\n  ...props\n}: OverflowMenuProps & { themeBorderKind?: BorderRadiusType }) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <OverflowMenu\n        {...props}\n        items={model}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        onVisibilityChange={handleVisibilityChange}\n        aria-label=\"Overflow Menu component\"\n        data-dropdown-container-id=\"overflow-menu-with-dropdown\"\n        className=\"overflow-menu-class\"\n        dropContainerClassName=\"dropContainerClass\"\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"OverflowMenu. Базовый пример."},OverflowMenuOptionsStory=props=>(0,jsx_runtime.jsx)(OverflowMenuOptionsTemplate,{...props});OverflowMenuOptionsStory.displayName="OverflowMenuOptionsStory";const OverflowMenuOptions={render:OverflowMenuOptionsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { MenuItem, OverflowMenu } from '@admiral-ds/react-ui';\nimport type { RenderOptionProps, OverflowMenuProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 8px;\n`;\n\nconst DisplayBlock = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items: Array<any> = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: (\n      <div style={{ display: 'flex', width: '115px', justifyContent: 'space-between', alignItems: 'center' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n  },\n  {\n    id: '3',\n    display: 'Option three',\n    disabled: true,\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n];\n\nexport const OverflowMenuOptionsTemplate = (props: OverflowMenuProps) => {\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n\n  return (\n    <DisplayBlock>\n      <OverflowMenu\n        {...props}\n        items={model}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        onVisibilityChange={handleVisibilityChange}\n        aria-label=\"Overflow Menu component\"\n      />\n      <Separator />\n      <OverflowMenu\n        {...props}\n        items={model}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        onVisibilityChange={handleVisibilityChange}\n        aria-label=\"Overflow Menu component\"\n        disabled\n      />\n    </DisplayBlock>\n  );\n};\n"}}},name:"OverflowMenu. Задизейбленные и кастомизированные опции."},OverflowMenuSizesOrientationStory=props=>(0,jsx_runtime.jsx)(OverflowMenuSizesOrientationTemplate,{...props});OverflowMenuSizesOrientationStory.displayName="OverflowMenuSizesOrientationStory";const OverflowMenuSizesOrientation={render:OverflowMenuSizesOrientationStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled from 'styled-components';\n\nimport { MenuItem, OverflowMenu } from '@admiral-ds/react-ui';\nimport type { OverflowMenuProps, RenderOptionProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 8px;\n`;\n\nconst DisplayBlock = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items: Array<any> = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: (\n      <div style={{ display: 'flex', width: '115px', justifyContent: 'space-between', alignItems: 'center' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n  },\n  {\n    id: '3',\n    display: 'Option three',\n    disabled: true,\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n];\n\nexport const OverflowMenuSizesOrientationTemplate = (props: OverflowMenuProps) => {\n  const dimensionL = 'l';\n  const dimensionM = 'm';\n  const dimensionS = 's';\n  const modelL = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={dimensionL} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelM = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={dimensionM} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.id === '1',\n    }));\n  }, []);\n  const modelS = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension={dimensionS} {...options} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n\n  return (\n    <>\n      <DisplayBlock>\n        <OverflowMenu\n          {...props}\n          items={modelL}\n          selected={selected}\n          dimension={dimensionL}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component L\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelM}\n          dimension={dimensionM}\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component M\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelS}\n          dimension={dimensionS}\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component S\"\n        />\n      </DisplayBlock>\n      <Separator />\n      <DisplayBlock>\n        <OverflowMenu\n          {...props}\n          alignSelf=\"flex-start\"\n          items={modelL}\n          dimension={dimensionL}\n          isVertical\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component vertical L\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelM}\n          dimension={dimensionM}\n          isVertical\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component vertical M\"\n        />\n        <Separator />\n        <OverflowMenu\n          {...props}\n          items={modelS}\n          dimension={dimensionS}\n          isVertical\n          selected={selected}\n          onSelectItem={(id) => {\n            logSelectedId(id);\n            setSelected(id);\n          }}\n          onVisibilityChange={handleVisibilityChange}\n          aria-label=\"Overflow Menu component vertical S\"\n        />\n      </DisplayBlock>\n    </>\n  );\n};\n"}}},name:"OverflowMenu. Размеры и ориентация."};OverflowMenuBase.parameters={...OverflowMenuBase.parameters,docs:{...OverflowMenuBase.parameters?.docs,source:{originalSource:"{\n  render: OverflowMenuBaseStory,\n  parameters: {\n    docs: {\n      source: {\n        code: OverflowMenuBaseRaw\n      }\n    }\n  },\n  name: 'OverflowMenu. Базовый пример.'\n}",...OverflowMenuBase.parameters?.docs?.source}}},OverflowMenuOptions.parameters={...OverflowMenuOptions.parameters,docs:{...OverflowMenuOptions.parameters?.docs,source:{originalSource:"{\n  render: OverflowMenuOptionsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: OverflowMenuOptionsRaw\n      }\n    }\n  },\n  name: 'OverflowMenu. Задизейбленные и кастомизированные опции.'\n}",...OverflowMenuOptions.parameters?.docs?.source}}},OverflowMenuSizesOrientation.parameters={...OverflowMenuSizesOrientation.parameters,docs:{...OverflowMenuSizesOrientation.parameters?.docs,source:{originalSource:"{\n  render: OverflowMenuSizesOrientationStory,\n  parameters: {\n    docs: {\n      source: {\n        code: OverflowMenuSizesOrientationRaw\n      }\n    }\n  },\n  name: 'OverflowMenu. Размеры и ориентация.'\n}",...OverflowMenuSizesOrientation.parameters?.docs?.source}}};const __namedExportsOrder=["OverflowMenuBase","OverflowMenuOptions","OverflowMenuSizesOrientation"]},"./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>SvgCloseOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgCloseOutline=function SvgCloseOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M6.41 5.49a.65.65 0 1 0-.92.92L11.08 12l-5.49 5.49a.65.65 0 0 0 .92.92L12 12.92l5.49 5.49a.65.65 0 0 0 .92-.92L12.92 12l5.59-5.59a.65.65 0 0 0-.92-.92L12 11.08z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/MoreHorizontalOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>SvgMoreHorizontalOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgMoreHorizontalOutline=function SvgMoreHorizontalOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M5 10a2 2 0 1 1 0 4 2 2 0 0 1 0-4m14 0a2 2 0 1 1 0 4 2 2 0 0 1 0-4m-5 2a2 2 0 1 0-4 0 2 2 0 0 0 4 0"})))};__webpack_require__.p},"./.storybook/createBorderRadiusSwapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>createBorderRadiusSwapper});var _admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/themes/light/index.ts");function createBorderRadiusSwapper(borderRadiusKind){return function swapBorder(theme){return theme?(theme.shape.borderRadiusKind=borderRadiusKind||theme.shape.borderRadiusKind,theme):(_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.R.shape.borderRadiusKind=borderRadiusKind||_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.R.shape.borderRadiusKind,_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.R)}}},"./src/components/IconPlacement/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>IconPlacement,a:()=>CloseIconPlacementButton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/borderRadius.ts"),_admiral_ds_icons_build_service_CloseOutline_svg__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const IconSizeL=24,IconSizeM=20,IconSizeS=16,HighlighterOffsetBig=6,HighlighterOffsetSmall=4;function getIconSize(dimension){switch(dimension){case"lSmall":case"lBig":default:return IconSizeL;case"mSmall":case"mBig":return IconSizeM;case"s":return IconSizeS}}function getHighlighterOffset(dimension){switch(dimension){case"lBig":case"mBig":default:return HighlighterOffsetBig;case"lSmall":case"mSmall":case"s":return HighlighterOffsetSmall}}function getHighlighterSize(dimension){return getIconSize(dimension)+2*getHighlighterOffset(dimension)}const IconColor=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.gV)(["& *[fill^='#']{fill:",";}"],(p=>{switch(p.$iconColor){case"primary":return p.theme.color["Primary/Primary 60 Main"];case"secondary":return p.theme.color["Neutral/Neutral 50"];default:return p.$iconColor}})),IconPlacementContent=styled_components__WEBPACK_IMPORTED_MODULE_3__.cp.div.withConfig({displayName:"IconPlacement__IconPlacementContent",componentId:"sc-144koov-0"})(["position:absolute;top:0;left:0;height:100%;"," & > svg{height:","px;width:","px;}"],IconColor,(p=>getIconSize(p.$dimension)),(p=>getIconSize(p.$dimension))),ActivityHighlighter=styled_components__WEBPACK_IMPORTED_MODULE_3__.cp.div.withConfig({displayName:"IconPlacement__ActivityHighlighter",componentId:"sc-144koov-1"})(["width:","px;height:","px;border-radius:50%;background-color:transparent;pointer-events:none;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);"],(p=>getHighlighterSize(p.$dimension)),(p=>getHighlighterSize(p.$dimension))),IconPlacementButton=styled_components__WEBPACK_IMPORTED_MODULE_3__.cp.button.withConfig({displayName:"IconPlacement__IconPlacementButton",componentId:"sc-144koov-2"})(["position:relative;padding:0;margin:","px;box-sizing:border-box;border:none;background-color:transparent;appearance:none;flex:0 0 auto;height:","px;width:","px;border-radius:",";overflow:visible;cursor:pointer;> *{pointer-events:none;}&:disabled{cursor:default;pointer-events:none;& *[fill^='#']{fill:",";}}&:focus-visible{outline-offset:2px;outline:"," solid 2px;}&:focus{> ","{background-color:",";}}&:hover{> ","{background-color:",";}}&:active{> ","{background-color:",";}}&:focus-visible{> ","{background-color:transparent;}}"],(p=>getHighlighterOffset(p.$dimension)),(p=>getIconSize(p.$dimension)),(p=>getIconSize(p.$dimension)),(p=>(0,_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_4__.KY)(p.theme.shape)),(({theme})=>theme.color["Neutral/Neutral 30"]),(p=>p.theme.color["Primary/Primary 60 Main"]),ActivityHighlighter,(p=>p.$highlightFocus?p.theme.color["Opacity/Focus"]:"transparent"),ActivityHighlighter,(({theme})=>theme.color["Opacity/Hover"]),ActivityHighlighter,(({theme})=>theme.color["Opacity/Press"]),ActivityHighlighter),IconPlacement=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({type="button",dimension="lBig",disabled=!1,highlightFocus=!0,appearance,children,...props},ref)=>{const iconColor="object"==typeof appearance?appearance.iconColor?appearance.iconColor:"secondary":appearance;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(IconPlacementButton,{ref,type,$dimension:dimension,disabled,$highlightFocus:highlightFocus,...props,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ActivityHighlighter,{$dimension:dimension,"aria-hidden":!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(IconPlacementContent,{$dimension:dimension,$iconColor:iconColor,"aria-hidden":!0,children})]})})),CloseIconPlacementButton=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({className,...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(IconPlacement,{ref,className:`close-button ${className||""}`,...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_admiral_ds_icons_build_service_CloseOutline_svg__WEBPACK_IMPORTED_MODULE_1__._,{"aria-hidden":!0})})));try{IconPlacement.displayName="IconPlacement",IconPlacement.__docgenInfo={description:"",displayName:"IconPlacement",props:{dimension:{defaultValue:{value:"lBig"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"lBig"'},{value:'"lSmall"'},{value:'"mBig"'},{value:'"mSmall"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение кнопки",name:"disabled",required:!1,type:{name:"boolean"}},highlightFocus:{defaultValue:{value:"true"},description:"Позволяет управлять подсветкой в состоянии фокуса, по умолчанию состояние фокуса подсвечивается",name:"highlightFocus",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"IconPlacementAppearance | { iconColor: string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/IconPlacement/index.tsx#IconPlacement"]={docgenInfo:IconPlacement.__docgenInfo,name:"IconPlacement",path:"src/components/IconPlacement/index.tsx#IconPlacement"})}catch(__react_docgen_typescript_loader_error){}try{CloseIconPlacementButton.displayName="CloseIconPlacementButton",CloseIconPlacementButton.__docgenInfo={description:"",displayName:"CloseIconPlacementButton",props:{dimension:{defaultValue:{value:"lBig"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"lBig"'},{value:'"lSmall"'},{value:'"mBig"'},{value:'"mSmall"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение кнопки",name:"disabled",required:!1,type:{name:"boolean"}},highlightFocus:{defaultValue:{value:"true"},description:"Позволяет управлять подсветкой в состоянии фокуса, по умолчанию состояние фокуса подсвечивается",name:"highlightFocus",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"IconPlacementAppearance | { iconColor: string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/IconPlacement/index.tsx#CloseIconPlacementButton"]={docgenInfo:CloseIconPlacementButton.__docgenInfo,name:"CloseIconPlacementButton",path:"src/components/IconPlacement/index.tsx#CloseIconPlacementButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/OverflowMenu/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{g:()=>OverflowMenu});var _path,react=__webpack_require__("./node_modules/react/index.js"),MoreHorizontalOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/MoreHorizontalOutline.svg");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgMoreVerticalOutline=function SvgMoreVerticalOutline(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react.createElement("path",{fill:"#717681",d:"M10 19a2 2 0 1 1 4 0 2 2 0 0 1-4 0m0-14a2 2 0 1 1 4 0 2 2 0 0 1-4 0m2 5a2 2 0 1 0 0 4 2 2 0 0 0 0-4"})))};__webpack_require__.p;var splitDataAttributes=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),DropMenu=__webpack_require__("./src/components/DropMenu/index.tsx"),IconPlacement=__webpack_require__("./src/components/IconPlacement/index.tsx"),refSetter=__webpack_require__("./src/components/common/utils/refSetter.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const OverflowMenu=react.forwardRef((({dimension="l",disabled=!1,alignSelf="flex-end",isVertical=!1,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,isVisible,onVisibilityChange,onClickOutside,onChange,onOpen,onClose,items,className="",menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,...props},ref)=>{const dropMenuProps=(0,splitDataAttributes.UZ)(props),iconPlacementDimension=dimension=>{switch(dimension){case"l":default:return"lBig";case"m":return"mBig";case"s":return"s"}};return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(DropMenu.c,{dimension,menuWidth,menuMaxHeight,items,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,isVisible,onVisibilityChange,onClickOutside,onChange,onOpen,onClose,disabled,alignSelf,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,...dropMenuProps,renderContentProp:({buttonRef,handleKeyDown,handleClick,menuState,disabled})=>(0,jsx_runtime.jsx)(IconPlacement.M,{...props,ref:(0,refSetter.Y)(ref,buttonRef),dimension:iconPlacementDimension(dimension),disabled,highlightFocus:menuState,onClick:handleClick,"aria-expanded":menuState,"aria-haspopup":menuState,onKeyDown:handleKeyDown,className:className+" overflow-menu-button-with-dropdown",children:isVertical?(0,jsx_runtime.jsx)(SvgMoreVerticalOutline,{}):(0,jsx_runtime.jsx)(MoreHorizontalOutline._,{})})})})}));OverflowMenu.displayName="OverflowMenu";try{OverflowMenu.displayName="OverflowMenu",OverflowMenu.__docgenInfo={description:"",displayName:"OverflowMenu",props:{selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:{value:"l"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:{value:"flex-end"},description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},isVertical:{defaultValue:{value:"false"},description:"Ориентация компонента",name:"isVertical",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Опции выпадающего списка",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/OverflowMenu/index.tsx#OverflowMenu"]={docgenInfo:OverflowMenu.__docgenInfo,name:"OverflowMenu",path:"src/components/OverflowMenu/index.tsx#OverflowMenu"})}catch(__react_docgen_typescript_loader_error){}}}]);