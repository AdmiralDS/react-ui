"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[5684],{"./src/components/T/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>T});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),styled_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_themes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/themes/common/index.ts"),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/skeleton/animation.tsx"),_common_fixedForwardRef__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/fixedForwardRef.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _templateObject(){var data=_tagged_template_literal(["\n  ",";\n  pointer-events: none;\n"]);return _templateObject=function _templateObject(){return data},data}function _templateObject1(){var data=_tagged_template_literal(["\n  color: ",";\n  ",";\n  ","\n  ","\n"]);return _templateObject1=function _templateObject(){return data},data}var skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_1__.AH)(_templateObject(),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_2__.h),Tspan=styled_components__WEBPACK_IMPORTED_MODULE_1__.Ay.span(_templateObject1(),function(param){var $color=param.$color,theme=param.theme,$skeleton=param.$skeleton,cssVar="--admiral-color-".concat(null==$color?void 0:$color.replace("/","_").replaceAll(" ",""));return $skeleton?"transparent":$color?theme.color[$color]?"var(".concat(cssVar,", ").concat(theme.color[$color],")"):$color:"var(--admiral-color-Neutral_Neutral90, ".concat(theme.color[_src_components_themes__WEBPACK_IMPORTED_MODULE_3__.jn],")")},function(p){return p.theme.typography[p.$font]},function(p){return p.$cssMixin?p.$cssMixin:""},function(p){return p.$skeleton&&skeletonMixin}),T=(0,_common_fixedForwardRef__WEBPACK_IMPORTED_MODULE_4__.B)(function(_param,ref){var font=_param.font,color=_param.color,cssMixin=_param.cssMixin,skeleton=_param.skeleton,props=_object_without_properties(_param,["font","color","cssMixin","skeleton"]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tspan,_object_spread_props(_object_spread({ref:ref},props),{$font:font,$color:color,$cssMixin:cssMixin,$skeleton:skeleton}))});T.displayName="T";try{T.displayName="T",T.__docgenInfo={description:"",displayName:"T",props:{font:{defaultValue:null,description:"Имя шрифта из списка дизайн системы",name:"font",required:!0,type:{name:"enum",value:[{value:'"Main/XXL"'},{value:'"Main/XL"'},{value:'"Main/L"'},{value:'"Main/M"'},{value:'"Main/S"'},{value:'"Main/XS-bold"'},{value:'"Main/XS"'},{value:'"Additional/L-bold"'},{value:'"Additional/L"'},{value:'"Additional/M"'},{value:'"Additional/S"'},{value:'"Additional/S-bold"'},{value:'"Additional/XS"'},{value:'"Button/M"'},{value:'"Button/S"'},{value:'"Caption/XS"'},{value:'"Header/HL1"'},{value:'"Header/HL2"'},{value:'"Header/HL3"'},{value:'"Header/H1"'},{value:'"Header/H2"'},{value:'"Header/H3"'},{value:'"Header/H4"'},{value:'"Header/H5"'},{value:'"Header/H6"'},{value:'"Subtitle/Subtitle 1"'},{value:'"Subtitle/Subtitle 2"'},{value:'"Subtitle/Subtitle 3"'},{value:'"Body/Body 1 Long"'},{value:'"Body/Body 1 Short"'},{value:'"Body/Body 2 Long"'},{value:'"Body/Body 2 Short"'},{value:'"Button/Button 1"'},{value:'"Button/Button 2"'},{value:'"Caption/Caption 1"'},{value:'"Caption/Caption 2"'}]}},color:{defaultValue:null,description:"Имя цвета шрифта из палитры темы *",name:"color",required:!1,type:{name:"enum",value:[{value:'"Neutral/Neutral 00"'},{value:'"Neutral/Neutral 05"'},{value:'"Neutral/Neutral 10"'},{value:'"Neutral/Neutral 20"'},{value:'"Neutral/Neutral 30"'},{value:'"Neutral/Neutral 40"'},{value:'"Neutral/Neutral 50"'},{value:'"Neutral/Neutral 60"'},{value:'"Neutral/Neutral 70"'},{value:'"Neutral/Neutral 80"'},{value:'"Neutral/Neutral 90"'},{value:'"Primary/Primary 10"'},{value:'"Primary/Primary 20"'},{value:'"Primary/Primary 30"'},{value:'"Primary/Primary 40"'},{value:'"Primary/Primary 50"'},{value:'"Primary/Primary 60 Main"'},{value:'"Primary/Primary 70"'},{value:'"Primary/Primary 80"'},{value:'"Special/Static White"'},{value:'"Special/Elevated BG"'},{value:'"Special/Dark Static Neutral 00"'},{value:'"Special/Dark Static Neutral 05"'},{value:'"Special/Dark Static Neutral 10"'},{value:'"Special/Dark Static Neutral 20"'},{value:'"Special/Dark Static Neutral 30"'},{value:'"Special/Dark Static Neutral 50"'},{value:'"Special/Dark Static Neutral 70"'},{value:'"Special/Dark Static Neutral 80"'},{value:'"Special/Dark Static Neutral 90"'},{value:'"Special/Dark Static Primary 60"'},{value:'"Special/Dark Static Primary 70"'},{value:'"Special/Dark Static Primary 80"'},{value:'"Special/Dark Static Error 60"'},{value:'"Special/Dark Static Success 50"'},{value:'"Opacity/Hover"'},{value:'"Opacity/Focus"'},{value:'"Opacity/Press"'},{value:'"Opacity/Modal"'},{value:'"Opacity/Dark Static Hover"'},{value:'"Opacity/Dark Static Focus"'},{value:'"Opacity/Dark Static Press"'},{value:'"Opacity/Neutral 4"'},{value:'"Opacity/Neutral 8"'},{value:'"Opacity/Neutral 12"'},{value:'"Opacity/Neutral 16"'},{value:'"Error/Error 10"'},{value:'"Error/Error 20"'},{value:'"Error/Error 30"'},{value:'"Error/Error 40"'},{value:'"Error/Error 50"'},{value:'"Error/Error 60 Main"'},{value:'"Error/Error 70"'},{value:'"Error/Error 80"'},{value:'"Success/Success 10"'},{value:'"Success/Success 20"'},{value:'"Success/Success 30"'},{value:'"Success/Success 40"'},{value:'"Success/Success 50 Main"'},{value:'"Success/Success 60"'},{value:'"Success/Success 70"'},{value:'"Warning/Warning 10"'},{value:'"Warning/Warning 20"'},{value:'"Warning/Warning 30"'},{value:'"Warning/Warning 40"'},{value:'"Warning/Warning 50 Main"'},{value:'"Warning/Warning 60"'},{value:'"Warning/Warning 70"'},{value:'"Attention/Attention 10"'},{value:'"Attention/Attention 20"'},{value:'"Attention/Attention 30"'},{value:'"Attention/Attention 40"'},{value:'"Attention/Attention 50 Main"'},{value:'"Attention/Attention 60"'},{value:'"Attention/Attention 70"'},{value:'"Purple/Purple 10"'},{value:'"Purple/Purple 20"'},{value:'"Purple/Purple 30"'},{value:'"Purple/Purple 40"'},{value:'"Purple/Purple 50"'},{value:'"Purple/Purple 60 Main"'},{value:'"Purple/Purple 70"'},{value:'"Purple/Purple 80"'},{value:'"Magenta/Magenta 10"'},{value:'"Magenta/Magenta 20"'},{value:'"Magenta/Magenta 30"'},{value:'"Magenta/Magenta 40"'},{value:'"Magenta/Magenta 50"'},{value:'"Magenta/Magenta 60 Main"'},{value:'"Magenta/Magenta 70"'},{value:'"Magenta/Magenta 80"'},{value:'"Cyan/Cyan 10"'},{value:'"Cyan/Cyan 20"'},{value:'"Cyan/Cyan 30"'},{value:'"Cyan/Cyan 40"'},{value:'"Cyan/Cyan 50"'},{value:'"Cyan/Cyan 60 Main"'},{value:'"Cyan/Cyan 70"'},{value:'"Cyan/Cyan 80"'},{value:'"Teal/Teal 10"'},{value:'"Teal/Teal 20"'},{value:'"Teal/Teal 30"'},{value:'"Teal/Teal 40"'},{value:'"Teal/Teal 50"'},{value:'"Teal/Teal 60 Main"'},{value:'"Teal/Teal 70"'},{value:'"Teal/Teal 80"'}]}},cssMixin:{defaultValue:null,description:"Позволяет добавлять  миксин созданный с помощью styled css",name:"cssMixin",required:!1,type:{name:"RuleSet<object>"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/T/index.tsx#T"]={docgenInfo:T.__docgenInfo,name:"T",path:"src/components/T/index.tsx#T"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/fixedForwardRef.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>fixedForwardRef});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function fixedForwardRef(render){return(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(render)}},"./src/components/common/utils/refSetter.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>refSetter});function refSetter(){for(var _len=arguments.length,refs=Array(_len),_key=0;_key<_len;_key++)refs[_key]=arguments[_key];return function(ref){refs.forEach(function(someRef){someRef&&("function"==typeof someRef?someRef(ref):someRef.current=ref)})}}},"./src/components/input/NumberInput/stories/NumberInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledExample:()=>ControlledExample,CustomExample:()=>CustomExample,DisabledExample:()=>DisabledExample,MinMaxExample:()=>MinMaxExample,Playground:()=>Playground,SpacesExample:()=>SpacesExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>NumberInput_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),NumberInput=__webpack_require__("./src/components/input/NumberInput/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var NumberInputPlaygroundTemplate=function(_param){var themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=_object_without_properties(_param,["themeBorderKind","CSSCustomProps"]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsx)(NumberInput.Q7,_object_spread({prefix:"От",suffix:"₽",placeholder:"От 0 ₽",defaultValue:"2,00",onChange:function(event){console.log(event.target.value)}},props))})};try{NumberInputPlaygroundTemplate.displayName="NumberInputPlaygroundTemplate",NumberInputPlaygroundTemplate.__docgenInfo={description:"",displayName:"NumberInputPlaygroundTemplate",props:{precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},thousand:{defaultValue:null,description:"разделитель между тысячами. Если значение не задано,\nто оно определяется согласно локали, в русской локали thousand - это пробел",name:"thousand",required:!1,type:{name:"string"}},decimal:{defaultValue:null,description:"разделитель между целым и десятичным. Если значение не задано,\nто оно определяется согласно локали, в русской локали decimal - это запятая",name:"decimal",required:!1,type:{name:"string"}},fillEmptyDecimals:{defaultValue:null,description:"Данный флаг управляет дозаполнением десятичной части числа нулями при потере инпутом фокуса, либо при нажатии кнопок +/-\nПо умолчанию fillEmptyDecimals установлен в true\n\nПодробнее: если строка должна быть отформатирована как десятичное число (т.е. precision > 0 и в строке есть decimal)\nи fillEmptyDecimals установлен в true, то произойдет проверка того, сколько знаков в числе после разделителя decimal\nи если таких знаков меньше, чем precision, недостающее количество будет заполнено нулями.\nНапример, при precision={3} строка '3.9' превратится в '3.900'",name:"fillEmptyDecimals",required:!1,type:{name:"boolean"}},step:{defaultValue:null,description:"Шаг инпута. Если шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},minValue:{defaultValue:null,description:"Минимальное значение. При minValue >= 0, ввод знака минус блокируется",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение",name:"maxValue",required:!1,type:{name:"number"}},displayPlusMinusIcons:{defaultValue:null,description:"Отображать иконки плюса и минуса",name:"displayPlusMinusIcons",required:!1,type:{name:"boolean"}},align:{defaultValue:null,description:"Выравнивание контента. По умолчанию выравнивание происходит по левому краю",name:"align",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},createInputHandler:{defaultValue:null,description:"Функция высшего порядка для получения функции handleInput",name:"createInputHandler",required:!1,type:{name:"((params: NumberInputHandlerCreatorParams) => CustomInputHandler)"}},hideSpaceAfterPrefix:{defaultValue:null,description:"Скрыть пробел после префикса",name:"hideSpaceAfterPrefix",required:!1,type:{name:"boolean"}},hideSpaceBeforeSuffix:{defaultValue:null,description:"Скрыть пробел перед суффиксом",name:"hideSpaceBeforeSuffix",required:!1,type:{name:"boolean"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/NumberInput/stories/NumberInputPlayground.template.tsx#NumberInputPlaygroundTemplate"]={docgenInfo:NumberInputPlaygroundTemplate.__docgenInfo,name:"NumberInputPlaygroundTemplate",path:"src/components/input/NumberInput/stories/NumberInputPlayground.template.tsx#NumberInputPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}function NumberInputDisabled_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function NumberInputDisabled_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){NumberInputDisabled_template_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function NumberInputDisabled_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=NumberInputDisabled_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function NumberInputDisabled_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var NumberInputDisabledTemplate=function(_param){var themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=NumberInputDisabled_template_object_without_properties(_param,["themeBorderKind","CSSCustomProps"]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsx)(NumberInput.Q7,_object_spread_props(NumberInputDisabled_template_object_spread({},props),{disabled:!0,placeholder:"0 ₽"}))})};try{NumberInputDisabledTemplate.displayName="NumberInputDisabledTemplate",NumberInputDisabledTemplate.__docgenInfo={description:"",displayName:"NumberInputDisabledTemplate",props:{precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},thousand:{defaultValue:null,description:"разделитель между тысячами. Если значение не задано,\nто оно определяется согласно локали, в русской локали thousand - это пробел",name:"thousand",required:!1,type:{name:"string"}},decimal:{defaultValue:null,description:"разделитель между целым и десятичным. Если значение не задано,\nто оно определяется согласно локали, в русской локали decimal - это запятая",name:"decimal",required:!1,type:{name:"string"}},fillEmptyDecimals:{defaultValue:null,description:"Данный флаг управляет дозаполнением десятичной части числа нулями при потере инпутом фокуса, либо при нажатии кнопок +/-\nПо умолчанию fillEmptyDecimals установлен в true\n\nПодробнее: если строка должна быть отформатирована как десятичное число (т.е. precision > 0 и в строке есть decimal)\nи fillEmptyDecimals установлен в true, то произойдет проверка того, сколько знаков в числе после разделителя decimal\nи если таких знаков меньше, чем precision, недостающее количество будет заполнено нулями.\nНапример, при precision={3} строка '3.9' превратится в '3.900'",name:"fillEmptyDecimals",required:!1,type:{name:"boolean"}},step:{defaultValue:null,description:"Шаг инпута. Если шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},minValue:{defaultValue:null,description:"Минимальное значение. При minValue >= 0, ввод знака минус блокируется",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение",name:"maxValue",required:!1,type:{name:"number"}},displayPlusMinusIcons:{defaultValue:null,description:"Отображать иконки плюса и минуса",name:"displayPlusMinusIcons",required:!1,type:{name:"boolean"}},align:{defaultValue:null,description:"Выравнивание контента. По умолчанию выравнивание происходит по левому краю",name:"align",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},createInputHandler:{defaultValue:null,description:"Функция высшего порядка для получения функции handleInput",name:"createInputHandler",required:!1,type:{name:"((params: NumberInputHandlerCreatorParams) => CustomInputHandler)"}},hideSpaceAfterPrefix:{defaultValue:null,description:"Скрыть пробел после префикса",name:"hideSpaceAfterPrefix",required:!1,type:{name:"boolean"}},hideSpaceBeforeSuffix:{defaultValue:null,description:"Скрыть пробел перед суффиксом",name:"hideSpaceBeforeSuffix",required:!1,type:{name:"boolean"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/NumberInput/stories/NumberInputDisabled.template.tsx#NumberInputDisabledTemplate"]={docgenInfo:NumberInputDisabledTemplate.__docgenInfo,name:"NumberInputDisabledTemplate",path:"src/components/input/NumberInput/stories/NumberInputDisabled.template.tsx#NumberInputDisabledTemplate"})}catch(__react_docgen_typescript_loader_error){}var utils=__webpack_require__("./src/components/input/NumberInput/utils.ts"),T=__webpack_require__("./src/components/T/index.tsx");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function NumberInputMinMax_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function NumberInputMinMax_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){NumberInputMinMax_template_define_property(target,key,source[key])})}return target}function NumberInputMinMax_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function NumberInputMinMax_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):NumberInputMinMax_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function NumberInputMinMax_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=NumberInputMinMax_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function NumberInputMinMax_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}function _templateObject(){var data=_tagged_template_literal(["\n  height: 8px;\n"]);return _templateObject=function _templateObject(){return data},data}function convertStrToNum(str,precision,decimal){return Number((0,utils.Zv)(str,precision,decimal).replace(decimal,"."))}var Separator=styled_components_browser_esm.Ay.div(_templateObject()),NumberInputMinMaxTemplate=function(_param){var _param_minValue=_param.minValue,minValue=void 0===_param_minValue?-1e3:_param_minValue,_param_maxValue=_param.maxValue,maxValue=void 0===_param_maxValue?2e3:_param_maxValue,_param_precision=_param.precision,precision=void 0===_param_precision?2:_param_precision,_param_decimal=_param.decimal,decimal=void 0===_param_decimal?",":_param_decimal,themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=NumberInputMinMax_template_object_without_properties(_param,["minValue","maxValue","precision","decimal","themeBorderKind","CSSCustomProps"]),_useState=_sliced_to_array((0,react.useState)(void 0),2),status=_useState[0],setStatus=_useState[1];return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsxs)(T.T,{font:"Body/Body 1 Long",as:"div",style:{marginBottom:"40px"},children:["Параметры максимальное (maxValue) и минимальное (minValue) значение применяются для того, чтобы обозначить диапазон допустимых чисел для ввода. При достижении лимита, кнопки “+” или “-” принимают состояние Disabled.",(0,jsx_runtime.jsx)(Separator,{}),"Если вручную введенное значение больше или меньше указанного диапазона, то автокоррекции значения при выводе фокуса из поля не происходит (в предыдущей реализации, от которой библиотека отказалась, значение автоматически корректировалось, принимая наиболее близкое значение из допустимого диапазона). Предполагается, что необходимая валидация и корректировка значения будут происходить на стороне пользователя.",(0,jsx_runtime.jsx)(Separator,{}),"Также, если minValue ",">","= 0, то ввод знака минус блокируется."]}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",as:"div",style:{marginBottom:"24px"},children:"В данном примере, если введенное значение выходит за границы диапазона minValue-maxValue, компонент переходит в состояние ошибки."}),(0,jsx_runtime.jsx)(NumberInput.Q7,NumberInputMinMax_template_object_spread_props(NumberInputMinMax_template_object_spread({},props),{onChange:function(event){var numValue=convertStrToNum(event.target.value,precision,decimal);event.target.value&&(numValue<minValue||numValue>maxValue)?setStatus("error"):setStatus(void 0)},minValue:minValue,maxValue:maxValue,status:status,precision:precision,decimal:decimal,placeholder:"Введите число"}))]})};try{NumberInputMinMaxTemplate.displayName="NumberInputMinMaxTemplate",NumberInputMinMaxTemplate.__docgenInfo={description:"",displayName:"NumberInputMinMaxTemplate",props:{precision:{defaultValue:{value:"2"},description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},thousand:{defaultValue:null,description:"разделитель между тысячами. Если значение не задано,\nто оно определяется согласно локали, в русской локали thousand - это пробел",name:"thousand",required:!1,type:{name:"string"}},decimal:{defaultValue:{value:","},description:"разделитель между целым и десятичным. Если значение не задано,\nто оно определяется согласно локали, в русской локали decimal - это запятая",name:"decimal",required:!1,type:{name:"string"}},fillEmptyDecimals:{defaultValue:null,description:"Данный флаг управляет дозаполнением десятичной части числа нулями при потере инпутом фокуса, либо при нажатии кнопок +/-\nПо умолчанию fillEmptyDecimals установлен в true\n\nПодробнее: если строка должна быть отформатирована как десятичное число (т.е. precision > 0 и в строке есть decimal)\nи fillEmptyDecimals установлен в true, то произойдет проверка того, сколько знаков в числе после разделителя decimal\nи если таких знаков меньше, чем precision, недостающее количество будет заполнено нулями.\nНапример, при precision={3} строка '3.9' превратится в '3.900'",name:"fillEmptyDecimals",required:!1,type:{name:"boolean"}},step:{defaultValue:null,description:"Шаг инпута. Если шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},minValue:{defaultValue:{value:"-1000"},description:"Минимальное значение. При minValue >= 0, ввод знака минус блокируется",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:{value:"2000"},description:"Максимальное значение",name:"maxValue",required:!1,type:{name:"number"}},displayPlusMinusIcons:{defaultValue:null,description:"Отображать иконки плюса и минуса",name:"displayPlusMinusIcons",required:!1,type:{name:"boolean"}},align:{defaultValue:null,description:"Выравнивание контента. По умолчанию выравнивание происходит по левому краю",name:"align",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},createInputHandler:{defaultValue:null,description:"Функция высшего порядка для получения функции handleInput",name:"createInputHandler",required:!1,type:{name:"((params: NumberInputHandlerCreatorParams) => CustomInputHandler)"}},hideSpaceAfterPrefix:{defaultValue:null,description:"Скрыть пробел после префикса",name:"hideSpaceAfterPrefix",required:!1,type:{name:"boolean"}},hideSpaceBeforeSuffix:{defaultValue:null,description:"Скрыть пробел перед суффиксом",name:"hideSpaceBeforeSuffix",required:!1,type:{name:"boolean"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/NumberInput/stories/NumberInputMinMax.template.tsx#NumberInputMinMaxTemplate"]={docgenInfo:NumberInputMinMaxTemplate.__docgenInfo,name:"NumberInputMinMaxTemplate",path:"src/components/input/NumberInput/stories/NumberInputMinMax.template.tsx#NumberInputMinMaxTemplate"})}catch(__react_docgen_typescript_loader_error){}function NumberInputCustomised_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function NumberInputCustomised_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){NumberInputCustomised_template_define_property(target,key,source[key])})}return target}function NumberInputCustomised_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function NumberInputCustomised_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):NumberInputCustomised_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function NumberInputCustomised_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=NumberInputCustomised_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function NumberInputCustomised_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var NumberInputCustomisedTemplate=function(_param){var themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=NumberInputCustomised_template_object_without_properties(_param,["themeBorderKind","CSSCustomProps"]);return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",style:{marginBottom:"24px"},children:"Пользователь может указать с помощью параметра precision (по умолчанию равен 2), с какой точностью компонент должен выводить число (сколько разрядов должно быть в дробной части числа). В этом случае при потере фокуса, если число содержит не все разряды в дробной части или дробная часть отсутствует, должна произойти корректировка значения и недостающее количество разрядов должно быть заполнено нулями."}),(0,jsx_runtime.jsx)(NumberInput.Q7,NumberInputCustomised_template_object_spread_props(NumberInputCustomised_template_object_spread({},props),{onChange:function(event){console.log(event.target.value)},suffix:"$",thousand:",",decimal:".",precision:1,placeholder:"0.0 $"}))]})};try{NumberInputCustomisedTemplate.displayName="NumberInputCustomisedTemplate",NumberInputCustomisedTemplate.__docgenInfo={description:"",displayName:"NumberInputCustomisedTemplate",props:{precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},thousand:{defaultValue:null,description:"разделитель между тысячами. Если значение не задано,\nто оно определяется согласно локали, в русской локали thousand - это пробел",name:"thousand",required:!1,type:{name:"string"}},decimal:{defaultValue:null,description:"разделитель между целым и десятичным. Если значение не задано,\nто оно определяется согласно локали, в русской локали decimal - это запятая",name:"decimal",required:!1,type:{name:"string"}},fillEmptyDecimals:{defaultValue:null,description:"Данный флаг управляет дозаполнением десятичной части числа нулями при потере инпутом фокуса, либо при нажатии кнопок +/-\nПо умолчанию fillEmptyDecimals установлен в true\n\nПодробнее: если строка должна быть отформатирована как десятичное число (т.е. precision > 0 и в строке есть decimal)\nи fillEmptyDecimals установлен в true, то произойдет проверка того, сколько знаков в числе после разделителя decimal\nи если таких знаков меньше, чем precision, недостающее количество будет заполнено нулями.\nНапример, при precision={3} строка '3.9' превратится в '3.900'",name:"fillEmptyDecimals",required:!1,type:{name:"boolean"}},step:{defaultValue:null,description:"Шаг инпута. Если шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},minValue:{defaultValue:null,description:"Минимальное значение. При minValue >= 0, ввод знака минус блокируется",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение",name:"maxValue",required:!1,type:{name:"number"}},displayPlusMinusIcons:{defaultValue:null,description:"Отображать иконки плюса и минуса",name:"displayPlusMinusIcons",required:!1,type:{name:"boolean"}},align:{defaultValue:null,description:"Выравнивание контента. По умолчанию выравнивание происходит по левому краю",name:"align",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},createInputHandler:{defaultValue:null,description:"Функция высшего порядка для получения функции handleInput",name:"createInputHandler",required:!1,type:{name:"((params: NumberInputHandlerCreatorParams) => CustomInputHandler)"}},hideSpaceAfterPrefix:{defaultValue:null,description:"Скрыть пробел после префикса",name:"hideSpaceAfterPrefix",required:!1,type:{name:"boolean"}},hideSpaceBeforeSuffix:{defaultValue:null,description:"Скрыть пробел перед суффиксом",name:"hideSpaceBeforeSuffix",required:!1,type:{name:"boolean"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/NumberInput/stories/NumberInputCustomised.template.tsx#NumberInputCustomisedTemplate"]={docgenInfo:NumberInputCustomisedTemplate.__docgenInfo,name:"NumberInputCustomisedTemplate",path:"src/components/input/NumberInput/stories/NumberInputCustomised.template.tsx#NumberInputCustomisedTemplate"})}catch(__react_docgen_typescript_loader_error){}function NumberInputControlled_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function NumberInputControlled_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function NumberInputControlled_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function NumberInputControlled_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function NumberInputControlled_template_sliced_to_array(arr,i){return NumberInputControlled_template_array_with_holes(arr)||NumberInputControlled_template_iterable_to_array_limit(arr,i)||NumberInputControlled_template_unsupported_iterable_to_array(arr,i)||NumberInputControlled_template_non_iterable_rest()}function NumberInputControlled_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function NumberInputControlled_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return NumberInputControlled_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return NumberInputControlled_template_array_like_to_array(o,minLen)}}function NumberInputControlled_template_templateObject(){var data=NumberInputControlled_template_tagged_template_literal(["\n  height: 8px;\n"]);return NumberInputControlled_template_templateObject=function _templateObject(){return data},data}var NumberInputControlled_template_Separator=styled_components_browser_esm.Ay.div(NumberInputControlled_template_templateObject());function declOfNum(n,text_forms){var n1=(n=Math.abs(n)%100)%10;return n>10&&n<20?text_forms[2]:n1>1&&n1<5?text_forms[1]:1==n1?text_forms[0]:text_forms[2]}var NumberInputControlledTemplate=function(){var _useState=NumberInputControlled_template_sliced_to_array((0,react.useState)("50,00"),2),value1=_useState[0],setValue1=_useState[1],_useState1=NumberInputControlled_template_sliced_to_array((0,react.useState)("1"),2),value2=_useState1[0],setValue2=_useState1[1],_useState2=NumberInputControlled_template_sliced_to_array((0,react.useState)("минута"),2),suffix=_useState2[0],setSuffix=_useState2[1];return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(T.T,{font:"Body/Body 1 Long",as:"div",style:{marginBottom:"24px"},children:["В качестве значений параметров value и defaultValue в NumberInput необходимо передавать уже отформатированную строку с разделителями тысяч (суффикс/префикс в value/defaultValue вносить не нужно).",(0,jsx_runtime.jsx)(NumberInputControlled_template_Separator,{}),"Если вы используете контролируемый NumberInput, то в качестве значения value вам досточно указывать event.target.value, где event - это нативное событие инпута, передаваемое к качестве параметра в колбек onChange.",(0,jsx_runtime.jsx)(NumberInputControlled_template_Separator,{}),"Кроме того, библиотека предоставляет утилиту fitToCurrency, которая возвращает строку отформатированную в денежном формате. В качестве параметров данная утилита принимает value - значение, которое надо отформатировать, а также параметры precision, decimal, thousand. Также библиотека предоставляет утилиту clearValue, которая возвращает входную строку, из которой удалены все символы кроме цифр, символа decimal и минуса."]}),(0,jsx_runtime.jsx)(NumberInput.Q7,{value:value1,onChange:function(event){console.log(event.target.value),setValue1(event.target.value)},prefix:"От",suffix:"₽",placeholder:"От 0 ₽",style:{marginBottom:"40px"}}),(0,jsx_runtime.jsx)(NumberInput.Q7,{value:value2,onChange:function(event){console.log(event.target.value),setValue2(event.target.value),setSuffix(declOfNum(Number((0,utils.Zv)(event.target.value,0)),["минута","минуты","минут"]))},suffix:suffix,precision:0,placeholder:"0 минут"})]})};function NumberInputSpaces_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function NumberInputSpaces_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){NumberInputSpaces_template_define_property(target,key,source[key])})}return target}function NumberInputSpaces_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function NumberInputSpaces_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):NumberInputSpaces_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function NumberInputSpaces_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=NumberInputSpaces_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function NumberInputSpaces_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var NumberInputSpacesTemplate=function(_param){var themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=NumberInputSpaces_template_object_without_properties(_param,["themeBorderKind","CSSCustomProps"]);return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",style:{marginBottom:"24px"},children:"Пользователь может с помощью параметров hideSpaceAfterPrefix и hideSpaceBeforeSuffix управлять видимостью пробелов после префикса и перед суффиксом соответственно. По умолчанию после префикса перед значением инпута и перед суффиксом после значения инпута пробелы проставляются."}),(0,jsx_runtime.jsx)(NumberInput.Q7,NumberInputSpaces_template_object_spread_props(NumberInputSpaces_template_object_spread({},props),{onChange:function(event){console.log(event.target.value)},defaultValue:"30",suffix:"%",hideSpaceBeforeSuffix:!0,precision:0,placeholder:"0%"})),(0,jsx_runtime.jsx)(NumberInput.Q7,NumberInputSpaces_template_object_spread_props(NumberInputSpaces_template_object_spread({},props),{onChange:function(event){console.log(event.target.value)},defaultValue:"1",prefix:"№",hideSpaceAfterPrefix:!0,precision:0,placeholder:"№0",style:{marginTop:"40px"}}))]})};try{NumberInputSpacesTemplate.displayName="NumberInputSpacesTemplate",NumberInputSpacesTemplate.__docgenInfo={description:"",displayName:"NumberInputSpacesTemplate",props:{precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},thousand:{defaultValue:null,description:"разделитель между тысячами. Если значение не задано,\nто оно определяется согласно локали, в русской локали thousand - это пробел",name:"thousand",required:!1,type:{name:"string"}},decimal:{defaultValue:null,description:"разделитель между целым и десятичным. Если значение не задано,\nто оно определяется согласно локали, в русской локали decimal - это запятая",name:"decimal",required:!1,type:{name:"string"}},fillEmptyDecimals:{defaultValue:null,description:"Данный флаг управляет дозаполнением десятичной части числа нулями при потере инпутом фокуса, либо при нажатии кнопок +/-\nПо умолчанию fillEmptyDecimals установлен в true\n\nПодробнее: если строка должна быть отформатирована как десятичное число (т.е. precision > 0 и в строке есть decimal)\nи fillEmptyDecimals установлен в true, то произойдет проверка того, сколько знаков в числе после разделителя decimal\nи если таких знаков меньше, чем precision, недостающее количество будет заполнено нулями.\nНапример, при precision={3} строка '3.9' превратится в '3.900'",name:"fillEmptyDecimals",required:!1,type:{name:"boolean"}},step:{defaultValue:null,description:"Шаг инпута. Если шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},minValue:{defaultValue:null,description:"Минимальное значение. При minValue >= 0, ввод знака минус блокируется",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение",name:"maxValue",required:!1,type:{name:"number"}},displayPlusMinusIcons:{defaultValue:null,description:"Отображать иконки плюса и минуса",name:"displayPlusMinusIcons",required:!1,type:{name:"boolean"}},align:{defaultValue:null,description:"Выравнивание контента. По умолчанию выравнивание происходит по левому краю",name:"align",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},createInputHandler:{defaultValue:null,description:"Функция высшего порядка для получения функции handleInput",name:"createInputHandler",required:!1,type:{name:"((params: NumberInputHandlerCreatorParams) => CustomInputHandler)"}},hideSpaceAfterPrefix:{defaultValue:null,description:"Скрыть пробел после префикса",name:"hideSpaceAfterPrefix",required:!1,type:{name:"boolean"}},hideSpaceBeforeSuffix:{defaultValue:null,description:"Скрыть пробел перед суффиксом",name:"hideSpaceBeforeSuffix",required:!1,type:{name:"boolean"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/NumberInput/stories/NumberInputSpaces.template.tsx#NumberInputSpacesTemplate"]={docgenInfo:NumberInputSpacesTemplate.__docgenInfo,name:"NumberInputSpacesTemplate",path:"src/components/input/NumberInput/stories/NumberInputSpaces.template.tsx#NumberInputSpacesTemplate"})}catch(__react_docgen_typescript_loader_error){}function NumberInput_stories_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function NumberInput_stories_array_with_holes(arr){if(Array.isArray(arr))return arr}function NumberInput_stories_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function NumberInput_stories_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function NumberInput_stories_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function NumberInput_stories_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){NumberInput_stories_define_property(target,key,source[key])})}return target}function NumberInput_stories_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function NumberInput_stories_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):NumberInput_stories_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function NumberInput_stories_sliced_to_array(arr,i){return NumberInput_stories_array_with_holes(arr)||NumberInput_stories_iterable_to_array_limit(arr,i)||NumberInput_stories_unsupported_iterable_to_array(arr,i)||NumberInput_stories_non_iterable_rest()}function NumberInput_stories_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function NumberInput_stories_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return NumberInput_stories_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return NumberInput_stories_array_like_to_array(o,minLen)}}function NumberInput_stories_templateObject(){var data=NumberInput_stories_tagged_template_literal(["\n  font-family: 'VTB Group UI';\n  font-size: 16px;\n  line-height: 24px;\n"]);return NumberInput_stories_templateObject=function _templateObject(){return data},data}var Desc=styled_components_browser_esm.Ay.div(NumberInput_stories_templateObject());let NumberInput_stories={title:"Admiral-2.1/Input/NumberInput",component:NumberInput.Q7,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(function(){return(0,jsx_runtime.jsx)(Desc,{children:"Поле ввода с возможностью ввода числовых значений через нажатие с заданным шагом"})},{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A60588"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A60694"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A60723"}]},argTypes:{placeholder:{control:{type:"text"}},thousand:{control:{type:"text"}},prefix:{control:{type:"text"}},suffix:{control:{type:"text"}},decimal:{control:{type:"text"}},precision:{type:"number"},minValue:{type:"number"},maxValue:{type:"number"},step:{type:"number"},displayPlusMinusIcons:{control:{type:"boolean"}},displayClearIcon:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},disableCopying:{control:{type:"boolean"}},showTooltip:{control:{type:"boolean"}},icons:{control:!1},containerRef:{control:!1},handleInput:{control:!1},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},skeleton:{control:{type:"boolean"}}}};var Playground={render:function(props){var CSSCustomProps=NumberInput_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(NumberInputPlaygroundTemplate,NumberInput_stories_object_spread_props(NumberInput_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:"import { NumberInput } from '@admiral-ds/react-ui';\nimport type { BorderRadiusType, NumberInputProps } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const NumberInputPlaygroundTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: NumberInputProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <NumberInput\n        prefix=\"От\"\n        suffix=\"₽\"\n        placeholder=\"От 0 ₽\"\n        defaultValue=\"2,00\"\n        onChange={(event) => {\n          // eslint-disable-next-line no-console\n          console.log(event.target.value);\n        }}\n        {...props}\n      />\n    </ThemeProvider>\n  );\n};\n"}}}},DisabledExample={render:function(props){var CSSCustomProps=NumberInput_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(NumberInputDisabledTemplate,NumberInput_stories_object_spread_props(NumberInput_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:"import { NumberInput } from '@admiral-ds/react-ui';\nimport type { BorderRadiusType, NumberInputProps } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const NumberInputDisabledTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: NumberInputProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <NumberInput {...props} disabled placeholder=\"0 ₽\" />\n    </ThemeProvider>\n  );\n};\n"}}},name:"NumberInput. Задизейбленный."},MinMaxExample={render:function(props){var CSSCustomProps=NumberInput_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(NumberInputMinMaxTemplate,NumberInput_stories_object_spread_props(NumberInput_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:"import { useState } from 'react';\nimport { NumberInput, T, clearValue } from '@admiral-ds/react-ui';\nimport type { BorderRadiusType, NumberInputProps } from '@admiral-ds/react-ui';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nfunction convertStrToNum(str: string, precision: number, decimal: string) {\n  return Number(clearValue(str, precision, decimal).replace(decimal, '.'));\n}\n\nconst Separator = styled.div`\n  height: 8px;\n`;\n\nexport const NumberInputMinMaxTemplate = ({\n  minValue = -1000,\n  maxValue = 2000,\n  precision = 2,\n  decimal = ',',\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: NumberInputProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const [status, setStatus] = useState<NumberInputProps['status'] | undefined>(undefined);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const numValue = convertStrToNum(event.target.value, precision, decimal);\n    if (event.target.value && (numValue < minValue || numValue > maxValue)) {\n      setStatus('error');\n    } else {\n      setStatus(undefined);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <T font=\"Body/Body 1 Long\" as=\"div\" style={{ marginBottom: '40px' }}>\n        Параметры максимальное (maxValue) и минимальное (minValue) значение применяются для того, чтобы обозначить\n        диапазон допустимых чисел для ввода. При достижении лимита, кнопки “+” или “-” принимают состояние Disabled.\n        <Separator />\n        Если вручную введенное значение больше или меньше указанного диапазона, то автокоррекции значения при выводе\n        фокуса из поля не происходит (в предыдущей реализации, от которой библиотека отказалась, значение автоматически\n        корректировалось, принимая наиболее близкое значение из допустимого диапазона). Предполагается, что необходимая\n        валидация и корректировка значения будут происходить на стороне пользователя.\n        <Separator />\n        Также, если minValue {'>'}= 0, то ввод знака минус блокируется.\n      </T>\n      <T font=\"Body/Body 2 Long\" as=\"div\" style={{ marginBottom: '24px' }}>\n        В данном примере, если введенное значение выходит за границы диапазона minValue-maxValue, компонент переходит в\n        состояние ошибки.\n      </T>\n      <NumberInput\n        {...props}\n        onChange={handleChange}\n        minValue={minValue}\n        maxValue={maxValue}\n        status={status}\n        precision={precision}\n        decimal={decimal}\n        placeholder=\"Введите число\"\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"NumberInput. Пример с minValue, maxValue."},CustomExample={render:function(props){var CSSCustomProps=NumberInput_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(NumberInputCustomisedTemplate,NumberInput_stories_object_spread_props(NumberInput_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:'import { NumberInput, T } from \'@admiral-ds/react-ui\';\nimport type { BorderRadiusType, NumberInputProps } from \'@admiral-ds/react-ui\';\nimport { ThemeProvider } from \'styled-components\';\nimport { createBorderRadiusSwapper } from \'../../../../../.storybook/createBorderRadiusSwapper\';\n\nexport const NumberInputCustomisedTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: NumberInputProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <T font="Body/Body 1 Long" as="div" style={{ marginBottom: \'24px\' }}>\n        Пользователь может указать с помощью параметра precision (по умолчанию равен 2), с какой точностью компонент\n        должен выводить число (сколько разрядов должно быть в дробной части числа). В этом случае при потере фокуса,\n        если число содержит не все разряды в дробной части или дробная часть отсутствует, должна произойти корректировка\n        значения и недостающее количество разрядов должно быть заполнено нулями.\n      </T>\n      <NumberInput\n        {...props}\n        onChange={(event) => {\n          // eslint-disable-next-line no-console\n          console.log(event.target.value);\n        }}\n        suffix="$"\n        thousand=","\n        decimal="."\n        precision={1}\n        placeholder="0.0 $"\n      />\n    </ThemeProvider>\n  );\n};\n'}}},name:"NumberInput. Пример изменения настроек (suffix, precision, thousand)."},SpacesExample={render:function(props){var CSSCustomProps=NumberInput_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(NumberInputSpacesTemplate,NumberInput_stories_object_spread_props(NumberInput_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:'import { NumberInput, T } from \'@admiral-ds/react-ui\';\nimport type { BorderRadiusType, NumberInputProps } from \'@admiral-ds/react-ui\';\nimport { ThemeProvider } from \'styled-components\';\nimport { createBorderRadiusSwapper } from \'../../../../../.storybook/createBorderRadiusSwapper\';\n\nexport const NumberInputSpacesTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: NumberInputProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <T font="Body/Body 1 Long" as="div" style={{ marginBottom: \'24px\' }}>\n        Пользователь может с помощью параметров hideSpaceAfterPrefix и hideSpaceBeforeSuffix управлять видимостью\n        пробелов после префикса и перед суффиксом соответственно. По умолчанию после префикса перед значением инпута и\n        перед суффиксом после значения инпута пробелы проставляются.\n      </T>\n      <NumberInput\n        {...props}\n        onChange={(event) => {\n          // eslint-disable-next-line no-console\n          console.log(event.target.value);\n        }}\n        defaultValue="30"\n        suffix="%"\n        hideSpaceBeforeSuffix\n        precision={0}\n        placeholder="0%"\n      />\n      <NumberInput\n        {...props}\n        onChange={(event) => {\n          // eslint-disable-next-line no-console\n          console.log(event.target.value);\n        }}\n        defaultValue="1"\n        prefix="№"\n        hideSpaceAfterPrefix\n        precision={0}\n        placeholder="№0"\n        style={{ marginTop: \'40px\' }}\n      />\n    </ThemeProvider>\n  );\n};\n'}}},name:"NumberInput. Пример скрытия пробелов."},ControlledExample={render:function(){return(0,jsx_runtime.jsx)(NumberInputControlledTemplate,{})},parameters:{docs:{source:{code:"import { useState } from 'react';\nimport { NumberInput, clearValue, T } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 8px;\n`;\n\nfunction declOfNum(n: number, text_forms: Array<string>) {\n  n = Math.abs(n) % 100;\n  const n1 = n % 10;\n  if (n > 10 && n < 20) {\n    return text_forms[2];\n  }\n  if (n1 > 1 && n1 < 5) {\n    return text_forms[1];\n  }\n  if (n1 == 1) {\n    return text_forms[0];\n  }\n  return text_forms[2];\n}\n\nexport const NumberInputControlledTemplate = () => {\n  const [value1, setValue1] = useState<string | undefined>('50,00');\n  const [value2, setValue2] = useState<string | undefined>('1');\n  const [suffix, setSuffix] = useState('минута');\n\n  return (\n    <>\n      <T font=\"Body/Body 1 Long\" as=\"div\" style={{ marginBottom: '24px' }}>\n        В качестве значений параметров value и defaultValue в NumberInput необходимо передавать уже отформатированную\n        строку с разделителями тысяч (суффикс/префикс в value/defaultValue вносить не нужно).\n        <Separator />\n        Если вы используете контролируемый NumberInput, то в качестве значения value вам досточно указывать\n        event.target.value, где event - это нативное событие инпута, передаваемое к качестве параметра в колбек\n        onChange.\n        <Separator />\n        Кроме того, библиотека предоставляет утилиту fitToCurrency, которая возвращает строку отформатированную в\n        денежном формате. В качестве параметров данная утилита принимает value - значение, которое надо отформатировать,\n        а также параметры precision, decimal, thousand. Также библиотека предоставляет утилиту clearValue, которая\n        возвращает входную строку, из которой удалены все символы кроме цифр, символа decimal и минуса.\n      </T>\n      <NumberInput\n        value={value1}\n        onChange={(event) => {\n          // eslint-disable-next-line no-console\n          console.log(event.target.value);\n          setValue1(event.target.value);\n        }}\n        prefix=\"От\"\n        suffix=\"₽\"\n        placeholder=\"От 0 ₽\"\n        style={{ marginBottom: '40px' }}\n      />\n      <NumberInput\n        value={value2}\n        onChange={(event) => {\n          // eslint-disable-next-line no-console\n          console.log(event.target.value);\n          setValue2(event.target.value);\n          setSuffix(declOfNum(Number(clearValue(event.target.value, 0)), ['минута', 'минуты', 'минут']));\n        }}\n        suffix={suffix}\n        precision={0}\n        placeholder=\"0 минут\"\n      />\n    </>\n  );\n};\n"}}},name:"NumberInput. Примеры контролируемого инпута."};Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  render: PlaygroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: NumberInputPlaygroundRaw\n      }\n    }\n  }\n}",...Playground.parameters?.docs?.source}}},DisabledExample.parameters={...DisabledExample.parameters,docs:{...DisabledExample.parameters?.docs,source:{originalSource:"{\n  render: DisabledStory,\n  parameters: {\n    docs: {\n      source: {\n        code: NumberInputDisabledRaw\n      }\n    }\n  },\n  name: 'NumberInput. Задизейбленный.'\n}",...DisabledExample.parameters?.docs?.source}}},MinMaxExample.parameters={...MinMaxExample.parameters,docs:{...MinMaxExample.parameters?.docs,source:{originalSource:"{\n  render: MinMaxStory,\n  parameters: {\n    docs: {\n      source: {\n        code: NumberInputMinMaxRaw\n      }\n    }\n  },\n  name: 'NumberInput. Пример с minValue, maxValue.'\n}",...MinMaxExample.parameters?.docs?.source}}},CustomExample.parameters={...CustomExample.parameters,docs:{...CustomExample.parameters?.docs,source:{originalSource:"{\n  render: CustomStory,\n  parameters: {\n    docs: {\n      source: {\n        code: NumberInputCustomisedRaw\n      }\n    }\n  },\n  name: 'NumberInput. Пример изменения настроек (suffix, precision, thousand).'\n}",...CustomExample.parameters?.docs?.source}}},SpacesExample.parameters={...SpacesExample.parameters,docs:{...SpacesExample.parameters?.docs,source:{originalSource:"{\n  render: SpacesStory,\n  parameters: {\n    docs: {\n      source: {\n        code: NumberInputSpacesRaw\n      }\n    }\n  },\n  name: 'NumberInput. Пример скрытия пробелов.'\n}",...SpacesExample.parameters?.docs?.source}}},ControlledExample.parameters={...ControlledExample.parameters,docs:{...ControlledExample.parameters?.docs,source:{originalSource:"{\n  render: ControlledStory,\n  parameters: {\n    docs: {\n      source: {\n        code: NumberInputControlledRaw\n      }\n    }\n  },\n  name: 'NumberInput. Примеры контролируемого инпута.'\n}",...ControlledExample.parameters?.docs?.source}}};let __namedExportsOrder=["Playground","DisabledExample","MinMaxExample","CustomExample","SpacesExample","ControlledExample"]},"./src/components/themes/borderRadius.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$t:()=>ALL_BORDER_RADIUS_VALUES,VM:()=>mediumGroupBorderRadius,Z3:()=>largeGroupBorderRadius,r2:()=>smallGroupBorderRadius});var ALL_BORDER_RADIUS_VALUES=["Border radius 0","Border radius 2","Border radius 4","Border radius 6","Border radius 8","Border radius 10"];function smallGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"2px";default:return"4px"}}function mediumGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"2px";case"Border radius 4":default:return"4px";case"Border radius 6":return"6px";case"Border radius 8":return"8px";case"Border radius 10":return"10px"}}function largeGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"4px";case"Border radius 4":default:return"8px";case"Border radius 6":return"12px";case"Border radius 8":return"16px";case"Border radius 10":return"20px"}}},"./src/components/themes/common/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gz:()=>DefaultBackgroundColorName,jn:()=>DefaultFontColorName,yL:()=>MainPrimaryColorName});var DefaultFontColorName="Neutral/Neutral 90",DefaultBackgroundColorName="Neutral/Neutral 00",MainPrimaryColorName="Primary/Primary 60 Main"}}]);