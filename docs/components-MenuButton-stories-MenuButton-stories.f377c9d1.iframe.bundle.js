"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[5543],{"./node_modules/@admiral-ds/icons/build/system/StarSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgStarSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgStarSolid=function SvgStarSolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"m12.63 3.31 2.46 4.99 5.51.8c.57.08.8.79.39 1.19L17 14.17l.94 5.48c.1.57-.5 1.01-1.02.74L12 17.81 7.08 20.4c-.51.27-1.11-.17-1.02-.74L7 14.17l-3.98-3.88A.695.695 0 0 1 3.4 9.1l5.51-.8 2.46-4.99c.26-.52 1-.52 1.26 0Z"})))};__webpack_require__.p},"./src/components/MenuButton/stories/MenuButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MenuButtonBase:()=>MenuButtonBase,MenuButtonIcon:()=>MenuButtonIcon,MenuButtonOptions:()=>MenuButtonOptions,MenuButtonVariants:()=>MenuButtonVariants,MenuButtonWithPanel:()=>MenuButtonWithPanel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MenuButton_stories});var react=__webpack_require__("./node_modules/react/index.js"),MenuButton=__webpack_require__("./src/components/MenuButton/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),T=__webpack_require__("./src/components/T/index.tsx"),MinusCircleOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg"),StarSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/StarSolid.svg"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const WrapperVertical=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonIcontemplate__WrapperVertical",componentId:"sc-n95u56-0"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start;gap:20px;"]),Wrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonIcontemplate__Wrapper",componentId:"sc-n95u56-1"})(["display:flex;"]),Separator=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonIcontemplate__Separator",componentId:"sc-n95u56-2"})(["height:20px;width:20px;"]),DarkDiv=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonIcontemplate__DarkDiv",componentId:"sc-n95u56-3"})(["background-color:",";padding:2px;"],(({theme})=>theme.color["Special/Dark Static Neutral 00"])),handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},logSelectedId=id=>{console.log(`selected: ${id}`)},items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.r,{width:20,height:20}),"Option two"]}),disabled:!0},{id:"3",display:"Option three"},{id:"4",display:"Option four"}],MenuButtonIconTemplate=props=>{const[selected,setSelected]=react.useState(void 0),modelL=react.useMemo((()=>items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"l",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelM=react.useMemo((()=>items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"m",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelS=react.useMemo((()=>items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"s",...items,key:item.id},item.display),disabled:item.disabled})))),[]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(Wrapper,{children:[(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size XL"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size L"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size M"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size S"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]})]})})};try{MenuButtonIconTemplate.displayName="MenuButtonIconTemplate",MenuButtonIconTemplate.__docgenInfo={description:"",displayName:"MenuButtonIconTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"white"'},{value:'"ghost"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonIcon.template.tsx#MenuButtonIconTemplate"]={docgenInfo:MenuButtonIconTemplate.__docgenInfo,name:"MenuButtonIconTemplate",path:"src/components/MenuButton/stories/MenuButtonIcon.template.tsx#MenuButtonIconTemplate"})}catch(__react_docgen_typescript_loader_error){}var createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");const MenuButtonBase_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},MenuButtonBase_template_items=[{id:"1",display:"Option one"},{id:"2",display:"Option two"},{id:"3",display:"Option three"},{id:"4",display:"Option four"},{id:"5",display:"Option five",disabled:!0},{id:"6",display:"Option six"},{id:"7",display:"Option seven"}],MenuButtonBaseTemplate=({themeBorderKind,...props})=>{const[selected,setSelected]=react.useState(void 0),model=react.useMemo((()=>MenuButtonBase_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"xl"===props.dimension?"l":props.dimension,...items,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.f6,{theme:(0,createBorderRadiusSwapper.z)(themeBorderKind),children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,selected,onSelectItem:id=>{(id=>{console.log(`selected: ${id}`)})(id),setSelected(id)},items:model,onVisibilityChange:MenuButtonBase_template_handleVisibilityChange,"data-dropdown-container-id":"menu-button-with-dropdown",className:"menu-button-class",dropContainerClassName:"dropContainerClass",children:"test"})})};MenuButtonBaseTemplate.displayName="MenuButtonBaseTemplate";try{MenuButtonBaseTemplate.displayName="MenuButtonBaseTemplate",MenuButtonBaseTemplate.__docgenInfo={description:"",displayName:"MenuButtonBaseTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"white"'},{value:'"ghost"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"RuleSet<object>"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonBase.template.tsx#MenuButtonBaseTemplate"]={docgenInfo:MenuButtonBaseTemplate.__docgenInfo,name:"MenuButtonBaseTemplate",path:"src/components/MenuButton/stories/MenuButtonBase.template.tsx#MenuButtonBaseTemplate"})}catch(__react_docgen_typescript_loader_error){}var MenuActionsPanel=__webpack_require__("./src/components/Menu/MenuActionsPanel.tsx"),Button=__webpack_require__("./src/components/Button/index.tsx");const ActionPanelFlex=(0,styled_components_browser_esm.iv)(["display:flex;gap:8px;"]),MenuButtonOptions_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},MenuButtonOptions_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.r,{width:20,height:20}),"Option two"]}),disabled:!0},{id:"3",display:"Option three"},{id:"4",display:"Option four"}],MenuButtonOptionsTemplate=props=>{const[selected,setSelected]=react.useState(void 0),model=react.useMemo((()=>MenuButtonOptions_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"xl"===props.dimension?"l":props.dimension,...items,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,selected,onSelectItem:id=>{(id=>{console.log(`selected: ${id}`)})(id),setSelected(id)},items:model,onVisibilityChange:MenuButtonOptions_template_handleVisibilityChange,renderBottomPanel:({dimension,menuActionsPanelCssMixin=ActionPanelFlex})=>(0,jsx_runtime.jsxs)(MenuActionsPanel.q,{dimension,menuActionsPanelCssMixin,children:[(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",onClick:()=>{console.log("Button 1 clicked")},children:"Action 1"}),(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",appearance:"secondary",onClick:()=>{console.log("Button 2 clicked")},children:"Action 2"})]}),children:"test"})})};try{MenuButtonOptionsTemplate.displayName="MenuButtonOptionsTemplate",MenuButtonOptionsTemplate.__docgenInfo={description:"",displayName:"MenuButtonOptionsTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"white"'},{value:'"ghost"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonOptions.template.tsx#MenuButtonOptionsTemplate"]={docgenInfo:MenuButtonOptionsTemplate.__docgenInfo,name:"MenuButtonOptionsTemplate",path:"src/components/MenuButton/stories/MenuButtonOptions.template.tsx#MenuButtonOptionsTemplate"})}catch(__react_docgen_typescript_loader_error){}const MenuButtonVariants_template_DarkDiv=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonVariantstemplate__DarkDiv",componentId:"sc-1o5y41a-0"})(["background-color:",";padding:2px;"],(({theme})=>theme.color["Special/Dark Static Neutral 00"])),MenuButtonVariants_template_WrapperVertical=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonVariantstemplate__WrapperVertical",componentId:"sc-1o5y41a-1"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start;gap:20px;"]),MenuButtonVariants_template_Wrapper=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonVariantstemplate__Wrapper",componentId:"sc-1o5y41a-2"})(["display:flex;"]),MenuButtonVariants_template_Separator=styled_components_browser_esm.ZP.div.withConfig({displayName:"MenuButtonVariantstemplate__Separator",componentId:"sc-1o5y41a-3"})(["height:20px;width:20px;"]),MenuButtonVariants_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},MenuButtonVariants_template_logSelectedId=id=>{console.log(`selected: ${id}`)},MenuButtonVariants_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.r,{width:20,height:20}),"Option two"]}),disabled:!0},{id:"3",display:"Option three"},{id:"4",display:"Option four"}],MenuButtonVariantsTemplate=props=>{const[selected,setSelected]=react.useState(void 0),modelL=react.useMemo((()=>MenuButtonVariants_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"l",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelM=react.useMemo((()=>MenuButtonVariants_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"m",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelS=react.useMemo((()=>MenuButtonVariants_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"s",...items,key:item.id},item.display),disabled:item.disabled})))),[]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(MenuButtonVariants_template_Wrapper,{children:[(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size XL"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_Separator,{}),(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size L"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_Separator,{}),(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size M"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_Separator,{}),(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size S"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]})]})})};try{MenuButtonVariantsTemplate.displayName="MenuButtonVariantsTemplate",MenuButtonVariantsTemplate.__docgenInfo={description:"",displayName:"MenuButtonVariantsTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"white"'},{value:'"ghost"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonVariants.template.tsx#MenuButtonVariantsTemplate"]={docgenInfo:MenuButtonVariantsTemplate.__docgenInfo,name:"MenuButtonVariantsTemplate",path:"src/components/MenuButton/stories/MenuButtonVariants.template.tsx#MenuButtonVariantsTemplate"})}catch(__react_docgen_typescript_loader_error){}var MenuItemWithCheckbox=__webpack_require__("./src/components/Menu/MenuItemWithCheckbox.tsx");const MenuButtonWithPanel_template_ActionPanelFlex=(0,styled_components_browser_esm.iv)(["display:flex;gap:8px;"]),itemsWithCheckbox=[{id:"1",label:"Option one"},{id:"2",label:"Option two"},{id:"3",label:"Option three"},{id:"4",label:"Option four"},{id:"5",label:"Option five"},{id:"6",label:"Option six"},{id:"7",label:"Option seven"}],MenuButtonWithPanelTemplate=({themeBorderKind,...props})=>{const[innerState,setInnerState]=react.useState(itemsWithCheckbox.map((item=>item))),[activeOption,setActiveOption]=react.useState(innerState[0].id),[selectedOption,setSelectedOption]=react.useState(),[menuVisible,setMenuVisible]=react.useState(!1),model=react.useMemo((()=>innerState.map((item=>({id:item.id,render:options=>(0,jsx_runtime.jsx)(MenuItemWithCheckbox.N,{id:item.id,checked:!!item.checked,...options,dimension:"s",children:item.label},item.id)})))),[innerState,activeOption]),handleMenuVisibilityChange=visible=>{console.log("user menu visibilty change"),setMenuVisible(visible)};return(0,jsx_runtime.jsx)(styled_components_browser_esm.f6,{theme:(0,createBorderRadiusSwapper.z)(themeBorderKind),children:(0,jsx_runtime.jsx)(MenuButton.j,{dimension:"s",appearance:"ghost",items:model,active:activeOption,onActivateItem:id=>{setActiveOption(id)},selected:selectedOption,onSelectItem:id=>{console.log(`Option ${id} clicked`);const updatedInnerState=[...innerState],itemToUpdate=updatedInnerState.find((item=>item.id===id));itemToUpdate&&(itemToUpdate.checked=!itemToUpdate.checked),setInnerState(updatedInnerState),setSelectedOption(void 0)},disableSelectedOptionHighlight:!0,isVisible:menuVisible,onVisibilityChange:handleMenuVisibilityChange,renderBottomPanel:({dimension})=>(0,jsx_runtime.jsxs)(MenuActionsPanel.q,{dimension,menuActionsPanelCssMixin:MenuButtonWithPanel_template_ActionPanelFlex,children:[(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",onClick:()=>handleMenuVisibilityChange(!1),children:"Action 1"}),(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",appearance:"secondary",onClick:()=>handleMenuVisibilityChange(!1),children:"Action 2"})]}),children:"Выберите опцию"})})};MenuButtonWithPanelTemplate.displayName="MenuButtonWithPanelTemplate";try{MenuButtonWithPanelTemplate.displayName="MenuButtonWithPanelTemplate",MenuButtonWithPanelTemplate.__docgenInfo={description:"",displayName:"MenuButtonWithPanelTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"white"'},{value:'"ghost"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"RuleSet<object>"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonWithPanel.template.tsx#MenuButtonWithPanelTemplate"]={docgenInfo:MenuButtonWithPanelTemplate.__docgenInfo,name:"MenuButtonWithPanelTemplate",path:"src/components/MenuButton/stories/MenuButtonWithPanel.template.tsx#MenuButtonWithPanelTemplate"})}catch(__react_docgen_typescript_loader_error){}const MenuButton_stories={title:"Admiral-2.1/MenuButton",decorators:void 0,component:MenuButton.j,parameters:{docs:{source:{code:null}},layout:"centered",design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24517"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24648"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24734"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24784"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24834"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24673"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24759"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24809"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24859"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71085"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71109"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71133"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71157"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71490"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71514"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11005%3A69548"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11047%3A69703"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11047%3A69794"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11047%3A69881"}]},argTypes:{dimension:{options:["xl","l","m","s"],control:{type:"radio"}},appearance:{options:["primary","secondary","ghost","white"],control:{type:"radio"}},disabled:{control:{type:"boolean"}},disableSelectedOptionHighlight:{control:{type:"boolean"}},isVisible:{control:{type:"boolean"}},loading:{control:{type:"boolean"}},skeleton:{control:{type:"boolean"}},themeBorderKind:{options:borderRadius.g2,control:{type:"radio"}},alignSelf:{options:[void 0,"auto","flex-start","flex-end","center","baseline","stretch"],control:{type:"select"}},items:{control:!1},selected:{control:!1},active:{control:!1},menuWidth:{control:{type:"text"}},menuMaxHeight:{control:!1},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1}}},MenuButtonBaseStory=props=>(0,jsx_runtime.jsx)(MenuButtonBaseTemplate,{...props});MenuButtonBaseStory.displayName="MenuButtonBaseStory";const MenuButtonBase={render:MenuButtonBaseStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { MenuButton, MenuItem } from '@admiral-ds/react-ui';\nimport type { MenuButtonProps, RenderOptionProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: 'Option two',\n  },\n  {\n    id: '3',\n    display: 'Option three',\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n  {\n    id: '5',\n    display: 'Option five',\n    disabled: true,\n  },\n  {\n    id: '6',\n    display: 'Option six',\n  },\n  {\n    id: '7',\n    display: 'Option seven',\n  },\n];\n\nexport const MenuButtonBaseTemplate = ({\n  themeBorderKind,\n  ...props\n}: MenuButtonProps & { themeBorderKind?: BorderRadiusType }) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension === 'xl' ? 'l' : props.dimension} {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <MenuButton\n        {...props}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        items={model}\n        onVisibilityChange={handleVisibilityChange}\n        data-dropdown-container-id=\"menu-button-with-dropdown\"\n        className=\"menu-button-class\"\n        dropContainerClassName=\"dropContainerClass\"\n      >\n        test\n      </MenuButton>\n    </ThemeProvider>\n  );\n};\n"}}},name:"MenuButton. Базовый пример."},MenuButtonOptionsStory=props=>(0,jsx_runtime.jsx)(MenuButtonOptionsTemplate,{...props});MenuButtonOptionsStory.displayName="MenuButtonOptionsStory";const MenuButtonOptions={render:MenuButtonOptionsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { css } from 'styled-components';\n\nimport { Button, MenuActionsPanel, MenuButton, MenuItem } from '@admiral-ds/react-ui';\nimport type { MenuButtonProps, RenderOptionProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\n\nconst ActionPanelFlex = css`\n  display: flex;\n  gap: 8px;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: (\n      <div style={{ display: 'flex', width: '115px', justifyContent: 'space-between', alignItems: 'center' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n    disabled: true,\n  },\n  {\n    id: '3',\n    display: 'Option three',\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n];\n\nexport const MenuButtonOptionsTemplate = (props: MenuButtonProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension === 'xl' ? 'l' : props.dimension} {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  return (\n    <>\n      <MenuButton\n        {...props}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        items={model}\n        onVisibilityChange={handleVisibilityChange}\n        renderBottomPanel={({ dimension, menuActionsPanelCssMixin = ActionPanelFlex }) => {\n          return (\n            <MenuActionsPanel dimension={dimension} menuActionsPanelCssMixin={menuActionsPanelCssMixin}>\n              <Button\n                dimension={'s'}\n                onClick={() => {\n                  console.log('Button 1 clicked');\n                }}\n              >\n                Action 1\n              </Button>\n              <Button\n                dimension={'s'}\n                appearance=\"secondary\"\n                onClick={() => {\n                  console.log('Button 2 clicked');\n                }}\n              >\n                Action 2\n              </Button>\n            </MenuActionsPanel>\n          );\n        }}\n      >\n        test\n      </MenuButton>\n    </>\n  );\n};\n"}}},name:"MenuButton. Задизейбленные и кастомизированные опции и панель с кнопками"},MenuButtonVariantsStory=props=>(0,jsx_runtime.jsx)(MenuButtonVariantsTemplate,{...props});MenuButtonVariantsStory.displayName="MenuButtonVariantsStory";const MenuButtonVariants={render:MenuButtonVariantsStory,parameters:{docs:{source:{code:'import * as React from \'react\';\nimport styled from \'styled-components\';\n\nimport { MenuButton, MenuItem, T } from \'@admiral-ds/react-ui\';\nimport type { MenuButtonProps, RenderOptionProps } from \'@admiral-ds/react-ui\';\nimport { ReactComponent as MinusCircleOutline } from \'@admiral-ds/icons/build/service/MinusCircleOutline.svg\';\n\nconst DarkDiv = styled.div`\n  background-color: ${({ theme }) => theme.color[\'Special/Dark Static Neutral 00\']};\n  padding: 2px;\n`;\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 20px;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log(\'Menu opened\');\n  } else {\n    console.log(\'Menu closed\');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: \'1\',\n    display: \'Option one\',\n  },\n  {\n    id: \'2\',\n    display: (\n      <div style={{ display: \'flex\', width: \'115px\', justifyContent: \'space-between\', alignItems: \'center\' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n    disabled: true,\n  },\n  {\n    id: \'3\',\n    display: \'Option three\',\n  },\n  {\n    id: \'4\',\n    display: \'Option four\',\n  },\n];\nexport const MenuButtonVariantsTemplate = (props: MenuButtonProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const modelL = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="l" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelM = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="m" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelS = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="s" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size XL\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="xl"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="xl"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="xl"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="xl"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="xl"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size L\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="l"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="l"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="l"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="l"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="l"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size M\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="m"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="m"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="m"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="m"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelM}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="m"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelM}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size S\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="s"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="s"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="s"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="s"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelS}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="s"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelS}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n      </Wrapper>\n    </>\n  );\n};\n'}}},name:"MenuButton. Размеры и стили."},MenuButtonIconStory=props=>(0,jsx_runtime.jsx)(MenuButtonIconTemplate,{...props});MenuButtonIconStory.displayName="MenuButtonIconStory";const MenuButtonIcon={render:MenuButtonIconStory,parameters:{docs:{source:{code:'import * as React from \'react\';\nimport styled from \'styled-components\';\n\nimport { MenuButton, MenuItem, T } from \'@admiral-ds/react-ui\';\nimport type { MenuButtonProps, RenderOptionProps } from \'@admiral-ds/react-ui\';\nimport { ReactComponent as MinusCircleOutline } from \'@admiral-ds/icons/build/service/MinusCircleOutline.svg\';\nimport { ReactComponent as StarSolid } from \'@admiral-ds/icons/build/system/StarSolid.svg\';\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 20px;\n`;\n\nconst DarkDiv = styled.div`\n  background-color: ${({ theme }) => theme.color[\'Special/Dark Static Neutral 00\']};\n  padding: 2px;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log(\'Menu opened\');\n  } else {\n    console.log(\'Menu closed\');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: \'1\',\n    display: \'Option one\',\n  },\n  {\n    id: \'2\',\n    display: (\n      <div style={{ display: \'flex\', width: \'115px\', justifyContent: \'space-between\', alignItems: \'center\' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n    disabled: true,\n  },\n  {\n    id: \'3\',\n    display: \'Option three\',\n  },\n  {\n    id: \'4\',\n    display: \'Option four\',\n  },\n];\n\nexport const MenuButtonIconTemplate = (props: MenuButtonProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const modelL = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="l" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelM = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="m" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelS = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="s" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size XL\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="xl"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size L\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="l"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size M\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="m"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelM}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size S\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="s"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelS}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n      </Wrapper>\n    </>\n  );\n};\n'}}},name:"MenuButton с иконкой"},MenuButtonWithPanelStory=props=>(0,jsx_runtime.jsx)(MenuButtonWithPanelTemplate,{...props});MenuButtonWithPanelStory.displayName="MenuButtonWithPanelStory";const MenuButtonWithPanel={render:MenuButtonWithPanelStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { css, ThemeProvider } from 'styled-components';\n\nimport { Button, MenuActionsPanel, MenuButton, MenuItemWithCheckbox } from '@admiral-ds/react-ui';\nimport type {\n  MenuButtonProps,\n  ItemWithCheckbox,\n  RenderOptionProps,\n  RenderPanelProps,\n  BorderRadiusType,\n} from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst ActionPanelFlex = css`\n  display: flex;\n  gap: 8px;\n`;\n\nconst itemsWithCheckbox: Array<ItemWithCheckbox> = [\n  {\n    id: '1',\n    label: 'Option one',\n  },\n  {\n    id: '2',\n    label: 'Option two',\n  },\n  {\n    id: '3',\n    label: 'Option three',\n  },\n  {\n    id: '4',\n    label: 'Option four',\n  },\n  {\n    id: '5',\n    label: 'Option five',\n  },\n  {\n    id: '6',\n    label: 'Option six',\n  },\n  {\n    id: '7',\n    label: 'Option seven',\n  },\n];\n\nexport const MenuButtonWithPanelTemplate = ({\n  themeBorderKind,\n  ...props\n}: MenuButtonProps & { themeBorderKind?: BorderRadiusType }) => {\n  const [innerState, setInnerState] = React.useState<Array<ItemWithCheckbox>>(itemsWithCheckbox.map((item) => item));\n  const [activeOption, setActiveOption] = React.useState<string | undefined>(innerState[0].id);\n  const [selectedOption, setSelectedOption] = React.useState<string | undefined>();\n  const [menuVisible, setMenuVisible] = React.useState<boolean>(false);\n\n  const model = React.useMemo(() => {\n    return innerState.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItemWithCheckbox key={item.id} id={item.id} checked={!!item.checked} {...options} dimension=\"s\">\n          {item.label}\n        </MenuItemWithCheckbox>\n      ),\n    }));\n  }, [innerState, activeOption]);\n\n  const handleActivateItem = (id: string | undefined) => {\n    setActiveOption(id);\n  };\n\n  const handleSelectItem = (id: string) => {\n    console.log(`Option ${id} clicked`);\n    const updatedInnerState = [...innerState];\n    const itemToUpdate = updatedInnerState.find((item) => item.id === id);\n    if (itemToUpdate) {\n      itemToUpdate.checked = !itemToUpdate.checked;\n    }\n    setInnerState(updatedInnerState);\n    setSelectedOption(undefined);\n  };\n\n  const handleMenuVisibilityChange = (visible: boolean) => {\n    console.log('user menu visibilty change');\n    setMenuVisible(visible);\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <MenuButton\n        dimension=\"s\"\n        appearance=\"ghost\"\n        items={model}\n        active={activeOption}\n        onActivateItem={handleActivateItem}\n        selected={selectedOption}\n        onSelectItem={handleSelectItem}\n        disableSelectedOptionHighlight={true}\n        isVisible={menuVisible}\n        onVisibilityChange={handleMenuVisibilityChange}\n        renderBottomPanel={({ dimension }: RenderPanelProps) => (\n          <MenuActionsPanel dimension={dimension} menuActionsPanelCssMixin={ActionPanelFlex}>\n            <Button dimension=\"s\" onClick={() => handleMenuVisibilityChange(false)}>\n              Action 1\n            </Button>\n            <Button dimension=\"s\" appearance=\"secondary\" onClick={() => handleMenuVisibilityChange(false)}>\n              Action 2\n            </Button>\n          </MenuActionsPanel>\n        )}\n      >\n        Выберите опцию\n      </MenuButton>\n    </ThemeProvider>\n  );\n};\n"}}},name:"MenuButton с чекбоксами и нижней панелью в выпадающем меню"};MenuButtonBase.parameters={...MenuButtonBase.parameters,docs:{...MenuButtonBase.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonBaseStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonBaseRaw\n      }\n    }\n  },\n  name: 'MenuButton. Базовый пример.'\n}",...MenuButtonBase.parameters?.docs?.source}}},MenuButtonOptions.parameters={...MenuButtonOptions.parameters,docs:{...MenuButtonOptions.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonOptionsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonOptionsRaw\n      }\n    }\n  },\n  name: 'MenuButton. Задизейбленные и кастомизированные опции и панель с кнопками'\n}",...MenuButtonOptions.parameters?.docs?.source}}},MenuButtonVariants.parameters={...MenuButtonVariants.parameters,docs:{...MenuButtonVariants.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonVariantsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonVariantsRaw\n      }\n    }\n  },\n  name: 'MenuButton. Размеры и стили.'\n}",...MenuButtonVariants.parameters?.docs?.source}}},MenuButtonIcon.parameters={...MenuButtonIcon.parameters,docs:{...MenuButtonIcon.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonIconStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonIconRaw\n      }\n    }\n  },\n  name: 'MenuButton с иконкой'\n}",...MenuButtonIcon.parameters?.docs?.source}}},MenuButtonWithPanel.parameters={...MenuButtonWithPanel.parameters,docs:{...MenuButtonWithPanel.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonWithPanelStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonWithPanelRaw\n      }\n    }\n  },\n  name: 'MenuButton с чекбоксами и нижней панелью в выпадающем меню'\n}",...MenuButtonWithPanel.parameters?.docs?.source}}};const __namedExportsOrder=["MenuButtonBase","MenuButtonOptions","MenuButtonVariants","MenuButtonIcon","MenuButtonWithPanel"]},"./src/components/Checkbox/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XZ:()=>Checkbox});var _path,react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}__webpack_require__.p;var _rect;function Minus_extends(){return Minus_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Minus_extends.apply(this,arguments)}__webpack_require__.p;var borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),keyboardKey=__webpack_require__("./src/components/common/keyboardKey.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const width=(0,styled_components_browser_esm.iv)(["width:",";fieldset[data-dimension='s'] &{width:16px;}"],(({$dimension})=>{switch($dimension){case"m":default:return"20px";case"s":return"16px"}})),height=(0,styled_components_browser_esm.iv)(["height:",";fieldset[data-dimension='s'] &{height:16px;}"],(({$dimension})=>{switch($dimension){case"m":default:return"20px";case"s":return"16px"}})),Check=(0,styled_components_browser_esm.ZP)((function SvgSuccess(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 16"},props),_path||(_path=react.createElement("path",{fill:"#fff",d:"M13.471 5.805a.667.667 0 1 0-.942-.943L7 10.39 4.138 7.53a.667.667 0 0 0-.943.942l3.334 3.334c.26.26.682.26.942 0l6-6"})))})).withConfig({displayName:"Checkbox__Check",componentId:"sc-16etnr2-0"})(["pointer-events:none;"]),Indeterminate=(0,styled_components_browser_esm.ZP)((function SvgMinus(props){return react.createElement("svg",Minus_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"-5 -9 20 20"},props),_rect||(_rect=react.createElement("rect",{width:10,height:2,fill:"#fff",rx:1})))})).withConfig({displayName:"Checkbox__Indeterminate",componentId:"sc-16etnr2-1"})(["pointer-events:none;& *[fill^='#']{fill:",";}"],(({theme})=>theme.color["Special/Static White"])),Container=styled_components_browser_esm.ZP.div.withConfig({displayName:"Checkbox__Container",componentId:"sc-16etnr2-2"})(["position:relative;box-sizing:border-box;overflow:visible;",";",";"],width,height),Background=styled_components_browser_esm.ZP.div.withConfig({displayName:"Checkbox__Background",componentId:"sc-16etnr2-3"})(["pointer-events:none;display:inline-block;position:absolute;margin:0;top:0;left:0;right:0;bottom:0;border-radius:",";outline:0;transition:background 0.1s ease-in;line-height:initial;background-color:",";border:1px solid ",";& *[fill^='#']{fill:",";}"],(p=>(0,borderRadius.pk)(p.theme.shape)),(({theme})=>theme.color["Neutral/Neutral 00"]),(({$error,theme})=>$error?theme.color["Error/Error 60 Main"]:theme.color["Neutral/Neutral 50"]),(({theme})=>theme.color["Special/Static White"])),indeterminateCss=(0,styled_components_browser_esm.iv)(["&:not(:checked) + ","{background-color:",";border:",";> *{display:",";}}"],Background,(({theme,$indeterminate})=>$indeterminate&&theme.color["Primary/Primary 60 Main"]),(({$indeterminate})=>$indeterminate&&"none"),(p=>p.$indeterminate?"block":"none")),hoveredCss=(0,styled_components_browser_esm.iv)(["&:not(:disabled){&::after{content:'';position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);border-radius:50%;width:calc(100% + 16px);height:calc(100% + 16px);background-color:",";}}"],(({theme})=>theme.color["Opacity/Hover"])),disabledCss=(0,styled_components_browser_esm.iv)(["pointer-events:none;& + ","{border:1px solid ",";background-color:",";}"],Background,(({theme})=>theme.color["Neutral/Neutral 30"]),(({theme})=>theme.color["Neutral/Neutral 10"])),disabledCheckedBackgroundCss=(0,styled_components_browser_esm.iv)(["background-color:",";border:none;& *[fill^='#']{fill:",";}"],(({theme})=>theme.color["Primary/Primary 30"]),(({theme})=>theme.color["Neutral/Neutral 00"])),checkedBackgroundCss=(0,styled_components_browser_esm.iv)(["background-color:",";border:none;"],(({theme})=>theme.color["Primary/Primary 60 Main"])),Input=styled_components_browser_esm.ZP.input.withConfig({displayName:"Checkbox__Input",componentId:"sc-16etnr2-4"})(["appearance:none;::-ms-check{display:none;}width:100%;height:100%;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);box-sizing:border-box;cursor:pointer;border-radius:",";margin:0;padding:0;"," &:checked + ","{","}&:disabled{",";}"," "," &:hover:not(:disabled),&:focus:not(:disabled) + "," &:checked:disabled + ","{","}&:focus-visible{outline-offset:2px;outline:"," solid 2px;}"],(p=>(0,borderRadius.pk)(p.theme.shape)),(props=>props.readOnly&&disabledCss),Background,(props=>props.readOnly?disabledCheckedBackgroundCss:checkedBackgroundCss),disabledCss,(props=>!props.readOnly&&props.$hovered&&hoveredCss),indeterminateCss,hoveredCss,Background,disabledCheckedBackgroundCss,(p=>p.theme.color["Primary/Primary 60 Main"])),Checkbox=react.forwardRef((({className,dimension="m",disabled,readOnly,hovered,indeterminate,error,...props},ref)=>(0,jsx_runtime.jsxs)(Container,{$dimension:dimension,className,children:[(0,jsx_runtime.jsx)(Input,{ref,disabled,readOnly,...props,type:"checkbox",$indeterminate:indeterminate,onKeyDown:e=>{if(readOnly){keyboardKey.y.getCode(e)===keyboardKey.y[" "]&&e.preventDefault()}props.onKeyDown?.(e)},"data-hovered":hovered,$hovered:hovered}),(0,jsx_runtime.jsx)(Background,{$error:error,children:indeterminate?(0,jsx_runtime.jsx)(Indeterminate,{"aria-hidden":"true",focusable:"false"}):(0,jsx_runtime.jsx)(Check,{"aria-hidden":"true",focusable:"false"})})]})));Checkbox.displayName="Checkbox";try{Background.displayName="Checkbox",Background.__docgenInfo={description:"",displayName:"Checkbox",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/index.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"src/components/Checkbox/index.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Menu/MenuActionsPanel.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{q:()=>MenuActionsPanel,x:()=>getHighlightedFilteredOptions});var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_getTextHighlightMeta__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/utils/getTextHighlightMeta.ts"),_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Menu/MenuItem.tsx"),_src_components_common_uid__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/common/uid.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const MenuActionsPanelDiv=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"MenuActionsPanel__MenuActionsPanelDiv",componentId:"sc-ssytv1-0"})(["padding:",";",""],(p=>"s"===p.$dimension?"10px 12px":"12px 16px"),(p=>p.$menuActionsPanelCssMixin)),MenuActionsPanel=({dimension,menuActionsPanelCssMixin,...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MenuActionsPanelDiv,{...props,$dimension:dimension,$menuActionsPanelCssMixin:menuActionsPanelCssMixin});MenuActionsPanel.displayName="MenuActionsPanel";const HighlightText=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.span.withConfig({displayName:"MenuActionsPanel__HighlightText",componentId:"sc-ssytv1-1"})(["color:",";"],(p=>p.theme.color["Primary/Primary 60 Main"])),TextWrapper=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"MenuActionsPanel__TextWrapper",componentId:"sc-ssytv1-2"})(["overflow:hidden;text-overflow:ellipsis;white-space:nowrap;"]),StyledMenuItem=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s).withConfig({displayName:"MenuActionsPanel__StyledMenuItem",componentId:"sc-ssytv1-3"})(["color:",";pointer-events:none;&&[data-disabled='true']{background-color:",";color:",";&& *[fill^='#']{fill:",";}}"],(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Special/Elevated BG"]),(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Neutral/Neutral 50"]));function getHighlightedFilteredOptions(options,searchValue="",emptyMessage,dimension,highlightFunction=_src_components_common_utils_getTextHighlightMeta__WEBPACK_IMPORTED_MODULE_4__.k){const model=[];if(options.forEach((option=>{const{shouldHighlight,parts,chunks}=highlightFunction(option.label,searchValue,"wholly"),itemValue=shouldHighlight?parts.map(((part,i)=>chunks.includes(part.toLowerCase())?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(HighlightText,{children:part},i):part)):searchValue?null:option.label;itemValue&&model.push({id:option.id,render:options=>(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s,{dimension,...options,key:option.id},(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TextWrapper,{children:itemValue}))})})),0===model.length){const id=(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_5__.h)();model.push({id,render:options=>(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(StyledMenuItem,{dimension,...options,key:id},emptyMessage),disabled:!0})}return model}try{MenuActionsPanel.displayName="MenuActionsPanel",MenuActionsPanel.__docgenInfo={description:"",displayName:"MenuActionsPanel",props:{dimension:{defaultValue:null,description:"",name:"dimension",required:!0,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},menuActionsPanelCssMixin:{defaultValue:null,description:"",name:"menuActionsPanelCssMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Menu/MenuActionsPanel.tsx#MenuActionsPanel"]={docgenInfo:MenuActionsPanel.__docgenInfo,name:"MenuActionsPanel",path:"src/components/Menu/MenuActionsPanel.tsx#MenuActionsPanel"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Menu/MenuItemWithCheckbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>MenuItemWithCheckbox,W:()=>checkboxTreeToMap});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Menu/MenuItem.tsx"),_src_components_Checkbox__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Checkbox/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const checkboxTreeToMap=(checkboxTree,level=0,dependencies)=>checkboxTree.reduce(((acc,item)=>{const key=item.id,currentNode={level,node:item};if(acc.set(key,currentNode),dependencies&&!item.children&&dependencies.forEach((dependency=>dependency.push(key))),item.children){const allDependencies=dependencies?[...dependencies]:[],itemDependencies=[];currentNode.dependencies=itemDependencies,acc.set(key,currentNode),allDependencies.push(itemDependencies);const map=checkboxTreeToMap(item.children,level+1,allDependencies);return new Map([...acc,...map])}return acc}),new Map),paddingLeft=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.iv)(["padding-left:","px;"],(({$dimension,$level=0})=>"s"===$dimension?12+28*$level:16+32*$level)),CheckboxGroupMenuItem=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s).withConfig({displayName:"MenuItemWithCheckbox__CheckboxGroupMenuItem",componentId:"sc-aoffmn-0"})(["",""],paddingLeft),OptionContent=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.div.withConfig({displayName:"MenuItemWithCheckbox__OptionContent",componentId:"sc-aoffmn-1"})(["position:relative;padding:0 0 0 ","px;"],(props=>"s"===props.$dimension?28:32)),PositionedCheckbox=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP)(_src_components_Checkbox__WEBPACK_IMPORTED_MODULE_4__.XZ).withConfig({displayName:"MenuItemWithCheckbox__PositionedCheckbox",componentId:"sc-aoffmn-2"})(["position:absolute;top:2px;left:2px;"]),MenuItemWithCheckbox=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({checked,indeterminate,checkboxRef,level=0,children,dimension="l",...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CheckboxGroupMenuItem,{$dimension:dimension||"l",$level:level,ref,...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(OptionContent,{$dimension:dimension||"l",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PositionedCheckbox,{dimension:"s"===dimension?"s":"m",checked,indeterminate,hovered:props.hovered,disabled:props.disabled,readOnly:props.readOnly,ref:checkboxRef,onChange:()=>!1}),children]})})));try{MenuItemWithCheckbox.displayName="MenuItemWithCheckbox",MenuItemWithCheckbox.__docgenInfo={description:"",displayName:"MenuItemWithCheckbox",props:{checked:{defaultValue:null,description:"Значение Checkbox",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"Неопределенное состояние Checkbox",name:"indeterminate",required:!1,type:{name:"boolean"}},checkboxIsHovered:{defaultValue:null,description:"Состояние hovered для Checkbox",name:"checkboxIsHovered",required:!1,type:{name:"boolean"}},checkboxRef:{defaultValue:null,description:"Ref на Checkbox",name:"checkboxRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},level:{defaultValue:{value:"0"},description:"Сдвиг внутри MenuItem при наличии нескольких уровней (например при использовании составной группы чекбоксов внутри Menu)",name:"level",required:!1,type:{name:"number"}},dimension:{defaultValue:{value:"l"},description:"Размер MenuItems",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"string | number"}},selected:{defaultValue:null,description:"Активная секция MenuItems",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Акцентная секция MenuItems",name:"hovered",required:!1,type:{name:"boolean"}},onHover:{defaultValue:null,description:"Обработчик наведения мыши на item",name:"onHover",required:!1,type:{name:"(() => void)"}},onLeave:{defaultValue:null,description:"обработчик выхода мыши за пределы item",name:"onLeave",required:!1,type:{name:"MouseEventHandler<HTMLElement>"}},containerRef:{defaultValue:null,description:"ссылка на контейнер, в котором находится Menu",name:"containerRef",required:!1,type:{name:"RefObject<HTMLElement>"}},expandIcon:{defaultValue:null,description:"",name:"expandIcon",required:!1,type:{name:"ReactNode"}},hasSubmenu:{defaultValue:null,description:"",name:"hasSubmenu",required:!1,type:{name:"boolean"}},selfRef:{defaultValue:null,description:"",name:"selfRef",required:!1,type:{name:"RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null"}},disabled:{defaultValue:null,description:"Отключение секции",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Только для чтения",name:"readOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Menu/MenuItemWithCheckbox.tsx#MenuItemWithCheckbox"]={docgenInfo:MenuItemWithCheckbox.__docgenInfo,name:"MenuItemWithCheckbox",path:"src/components/Menu/MenuItemWithCheckbox.tsx#MenuItemWithCheckbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/MenuButton/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>MenuButton});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_DropMenu__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/DropMenu/index.tsx"),_src_components_common_uid__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/uid.ts"),_src_components_Button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Button/index.tsx"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts"),_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/refSetter.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const MenuButton=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({children,dimension="l",appearance="primary",disabled=!1,loading=!1,skeleton=!1,alignSelf="auto",onClose,onOpen,items,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,isVisible,onVisibilityChange,onClickOutside,onChange,menuWidth,menuMaxHeight,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,className,renderBottomPanel,...props},ref)=>{const dropMenuProps={...(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_5__.wP)(props),renderBottomPanel,items,onChange,onOpen,onClose,isVisible,onVisibilityChange,onClickOutside,loading,disableSelectedOptionHighlight,selected,onSelectItem,active,onActivateItem,menuMaxHeight,menuWidth,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,alignSelf,renderContentProp:({buttonRef,handleKeyDown,handleClick,statusIcon,menuState})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_Button__WEBPACK_IMPORTED_MODULE_2__.zx,{...props,ref:(0,_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_3__.O)(ref,buttonRef),skeleton,dimension,appearance,disabled:!!skeleton||disabled,loading,onKeyDown:handleKeyDown,onClick:handleClick,"aria-expanded":menuState,className:"menu-button-with-dropdown"+(className?` ${className}`:""),iconEnd:statusIcon,children:react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).map((child=>"string"==typeof child?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{children:child},(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_4__.h)()):child))})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_src_components_DropMenu__WEBPACK_IMPORTED_MODULE_6__.m,{dimension:"xl"===dimension?"l":dimension,disabled:!!skeleton||disabled,...dropMenuProps,children})})}));try{MenuButton.displayName="MenuButton",MenuButton.__docgenInfo={description:"",displayName:"MenuButton",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:{value:"l"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:{value:"primary"},description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"white"'},{value:'"ghost"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:{value:"false"},description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:{value:"auto"},description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"RuleSet<object>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/index.tsx#MenuButton"]={docgenInfo:MenuButton.__docgenInfo,name:"MenuButton",path:"src/components/MenuButton/index.tsx#MenuButton"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/T/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>T});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Typography__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Typography/typography.ts"),_src_components_themes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/common/index.ts"),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/skeleton/animation.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.iv)(["",";pointer-events:none;"],_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__.x),Tspan=styled_components__WEBPACK_IMPORTED_MODULE_2__.ZP.span.withConfig({displayName:"T__Tspan",componentId:"sc-1bd4slr-0"})(["color:",";",";"," ",""],(({$color,theme,$skeleton})=>$skeleton?"transparent":$color?theme.color[$color]?theme.color[$color]:$color:theme.color[_src_components_themes__WEBPACK_IMPORTED_MODULE_4__.rG]),(p=>_src_components_Typography__WEBPACK_IMPORTED_MODULE_5__.c[p.$font]),(p=>p.$cssMixin?p.$cssMixin:""),(p=>p.$skeleton&&skeletonMixin)),T=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((({font,color,cssMixin,skeleton,...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Tspan,{ref,...props,$font:font,$color:color,$cssMixin:cssMixin,$skeleton:skeleton})));T.displayName="T";try{T.displayName="T",T.__docgenInfo={description:"",displayName:"T",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/T/index.tsx#T"]={docgenInfo:T.__docgenInfo,name:"T",path:"src/components/T/index.tsx#T"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/uid.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function uid(){return(performance.now().toString(36)+Math.random().toString(36)).replace(/\./g,"")}__webpack_require__.d(__webpack_exports__,{h:()=>uid})},"./src/components/common/utils/getTextHighlightMeta.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>getTextHighlightMeta});const getTextHighlightMeta=(text="",highlight="",highlightFormat="word")=>{const chunks=("word"===highlightFormat?highlight.split(" "):[highlight]).filter(Boolean).map((chunk=>chunk.toLowerCase())),specialCharacters=[".","?","*","+","-","^","$","[","]","\\","(",")","{","}","|"],pattern=chunks.map((chunk=>`(${chunk.split("").map((letter=>specialCharacters.includes(letter)?`\\${letter}`:letter)).join("")})?`)).join(""),parts=text.split(new RegExp(pattern,"gi")).filter(Boolean);return{shouldHighlight:!highlight||parts.some((part=>chunks.includes(part.toLowerCase()))),parts,chunks}}},"./src/components/themes/common/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{lI:()=>MainPrimaryColorName,rG:()=>DefaultFontColorName,sl:()=>DefaultBackgroundColorName});const DefaultFontColorName="Neutral/Neutral 90",DefaultBackgroundColorName="Neutral/Neutral 00",MainPrimaryColorName="Primary/Primary 60 Main"}}]);