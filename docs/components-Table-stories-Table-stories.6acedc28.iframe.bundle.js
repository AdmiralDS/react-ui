"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[1663],{"./src/components/Table/stories/Table.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BaseHtmlExample:()=>BaseHtmlExample,CheckboxExample:()=>CheckboxExample,ColumnWidthExample:()=>ColumnWidthExample,CustomTitleExample:()=>CustomTitleExample,DraggableColumnsExample:()=>DraggableColumnsExample,DraggableRowsExample:()=>DraggableRowsExample,DynamicVirtualScrollExample:()=>DynamicVirtualScrollExample,ExpandExample:()=>ExpandExample,ExtraTextExample:()=>ExtraTextExample,FilterExample:()=>FilterExample,FixedVirtualScrollExample:()=>FixedVirtualScrollExample,GroupExample:()=>GroupExample,LoadScrollExample:()=>LoadScrollExample,MultilineExample:()=>MultilineExample,OrientationExample:()=>OrientationExample,OverflowMenuExample:()=>OverflowMenuExample,Playground:()=>Playground,RenderCellExample:()=>RenderCellExample,RenderGroupTitleExample:()=>RenderGroupTitleExample,RowStateExample:()=>RowStateExample,SortExample:()=>SortExample,StickyExample:()=>StickyExample,StyleExample:()=>StyleExample,ZebraExample:()=>ZebraExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Table_stories});var _path,jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Table=__webpack_require__("./src/components/Table/index.tsx"),react=__webpack_require__("./node_modules/react/index.js"),T=__webpack_require__("./src/components/T/index.tsx"),NotificationItem=__webpack_require__("./src/components/NotificationItem/index.tsx");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}function _templateObject(){var data=_tagged_template_literal(["\n  height: ","px;\n"]);return _templateObject=function _templateObject(){return data},data}function _templateObject1(){var data=_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return _templateObject1=function _templateObject(){return data},data}var Separator=styled_components_browser_esm.Ay.div(_templateObject(),function(p){return p.height}),AmountCell=styled_components_browser_esm.Ay.div(_templateObject1(),function(p){return p.theme.color["Neutral/Neutral 30"]}),numberFormatter=new Intl.NumberFormat,rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TablePlaygroundTemplate=function(props){var _React_useState=_sliced_to_array(react.useState(columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(NotificationItem.rn,{displayStatusIcon:!0,children:[/*#__PURE__*/(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"Table API"}),/*#__PURE__*/(0,jsx_runtime.jsxs)(NotificationItem.Yg,{children:["API таблицы предполагает 2 обязательных параметра: columnList и rowList, где",/*#__PURE__*/(0,jsx_runtime.jsx)(Separator,{height:8}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"columnList - массив данных с описанием столбцов, у каждого столбца должен быть задан уникальный идентификатор name;"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Separator,{height:8}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"rowList - массив данных с описанием строк, у каждой строки должен быть задан уникальный идентификатор id."}),/*#__PURE__*/(0,jsx_runtime.jsx)(Separator,{height:16}),"Между столбцами и строками таблицы существует четкий МАППИНГ для задания контента ячеек:",/*#__PURE__*/(0,jsx_runtime.jsx)(Separator,{height:8}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"название свойства строки ⇔ name столбца"}),/*#__PURE__*/(0,jsx_runtime.jsx)("li",{children:"значение свойства строки ⇔ контент ячейки строки в данном столбце"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Separator,{height:8}),"ВАЖНО: таблица не поддерживает сложные составные имена столбцов с использованием точки (н-р, 'test.name'), имя столбца не должно быть составной структурой."]})]}),/*#__PURE__*/(0,jsx_runtime.jsx)(Separator,{height:40}),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,_object_spread_props(_object_spread({},props),{rowList:rowList,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?_object_spread_props(_object_spread({},col),{width:width}):col}))}}))]})};try{TablePlaygroundTemplate.displayName="TablePlaygroundTemplate",TablePlaygroundTemplate.__docgenInfo={description:"",displayName:"TablePlaygroundTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TablePlayground.template.tsx#TablePlaygroundTemplate"]={docgenInfo:TablePlaygroundTemplate.__docgenInfo,name:"TablePlaygroundTemplate",path:"src/components/Table/stories/TablePlayground.template.tsx#TablePlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableColumnWidth_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableColumnWidth_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableColumnWidth_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableColumnWidth_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableColumnWidth_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableColumnWidth_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableColumnWidth_template_define_property(target,key,source[key])})}return target}function TableColumnWidth_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableColumnWidth_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableColumnWidth_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableColumnWidth_template_sliced_to_array(arr,i){return TableColumnWidth_template_array_with_holes(arr)||TableColumnWidth_template_iterable_to_array_limit(arr,i)||TableColumnWidth_template_unsupported_iterable_to_array(arr,i)||TableColumnWidth_template_non_iterable_rest()}function TableColumnWidth_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableColumnWidth_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableColumnWidth_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableColumnWidth_template_array_like_to_array(o,minLen)}}function TableColumnWidth_template_templateObject(){var data=TableColumnWidth_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableColumnWidth_template_templateObject=function _templateObject(){return data},data}var TableColumnWidth_template_AmountCell=styled_components_browser_esm.Ay.div(TableColumnWidth_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableColumnWidth_template_numberFormatter=new Intl.NumberFormat,TableColumnWidth_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidth_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnWidth_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableColumnWidth_template_columnList=[{name:"transfer_type",title:"Тип сделки",width:"calc(20% - 40px)"},{name:"transfer_date",title:"Дата сделки",width:"250px"},{name:"transfer_amount",title:"Сумма",width:200},{name:"currency",title:"Валюта",width:"20%"},{name:"rate",title:"Ставка"}],TableColumnWidthTemplate=function(props){var _React_useState=TableColumnWidth_template_sliced_to_array(react.useState(TableColumnWidth_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableColumnWidth_template_object_spread_props(TableColumnWidth_template_object_spread({},props),{rowList:TableColumnWidth_template_rowList,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableColumnWidth_template_object_spread_props(TableColumnWidth_template_object_spread({},col),{width:width}):col}))}}))};try{TableColumnWidthTemplate.displayName="TableColumnWidthTemplate",TableColumnWidthTemplate.__docgenInfo={description:"",displayName:"TableColumnWidthTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableColumnWidth.template.tsx#TableColumnWidthTemplate"]={docgenInfo:TableColumnWidthTemplate.__docgenInfo,name:"TableColumnWidthTemplate",path:"src/components/Table/stories/TableColumnWidth.template.tsx#TableColumnWidthTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableCheckbox_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableCheckbox_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableCheckbox_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableCheckbox_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableCheckbox_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableCheckbox_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableCheckbox_template_define_property(target,key,source[key])})}return target}function TableCheckbox_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableCheckbox_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableCheckbox_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableCheckbox_template_sliced_to_array(arr,i){return TableCheckbox_template_array_with_holes(arr)||TableCheckbox_template_iterable_to_array_limit(arr,i)||TableCheckbox_template_unsupported_iterable_to_array(arr,i)||TableCheckbox_template_non_iterable_rest()}function TableCheckbox_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableCheckbox_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableCheckbox_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableCheckbox_template_array_like_to_array(o,minLen)}}function TableCheckbox_template_templateObject(){var data=TableCheckbox_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableCheckbox_template_templateObject=function _templateObject(){return data},data}var TableCheckbox_template_AmountCell=styled_components_browser_esm.Ay.div(TableCheckbox_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableCheckbox_template_numberFormatter=new Intl.NumberFormat,TableCheckbox_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckbox_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCheckbox_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableCheckbox_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableCheckboxTemplate=function(props){var _React_useState=TableCheckbox_template_sliced_to_array(react.useState(TableCheckbox_template_rowList),2),rows=_React_useState[0],setRows=_React_useState[1],_React_useState1=TableCheckbox_template_sliced_to_array(react.useState(TableCheckbox_template_columnList),2),cols=_React_useState1[0],setCols=_React_useState1[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableCheckbox_template_object_spread_props(TableCheckbox_template_object_spread({},props),{rowList:rows,columnList:cols,displayRowSelectionColumn:!0,onRowSelectionChange:function(ids){setRows(rows.map(function(row){return TableCheckbox_template_object_spread_props(TableCheckbox_template_object_spread({},row),{selected:ids[row.id]})}))},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableCheckbox_template_object_spread_props(TableCheckbox_template_object_spread({},col),{width:width}):col}))}}))};try{TableCheckboxTemplate.displayName="TableCheckboxTemplate",TableCheckboxTemplate.__docgenInfo={description:"",displayName:"TableCheckboxTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableCheckbox.template.tsx#TableCheckboxTemplate"]={docgenInfo:TableCheckboxTemplate.__docgenInfo,name:"TableCheckboxTemplate",path:"src/components/Table/stories/TableCheckbox.template.tsx#TableCheckboxTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableStyle_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableStyle_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableStyle_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableStyle_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableStyle_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableStyle_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableStyle_template_define_property(target,key,source[key])})}return target}function TableStyle_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableStyle_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableStyle_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableStyle_template_sliced_to_array(arr,i){return TableStyle_template_array_with_holes(arr)||TableStyle_template_iterable_to_array_limit(arr,i)||TableStyle_template_unsupported_iterable_to_array(arr,i)||TableStyle_template_non_iterable_rest()}function TableStyle_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableStyle_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableStyle_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableStyle_template_array_like_to_array(o,minLen)}}function TableStyle_template_templateObject(){var data=TableStyle_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableStyle_template_templateObject=function _templateObject(){return data},data}var TableStyle_template_AmountCell=styled_components_browser_esm.Ay.div(TableStyle_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableStyle_template_numberFormatter=new Intl.NumberFormat,TableStyle_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableStyle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableStyle_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableStyleTemplate=function(props){var _React_useState=TableStyle_template_sliced_to_array(react.useState(TableStyle_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableStyle_template_object_spread_props(TableStyle_template_object_spread({},props),{rowList:TableStyle_template_rowList,columnList:cols,greyHeader:!0,showBorders:!0,spacingBetweenItems:"20px",style:{maxHeight:"400px"},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableStyle_template_object_spread_props(TableStyle_template_object_spread({},col),{width:width}):col}))}}))};try{TableStyleTemplate.displayName="TableStyleTemplate",TableStyleTemplate.__docgenInfo={description:"",displayName:"TableStyleTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableStyle.template.tsx#TableStyleTemplate"]={docgenInfo:TableStyleTemplate.__docgenInfo,name:"TableStyleTemplate",path:"src/components/Table/stories/TableStyle.template.tsx#TableStyleTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableOrientation_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableOrientation_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableOrientation_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableOrientation_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableOrientation_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableOrientation_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableOrientation_template_define_property(target,key,source[key])})}return target}function TableOrientation_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableOrientation_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableOrientation_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableOrientation_template_sliced_to_array(arr,i){return TableOrientation_template_array_with_holes(arr)||TableOrientation_template_iterable_to_array_limit(arr,i)||TableOrientation_template_unsupported_iterable_to_array(arr,i)||TableOrientation_template_non_iterable_rest()}function TableOrientation_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableOrientation_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableOrientation_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableOrientation_template_array_like_to_array(o,minLen)}}function TableOrientation_template_templateObject(){var data=TableOrientation_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableOrientation_template_templateObject=function _templateObject(){return data},data}var TableOrientation_template_AmountCell=styled_components_browser_esm.Ay.div(TableOrientation_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableOrientation_template_numberFormatter=new Intl.NumberFormat,TableOrientation_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientation_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableOrientation_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableOrientation_template_columnList=[{name:"transfer_type",title:"Тип сделки",width:150},{name:"transfer_date",title:"Дата сделки"},{name:"transfer_amount",title:"Сумма",cellAlign:"right",width:150},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка",cellAlign:"right"}],TableOrientationTemplate=function(props){var _React_useState=TableOrientation_template_sliced_to_array(react.useState(TableOrientation_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableOrientation_template_object_spread_props(TableOrientation_template_object_spread({},props),{rowList:TableOrientation_template_rowList,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableOrientation_template_object_spread_props(TableOrientation_template_object_spread({},col),{width:width}):col}))}}))};try{TableOrientationTemplate.displayName="TableOrientationTemplate",TableOrientationTemplate.__docgenInfo={description:"",displayName:"TableOrientationTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableOrientation.template.tsx#TableOrientationTemplate"]={docgenInfo:TableOrientationTemplate.__docgenInfo,name:"TableOrientationTemplate",path:"src/components/Table/stories/TableOrientation.template.tsx#TableOrientationTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableSort_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableSort_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function _array_without_holes(arr){if(Array.isArray(arr))return TableSort_template_array_like_to_array(arr)}function TableSort_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function TableSort_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableSort_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableSort_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableSort_template_define_property(target,key,source[key])})}return target}function TableSort_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableSort_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableSort_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableSort_template_sliced_to_array(arr,i){return TableSort_template_array_with_holes(arr)||TableSort_template_iterable_to_array_limit(arr,i)||TableSort_template_unsupported_iterable_to_array(arr,i)||TableSort_template_non_iterable_rest()}function _to_consumable_array(arr){return _array_without_holes(arr)||_iterable_to_array(arr)||TableSort_template_unsupported_iterable_to_array(arr)||_non_iterable_spread()}function TableSort_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableSort_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableSort_template_array_like_to_array(o,minLen)}}var TableSort_template_numberFormatter=new Intl.NumberFormat("ru-RU"),TableSort_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:TableSort_template_numberFormatter.format(5e5),currency:"RUB",rate:TableSort_template_numberFormatter.format(2)},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2021-04-05").toLocaleDateString(),transfer_amount:TableSort_template_numberFormatter.format(325e8),currency:"RUB",rate:TableSort_template_numberFormatter.format(5)},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-11-06").toLocaleDateString(),transfer_amount:TableSort_template_numberFormatter.format(189e6),currency:"RUB",rate:TableSort_template_numberFormatter.format(6)},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2010-12-09").toLocaleDateString(),transfer_amount:TableSort_template_numberFormatter.format(35e7),currency:"RUB",rate:TableSort_template_numberFormatter.format(1)},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2019-08-06").toLocaleDateString(),transfer_amount:TableSort_template_numberFormatter.format(6e4),currency:"RUB",rate:TableSort_template_numberFormatter.format(4)},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2021-04-05").toLocaleDateString(),transfer_amount:TableSort_template_numberFormatter.format(7e5),currency:"RUB",rate:TableSort_template_numberFormatter.format(1)},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2019-12-01").toLocaleDateString(),transfer_amount:TableSort_template_numberFormatter.format(5e5),currency:"RUB",rate:TableSort_template_numberFormatter.format(8)}],TableSort_template_columnList=[{name:"transfer_type",title:"Тип сделки",width:150},{name:"transfer_date",title:"Дата сделки",width:150,sortable:!0,type:"date"},{name:"transfer_amount",title:"Сумма",width:170,sortable:!0,type:"number"},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка",sortable:!0,type:"number"}],StrToTime=function(str){return new Date(str.split(".").reverse().join("-")).getTime()},TableSortTemplate=function(props){var _React_useState=TableSort_template_sliced_to_array(react.useState(_to_consumable_array(TableSort_template_rowList)),2),rows=_React_useState[0],setRows=_React_useState[1],_React_useState1=TableSort_template_sliced_to_array(react.useState(_to_consumable_array(TableSort_template_columnList)),2),cols=_React_useState1[0],setCols=_React_useState1[1],_React_useState2=TableSort_template_sliced_to_array(react.useState(0),2),sortLevel=_React_useState2[0],setSortLevel=_React_useState2[1],calcSortOrder=function(columns){var newCols=_to_consumable_array(columns),sortColumns=_to_consumable_array(newCols).filter(function(column){return!!column.sort}).sort(function(a,b){return(a.sortOrder||0)-(b.sortOrder||0)});return sortColumns.forEach(function(col,index){index<2?col.sortOrder=index+1:(col.sortOrder=void 0,col.sort=void 0)}),setSortLevel(sortColumns.length),newCols},compare=function(a,b,colName,sort,colType){return"asc"===sort?"date"===colType?StrToTime(a[colName])-StrToTime(b[colName]):Number(a[colName].replace(/\D/g,""))-Number(b[colName].replace(/\D/g,"")):"date"===colType?StrToTime(b[colName])-StrToTime(a[colName]):Number(b[colName].replace(/\D/g,""))-Number(a[colName].replace(/\D/g,""))};return react.useEffect(function(){var sortColumns=cols.filter(function(column){return!!column.sort}).sort(function(a,b){return(a.sortOrder||0)-(b.sortOrder||0)}).reduce(function(acc,param){var name=param.name,sort=param.sort,type=param.type;return sort&&(acc[name]={sort:sort,type:type}),acc},{});if(0===Object.keys(sortColumns).length)setRows(_to_consumable_array(TableSort_template_rowList));else{var names=Object.keys(sortColumns);setRows(_to_consumable_array(rows).sort(function(a,b){var result=compare(a,b,names[0],sortColumns[names[0]].sort,sortColumns[names[0]].type);return!result&&names.length>1?compare(a,b,names[1],sortColumns[names[1]].sort,sortColumns[names[1]].type):result}))}},[cols]),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableSort_template_object_spread_props(TableSort_template_object_spread({},props),{columnList:cols,rowList:rows,onSortChange:function(param){var name=param.name,sort=param.sort;if("initial"===sort)setCols(calcSortOrder(_to_consumable_array(cols).map(function(col){return col.name===name?TableSort_template_object_spread_props(TableSort_template_object_spread({},col),{sort:void 0,sortOrder:void 0}):TableSort_template_object_spread({},col)})));else if("asc"===sort){if(2===sortLevel){var firstOrderCol=cols.find(function(col){return 1===col.sortOrder});firstOrderCol&&(firstOrderCol.sort&&(firstOrderCol.sort=void 0),firstOrderCol.sortOrder&&(firstOrderCol.sortOrder=void 0))}setCols(calcSortOrder(_to_consumable_array(cols).map(function(col){var newCol=TableSort_template_object_spread({},col);return col.name===name&&(newCol.sort="asc",newCol.sortOrder=sortLevel+1),newCol})))}else setCols(_to_consumable_array(cols).map(function(col){return col.name===name?TableSort_template_object_spread_props(TableSort_template_object_spread({},col),{sort:"desc"}):TableSort_template_object_spread({},col)}))},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableSort_template_object_spread_props(TableSort_template_object_spread({},col),{width:width}):col}))}}))};try{TableSortTemplate.displayName="TableSortTemplate",TableSortTemplate.__docgenInfo={description:"",displayName:"TableSortTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableSort.template.tsx#TableSortTemplate"]={docgenInfo:TableSortTemplate.__docgenInfo,name:"TableSortTemplate",path:"src/components/Table/stories/TableSort.template.tsx#TableSortTemplate"})}catch(__react_docgen_typescript_loader_error){}var FieldSet=__webpack_require__("./src/components/form/FieldSet/index.tsx"),RadioButton=__webpack_require__("./src/components/RadioButton/index.tsx"),Button=__webpack_require__("./src/components/Button/index.tsx"),DateField=__webpack_require__("./src/components/form/DateField/index.tsx");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgAcceptSolid=function SvgAcceptSolid(props){return /*#__PURE__*/react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M11.76 3.01c-1.93 0-3.36 1.79-2.93 3.66L10.27 13H5.58c-.82 0-1.44.74-1.28 1.55l.21 1.05a3.01 3.01 0 0 0 2.95 2.41h9.07a3.01 3.01 0 0 0 2.95-2.41l.21-1.05c.16-.81-.46-1.55-1.28-1.55h-4.57l1.37-6.36c.4-1.87-1.02-3.63-2.93-3.63zM6.42 20.32c0-.36.29-.65.65-.65h9.85c.36 0 .65.29.65.65s-.29.65-.65.65H7.07c-.36 0-.65-.29-.65-.65"})))};function TableFilter_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableFilter_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableFilter_template_array_without_holes(arr){if(Array.isArray(arr))return TableFilter_template_array_like_to_array(arr)}function TableFilter_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableFilter_template_iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function TableFilter_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableFilter_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableFilter_template_non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableFilter_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableFilter_template_define_property(target,key,source[key])})}return target}function TableFilter_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableFilter_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableFilter_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableFilter_template_sliced_to_array(arr,i){return TableFilter_template_array_with_holes(arr)||TableFilter_template_iterable_to_array_limit(arr,i)||TableFilter_template_unsupported_iterable_to_array(arr,i)||TableFilter_template_non_iterable_rest()}function TableFilter_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableFilter_template_to_consumable_array(arr){return TableFilter_template_array_without_holes(arr)||TableFilter_template_iterable_to_array(arr)||TableFilter_template_unsupported_iterable_to_array(arr)||TableFilter_template_non_iterable_spread()}function TableFilter_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableFilter_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableFilter_template_array_like_to_array(o,minLen)}}function TableFilter_template_templateObject(){var data=TableFilter_template_tagged_template_literal(["\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n"]);return TableFilter_template_templateObject=function _templateObject(){return data},data}function TableFilter_template_templateObject1(){var data=TableFilter_template_tagged_template_literal(["\n  display: flex;\n  margin-top: 28px;\n  & > button:first-child {\n    margin-right: 8px;\n  }\n"]);return TableFilter_template_templateObject1=function _templateObject(){return data},data}__webpack_require__.p;var TableFilter_template_numberFormatter=new Intl.NumberFormat,TableFilter_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:TableFilter_template_numberFormatter.format(5e5),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2021-04-05").toLocaleDateString(),transfer_amount:TableFilter_template_numberFormatter.format(325e8),currency:"RUB",rate:5.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-11-06").toLocaleDateString(),transfer_amount:TableFilter_template_numberFormatter.format(189e6),currency:"RUB",rate:6},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2010-12-09").toLocaleDateString(),transfer_amount:TableFilter_template_numberFormatter.format(35e7),currency:"RUB",rate:1},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2019-08-06").toLocaleDateString(),transfer_amount:TableFilter_template_numberFormatter.format(6e4),currency:"RUB",rate:4},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2021-04-05").toLocaleDateString(),transfer_amount:TableFilter_template_numberFormatter.format(7e5),currency:"RUB",rate:1},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2019-12-01").toLocaleDateString(),transfer_amount:TableFilter_template_numberFormatter.format(5e5),currency:"RUB",rate:4}],TableFilter_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],Wrapper=styled_components_browser_esm.Ay.div(TableFilter_template_templateObject()),ButtonWrapper=styled_components_browser_esm.Ay.div(TableFilter_template_templateObject1()),TableFilterTemplate=function(props){var _React_useState=TableFilter_template_sliced_to_array(react.useState(""),2),selected=_React_useState[0],setSelected=_React_useState[1],_React_useState1=TableFilter_template_sliced_to_array(react.useState(""),2),selectedDate=_React_useState1[0],setSelectedDate=_React_useState1[1],_React_useState2=TableFilter_template_sliced_to_array(react.useState(TableFilter_template_to_consumable_array(TableFilter_template_rowList)),2),rows=_React_useState2[0],setRows=_React_useState2[1],_React_useState3=TableFilter_template_sliced_to_array(react.useState(TableFilter_template_to_consumable_array(TableFilter_template_columnList)),2),columns=_React_useState3[0],setCols=_React_useState3[1],_React_useState4=TableFilter_template_sliced_to_array(react.useState(!1),2),numFilterActive=_React_useState4[0],setNumFilterActive=_React_useState4[1],_React_useState5=TableFilter_template_sliced_to_array(react.useState(!1),2),dateFilterActive=_React_useState5[0],setDateFilterActive=_React_useState5[1],renderNumFilter=function(param,column){var closeMenu=param.closeMenu;return/*#__PURE__*/(0,jsx_runtime.jsxs)(Wrapper,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)(FieldSet.n,{legend:"Варианты фильтрации:",onChange:function(e){setSelected(e.target.value)},children:[/*#__PURE__*/(0,jsx_runtime.jsx)(RadioButton.a,{value:"1",name:"test",defaultChecked:"1"===selected,children:"Сумма превышает миллиард"}),/*#__PURE__*/(0,jsx_runtime.jsx)(RadioButton.a,{value:"2",name:"test",defaultChecked:"2"===selected,children:"Сумма меньше миллиарда"})]}),/*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonWrapper,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Button.$n,{dimension:"m",onClick:function(){closeMenu(),setNumFilterActive(!0),"1"===selected?setRows(TableFilter_template_rowList.filter(function(row){return Number(row[column.name].replace(/\D/g,""))>1e9})):setRows(TableFilter_template_rowList.filter(function(row){return 1e9>Number(row[column.name].replace(/\D/g,""))}))},children:"Применить"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Button.$n,{dimension:"m",onClick:function(){closeMenu(),setNumFilterActive(!1),setSelected(""),setRows(TableFilter_template_to_consumable_array(TableFilter_template_rowList))},children:"Очистить"})]})]})},renderDateFilter=function(param,column){var closeMenu=param.closeMenu;return/*#__PURE__*/(0,jsx_runtime.jsxs)(Wrapper,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(DateField.v,{label:"Выберите дату:",value:selectedDate,onChange:function(e){setSelectedDate(e.target.value)}}),/*#__PURE__*/(0,jsx_runtime.jsxs)(ButtonWrapper,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(Button.$n,{dimension:"m",onClick:function(){closeMenu(),setDateFilterActive(!0),setRows(TableFilter_template_rowList.filter(function(row){return row[column.name]===selectedDate}))},children:"Применить"}),/*#__PURE__*/(0,jsx_runtime.jsx)(Button.$n,{dimension:"m",onClick:function(){closeMenu(),setDateFilterActive(!1),setSelectedDate(""),setRows(TableFilter_template_to_consumable_array(TableFilter_template_rowList))},children:"Очистить"})]})]})},onFilterMenuClickOutside=function(param){return(0,param.closeMenu)()},cols=react.useMemo(function(){return columns.map(function(col,index){return 0===index?TableFilter_template_object_spread_props(TableFilter_template_object_spread({},col),{renderFilter:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(Wrapper,{children:"Пример кастомизации иконки фильтра с помощью функции renderFilterIcon"})},renderFilterIcon:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(SvgAcceptSolid,{})},onFilterMenuClickOutside:onFilterMenuClickOutside}):1===index?TableFilter_template_object_spread_props(TableFilter_template_object_spread({},col),{isFilterActive:dateFilterActive,renderFilter:renderDateFilter,onFilterMenuClickOutside:onFilterMenuClickOutside}):2===index?TableFilter_template_object_spread_props(TableFilter_template_object_spread({},col),{isFilterActive:numFilterActive,renderFilter:renderNumFilter,onFilterMenuClose:function(){return console.log("filter menu close")},onFilterMenuOpen:function(){return console.log("filter menu open")},onFilterMenuClickOutside:onFilterMenuClickOutside}):4===index?TableFilter_template_object_spread_props(TableFilter_template_object_spread({},col),{cellAlign:"right",renderFilter:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(Wrapper,{children:"Пример отображения фильтра в колонке с выравниванием по правому краю"})},onFilterMenuClickOutside:onFilterMenuClickOutside}):col})},[columns,selected,selectedDate,numFilterActive,dateFilterActive]);return/*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableFilter_template_object_spread_props(TableFilter_template_object_spread({},props),{columnList:cols,rowList:rows,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableFilter_template_object_spread_props(TableFilter_template_object_spread({},col),{width:width}):col}))}}))})};try{TableFilterTemplate.displayName="TableFilterTemplate",TableFilterTemplate.__docgenInfo={description:"",displayName:"TableFilterTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableFilter.template.tsx#TableFilterTemplate"]={docgenInfo:TableFilterTemplate.__docgenInfo,name:"TableFilterTemplate",path:"src/components/Table/stories/TableFilter.template.tsx#TableFilterTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableMultiline_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableMultiline_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableMultiline_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableMultiline_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableMultiline_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableMultiline_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableMultiline_template_define_property(target,key,source[key])})}return target}function TableMultiline_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableMultiline_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableMultiline_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableMultiline_template_sliced_to_array(arr,i){return TableMultiline_template_array_with_holes(arr)||TableMultiline_template_iterable_to_array_limit(arr,i)||TableMultiline_template_unsupported_iterable_to_array(arr,i)||TableMultiline_template_non_iterable_rest()}function TableMultiline_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableMultiline_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableMultiline_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableMultiline_template_array_like_to_array(o,minLen)}}function TableMultiline_template_templateObject(){var data=TableMultiline_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableMultiline_template_templateObject=function _templateObject(){return data},data}var TableMultiline_template_AmountCell=styled_components_browser_esm.Ay.div(TableMultiline_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableMultiline_template_numberFormatter=new Intl.NumberFormat,TableMultiline_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableMultiline_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableMultiline_template_numberFormatter.format(18e6)})}),currency:"RUB",customer:"Иванов Иван Петрович",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableMultiline_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableMultiline_template_numberFormatter.format(325e8)})}),currency:"RUB",customer:"Смиронова Ольга Валерьевна",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableMultiline_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableMultiline_template_numberFormatter.format(18e6)})}),currency:"RUB",customer:"Зверев Игорь Сергеевич",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableMultiline_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableMultiline_template_numberFormatter.format(325e8)})}),currency:"RUB",customer:"Потапов Иван Александрович",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableMultiline_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableMultiline_template_numberFormatter.format(18e6)})}),currency:"RUB",customer:"Шилова Вера Павловна",rate:2.5}],TableMultiline_template_columnList=[{name:"transfer_type",title:"Тип сделки покупки недвижимости",width:180},{name:"transfer_date",title:"Дата сделки",width:135},{name:"transfer_amount",title:"Сумма сделки",width:120},{name:"currency",title:"Валюта"},{name:"customer",title:"Покупатель",width:145},{name:"rate",title:"Ставка на момент совершения сделки",width:120}],TableMultilineTemplate=function(props){var _React_useState=TableMultiline_template_sliced_to_array(react.useState(TableMultiline_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableMultiline_template_object_spread_props(TableMultiline_template_object_spread({},props),{rowList:TableMultiline_template_rowList,columnList:cols,headerLineClamp:2,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableMultiline_template_object_spread_props(TableMultiline_template_object_spread({},col),{width:width}):col}))}}))};try{TableMultilineTemplate.displayName="TableMultilineTemplate",TableMultilineTemplate.__docgenInfo={description:"",displayName:"TableMultilineTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableMultiline.template.tsx#TableMultilineTemplate"]={docgenInfo:TableMultilineTemplate.__docgenInfo,name:"TableMultilineTemplate",path:"src/components/Table/stories/TableMultiline.template.tsx#TableMultilineTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableSticky_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableSticky_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableSticky_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableSticky_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableSticky_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableSticky_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableSticky_template_define_property(target,key,source[key])})}return target}function TableSticky_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableSticky_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableSticky_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableSticky_template_sliced_to_array(arr,i){return TableSticky_template_array_with_holes(arr)||TableSticky_template_iterable_to_array_limit(arr,i)||TableSticky_template_unsupported_iterable_to_array(arr,i)||TableSticky_template_non_iterable_rest()}function TableSticky_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableSticky_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableSticky_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableSticky_template_array_like_to_array(o,minLen)}}function TableSticky_template_templateObject(){var data=TableSticky_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableSticky_template_templateObject=function _templateObject(){return data},data}var TableSticky_template_AmountCell=styled_components_browser_esm.Ay.div(TableSticky_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableSticky_template_numberFormatter=new Intl.NumberFormat,TableSticky_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableSticky_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableSticky_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableSticky_template_columnList=[{name:"transfer_type",title:"Тип сделки",width:"20%",sticky:!0},{name:"transfer_date",title:"Дата сделки",width:150,sticky:!0},{name:"transfer_amount",title:"Сумма",width:300},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableStickyTemplate=function(props){var _React_useState=TableSticky_template_sliced_to_array(react.useState(TableSticky_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableSticky_template_object_spread_props(TableSticky_template_object_spread({},props),{rowList:TableSticky_template_rowList,columnList:cols,style:{maxHeight:"300px",maxWidth:"700px"},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableSticky_template_object_spread_props(TableSticky_template_object_spread({},col),{width:width}):col}))}}))};try{TableStickyTemplate.displayName="TableStickyTemplate",TableStickyTemplate.__docgenInfo={description:"",displayName:"TableStickyTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableSticky.template.tsx#TableStickyTemplate"]={docgenInfo:TableStickyTemplate.__docgenInfo,name:"TableStickyTemplate",path:"src/components/Table/stories/TableSticky.template.tsx#TableStickyTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableRowState_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableRowState_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableRowState_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableRowState_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableRowState_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableRowState_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableRowState_template_define_property(target,key,source[key])})}return target}function TableRowState_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableRowState_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableRowState_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableRowState_template_sliced_to_array(arr,i){return TableRowState_template_array_with_holes(arr)||TableRowState_template_iterable_to_array_limit(arr,i)||TableRowState_template_unsupported_iterable_to_array(arr,i)||TableRowState_template_non_iterable_rest()}function TableRowState_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableRowState_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableRowState_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableRowState_template_array_like_to_array(o,minLen)}}function TableRowState_template_templateObject(){var data=TableRowState_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableRowState_template_templateObject=function _templateObject(){return data},data}var TableRowState_template_AmountCell=styled_components_browser_esm.Ay.div(TableRowState_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableRowState_template_numberFormatter=new Intl.NumberFormat,TableRowState_template_rowList=[{id:"0001",selected:!0,hover:!0,transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowState_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowState_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",disabled:!0,transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowState_template_AmountCell,{"data-disabled":!0,children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowState_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",status:"error",hover:!0,transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowState_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowState_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",status:"success",hover:!0,transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowState_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowState_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",status:"attention",hover:!0,transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowState_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowState_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0006",status:"warning",hover:!0,transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowState_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowState_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",hover:!0,transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowState_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowState_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableRowState_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableRowStateTemplate=function(props){var _React_useState=TableRowState_template_sliced_to_array(react.useState(TableRowState_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableRowState_template_object_spread_props(TableRowState_template_object_spread({},props),{rowList:TableRowState_template_rowList,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableRowState_template_object_spread_props(TableRowState_template_object_spread({},col),{width:width}):col}))},rowBackgroundColorByStatusMap:{attention:function(color){return color["Attention/Attention 20"]},warning:function(color){return color["Warning/Warning 20"]}}}))};try{TableRowStateTemplate.displayName="TableRowStateTemplate",TableRowStateTemplate.__docgenInfo={description:"",displayName:"TableRowStateTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableRowState.template.tsx#TableRowStateTemplate"]={docgenInfo:TableRowStateTemplate.__docgenInfo,name:"TableRowStateTemplate",path:"src/components/Table/stories/TableRowState.template.tsx#TableRowStateTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableZebra_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableZebra_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableZebra_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableZebra_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableZebra_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableZebra_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableZebra_template_define_property(target,key,source[key])})}return target}function TableZebra_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableZebra_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableZebra_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableZebra_template_sliced_to_array(arr,i){return TableZebra_template_array_with_holes(arr)||TableZebra_template_iterable_to_array_limit(arr,i)||TableZebra_template_unsupported_iterable_to_array(arr,i)||TableZebra_template_non_iterable_rest()}function TableZebra_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableZebra_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableZebra_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableZebra_template_array_like_to_array(o,minLen)}}function TableZebra_template_templateObject(){var data=TableZebra_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableZebra_template_templateObject=function _templateObject(){return data},data}var TableZebra_template_AmountCell=styled_components_browser_esm.Ay.div(TableZebra_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableZebra_template_numberFormatter=new Intl.NumberFormat,TableZebra_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebra_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableZebra_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableZebra_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableZebraTemplate=function(props){var _React_useState=TableZebra_template_sliced_to_array(react.useState(TableZebra_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableZebra_template_object_spread_props(TableZebra_template_object_spread({},props),{rowList:TableZebra_template_rowList,columnList:cols,greyHeader:!0,greyZebraRows:!0,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableZebra_template_object_spread_props(TableZebra_template_object_spread({},col),{width:width}):col}))}}))};try{TableZebraTemplate.displayName="TableZebraTemplate",TableZebraTemplate.__docgenInfo={description:"",displayName:"TableZebraTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableZebra.template.tsx#TableZebraTemplate"]={docgenInfo:TableZebraTemplate.__docgenInfo,name:"TableZebraTemplate",path:"src/components/Table/stories/TableZebra.template.tsx#TableZebraTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableExpand_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableExpand_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableExpand_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableExpand_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableExpand_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableExpand_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableExpand_template_define_property(target,key,source[key])})}return target}function TableExpand_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableExpand_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableExpand_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableExpand_template_sliced_to_array(arr,i){return TableExpand_template_array_with_holes(arr)||TableExpand_template_iterable_to_array_limit(arr,i)||TableExpand_template_unsupported_iterable_to_array(arr,i)||TableExpand_template_non_iterable_rest()}function TableExpand_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableExpand_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableExpand_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableExpand_template_array_like_to_array(o,minLen)}}function TableExpand_template_templateObject(){var data=TableExpand_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableExpand_template_templateObject=function _templateObject(){return data},data}function TableExpand_template_templateObject1(){var data=TableExpand_template_tagged_template_literal(["\n  display: flex;\n  width: 100%;\n  background: var(--admiral-color-Cyan_Cyan10, ",");\n  padding: 16px;\n"]);return TableExpand_template_templateObject1=function _templateObject(){return data},data}function _templateObject2(){var data=TableExpand_template_tagged_template_literal(["\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  padding-left: 16px;\n  background: var(--admiral-color-Special_ElevatedBG, ",");\n  & > div {\n    margin-bottom: 8px;\n  }\n"]);return _templateObject2=function _templateObject(){return data},data}var TableExpand_template_AmountCell=styled_components_browser_esm.Ay.div(TableExpand_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableExpand_template_Wrapper=styled_components_browser_esm.Ay.div(TableExpand_template_templateObject1(),function(p){return p.theme.color["Cyan/Cyan 10"]}),Content=styled_components_browser_esm.Ay.div(_templateObject2(),function(p){return p.theme.color["Special/Elevated BG"]}),expandedRowRender=function(row){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpand_template_Wrapper,{children:/*#__PURE__*/(0,jsx_runtime.jsxs)(Content,{children:[/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:["Тип сделки: ",row.transfer_type]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:["Дата сделки: ",row.transfer_date]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:["Валюта: ",row.currency]}),/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:["Ставка: ",row.rate]})]})})},TableExpand_template_numberFormatter=new Intl.NumberFormat,TableExpand_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpand_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExpand_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpand_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExpand_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5,expanded:!0,expandedRowRender:expandedRowRender},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpand_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExpand_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5,expandedRowRender:expandedRowRender},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpand_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExpand_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5,expandedRowRender:expandedRowRender},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpand_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExpand_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5,expandedRowRender:expandedRowRender},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpand_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExpand_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableExpand_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableExpandTemplate=function(props){var _React_useState=TableExpand_template_sliced_to_array(react.useState(TableExpand_template_rowList),2),rows=_React_useState[0],setRows=_React_useState[1],_React_useState1=TableExpand_template_sliced_to_array(react.useState(TableExpand_template_columnList),2),cols=_React_useState1[0],setCols=_React_useState1[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableExpand_template_object_spread_props(TableExpand_template_object_spread({},props),{rowList:rows,columnList:cols,displayRowExpansionColumn:!0,onRowExpansionChange:function(ids){setRows(rows.map(function(row){return TableExpand_template_object_spread_props(TableExpand_template_object_spread({},row),{expanded:ids[row.id]})}))},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableExpand_template_object_spread_props(TableExpand_template_object_spread({},col),{width:width}):col}))}}))};try{TableExpandTemplate.displayName="TableExpandTemplate",TableExpandTemplate.__docgenInfo={description:"",displayName:"TableExpandTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableExpand.template.tsx#TableExpandTemplate"]={docgenInfo:TableExpandTemplate.__docgenInfo,name:"TableExpandTemplate",path:"src/components/Table/stories/TableExpand.template.tsx#TableExpandTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableExtraText_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableExtraText_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableExtraText_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableExtraText_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableExtraText_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableExtraText_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableExtraText_template_define_property(target,key,source[key])})}return target}function TableExtraText_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableExtraText_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableExtraText_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableExtraText_template_sliced_to_array(arr,i){return TableExtraText_template_array_with_holes(arr)||TableExtraText_template_iterable_to_array_limit(arr,i)||TableExtraText_template_unsupported_iterable_to_array(arr,i)||TableExtraText_template_non_iterable_rest()}function TableExtraText_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableExtraText_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableExtraText_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableExtraText_template_array_like_to_array(o,minLen)}}function TableExtraText_template_templateObject(){var data=TableExtraText_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableExtraText_template_templateObject=function _templateObject(){return data},data}var TableExtraText_template_AmountCell=styled_components_browser_esm.Ay.div(TableExtraText_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableExtraText_template_numberFormatter=new Intl.NumberFormat,TableExtraText_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraText_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableExtraText_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableExtraText_template_columnList=[{name:"transfer_type",title:"Тип сделки",width:150},{name:"transfer_date",title:"Дата сделки",extraText:"Не позднее марта текущего года"},{name:"transfer_amount",title:"Сумма",cellAlign:"right",width:150,extraText:"Сумма с учетом налогов"},{name:"currency",title:"Валюта",extraText:"Some additional text"},{name:"rate",title:"Ставка",cellAlign:"right"}],TableExtraTextTemplate=function(props){var _React_useState=TableExtraText_template_sliced_to_array(react.useState(TableExtraText_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableExtraText_template_object_spread_props(TableExtraText_template_object_spread({},props),{rowList:TableExtraText_template_rowList,columnList:cols,headerExtraLineClamp:2,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableExtraText_template_object_spread_props(TableExtraText_template_object_spread({},col),{width:width}):col}))}}))};try{TableExtraTextTemplate.displayName="TableExtraTextTemplate",TableExtraTextTemplate.__docgenInfo={description:"",displayName:"TableExtraTextTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableExtraText.template.tsx#TableExtraTextTemplate"]={docgenInfo:TableExtraTextTemplate.__docgenInfo,name:"TableExtraTextTemplate",path:"src/components/Table/stories/TableExtraText.template.tsx#TableExtraTextTemplate"})}catch(__react_docgen_typescript_loader_error){}var TooltipHOC=__webpack_require__("./src/components/TooltipHOC/index.tsx"),IconPlacement=__webpack_require__("./src/components/IconPlacement/index.tsx");function RowAction_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function RowAction_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){RowAction_define_property(target,key,source[key])})}return target}function RowAction_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function RowAction_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):RowAction_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var RowAction=/*#__PURE__*/react.forwardRef(function(_param,ref){var _param_dimension=_param.dimension,dimension=void 0===_param_dimension?"m":_param_dimension,props=_object_without_properties(_param,["dimension"]);return/*#__PURE__*/(0,jsx_runtime.jsx)(IconPlacement._,RowAction_object_spread_props(RowAction_object_spread({ref:ref,dimension:"s"===dimension||"m"===dimension?"mBig":"lBig",highlightFocus:!1},props),{children:props.children}))});try{RowAction.displayName="RowAction",RowAction.__docgenInfo={description:"",displayName:"RowAction",props:{dimension:{defaultValue:{value:"m"},description:"",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/RowAction.tsx#RowAction"]={docgenInfo:RowAction.__docgenInfo,name:"RowAction",path:"src/components/Table/RowAction.tsx#RowAction"})}catch(__react_docgen_typescript_loader_error){}var MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),OverflowMenu=__webpack_require__("./src/components/OverflowMenu/index.tsx"),DeleteOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/DeleteOutline.svg");function TableOverflowMenu_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableOverflowMenu_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableOverflowMenu_template_array_without_holes(arr){if(Array.isArray(arr))return TableOverflowMenu_template_array_like_to_array(arr)}function TableOverflowMenu_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableOverflowMenu_template_iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function TableOverflowMenu_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableOverflowMenu_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableOverflowMenu_template_non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableOverflowMenu_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableOverflowMenu_template_define_property(target,key,source[key])})}return target}function TableOverflowMenu_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableOverflowMenu_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableOverflowMenu_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableOverflowMenu_template_sliced_to_array(arr,i){return TableOverflowMenu_template_array_with_holes(arr)||TableOverflowMenu_template_iterable_to_array_limit(arr,i)||TableOverflowMenu_template_unsupported_iterable_to_array(arr,i)||TableOverflowMenu_template_non_iterable_rest()}function TableOverflowMenu_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableOverflowMenu_template_to_consumable_array(arr){return TableOverflowMenu_template_array_without_holes(arr)||TableOverflowMenu_template_iterable_to_array(arr)||TableOverflowMenu_template_unsupported_iterable_to_array(arr)||TableOverflowMenu_template_non_iterable_spread()}function TableOverflowMenu_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableOverflowMenu_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableOverflowMenu_template_array_like_to_array(o,minLen)}}function TableOverflowMenu_template_templateObject(){var data=TableOverflowMenu_template_tagged_template_literal(["\n  height: 20px;\n"]);return TableOverflowMenu_template_templateObject=function _templateObject(){return data},data}var TableOverflowMenu_template_Separator=styled_components_browser_esm.Ay.div(TableOverflowMenu_template_templateObject()),StrToDate=function(str){return new Date(str.split(".").reverse().join("-"))},TableOverflowMenu_template_numberFormatter=new Intl.NumberFormat,TooltipedRowAction=(0,TooltipHOC.K)(RowAction),items=[{id:"1",display:"Вывести дату сделки в локали ru"},{id:"2",display:"Вывести дату сделки в локали en-US"},{id:"3",display:"Вывести дату сделки в локали de-AT"}],Menu=function(param){var row=param.row,onVisibilityChange=param.onVisibilityChange,model=react.useMemo(function(){return items.map(function(item){return{id:item.id,render:function(options){return/*#__PURE__*/(0,react.createElement)(MenuItem.D,TableOverflowMenu_template_object_spread_props(TableOverflowMenu_template_object_spread({dimension:"m"},options),{key:item.id,role:"option"}),item.display)}}})},[]);return/*#__PURE__*/(0,jsx_runtime.jsx)(OverflowMenu.o,{onSelectItem:function(id){var options={weekday:"long",year:"numeric",month:"long",day:"numeric"};"1"===id&&alert(StrToDate(row.transfer_date).toLocaleString("ru",options)),"2"===id&&alert(StrToDate(row.transfer_date).toLocaleString("en-US",options)),"3"===id&&alert(StrToDate(row.transfer_date).toLocaleString("de-AT",options))},onVisibilityChange:onVisibilityChange,"aria-label":"Overflow Menu component",dimension:"m",isVertical:!0,items:model})},TableOverflowMenu_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString("ru"),transfer_amount:TableOverflowMenu_template_numberFormatter.format(5e5),currency:"RUB",rate:2.5,overflowMenuRender:function(row,onVisibilityChange){return/*#__PURE__*/(0,jsx_runtime.jsx)(Menu,{row:row,onVisibilityChange:onVisibilityChange})}},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2021-04-05").toLocaleDateString("ru"),transfer_amount:TableOverflowMenu_template_numberFormatter.format(325e8),currency:"RUB",rate:5.5,overflowMenuRender:function(row,onVisibilityChange){return/*#__PURE__*/(0,jsx_runtime.jsx)(Menu,{row:row,onVisibilityChange:onVisibilityChange})}},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-11-06").toLocaleDateString("ru"),transfer_amount:TableOverflowMenu_template_numberFormatter.format(189e6),currency:"RUB",rate:6,actionRender:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(TooltipedRowAction,{renderContent:function(){return"Delete"},onClick:function(){return console.log("row action happens")},children:/*#__PURE__*/(0,jsx_runtime.jsx)(DeleteOutline.h,{})})}},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2010-12-09").toLocaleDateString("ru"),transfer_amount:TableOverflowMenu_template_numberFormatter.format(35e7),currency:"RUB",rate:1,actionRender:function(){return/*#__PURE__*/(0,jsx_runtime.jsx)(TooltipedRowAction,{renderContent:function(){return"Delete"},onClick:function(){return console.log("row action happens")},children:/*#__PURE__*/(0,jsx_runtime.jsx)(DeleteOutline.h,{})})}},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2019-08-06").toLocaleDateString("ru"),transfer_amount:TableOverflowMenu_template_numberFormatter.format(6e4),currency:"RUB",rate:4}],TableOverflowMenu_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableOverflowMenuTemplate=function(props){var _React_useState=TableOverflowMenu_template_sliced_to_array(react.useState(TableOverflowMenu_template_to_consumable_array(TableOverflowMenu_template_columnList)),2),cols=_React_useState[0],setCols=_React_useState[1],_React_useState1=TableOverflowMenu_template_sliced_to_array(react.useState(TableOverflowMenu_template_to_consumable_array(TableOverflowMenu_template_columnList)),2),cols2=_React_useState1[0],setCols2=_React_useState1[1];return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",children:"Пример с иконками действий над строками, которые видны только по ховеру"}),/*#__PURE__*/(0,jsx_runtime.jsx)(TableOverflowMenu_template_Separator,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableOverflowMenu_template_object_spread_props(TableOverflowMenu_template_object_spread({},props),{dimension:"m",rowList:TableOverflowMenu_template_rowList,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableOverflowMenu_template_object_spread_props(TableOverflowMenu_template_object_spread({},col),{width:width}):col}))}})),/*#__PURE__*/(0,jsx_runtime.jsx)(TableOverflowMenu_template_Separator,{style:{height:"40px"}}),/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",children:"Пример с постоянно видимыми иконками действий над строками"}),/*#__PURE__*/(0,jsx_runtime.jsx)(TableOverflowMenu_template_Separator,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableOverflowMenu_template_object_spread_props(TableOverflowMenu_template_object_spread({},props),{dimension:"m",rowList:TableOverflowMenu_template_rowList,columnList:cols2,onColumnResize:function(param){var name=param.name,width=param.width;setCols2(cols2.map(function(col){return col.name===name?TableOverflowMenu_template_object_spread_props(TableOverflowMenu_template_object_spread({},col),{width:width}):col}))},showRowsActions:!0}))]})};try{TableOverflowMenuTemplate.displayName="TableOverflowMenuTemplate",TableOverflowMenuTemplate.__docgenInfo={description:"",displayName:"TableOverflowMenuTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableOverflowMenu.template.tsx#TableOverflowMenuTemplate"]={docgenInfo:TableOverflowMenuTemplate.__docgenInfo,name:"TableOverflowMenuTemplate",path:"src/components/Table/stories/TableOverflowMenu.template.tsx#TableOverflowMenuTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableFixedVirtualScroll_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableFixedVirtualScroll_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableFixedVirtualScroll_template_array_without_holes(arr){if(Array.isArray(arr))return TableFixedVirtualScroll_template_array_like_to_array(arr)}function TableFixedVirtualScroll_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableFixedVirtualScroll_template_iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function TableFixedVirtualScroll_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableFixedVirtualScroll_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableFixedVirtualScroll_template_non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableFixedVirtualScroll_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableFixedVirtualScroll_template_define_property(target,key,source[key])})}return target}function TableFixedVirtualScroll_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableFixedVirtualScroll_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableFixedVirtualScroll_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableFixedVirtualScroll_template_sliced_to_array(arr,i){return TableFixedVirtualScroll_template_array_with_holes(arr)||TableFixedVirtualScroll_template_iterable_to_array_limit(arr,i)||TableFixedVirtualScroll_template_unsupported_iterable_to_array(arr,i)||TableFixedVirtualScroll_template_non_iterable_rest()}function TableFixedVirtualScroll_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableFixedVirtualScroll_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableFixedVirtualScroll_template_array_like_to_array(o,minLen)}}var TableFixedVirtualScroll_template_rowList=(function TableFixedVirtualScroll_template_to_consumable_array(arr){return TableFixedVirtualScroll_template_array_without_holes(arr)||TableFixedVirtualScroll_template_iterable_to_array(arr)||TableFixedVirtualScroll_template_unsupported_iterable_to_array(arr)||TableFixedVirtualScroll_template_non_iterable_spread()})(Array(1e3).keys()).map(function(_item,index){return{id:String(index),transfer_number:index,transfer_date:new Date("2020-08-06").toLocaleDateString()}}),TableFixedVirtualScroll_template_columnList=[{name:"transfer_number",title:"Номер сделки",width:"40%"},{name:"transfer_date",title:"Дата сделки",width:"40%"}],TableFixedVirtualScrollTemplate=function(props){var _React_useState=TableFixedVirtualScroll_template_sliced_to_array(react.useState(TableFixedVirtualScroll_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableFixedVirtualScroll_template_object_spread_props(TableFixedVirtualScroll_template_object_spread({},props),{columnList:cols,rowList:TableFixedVirtualScroll_template_rowList,virtualScroll:{fixedRowHeight:40},style:{height:"500px"},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableFixedVirtualScroll_template_object_spread_props(TableFixedVirtualScroll_template_object_spread({},col),{width:width}):col}))}}))};try{TableFixedVirtualScrollTemplate.displayName="TableFixedVirtualScrollTemplate",TableFixedVirtualScrollTemplate.__docgenInfo={description:"",displayName:"TableFixedVirtualScrollTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableFixedVirtualScroll.template.tsx#TableFixedVirtualScrollTemplate"]={docgenInfo:TableFixedVirtualScrollTemplate.__docgenInfo,name:"TableFixedVirtualScrollTemplate",path:"src/components/Table/stories/TableFixedVirtualScroll.template.tsx#TableFixedVirtualScrollTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableDynamicVirtualScroll_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableDynamicVirtualScroll_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableDynamicVirtualScroll_template_array_without_holes(arr){if(Array.isArray(arr))return TableDynamicVirtualScroll_template_array_like_to_array(arr)}function TableDynamicVirtualScroll_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableDynamicVirtualScroll_template_iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function TableDynamicVirtualScroll_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableDynamicVirtualScroll_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableDynamicVirtualScroll_template_non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableDynamicVirtualScroll_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableDynamicVirtualScroll_template_define_property(target,key,source[key])})}return target}function TableDynamicVirtualScroll_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableDynamicVirtualScroll_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableDynamicVirtualScroll_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableDynamicVirtualScroll_template_sliced_to_array(arr,i){return TableDynamicVirtualScroll_template_array_with_holes(arr)||TableDynamicVirtualScroll_template_iterable_to_array_limit(arr,i)||TableDynamicVirtualScroll_template_unsupported_iterable_to_array(arr,i)||TableDynamicVirtualScroll_template_non_iterable_rest()}function TableDynamicVirtualScroll_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableDynamicVirtualScroll_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableDynamicVirtualScroll_template_array_like_to_array(o,minLen)}}var base="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \nut labore et dolore magna aliqua. Quam lacus suspendisse faucibus interdum posuere lorem. Magna fringilla \nurna porttitor rhoncus dolor purus non enim. Mattis rhoncus urna neque viverra. Tortor posuere ac ut consequat semper. \nInteger quis auctor elit sed vulputate mi sit. In hac habitasse platea dictumst quisque sagittis purus sit. Enim \nblandit volutpat maecenas volutpat. Lacus laoreet non curabitur gravida arcu.";function randomIntFromInterval(){var min=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,max=arguments.length>1&&void 0!==arguments[1]?arguments[1]:base.length;return Math.floor(Math.random()*(max-min+1)+min)}function getRandomText(index){var int=index%5?randomIntFromInterval(1,4):randomIntFromInterval();return base.slice(0,int)}var TableDynamicVirtualScroll_template_rowList=(function TableDynamicVirtualScroll_template_to_consumable_array(arr){return TableDynamicVirtualScroll_template_array_without_holes(arr)||TableDynamicVirtualScroll_template_iterable_to_array(arr)||TableDynamicVirtualScroll_template_unsupported_iterable_to_array(arr)||TableDynamicVirtualScroll_template_non_iterable_spread()})(Array(1e3).keys()).map(function(_item,index){return{id:String(index),column1:getRandomText(index),column2:String(index)}}),TableDynamicVirtualScroll_template_columnList=[{name:"column1",title:"Random text",width:"60%"},{name:"column2",title:"Row index"}],TableDynamicVirtualScrollTemplate=function(props){var _React_useState=TableDynamicVirtualScroll_template_sliced_to_array(react.useState(TableDynamicVirtualScroll_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableDynamicVirtualScroll_template_object_spread_props(TableDynamicVirtualScroll_template_object_spread({},props),{columnList:cols,rowList:TableDynamicVirtualScroll_template_rowList,virtualScroll:{estimatedRowHeight:function(index){return index%5?40:150}},style:{height:"500px",width:"500px"},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableDynamicVirtualScroll_template_object_spread_props(TableDynamicVirtualScroll_template_object_spread({},col),{width:width}):col}))}}))};try{TableDynamicVirtualScrollTemplate.displayName="TableDynamicVirtualScrollTemplate",TableDynamicVirtualScrollTemplate.__docgenInfo={description:"",displayName:"TableDynamicVirtualScrollTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableDynamicVirtualScroll.template.tsx#TableDynamicVirtualScrollTemplate"]={docgenInfo:TableDynamicVirtualScrollTemplate.__docgenInfo,name:"TableDynamicVirtualScrollTemplate",path:"src/components/Table/stories/TableDynamicVirtualScroll.template.tsx#TableDynamicVirtualScrollTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableLoadOnScroll_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableLoadOnScroll_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableLoadOnScroll_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableLoadOnScroll_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableLoadOnScroll_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableLoadOnScroll_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableLoadOnScroll_template_define_property(target,key,source[key])})}return target}function TableLoadOnScroll_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableLoadOnScroll_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableLoadOnScroll_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableLoadOnScroll_template_sliced_to_array(arr,i){return TableLoadOnScroll_template_array_with_holes(arr)||TableLoadOnScroll_template_iterable_to_array_limit(arr,i)||TableLoadOnScroll_template_unsupported_iterable_to_array(arr,i)||TableLoadOnScroll_template_non_iterable_rest()}function TableLoadOnScroll_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableLoadOnScroll_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableLoadOnScroll_template_array_like_to_array(o,minLen)}}var TableLoadOnScroll_template_columnList=[{name:"transfer_number",title:"Номер сделки",width:"33%"},{name:"transfer_type",title:"Тип сделки",width:"33%"},{name:"transfer_amount",title:"Сумма, ₽",width:"33%"}],LastRowWrapper=function(param){var containerRef=param.containerRef,onVisible=param.onVisible,rowNode=param.rowNode,_React_useState=TableLoadOnScroll_template_sliced_to_array(react.useState(!1),2),visible=_React_useState[0],setVisible=_React_useState[1],ref=react.useRef(null),handleIntersection=function(entries){entries[0].isIntersecting&&!visible&&(setVisible(!0),null==onVisible||onVisible()),!entries[0].isIntersecting&&visible&&setVisible(!1)};return react.useEffect(function(){var observer=new IntersectionObserver(handleIntersection,{root:null==containerRef?void 0:containerRef.current,threshold:[0,1]});return containerRef.current&&ref.current&&observer.observe(ref.current),function(){return observer.disconnect()}},[containerRef,visible]),/*#__PURE__*/(0,jsx_runtime.jsx)("div",{ref:ref,children:rowNode})},TableLoadOnScrollTemplate=function(props){var _React_useState=TableLoadOnScroll_template_sliced_to_array(react.useState(TableLoadOnScroll_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1],_React_useState1=TableLoadOnScroll_template_sliced_to_array(react.useState(10),2),rowsAmount=_React_useState1[0],setRowsAmount=_React_useState1[1],tableRef=react.useRef(null),rows=react.useMemo(function(){return Array.from({length:rowsAmount},function(v,k){return"".concat(k+1,"0000")}).map(function(item,index){return{id:item,transfer_number:index+1,transfer_type:"МНО",transfer_amount:item}})},[rowsAmount]),uploadNewRows=function(){rowsAmount<100&&setRowsAmount(function(amount){return amount+10})};return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableLoadOnScroll_template_object_spread_props(TableLoadOnScroll_template_object_spread({},props),{ref:tableRef,rowList:rows,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableLoadOnScroll_template_object_spread_props(TableLoadOnScroll_template_object_spread({},col),{width:width}):col}))},renderRowWrapper:function(row,index,rowNode){return index===rowsAmount-1?/*#__PURE__*/(0,jsx_runtime.jsx)(LastRowWrapper,{containerRef:tableRef,onVisible:uploadNewRows,rowNode:rowNode},"row_".concat(row.id)):rowNode},style:{height:"300px",width:"450px"}}))};try{TableLoadOnScrollTemplate.displayName="TableLoadOnScrollTemplate",TableLoadOnScrollTemplate.__docgenInfo={description:"",displayName:"TableLoadOnScrollTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableLoadOnScroll.template.tsx#TableLoadOnScrollTemplate"]={docgenInfo:TableLoadOnScrollTemplate.__docgenInfo,name:"TableLoadOnScrollTemplate",path:"src/components/Table/stories/TableLoadOnScroll.template.tsx#TableLoadOnScrollTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableGroup_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableGroup_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableGroup_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableGroup_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableGroup_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableGroup_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableGroup_template_define_property(target,key,source[key])})}return target}function TableGroup_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableGroup_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableGroup_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableGroup_template_sliced_to_array(arr,i){return TableGroup_template_array_with_holes(arr)||TableGroup_template_iterable_to_array_limit(arr,i)||TableGroup_template_unsupported_iterable_to_array(arr,i)||TableGroup_template_non_iterable_rest()}function TableGroup_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableGroup_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableGroup_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableGroup_template_array_like_to_array(o,minLen)}}function TableGroup_template_templateObject(){var data=TableGroup_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableGroup_template_templateObject=function _templateObject(){return data},data}var TableGroup_template_AmountCell=styled_components_browser_esm.Ay.div(TableGroup_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableGroup_template_numberFormatter=new Intl.NumberFormat,TableGroup_template_rowList=[{id:"0001",expanded:!1,groupTitle:"First group name",groupRows:["0002","0003"]},{id:"0002",transfer_type:"GR1",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableGroup_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableGroup_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"GR1",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableGroup_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableGroup_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",expanded:!0,groupTitle:"Second group name",groupRows:["0005","0006"]},{id:"0005",transfer_type:"GR2",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableGroup_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableGroup_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"GR2",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableGroup_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableGroup_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",expanded:!0,groupTitle:"Third group name",groupRows:["0008"]},{id:"0008",transfer_type:"GR3",transfer_date:new Date("2020-08-25").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableGroup_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableGroup_template_numberFormatter.format(100)})}),currency:"RUB",rate:2.5}],TableGroup_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableGroupTemplate=function(props){var _React_useState=TableGroup_template_sliced_to_array(react.useState(TableGroup_template_rowList),2),rows=_React_useState[0],setRows=_React_useState[1],_React_useState1=TableGroup_template_sliced_to_array(react.useState(TableGroup_template_columnList),2),cols=_React_useState1[0],setCols=_React_useState1[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableGroup_template_object_spread_props(TableGroup_template_object_spread({},props),{rowList:rows,columnList:cols,displayRowExpansionColumn:!0,onRowExpansionChange:function(ids){setRows(rows.map(function(row){return TableGroup_template_object_spread_props(TableGroup_template_object_spread({},row),{expanded:ids[row.id]})}))},onRowSelectionChange:function(ids){setRows(rows.map(function(row){return TableGroup_template_object_spread_props(TableGroup_template_object_spread({},row),{selected:ids[row.id]})}))},onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableGroup_template_object_spread_props(TableGroup_template_object_spread({},col),{width:width}):col}))}}))};try{TableGroupTemplate.displayName="TableGroupTemplate",TableGroupTemplate.__docgenInfo={description:"",displayName:"TableGroupTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableGroup.template.tsx#TableGroupTemplate"]={docgenInfo:TableGroupTemplate.__docgenInfo,name:"TableGroupTemplate",path:"src/components/Table/stories/TableGroup.template.tsx#TableGroupTemplate"})}catch(__react_docgen_typescript_loader_error){}var Badge=__webpack_require__("./src/components/Badge/index.tsx");function TableCustomTitle_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableCustomTitle_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableCustomTitle_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableCustomTitle_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableCustomTitle_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableCustomTitle_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableCustomTitle_template_define_property(target,key,source[key])})}return target}function TableCustomTitle_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableCustomTitle_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableCustomTitle_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableCustomTitle_template_sliced_to_array(arr,i){return TableCustomTitle_template_array_with_holes(arr)||TableCustomTitle_template_iterable_to_array_limit(arr,i)||TableCustomTitle_template_unsupported_iterable_to_array(arr,i)||TableCustomTitle_template_non_iterable_rest()}function TableCustomTitle_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableCustomTitle_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableCustomTitle_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableCustomTitle_template_array_like_to_array(o,minLen)}}function TableCustomTitle_template_templateObject(){var data=TableCustomTitle_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableCustomTitle_template_templateObject=function _templateObject(){return data},data}var TableCustomTitle_template_AmountCell=styled_components_browser_esm.Ay.div(TableCustomTitle_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableCustomTitle_template_numberFormatter=new Intl.NumberFormat,TableCustomTitle_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCustomTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCustomTitle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCustomTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCustomTitle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCustomTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCustomTitle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableCustomTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableCustomTitle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableCustomTitle_template_columnList=[{name:"transfer_type",title:/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["Тип сделки ",/*#__PURE__*/(0,jsx_runtime.jsx)(Badge.Ex,{children:"5"})]}),width:"20%"},{name:"transfer_date",title:/*#__PURE__*/(0,jsx_runtime.jsx)("b",{children:"Дата сделки"}),width:"250px"},{name:"transfer_amount",title:/*#__PURE__*/(0,jsx_runtime.jsx)("span",{style:{color:"red",fontWeight:"bold"},children:"Сумма"}),width:200},{name:"currency",title:/*#__PURE__*/(0,jsx_runtime.jsx)("i",{children:"Валюта"}),extraText:/*#__PURE__*/(0,jsx_runtime.jsx)("b",{children:"доллары"})},{name:"rate",title:"Ставка"}],TableCustomTitleTemplate=function(props){var _React_useState=TableCustomTitle_template_sliced_to_array(react.useState(TableCustomTitle_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableCustomTitle_template_object_spread_props(TableCustomTitle_template_object_spread({},props),{rowList:TableCustomTitle_template_rowList,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableCustomTitle_template_object_spread_props(TableCustomTitle_template_object_spread({},col),{width:width}):col}))}}))};try{TableCustomTitleTemplate.displayName="TableCustomTitleTemplate",TableCustomTitleTemplate.__docgenInfo={description:"",displayName:"TableCustomTitleTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableCustomTitle.template.tsx#TableCustomTitleTemplate"]={docgenInfo:TableCustomTitleTemplate.__docgenInfo,name:"TableCustomTitleTemplate",path:"src/components/Table/stories/TableCustomTitle.template.tsx#TableCustomTitleTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableRenderCell_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableRenderCell_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableRenderCell_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableRenderCell_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableRenderCell_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableRenderCell_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableRenderCell_template_define_property(target,key,source[key])})}return target}function TableRenderCell_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableRenderCell_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableRenderCell_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableRenderCell_template_sliced_to_array(arr,i){return TableRenderCell_template_array_with_holes(arr)||TableRenderCell_template_iterable_to_array_limit(arr,i)||TableRenderCell_template_unsupported_iterable_to_array(arr,i)||TableRenderCell_template_non_iterable_rest()}function TableRenderCell_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableRenderCell_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableRenderCell_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableRenderCell_template_array_like_to_array(o,minLen)}}function TableRenderCell_template_templateObject(){var data=TableRenderCell_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableRenderCell_template_templateObject=function _templateObject(){return data},data}var TableRenderCell_template_AmountCell=styled_components_browser_esm.Ay.div(TableRenderCell_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableRenderCell_template_numberFormatter=new Intl.NumberFormat,TableRenderCell_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCell_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderCell_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],TableRenderCell_template_columnList=[{name:"transfer_type",title:"Тип сделки",width:"20%",renderCell:function renderCell(data,_row,idx){return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{style:{border:"1px solid #aaa",padding:"3px"},children:[data," ",/*#__PURE__*/(0,jsx_runtime.jsx)(Badge.Ex,{children:idx})]})}},{name:"transfer_date",title:"Дата сделки",width:"250px",renderCell:function renderCell(date){return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{children:["Дата - ",date]})}},{name:"rate",title:"Ставка",renderCell:function renderCell(data){return/*#__PURE__*/(0,jsx_runtime.jsxs)("i",{children:[data,"$"]})}}],TableRenderCellTemplate=function(props){var _React_useState=TableRenderCell_template_sliced_to_array(react.useState(TableRenderCell_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableRenderCell_template_object_spread_props(TableRenderCell_template_object_spread({},props),{rowList:TableRenderCell_template_rowList,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableRenderCell_template_object_spread_props(TableRenderCell_template_object_spread({},col),{width:width}):col}))}}))};try{TableRenderCellTemplate.displayName="TableRenderCellTemplate",TableRenderCellTemplate.__docgenInfo={description:"",displayName:"TableRenderCellTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableRenderCell.template.tsx#TableRenderCellTemplate"]={docgenInfo:TableRenderCellTemplate.__docgenInfo,name:"TableRenderCellTemplate",path:"src/components/Table/stories/TableRenderCell.template.tsx#TableRenderCellTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableRenderGroupTitle_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableRenderGroupTitle_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableRenderGroupTitle_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableRenderGroupTitle_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableRenderGroupTitle_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableRenderGroupTitle_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableRenderGroupTitle_template_define_property(target,key,source[key])})}return target}function TableRenderGroupTitle_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableRenderGroupTitle_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableRenderGroupTitle_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableRenderGroupTitle_template_sliced_to_array(arr,i){return TableRenderGroupTitle_template_array_with_holes(arr)||TableRenderGroupTitle_template_iterable_to_array_limit(arr,i)||TableRenderGroupTitle_template_unsupported_iterable_to_array(arr,i)||TableRenderGroupTitle_template_non_iterable_rest()}function TableRenderGroupTitle_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableRenderGroupTitle_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableRenderGroupTitle_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableRenderGroupTitle_template_array_like_to_array(o,minLen)}}function TableRenderGroupTitle_template_templateObject(){var data=TableRenderGroupTitle_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableRenderGroupTitle_template_templateObject=function _templateObject(){return data},data}var TableRenderGroupTitle_template_AmountCell=styled_components_browser_esm.Ay.div(TableRenderGroupTitle_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableRenderGroupTitle_template_numberFormatter=new Intl.NumberFormat,TableRenderGroupTitle_template_rowList=[{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0001",transfer_type:"Group name",expanded:!1,transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5,groupTitle:"Группа",renderGroupTitle:function renderGroupTitle(row){return/*#__PURE__*/(0,jsx_runtime.jsxs)("div",{style:{fontSize:"36px"},children:[row.transfer_type," - ",row.transfer_date]})},groupRows:["0007","0008"]},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"GR1",transfer_date:new Date("2020-07-18").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(200)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"GR1",transfer_date:new Date("2020-08-25").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitle_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRenderGroupTitle_template_numberFormatter.format(100)})}),currency:"RUB",rate:2.5}],TableRenderGroupTitle_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableRenderGroupTitleTemplate=function(props){var _React_useState=TableRenderGroupTitle_template_sliced_to_array(react.useState(TableRenderGroupTitle_template_rowList),2),rows=_React_useState[0],setRows=_React_useState[1],_React_useState1=TableRenderGroupTitle_template_sliced_to_array(react.useState(TableRenderGroupTitle_template_columnList),2),cols=_React_useState1[0],setCols=_React_useState1[1];return/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableRenderGroupTitle_template_object_spread_props(TableRenderGroupTitle_template_object_spread({},props),{rowList:rows,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableRenderGroupTitle_template_object_spread_props(TableRenderGroupTitle_template_object_spread({},col),{width:width}):col}))},onRowExpansionChange:function(ids){setRows(rows.map(function(row){return TableRenderGroupTitle_template_object_spread_props(TableRenderGroupTitle_template_object_spread({},row),{expanded:ids[row.id]})}))},displayRowExpansionColumn:!0}))};try{TableRenderGroupTitleTemplate.displayName="TableRenderGroupTitleTemplate",TableRenderGroupTitleTemplate.__docgenInfo={description:"",displayName:"TableRenderGroupTitleTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableRenderGroupTitle.template.tsx#TableRenderGroupTitleTemplate"]={docgenInfo:TableRenderGroupTitleTemplate.__docgenInfo,name:"TableRenderGroupTitleTemplate",path:"src/components/Table/stories/TableRenderGroupTitle.template.tsx#TableRenderGroupTitleTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableColumnDragDrop_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableColumnDragDrop_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableColumnDragDrop_template_array_without_holes(arr){if(Array.isArray(arr))return TableColumnDragDrop_template_array_like_to_array(arr)}function TableColumnDragDrop_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableColumnDragDrop_template_iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function TableColumnDragDrop_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableColumnDragDrop_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableColumnDragDrop_template_non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableColumnDragDrop_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableColumnDragDrop_template_define_property(target,key,source[key])})}return target}function TableColumnDragDrop_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableColumnDragDrop_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableColumnDragDrop_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableColumnDragDrop_template_sliced_to_array(arr,i){return TableColumnDragDrop_template_array_with_holes(arr)||TableColumnDragDrop_template_iterable_to_array_limit(arr,i)||TableColumnDragDrop_template_unsupported_iterable_to_array(arr,i)||TableColumnDragDrop_template_non_iterable_rest()}function TableColumnDragDrop_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableColumnDragDrop_template_to_consumable_array(arr){return TableColumnDragDrop_template_array_without_holes(arr)||TableColumnDragDrop_template_iterable_to_array(arr)||TableColumnDragDrop_template_unsupported_iterable_to_array(arr)||TableColumnDragDrop_template_non_iterable_spread()}function TableColumnDragDrop_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableColumnDragDrop_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableColumnDragDrop_template_array_like_to_array(o,minLen)}}function TableColumnDragDrop_template_templateObject(){var data=TableColumnDragDrop_template_tagged_template_literal(["\n  height: 20px;\n"]);return TableColumnDragDrop_template_templateObject=function _templateObject(){return data},data}function TableColumnDragDrop_template_templateObject1(){var data=TableColumnDragDrop_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableColumnDragDrop_template_templateObject1=function _templateObject(){return data},data}var TableColumnDragDrop_template_Separator=styled_components_browser_esm.Ay.div(TableColumnDragDrop_template_templateObject()),TableColumnDragDrop_template_AmountCell=styled_components_browser_esm.Ay.div(TableColumnDragDrop_template_templateObject1(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableColumnDragDrop_template_numberFormatter=new Intl.NumberFormat,TableColumnDragDrop_template_rowList=[{id:"0001",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0010",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0011",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0012",transfer_type:"МНО",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableColumnDragDrop_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5}],columnList1=[{name:"transfer_type",title:"Тип сделки",draggable:!0},{name:"transfer_date",title:"Дата сделки",width:150,draggable:!0},{name:"transfer_amount",title:"Сумма",width:170,draggable:!0},{name:"currency",title:"Валюта",draggable:!0},{name:"rate",title:"Ставка",draggable:!0}],columnList2=[{name:"transfer_type",title:"Тип сделки",draggable:!0,sticky:!0},{name:"transfer_date",title:"Дата сделки",draggable:!0,sticky:!0,width:150},{name:"transfer_amount",title:"Сумма",draggable:!0,width:170},{name:"currency",title:"Валюта",draggable:!0},{name:"rate",title:"Ставка",draggable:!0}],TableColumnDragDropTemplate=function(props){var _React_useState=TableColumnDragDrop_template_sliced_to_array(react.useState(columnList1),2),cols=_React_useState[0],setCols=_React_useState[1],_React_useState1=TableColumnDragDrop_template_sliced_to_array(react.useState(columnList2),2),cols2=_React_useState1[0],setCols2=_React_useState1[1];return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",children:"Пример перемещения обычных столбцов в таблице"}),/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_Separator,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableColumnDragDrop_template_object_spread_props(TableColumnDragDrop_template_object_spread({},props),{columnList:cols,rowList:TableColumnDragDrop_template_rowList,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableColumnDragDrop_template_object_spread_props(TableColumnDragDrop_template_object_spread({},col),{width:width}):col}))},onColumnDrag:function(columnName,nextColumnName){var columns=TableColumnDragDrop_template_to_consumable_array(cols),movedIndex=columns.findIndex(function(col){return col.name===columnName}),movedColumn=columns.splice(movedIndex,1)[0],beforeIndex=nextColumnName?columns.findIndex(function(col){return col.name===nextColumnName}):columns.length;columns.splice(beforeIndex,0,movedColumn),setCols(columns)}})),/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_Separator,{style:{height:"40px"}}),/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",children:"Пример перемещения как обычных, так и фиксированных столбцов в таблице. В данном случае фиксированными являются первые два столбца."}),/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDrop_template_Separator,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableColumnDragDrop_template_object_spread_props(TableColumnDragDrop_template_object_spread({},props),{columnList:cols2,rowList:TableColumnDragDrop_template_rowList,onColumnResize:function(param){var name=param.name,width=param.width;setCols2(cols2.map(function(col){return col.name===name?TableColumnDragDrop_template_object_spread_props(TableColumnDragDrop_template_object_spread({},col),{width:width}):col}))},onColumnDrag:function(columnName,nextColumnName){var columns=TableColumnDragDrop_template_to_consumable_array(cols2),movedIndex=columns.findIndex(function(col){return col.name===columnName}),movedColumn=columns.splice(movedIndex,1)[0],beforeIndex=nextColumnName?columns.findIndex(function(col){return col.name===nextColumnName}):columns.length;columns.splice(beforeIndex,0,movedColumn),setCols2(columns)}}))]})};try{TableColumnDragDropTemplate.displayName="TableColumnDragDropTemplate",TableColumnDragDropTemplate.__docgenInfo={description:"",displayName:"TableColumnDragDropTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableColumnDragDrop.template.tsx#TableColumnDragDropTemplate"]={docgenInfo:TableColumnDragDropTemplate.__docgenInfo,name:"TableColumnDragDropTemplate",path:"src/components/Table/stories/TableColumnDragDrop.template.tsx#TableColumnDragDropTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableRowDragDrop_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function TableRowDragDrop_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function TableRowDragDrop_template_array_without_holes(arr){if(Array.isArray(arr))return TableRowDragDrop_template_array_like_to_array(arr)}function TableRowDragDrop_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function TableRowDragDrop_template_iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function TableRowDragDrop_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function TableRowDragDrop_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableRowDragDrop_template_non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function TableRowDragDrop_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){TableRowDragDrop_template_define_property(target,key,source[key])})}return target}function TableRowDragDrop_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function TableRowDragDrop_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):TableRowDragDrop_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function TableRowDragDrop_template_sliced_to_array(arr,i){return TableRowDragDrop_template_array_with_holes(arr)||TableRowDragDrop_template_iterable_to_array_limit(arr,i)||TableRowDragDrop_template_unsupported_iterable_to_array(arr,i)||TableRowDragDrop_template_non_iterable_rest()}function TableRowDragDrop_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableRowDragDrop_template_to_consumable_array(arr){return TableRowDragDrop_template_array_without_holes(arr)||TableRowDragDrop_template_iterable_to_array(arr)||TableRowDragDrop_template_unsupported_iterable_to_array(arr)||TableRowDragDrop_template_non_iterable_spread()}function TableRowDragDrop_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return TableRowDragDrop_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return TableRowDragDrop_template_array_like_to_array(o,minLen)}}function TableRowDragDrop_template_templateObject(){var data=TableRowDragDrop_template_tagged_template_literal(["\n  height: 20px;\n"]);return TableRowDragDrop_template_templateObject=function _templateObject(){return data},data}function TableRowDragDrop_template_templateObject1(){var data=TableRowDragDrop_template_tagged_template_literal(["\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ",");\n    }\n  }\n"]);return TableRowDragDrop_template_templateObject1=function _templateObject(){return data},data}var TableRowDragDrop_template_Separator=styled_components_browser_esm.Ay.div(TableRowDragDrop_template_templateObject()),TableRowDragDrop_template_AmountCell=styled_components_browser_esm.Ay.div(TableRowDragDrop_template_templateObject1(),function(p){return p.theme.color["Neutral/Neutral 30"]}),TableRowDragDrop_template_numberFormatter=new Intl.NumberFormat,TableRowDragDrop_template_rowList=[{id:"0001",transfer_type:"МНО1",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(18e6)})}),currency:"RUB",rate:2.5},{id:"0002",transfer_type:"МНО2",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(325e8)})}),currency:"RUB",rate:2.5},{id:"0003",transfer_type:"МНО3",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(12e6)})}),currency:"RUB",rate:2.5},{id:"0004",transfer_type:"МНО4",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(555e8)})}),currency:"RUB",rate:2.5},{id:"0005",transfer_type:"МНО5",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(18e4)})}),currency:"RUB",rate:2.5},{id:"0006",transfer_type:"МНО6",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(5e8)})}),currency:"RUB",rate:2.5},{id:"0007",transfer_type:"МНО7",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(189e6)})}),currency:"RUB",rate:2.5},{id:"0008",transfer_type:"МНО8",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(6e3)})}),currency:"RUB",rate:2.5},{id:"0009",transfer_type:"МНО9",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(1e4)})}),currency:"RUB",rate:2.5}],rowList2=[{id:"0001",expanded:!1,groupTitle:"First group name",groupRows:["0002","0003"]},{id:"0002",transfer_type:"МНО2",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(325e8)})}),transfer_status:"Выполнено"},{id:"0003",transfer_type:"МНО3",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(18e6)})}),transfer_status:"Выполнено"},{id:"0004",expanded:!0,groupTitle:"Second group name",groupRows:["0005","0006"]},{id:"0005",transfer_type:"МНО5",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(18e6)})}),transfer_status:"В ожиданиии"},{id:"0006",transfer_type:"МНО6",transfer_date:new Date("2020-08-06").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(325e8)})}),transfer_status:"В ожиданиии"},{id:"0007",expanded:!0,groupTitle:"Third group name",groupRows:["0008","0009"]},{id:"0008",transfer_type:"МНО8",transfer_date:new Date("2020-08-25").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(100)})}),transfer_status:"Отклонено"},{id:"0009",transfer_type:"МНО9",transfer_date:new Date("2020-08-25").toLocaleDateString(),transfer_amount:/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_AmountCell,{children:/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Short",children:TableRowDragDrop_template_numberFormatter.format(100)})}),transfer_status:"Отклонено"}],TableRowDragDrop_template_columnList=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"currency",title:"Валюта"},{name:"rate",title:"Ставка"}],TableRowDragDrop_template_columnList2=[{name:"transfer_type",title:"Тип сделки"},{name:"transfer_date",title:"Дата сделки",width:150},{name:"transfer_amount",title:"Сумма",width:170},{name:"transfer_status",title:"Статус",width:170}];function updateRowStatus(groupId){switch(groupId){case"0001":return"Выполнено";case"0004":return"В ожидании";default:return"Отклонено"}}var TableRowDragDropTemplate=function(props){var _React_useState=TableRowDragDrop_template_sliced_to_array(react.useState(TableRowDragDrop_template_columnList),2),cols=_React_useState[0],setCols=_React_useState[1],_React_useState1=TableRowDragDrop_template_sliced_to_array(react.useState(TableRowDragDrop_template_columnList2),2),cols2=_React_useState1[0],setCols2=_React_useState1[1],_React_useState2=TableRowDragDrop_template_sliced_to_array(react.useState(TableRowDragDrop_template_rowList),2),rows=_React_useState2[0],setRows=_React_useState2[1],_React_useState3=TableRowDragDrop_template_sliced_to_array(react.useState(rowList2),2),rows2=_React_useState3[0],setRows2=_React_useState3[1];return/*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",children:"Пример с обычными строками"}),/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_Separator,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableRowDragDrop_template_object_spread_props(TableRowDragDrop_template_object_spread({},props),{rowList:rows,columnList:cols,onColumnResize:function(param){var name=param.name,width=param.width;setCols(cols.map(function(col){return col.name===name?TableRowDragDrop_template_object_spread_props(TableRowDragDrop_template_object_spread({},col),{width:width}):col}))},rowsDraggable:!0,onRowDrag:function(rowId,nextRowId){var tableRows=TableRowDragDrop_template_to_consumable_array(rows),movedIndex=tableRows.findIndex(function(row){return row.id===rowId}),movedRow=tableRows.splice(movedIndex,1)[0],beforeIndex=nextRowId?tableRows.findIndex(function(row){return row.id===nextRowId}):tableRows.length;tableRows.splice(beforeIndex,0,movedRow),setRows(tableRows)}})),/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_Separator,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 2 Long",children:"Пример с группами строк"}),/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDrop_template_Separator,{}),/*#__PURE__*/(0,jsx_runtime.jsx)(Table.XI,TableRowDragDrop_template_object_spread_props(TableRowDragDrop_template_object_spread({},props),{rowList:rows2,columnList:cols2,displayRowExpansionColumn:!0,onRowExpansionChange:function(ids){setRows2(rows2.map(function(row){return TableRowDragDrop_template_object_spread_props(TableRowDragDrop_template_object_spread({},row),{expanded:ids[row.id]})}))},onColumnResize:function(param){var name=param.name,width=param.width;setCols2(cols2.map(function(col){return col.name===name?TableRowDragDrop_template_object_spread_props(TableRowDragDrop_template_object_spread({},col),{width:width}):col}))},rowsDraggable:!0,onRowDrag:function(rowId,nextRowId,groupRowId){var tableRows=TableRowDragDrop_template_to_consumable_array(rows2),movedIndex=tableRows.findIndex(function(row){return row.id===rowId}),movedRow=tableRows.splice(movedIndex,1)[0];movedRow.transfer_status=updateRowStatus(groupRowId);var beforeIndex=nextRowId?tableRows.findIndex(function(row){return row.id===nextRowId}):tableRows.length;tableRows.splice(beforeIndex,0,movedRow),tableRows.filter(function(row){return null==row?void 0:row.groupTitle}).forEach(function(row){var _row_groupRows;if(row.id===groupRowId){var _row_groupRows1,newGroup=(null==row?void 0:null===(_row_groupRows1=row.groupRows)||void 0===_row_groupRows1?void 0:_row_groupRows1.filter(function(id){return id!==rowId}))||[],beforeIndex=nextRowId?newGroup.findIndex(function(id){return id===nextRowId}):newGroup.length;beforeIndex=-1==beforeIndex?newGroup.length:beforeIndex,newGroup.splice(beforeIndex,0,rowId),row.groupRows=newGroup}else if(row.groupRows){var newGroup1=row.groupRows.filter(function(id){return id!==rowId});row.groupRows=newGroup1}row.expanded=null!==(_row_groupRows=row.groupRows)&&void 0!==_row_groupRows&&!!_row_groupRows.length&&row.expanded}),setRows2(tableRows)}}))]})};try{TableRowDragDropTemplate.displayName="TableRowDragDropTemplate",TableRowDragDropTemplate.__docgenInfo={description:"",displayName:"TableRowDragDropTemplate",props:{columnList:{defaultValue:null,description:"Массив столбцов",name:"columnList",required:!0,type:{name:"Column[]"}},rowList:{defaultValue:null,description:"Массив строк",name:"rowList",required:!0,type:{name:"TableRow[]"}},headerCheckboxChecked:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние checked.\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxChecked",required:!1,type:{name:"boolean"}},headerCheckboxIndeterminate:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние indeterminate (состояние, при котором выбрана только часть строк).\nПо умолчанию состояние checked вычисляется на основе анализа параметра selected у строк таблицы",name:"headerCheckboxIndeterminate",required:!1,type:{name:"boolean"}},headerCheckboxDisabled:{defaultValue:null,description:"Установка чекбокса в шапке таблицы в состояние disabled.\nПо умолчанию состояние disabled устанавливается при отсутствии строк в таблице",name:"headerCheckboxDisabled",required:!1,type:{name:"boolean"}},onHeaderSelectionChange:{defaultValue:null,description:"Колбек на изменение состояния чекбокса, находящегося в хедере\nВозвращает параметр selectAll (если true - выбраны все строки в таблице, false - выбор снят со всех строк таблицы)",name:"onHeaderSelectionChange",required:!1,type:{name:"((selectAll: boolean) => void)"}},onRowSelectionChange:{defaultValue:null,description:"Колбек на выбор/снятие выбора со строки (на нажатие по чекбоксу строки).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние checked было изменено,\nа значениями ключей - значение checked",name:"onRowSelectionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap, id?: RowId) => void)"}},onRowExpansionChange:{defaultValue:null,description:"Колбек на раскрытие/свертывание строки (на нажатие по стрелке слева).\nidSelectionStatusMap - это объект, ключами которого являются id строк, чье состояние expanded было изменено,\nа значениями ключей - значение expanded",name:"onRowExpansionChange",required:!1,type:{name:"((idSelectionStatusMap: IdSelectionStatusMap) => void)"}},onRowClick:{defaultValue:null,description:"Колбек для клика по строке таблицы",name:"onRowClick",required:!1,type:{name:"((rowId: RowId) => void)"}},onRowDoubleClick:{defaultValue:null,description:"Колбек для двойного клика по строке таблицы",name:"onRowDoubleClick",required:!1,type:{name:"((rowId: RowId) => void)"}},dimension:{defaultValue:null,description:"Размер таблицы",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},displayRowSelectionColumn:{defaultValue:null,description:"Отображение столбца с чекбоксами, позволяющими выбрать необходимые строки",name:"displayRowSelectionColumn",required:!1,type:{name:"boolean"}},displayRowExpansionColumn:{defaultValue:null,description:"Отображение столбца со стрелками для детализации (раскрытия) строк",name:"displayRowExpansionColumn",required:!1,type:{name:"boolean"}},greyHeader:{defaultValue:null,description:"Окрашивание шапки таблицы в серый цвет",name:"greyHeader",required:!1,type:{name:"boolean"}},greyZebraRows:{defaultValue:null,description:"Окрашивание строк таблицы через одну в цвет вторичного фона (зебра)",name:"greyZebraRows",required:!1,type:{name:"boolean"}},spacingBetweenItems:{defaultValue:null,description:"Параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка и\nза расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка.\nМинимальное значение 12px, для таблиц S и M, и 16px для таблиц L и XL.",name:"spacingBetweenItems",required:!1,type:{name:"string"}},onSortChange:{defaultValue:null,description:"Колбек на изменение сортировки. Возвращает уникальное имя столбца, к которому применили сортировку,\nи порядок сортировки (возрастающий/убывающий или сброс сортировки до первоначального состояния (initial))",name:"onSortChange",required:!1,type:{name:'((sortObj: { name: string; sort: "desc" | "initial" | "asc"; }) => void)'}},onColumnResize:{defaultValue:null,description:"Колбек, который срабатывает при изменении ширины столбца.\nДанный колбек обязателен в случае, если таблица должна поддерживать ресайзинг.\nПри срабатывании колбек сообщает пользователю о попытке ресайзинга столбца,\nпосле чего пользователь должен обновить ширину соответствующего столбца.\nТаким образом контроль за ресайзингом происходит на стороне пользователя.",name:"onColumnResize",required:!1,type:{name:"((colObj: { name: string; width: string; }) => void)"}},renderCell:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.8.0, будет удалено в версии 9.х.х.\nВзамен используйте параметр renderCell, задаваемый для столбца.\n\nРендер функция для отрисовки контента ячейки. Входные параметры - объект строки и название столбца",name:"renderCell",required:!1,type:{name:"((row: TableRow, columnName: string) => ReactNode)"}},renderRowWrapper:{defaultValue:null,description:"Рендер функция для отрисовки обертки вокруг строки.\nВходные параметры - объект строки, её порядковый номер и элемент который должен быть отрисован внутри создаваемой обертки",name:"renderRowWrapper",required:!1,type:{name:"((row: TableRow, index: number, rowNode: ReactNode) => ReactNode)"}},headerLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать заголовок столбца таблицы.\nПо умолчанию заголовок занимает не более одной строки",name:"headerLineClamp",required:!1,type:{name:"number"}},headerExtraLineClamp:{defaultValue:null,description:"Параметр, определяющий максимальное количество строк, которое может занимать дополнительный текст заголовка столбца таблицы.\nПо умолчанию дополнительный текст занимает не более одной строки",name:"headerExtraLineClamp",required:!1,type:{name:"number"}},showDividerForLastColumn:{defaultValue:null,description:"Отображение разделителя для последней колонки. По умолчанию разделитель не отображается",name:"showDividerForLastColumn",required:!1,type:{name:"boolean"}},disableColumnResize:{defaultValue:null,description:"Отключение возможности ресайза колонок. По умолчанию эта возможность включена",name:"disableColumnResize",required:!1,type:{name:"boolean"}},showLastRowUnderline:{defaultValue:null,description:"Отображение серой линии подчеркивания для последней строки. По умолчанию линия отображается",name:"showLastRowUnderline",required:!1,type:{name:"boolean"}},showRowsActions:{defaultValue:null,description:"Включение постоянной видимости иконок действий над строками (OverflowMenu и иконки одиночных действий).\nПо умолчанию showRowsActions = false, при этом иконки действий видны только при ховере строк.",name:"showRowsActions",required:!1,type:{name:"boolean"}},showBorders:{defaultValue:null,description:"Включение границ между ячейками таблицы и обводки всей таблицы.\nПоследняя колонка имеет границы справа только, если параметр showDividerForLastColumn равен true.",name:"showBorders",required:!1,type:{name:"boolean"}},virtualScroll:{defaultValue:null,description:"Включение виртуального скролла для тела таблицы.\nУ таблицы обязательно должна быть задана высота, тогда тело таблицы растянется по высоте и подстроится под высоту таблицы.",name:"virtualScroll",required:!1,type:{name:"{ fixedRowHeight?: number; estimatedRowHeight?: ((index: number) => number); } | undefined"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ emptyMessage?: ReactNode; }"}},onColumnDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить столбец таблицы на новое место.\ncolumnName - name столбца, который перетаскивается;\nnextColumnName - name столбца, перед которым пытается встать передвигаемый столбец.\nЕсли nextColumnName равен null, значит столбец передвигают в самый конец списка.",name:"onColumnDrag",required:!1,type:{name:"((columnName: string, nextColumnName: string | null) => void)"}},rowsDraggable:{defaultValue:null,description:"Включение возможности drag & drop строк",name:"rowsDraggable",required:!1,type:{name:"boolean"}},onRowDrag:{defaultValue:null,description:"Колбек, который срабатывает при попытке перетащить строку таблицы на новое место.\nrowId - id строки, которая перетаскивается;\nnextRowId - id строки, перед которой пытается встать передвигаемая строка.\nЕсли nextRowId равен null, значит строку передвигают в самый конец таблицы.\ngroupRowId - id групповой строки (строки с заголовком группы), по данному id можно\nопределить к какой группе будет относиться перетаскиваемая строка\nЕсли groupRowId равен null, то строка не принадлежит ни к какой группе.",name:"onRowDrag",required:!1,type:{name:"((rowId: string, nextRowId: string | null, groupRowId: string | null) => void)"}},rowBackgroundColorByStatusMap:{defaultValue:null,description:"Объект, который описывает соответствие цвета строки и её статуса.\n\nДанный параметр нужно применять при создании кастомных статусов строк,\nлибо при желании перезадать цвета для статусов error и success, предоставляемых таблицей по умолчанию.\n\nКлючом объекта должно быть название статуса.\nЗначением свойства объекта должен быть цвет строки, соответствующий статусу, заданному в ключе.\nЦвет можно задать либо в виде строки со значением цвета, либо в виде функции,\nкоторая на вход получает объект color (равный theme.color) и возвращает строку со значением цвета.",name:"rowBackgroundColorByStatusMap",required:!1,type:{name:"{ [key: string]: string | ((color: Color) => string); }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableRowDragDrop.template.tsx#TableRowDragDropTemplate"]={docgenInfo:TableRowDragDropTemplate.__docgenInfo,name:"TableRowDragDropTemplate",path:"src/components/Table/stories/TableRowDragDrop.template.tsx#TableRowDragDropTemplate"})}catch(__react_docgen_typescript_loader_error){}function TableBaseHtml_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function TableBaseHtml_template_templateObject(){var data=TableBaseHtml_template_tagged_template_literal(["\n  // фиксированный заголовок\n  overflow: auto;\n  width: 100%;\n  display: block;\n  margin: 0 auto;\n\n  th {\n    position: sticky;\n    top: 0;\n  }\n\n  // стили\n  white-space: nowrap;\n  border-spacing: 0;\n  border: 1px solid ",";\n\n  th {\n    ","\n    padding: 10px 12px;\n    background-color: ",";\n  }\n\n  td {\n    ","\n    padding: 12px;\n  }\n\n  th,\n  td {\n    border: 1px solid ",";\n    border-top-width: 0;\n    border-left-width: 0;\n  }\n\n  th:last-child,\n  td:last-child {\n    border-right-width: 0;\n  }\n\n  tr:last-child td {\n    border-bottom-width: 0;\n  }\n\n  th:last-child {\n    width: 100%;\n  }\n"]);return TableBaseHtml_template_templateObject=function _templateObject(){return data},data}var HtmlTable=styled_components_browser_esm.Ay.table(TableBaseHtml_template_templateObject(),function(p){return p.theme.color["Neutral/Neutral 20"]},function(p){return p.theme.typography["Subtitle/Subtitle 3"]},function(p){return p.theme.color["Neutral/Neutral 00"]},function(p){return p.theme.typography["Body/Body 2 Short"]},function(p){return p.theme.color["Neutral/Neutral 20"]});function TableBaseHtmlTemplate(param){var _param_colNumber=param.colNumber,colNumber=void 0===_param_colNumber?10:_param_colNumber,_param_rowNum=param.rowNum;return/*#__PURE__*/(0,jsx_runtime.jsxs)(HtmlTable,{style:{maxHeight:500,maxWidth:980},children:[/*#__PURE__*/(0,jsx_runtime.jsx)("thead",{children:/*#__PURE__*/(0,jsx_runtime.jsx)("tr",{children:Array(colNumber).fill(1).map(function(_,index){return/*#__PURE__*/(0,jsx_runtime.jsx)("th",{children:"Header ".concat(index)},"header_".concat(index))})})}),/*#__PURE__*/(0,jsx_runtime.jsx)("tbody",{children:Array(void 0===_param_rowNum?20:_param_rowNum).fill(1).map(function(_,rowIndex){return/*#__PURE__*/(0,jsx_runtime.jsx)("tr",{children:Array(colNumber).fill(1).map(function(_,colIndex){return/*#__PURE__*/(0,jsx_runtime.jsx)("td",{children:"Cell ".concat(rowIndex,"_").concat(colIndex)},"cell_".concat(rowIndex,"_").concat(colIndex))})},"row_".concat(rowIndex))})})]})}try{TableBaseHtmlTemplate.displayName="TableBaseHtmlTemplate",TableBaseHtmlTemplate.__docgenInfo={description:"",displayName:"TableBaseHtmlTemplate",props:{colNumber:{defaultValue:{value:"10"},description:"количество столбцов",name:"colNumber",required:!1,type:{name:"number"}},rowNum:{defaultValue:{value:"20"},description:"количество строк",name:"rowNum",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Table/stories/TableBaseHtml.template.tsx#TableBaseHtmlTemplate"]={docgenInfo:TableBaseHtmlTemplate.__docgenInfo,name:"TableBaseHtmlTemplate",path:"src/components/Table/stories/TableBaseHtml.template.tsx#TableBaseHtmlTemplate"})}catch(__react_docgen_typescript_loader_error){}function Table_stories_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Table_stories_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){Table_stories_define_property(target,key,source[key])})}return target}function Table_stories_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function Table_stories_templateObject(){var data=Table_stories_tagged_template_literal(["\n  height: 20px;\n"]);return Table_stories_templateObject=function _templateObject(){return data},data}function Table_stories_templateObject1(){var data=Table_stories_tagged_template_literal(["\n  font-family: 'VTB Group UI';\n  font-size: 16px;\n  line-height: 24px;\n"]);return Table_stories_templateObject1=function _templateObject(){return data},data}var Table_stories_Separator=styled_components_browser_esm.Ay.div(Table_stories_templateObject()),Desc=styled_components_browser_esm.Ay.div(Table_stories_templateObject1());let Table_stories={title:"Admiral-2.1/Data Table/Table",component:Table.XI,parameters:{docs:{source:{code:null}},componentSubtitle:/*#__PURE__*/(0,jsx_runtime.jsx)(function(){return/*#__PURE__*/(0,jsx_runtime.jsxs)(Desc,{children:["Таблицы представляют собой набор данных, представленных в виде строк и колонок. Состоят из двух основных компонентов - шапки таблицы и строки данных.",/*#__PURE__*/(0,jsx_runtime.jsx)(Table_stories_Separator,{}),"В дизайн-системе таблицы представлены в четырех размерах с высотой строк в S 32, M 40, L 48, XL 56 px. Выбор размера осуществляется исходя из плотности разрабатываемого интерфейса и личных предпочтений дизайнера."]})},{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A90544"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A90707"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A90947"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=109602%3A61149"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A91211"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A91521"}]},argTypes:{dimension:{options:["xl","l","m","s"],control:{type:"radio"}},displayRowSelectionColumn:{control:{type:"boolean"}},headerCheckboxChecked:{control:{type:"boolean"}},headerCheckboxIndeterminate:{control:{type:"boolean"}},headerCheckboxDisabled:{control:{type:"boolean"}},displayRowExpansionColumn:{control:{type:"boolean"}},greyHeader:{control:{type:"boolean"}},greyZebraRows:{control:{type:"boolean"}},showDividerForLastColumn:{control:{type:"boolean"}},spacingBetweenItems:{control:{type:"text"}},headerLineClamp:{control:{type:"number"}},headerExtraLineClamp:{control:{type:"number"}},disableColumnResize:{control:{type:"boolean"}},showLastRowUnderline:{control:{type:"boolean"}},columnList:{control:!1},rowList:{control:!1},virtualScroll:{control:!1},locale:{control:!1}}};var Playground={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TablePlaygroundTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T, NotificationItem, NotificationItemContent, NotificationItemTitle } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div<{ height: number }>`\n  height: ${(p) => p.height}px;\n`;\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TablePlaygroundTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <>\n      <NotificationItem displayStatusIcon>\n        <NotificationItemTitle>Table API</NotificationItemTitle>\n        <NotificationItemContent>\n          API таблицы предполагает 2 обязательных параметра: columnList и rowList, где\n          <Separator height={8} />\n          <li>\n            columnList - массив данных с описанием столбцов, у каждого столбца должен быть задан уникальный\n            идентификатор name;\n          </li>\n          <Separator height={8} />\n          <li>\n            rowList - массив данных с описанием строк, у каждой строки должен быть задан уникальный идентификатор id.\n          </li>\n          <Separator height={16} />\n          Между столбцами и строками таблицы существует четкий МАППИНГ для задания контента ячеек:\n          <Separator height={8} />\n          <li>название свойства строки ⇔ name столбца</li>\n          <li>значение свойства строки ⇔ контент ячейки строки в данном столбце</li>\n          <Separator height={8} />\n          ВАЖНО: таблица не поддерживает сложные составные имена столбцов с использованием точки (н-р, 'test.name'), имя\n          столбца не должно быть составной структурой.\n        </NotificationItemContent>\n      </NotificationItem>\n      <Separator height={40} />\n      <Table {...props} rowList={rowList} columnList={cols} onColumnResize={handleResize} />\n    </>\n  );\n};\n"}}}},ColumnWidthExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnWidthTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    width: 'calc(20% - 40px)',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: '250px',\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 200,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n    width: '20%',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableColumnWidthTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return <Table {...props} rowList={rowList} columnList={cols} onColumnResize={handleResize} />;\n};\n"},description:{story:"По умолчанию ширина столбца составляет 100 пикселей. Чтобы изменить этот \n      параметр в массиве columnList для столбца, чью ширину нужно изменить, следует задать параметр width. \n      В качестве значения width может выступать любое валидное css значение (пиксели, проценты, функция calc и т.д.).\n\nТакже\n      ширину столбца можно регулировать с помощью ручного ресайза, для этого нужно \n      потянуть разделитель между столбцами в нужном направлении. При этом обязательно должен быть задан колбек onColumnResize.\n      При срабатывании колбек сообщает пользователю о попытке ресайзинга столбца, после чего пользователь должен \n      обновить ширину соответствующего столбца в массиве columnList. \n      Таким образом контроль за ресайзингом происходит на стороне пользователя.\n\nПо умолчанию\n      в таблице всегда включена возможность ручного ресайза столбцов, однако с помощью параметра disableColumnResize \n      можно отменить эту возможность для всей таблицы, \n      либо с помощью параметра disableResize отключить ресайз для отдельного столбца. \n      Также в таблице по умолчанию не отображается разделитель для последнего столбца, данное поведение можно \n      изменить с помощью параметра showDividerForLastColumn."}}},name:"Table. Пример изменения ширины столбцов."},CheckboxExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableCheckboxTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableCheckboxTemplate = (props: TableProps) => {\n  const [rows, setRows] = React.useState(rowList);\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleSelectionChange = (ids: Record<string, boolean>): void => {\n    const updRows = rows.map((row) => ({ ...row, selected: ids[row.id] }));\n    setRows(updRows);\n  };\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      rowList={rows}\n      columnList={cols}\n      displayRowSelectionColumn\n      onRowSelectionChange={handleSelectionChange}\n      onColumnResize={handleResize}\n    />\n  );\n};\n"},description:{story:"Отображение столбца с чекбоксами регулируется параметром displayRowSelectionColumn. \n      Чекбокс в шапке таблицы позволяет выбрать все строки (если не выбрано ни одной строки), \n      либо отменить выбранные до этого строки. По нажатию на любой из чекбоксов срабатывает колбек onRowSelectionChange.\n\nТакже\n      с помощью параметров headerCheckboxChecked, headerCheckboxIndeterminate можно контролировать состояние чекбокса в шапке таблицы. А\n      с помощью колбека onHeaderSelectionChange отслеживать нажатие на данный чекбокс.\n\nЕсли необходимо задизейблить чекбокс отдельной строки,\n      для данной строки нужно задать параметр checkboxDisabled."}}},name:"Table. Пример c чекбоксами."},StyleExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableStyleTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableStyleTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      rowList={rowList}\n      columnList={cols}\n      greyHeader\n      showBorders\n      spacingBetweenItems={'20px'}\n      style={{\n        maxHeight: '400px',\n      }}\n      onColumnResize={handleResize}\n    />\n  );\n};\n"},description:{story:"Существует ряд возможностей изменить дефолтные стили таблицы. \n      Для таблицы можно задать атрибут style, который применится к корневому элементу таблицы. \n      Кроме того, на корневой элемент можно прокинуть все стандартные html-атрибуты div-элемента.\n\nУ \n      пользователя существует возможность менять стили отдельных элементов таблицы путем доступа \n      к ним через определенные classNames и data-атрибуты. В таблице используются следующие \n      <b>classNames</b>:\n      <ul>\n      <li>table - корневой элемент таблицы</li>\n      <li>thead - хедер таблицы\n        <ul>\n          <li>th - ячейка с заголовком столбца в хедере таблицы</li>\n          <li>th_checkbox - ячейка с чекбоксом в хедере таблицы</li>\n        </ul>\n      </li>\n      <li>tbody - тело таблицы\n        <ul>\n          <li>td - ячейка с данными в теле таблицы</li>\n          <li>td_checkbox - ячейка с чекбоксом в теле таблицы</li>\n          <li>td_expand - ячейка с иконкой стрелки (для раскрытия строки/группы строк) в теле таблицы</li>\n        </ul>\n      </li>\n      <li>tr - строка таблицы</li>\n    </ul>\n\nТакже у элементов в таблице \n      есть специальные <b>data-атрибуты</b>, которые описывают\n      принадлежность элемента к определенным столбцу и строке. Ниже приведено подробное описание:\n      <table>\n        <thead>\n          <tr>\n            <td width='250px'><b>Элемент таблицы</b></td>\n            <td><b>data-атрибут столбца</b></td>\n            <td><b>data-атрибут строки</b></td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Строка таблицы</td>\n            <td align='center'>————</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с заголовком столбца в хедере таблицы</td>\n            <td>data-th-column={name столбца}</td>\n            <td align='center'>————</td>\n          </tr>\n          <tr>\n            <td>Ячейка с чекбоксом в хедере таблицы</td>\n            <td>data-th-column='checkbox'</td>\n            <td align='center'>————</td>\n          </tr>\n          <tr>\n            <td>Ячейка с данными в теле таблицы</td>\n            <td>data-column={name столбца}</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с заголовком группы в теле таблицы</td>\n            <td>data-column='group'</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с чекбоксом в теле таблицы</td>\n            <td>data-column='checkbox'</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с иконкой стрелки (для раскрытия строки/группы строк) в теле таблицы</td>\n            <td>data-column='expand'</td>\n            <td>data-row={id строки}</td>\n          </tr>\n        </tbody>\n      </table>\n\nТакже существует ряд \n      параметров, влияющих на внешний вид таблицы:\n\n* dimension - параметр, регулирующий размер таблицы;\n\n* greyHeader - \n      параметр, с помощью которого можно окрашивать шапку таблицы в серый цвет;\n\n* showDividerForLastColumn - параметр, \n      который отвечает за отображение вертикальной полосы разделителя для последнего столбца таблицы. По умолчанию параметр равен false, \n      то есть разделитель не отображается;\n\n* showLastRowUnderline - параметр, который управляет отображением серой линии \n      подчеркивания для последней строки таблицы. По умолчанию параметр равен true, то есть линия отображается;\n\n* showBorders - параметр, \n      который управляет отображением границ между ячейками таблицы и обводки всей таблицы. По умолчанию параметр равен false,\n      последняя колонка будет иметь границы справа только, если параметр showDividerForLastColumn равен true;\n\n* spacingBetweenItems -\n      параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка \n      и за расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка \n      (<a href=\"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?type=design&node-id=39-90743&t=3zpjH7G56cpfgH43-4\">описание параметра в макетах</a>).\n      По умолчанию минимальное значение 12, для таблиц S и M, и 16 для таблиц L и XL. В коде предусмотрено, что\n      правый боковой отступ можно менять только в большую сторону в сравнении с дефолтным значением, а расстояние между иконкой фильтра и \n      остальным содержимым заголовка можно как уменьшать, так и увеличивать с помощью spacingBetweenItems."}}},name:"Table. Пример стилизации (classNames, data-attrs, props)."},OrientationExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableOrientationTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    cellAlign: 'right',\n    width: 150,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n    cellAlign: 'right',\n  },\n];\n\nexport const TableOrientationTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return <Table {...props} rowList={rowList} columnList={cols} onColumnResize={handleResize} />;\n};\n"},description:{story:"По умолчанию текстовый контент столбца выравнивается по левому краю. Если необходимо выравнивание по правому краю, \n      то следует задать параметр cellAlign: 'right' для столбца.\n\nПримечание: параметр cellAlign применим только к простому \n      текстовому наполнению ячеек и заголовка столбца. Если в ячейку таблицы или заголовок встроен не просто текст, а какой-то кастомный \n      компонент со своей версткой, то пользователю нужно будет самостоятельно прописывать для этого компонента правила выравнивания контента."}}},name:"Table. Пример с настройкой выравнивания контента столбца."},SortExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableSortTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\n\nconst numberFormatter = new Intl.NumberFormat('ru-RU');\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: string;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(500000),\n    currency: 'RUB',\n    rate: numberFormatter.format(2),\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2021-04-05').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(32500000000),\n    currency: 'RUB',\n    rate: numberFormatter.format(5),\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-11-06').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(189000000),\n    currency: 'RUB',\n    rate: numberFormatter.format(6),\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2010-12-09').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(350000000),\n    currency: 'RUB',\n    rate: numberFormatter.format(1),\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2019-08-06').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(60000),\n    currency: 'RUB',\n    rate: numberFormatter.format(4),\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2021-04-05').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(700000),\n    currency: 'RUB',\n    rate: numberFormatter.format(1),\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2019-12-01').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(500000),\n    currency: 'RUB',\n    rate: numberFormatter.format(8),\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n    sortable: true,\n    type: 'date',\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n    sortable: true,\n    type: 'number',\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n    sortable: true,\n    type: 'number',\n  },\n];\n\nconst StrToTime = (str: string) => {\n  const res = str.split('.').reverse().join('-');\n  return new Date(res).getTime();\n};\n\nconst MAX_SORT_LEVEL = 2;\n\ntype SortColumn = { [key: string]: { sort: 'asc' | 'desc'; type?: string } };\n\nexport const TableSortTemplate = (props: TableProps) => {\n  const [rows, setRows] = React.useState([...rowList]);\n  const [cols, setCols] = React.useState([...columnList]);\n  const [sortLevel, setSortLevel] = React.useState<number>(0);\n\n  const calcSortOrder = (columns: Array<Column>): Array<Column> => {\n    const newCols = [...columns];\n\n    const sortColumns = [...newCols]\n      .filter((column) => !!column.sort)\n      .sort((a, b) => {\n        return (a.sortOrder || 0) - (b.sortOrder || 0);\n      });\n\n    sortColumns.forEach((col, index) => {\n      if (index < MAX_SORT_LEVEL) {\n        col.sortOrder = index + 1;\n      } else {\n        col.sortOrder = undefined;\n        col.sort = undefined;\n      }\n    });\n    setSortLevel(sortColumns.length);\n\n    return newCols;\n  };\n\n  const getOrderedSortColumns = (columns: Array<Column>): SortColumn => {\n    const sortColumns = columns\n      .filter((column) => !!column.sort)\n      .sort((a, b) => {\n        return (a.sortOrder || 0) - (b.sortOrder || 0);\n      });\n\n    return sortColumns.reduce((acc: SortColumn, { name, sort, type }: Column) => {\n      if (sort) acc[name] = { sort, type };\n      return acc;\n    }, {});\n  };\n\n  const handleSort = ({ name, sort }: { name: string; sort: 'asc' | 'desc' | 'initial' }) => {\n    if (sort === 'initial') {\n      const newCols = [...cols].map((col) =>\n        col.name === name ? { ...col, sort: undefined, sortOrder: undefined } : { ...col },\n      );\n      setCols(calcSortOrder(newCols));\n    } else {\n      if (sort === 'asc') {\n        if (sortLevel === MAX_SORT_LEVEL) {\n          const firstOrderCol = cols.find((col) => col.sortOrder === 1);\n          if (firstOrderCol) {\n            if (firstOrderCol.sort) firstOrderCol.sort = undefined;\n            if (firstOrderCol.sortOrder) firstOrderCol.sortOrder = undefined;\n          }\n        }\n\n        const newCols = [...cols].map((col) => {\n          const newCol = { ...col };\n\n          if (col.name === name) {\n            newCol.sort = 'asc';\n            newCol.sortOrder = sortLevel + 1;\n          }\n\n          return newCol;\n        });\n        setCols(calcSortOrder(newCols));\n      } else {\n        setCols([...cols].map((col) => (col.name === name ? { ...col, sort: 'desc' } : { ...col })));\n      }\n    }\n  };\n\n  const compare = (a: any, b: any, colName: string, sort: 'asc' | 'desc', colType?: string) => {\n    if (sort === 'asc') {\n      switch (colType) {\n        case 'date':\n          return StrToTime(a[colName]) - StrToTime(b[colName]);\n        case 'number':\n        default:\n          return Number(a[colName].replace(/\\D/g, '')) - Number(b[colName].replace(/\\D/g, ''));\n      }\n    } else {\n      switch (colType) {\n        case 'date':\n          return StrToTime(b[colName]) - StrToTime(a[colName]);\n        case 'number':\n        default:\n          return Number(b[colName].replace(/\\D/g, '')) - Number(a[colName].replace(/\\D/g, ''));\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    const sortColumns = getOrderedSortColumns(cols);\n\n    if (Object.keys(sortColumns).length === 0) {\n      setRows([...rowList]);\n    } else {\n      const names = Object.keys(sortColumns);\n      const newRows = [...rows].sort((a: any, b: any) => {\n        const result = compare(a, b, names[0], sortColumns[names[0]].sort, sortColumns[names[0]].type);\n\n        if (!result && names.length > 1) {\n          return compare(a, b, names[1], sortColumns[names[1]].sort, sortColumns[names[1]].type);\n        } else {\n          return result;\n        }\n      });\n\n      setRows(newRows);\n    }\n  }, [cols]);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return <Table {...props} columnList={cols} rowList={rows} onSortChange={handleSort} onColumnResize={handleResize} />;\n};\n"},description:{story:"По умолчанию возможность сортировки столбца отключена.\n      Чтобы сделать столбец сортируемым, необходимо задать ему параметр sortable: true. Сортировка - это контролируемый пользователем параметр. \n      Чтобы включить для столбца сортировку по возрастанию/убыванию, пользователь должен задать для столбца параметр sort: 'asc' | 'desc'.\n      Если для столбца задан только параметр sortable: true, а параметр sort не задан, это говорит о том, что столбец сортируемый \n      (при наведении на его заголовок будет видна стрелка сортировки), но в данный момент к нему никакая сортировка не применена.\n\nЕсли \n      к сортируемому столбцу пока не применена сортировка, то значок-стрелка виден только при наведении на область заголовка и окрашивается в серый цвет.\n      Если сортировка включена (первое нажатие - сортировка по возрастанию), то ее значок-стрелка остается видимым при снятии фокуса \n      с заголовка и окрашивается в синий цвет. При повторном нажатии происходит сортировка в обратном порядке (стрелка меняет направление, \n      по убыванию). При третьем нажатии сортировка отменяется.\n\nПри изменении сортировки столбца будет срабатывать колбек onSortChange, \n      который будет возвращать объект со свойствами: name - уникальное имя столбца, к которому была применена сортировка, sort - тип сортировки ('asc' - возрастающая, \n      'desc' - убывающая и 'initial' - отмена сортировки, возврат к первоначальному состоянию). Сортировка массива строк \n      происходит на стороне пользователя при срабатывании колбека onSortChange. Для столбца таблицы можно задать параметр type, \n      на основе которого для столбцов одинакового типа можно задать единые функции \n      сортировки.\n\nДизайн-системой предусматривается многоуровневая сортировка. \n      Рекомендуется использовать не более ДВУХ уровней. Логика сортировки (взаимосвязи) выстраивается пользователем. При этом \n      у иконок сортировки появляются цифры, обозначающие порядок (приоритет) сортировки."}}},name:"Table. Сортировка."},FilterExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableFilterTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, FieldSet, RadioButton, Button, DateField } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport { ReactComponent as AcceptSolid } from '@admiral-ds/icons/build/category/AcceptSolid.svg';\nimport styled from 'styled-components';\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(500_000),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2021-04-05').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(32_500_000_000),\n    currency: 'RUB',\n    rate: 5.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-11-06').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(189_000_000),\n    currency: 'RUB',\n    rate: 6,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2010-12-09').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(350_000_000),\n    currency: 'RUB',\n    rate: 1,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2019-08-06').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(60_000),\n    currency: 'RUB',\n    rate: 4,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2021-04-05').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(700_000),\n    currency: 'RUB',\n    rate: 1,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2019-12-01').toLocaleDateString(),\n    transfer_amount: numberFormatter.format(500_000),\n    currency: 'RUB',\n    rate: 4,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  margin-top: 28px;\n  & > button:first-child {\n    margin-right: 8px;\n  }\n`;\n\nexport const TableFilterTemplate = (props: TableProps) => {\n  const [selected, setSelected] = React.useState<string>('');\n  const [selectedDate, setSelectedDate] = React.useState<string>('');\n  const [rows, setRows] = React.useState([...rowList]);\n  const [columns, setCols] = React.useState([...columnList]);\n  const [numFilterActive, setNumFilterActive] = React.useState(false);\n  const [dateFilterActive, setDateFilterActive] = React.useState(false);\n\n  const renderNumFilter = ({ closeMenu }: any, column: any) => (\n    <Wrapper>\n      <FieldSet\n        legend=\"Варианты фильтрации:\"\n        onChange={(e) => {\n          setSelected((e.target as HTMLInputElement).value);\n        }}\n      >\n        <RadioButton value=\"1\" name=\"test\" defaultChecked={'1' === selected}>\n          Сумма превышает миллиард\n        </RadioButton>\n        <RadioButton value=\"2\" name=\"test\" defaultChecked={'2' === selected}>\n          Сумма меньше миллиарда\n        </RadioButton>\n      </FieldSet>\n      <ButtonWrapper>\n        <Button\n          dimension=\"m\"\n          onClick={() => {\n            closeMenu();\n            setNumFilterActive(true);\n            if (selected === '1') {\n              const newRows = rowList.filter(\n                (row) => Number(((row as any)[column.name] as string).replace(/\\D/g, '')) > 1000000000,\n              );\n              setRows(newRows);\n            } else {\n              const newRows = rowList.filter(\n                (row) => Number(((row as any)[column.name] as string).replace(/\\D/g, '')) < 1000000000,\n              );\n              setRows(newRows);\n            }\n          }}\n        >\n          Применить\n        </Button>\n        <Button\n          dimension=\"m\"\n          onClick={() => {\n            closeMenu();\n            setNumFilterActive(false);\n            setSelected('');\n            setRows([...rowList]);\n          }}\n        >\n          Очистить\n        </Button>\n      </ButtonWrapper>\n    </Wrapper>\n  );\n\n  const renderDateFilter = ({ closeMenu }: any, column: any) => (\n    <Wrapper>\n      <DateField\n        label=\"Выберите дату:\"\n        value={selectedDate}\n        onChange={(e: any) => {\n          setSelectedDate((e.target as HTMLInputElement).value);\n        }}\n      />\n      <ButtonWrapper>\n        <Button\n          dimension=\"m\"\n          onClick={() => {\n            closeMenu();\n            setDateFilterActive(true);\n            const newRows = rowList.filter((row) => (row as any)[column.name] === selectedDate);\n            setRows(newRows);\n          }}\n        >\n          Применить\n        </Button>\n        <Button\n          dimension=\"m\"\n          onClick={() => {\n            closeMenu();\n            setDateFilterActive(false);\n            setSelectedDate('');\n            setRows([...rowList]);\n          }}\n        >\n          Очистить\n        </Button>\n      </ButtonWrapper>\n    </Wrapper>\n  );\n\n  const onFilterMenuClickOutside = ({ closeMenu }: any) => closeMenu();\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  const cols = React.useMemo(\n    () =>\n      columns.map((col, index) => {\n        if (index === 0) {\n          return {\n            ...col,\n            renderFilter: () => (\n              <Wrapper>Пример кастомизации иконки фильтра с помощью функции renderFilterIcon</Wrapper>\n            ),\n            renderFilterIcon: () => <AcceptSolid />,\n            onFilterMenuClickOutside,\n          };\n        }\n        if (index === 1) {\n          return {\n            ...col,\n            isFilterActive: dateFilterActive,\n            renderFilter: renderDateFilter,\n            onFilterMenuClickOutside,\n          };\n        }\n        if (index === 2) {\n          return {\n            ...col,\n            isFilterActive: numFilterActive,\n            renderFilter: renderNumFilter,\n            onFilterMenuClose: () => console.log('filter menu close'),\n            onFilterMenuOpen: () => console.log('filter menu open'),\n            onFilterMenuClickOutside,\n          };\n        } else if (index === 4) {\n          return {\n            ...col,\n            cellAlign: 'right' as any,\n            renderFilter: () => <Wrapper>Пример отображения фильтра в колонке с выравниванием по правому краю</Wrapper>,\n            onFilterMenuClickOutside,\n          };\n        } else return col;\n      }),\n    [columns, selected, selectedDate, numFilterActive, dateFilterActive],\n  );\n\n  return (\n    <>\n      <Table {...props} columnList={cols} rowList={rows} onColumnResize={handleResize} />\n    </>\n  );\n};\n"},description:{story:"Опционально в заголовках можно включать фильтрацию столбцов. \n      При этом у заголовка будет появляться иконка фильтрации, по нажатию на которую будет \n      открываться меню фильтрации.\n\nДля того чтобы задать фильтр для столбца достаточно \n      задать для него параметр renderFilter - функцию, которая будет отрисовывать содержимое \n      меню фильтра. Данная функция имеет в качестве входных параметров объект столбца и объект с двумя \n      свойствами:\n\n 1) closeMenu - колбек, при вызове которого происходит закрытие меню \n      фильтра;\n\n2) setFilterActive - колбек, который устанавливает фильтр в активное/неактивное \n      состояние. Колбек setFilterActive - это устаревшее api, вместо него рекомендуется \n      использовать параметр столбца isFilterActive, который также устанавливает фильтр в активное/неактивное \n      состояние.В неактивном состоянии иконка фильтра окрашена в серый цвет, \n      при активном (включенном фильтре) иконка фильтра окрашивается в синий цвет.\n\nМеню \n      фильтра является произвольным и полностью контролируется пользователем. Закрытие меню и\n      установка фильтра в активное/неактивное состояние производится пользователем внутри функции \n      renderFilter с помощью вышеописанных колбеков. С помощью параметров filterMenuAlignSelf, \n      filterMenuClassName, filterMenuCssMixin и filterMenuStyle пользователь также может управлять \n      выравниваем фильтра, добавлять className и изменять его стили.\n\nИконка фильтрации может быть \n      любой (шестеренка, фильтр и т.д.). По умолчанию в качестве иконки фильтра\n      используется иконка MoreHorizontalOutline. Дефолтную иконку можно заменить \n      с помощью параметра renderFilterIcon.\n\nКроме того для столбца можно задать колбеки \n      onFilterMenuOpen и onFilterMenuClose, которые будут срабатывать \n      соответственно при открытии и закрытии меню фильтра. А также для столбца можно задать колбек \n      onFilterMenuClickOutside, который будет срабатывать при клике вне меню фильтра. Данный колбек имеет \n      в качестве входных параметров объект с двумя \n      свойствами (closeMenu, setFilterActive) и параметр event.\n\n!!! Примечание: для корректной работы\n      вложенных друг в друга дропдаунов (н-р, меню фильтра, внутри которого открывается дропдаун с календарем) убедитесь,\n      что компоненты библиотеки обернуты в DropdownProvider. Пример использования DropdownProvider есть в readme."}}},name:"Table. Фильтрация."},MultilineExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableMultilineTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n  customer: string;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    customer: 'Иванов Иван Петрович',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    customer: 'Смиронова Ольга Валерьевна',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    customer: 'Зверев Игорь Сергеевич',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    customer: 'Потапов Иван Александрович',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    customer: 'Шилова Вера Павловна',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки покупки недвижимости',\n    width: 180,\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 135,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма сделки',\n    width: 120,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'customer',\n    title: 'Покупатель',\n    width: 145,\n  },\n  {\n    name: 'rate',\n    title: 'Ставка на момент совершения сделки',\n    width: 120,\n  },\n];\n\nexport const TableMultilineTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return <Table {...props} rowList={rowList} columnList={cols} headerLineClamp={2} onColumnResize={handleResize} />;\n};\n"},description:{story:'Заголовки таблицы по умолчанию выводятся в одну строку и при нехватке места сокращаются с помощью троеточия. Увеличить высоту \n      заголовка можно с помощью параметра headerLineClamp, который определяет максимальное количество строк, которое может занимать заголовок таблицы. \n      В примере ниже используется headerLineClamp равный 2. \n\nСтроки таблицы не ограничены по высоте. \n      В ячейке строки можно отрисовать любой ReactNode, передав его в rowList. Также с помощью функции renderCell можно\n      переопределить стандартный вид ячеек, относящихся к определенному столбцу таблицы (смотрите "Пример кастомизации компонента ячейки").'}}},name:"Table. Многострочность."},StickyExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableStickyTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    width: '20%',\n    sticky: true,\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n    sticky: true,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 300,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableStickyTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      rowList={rowList}\n      columnList={cols}\n      style={{ maxHeight: '300px', maxWidth: '700px' }}\n      onColumnResize={handleResize}\n    />\n  );\n};\n"},description:{story:"При необходимости можно “закреплять” столбцы таблицы. Фиксированные столбцы располагаются по левому краю таблицы и идут друг за другом\n        (то есть фиксированные столбцы должны быть заданы в начале columnList друг за другом и никак иначе).\n      Столбец с чекбоксами является фиксированным по умолчанию.\n\nЧтобы сделать столбец фиксированным, необходимо задать для него параметр sticky равный true."}}},name:"Table. Фиксированные столбцы."},RowStateExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowStateTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow, Color } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    selected: true,\n    hover: true,\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    disabled: true,\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell data-disabled>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    status: 'error',\n    hover: true,\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    status: 'success',\n    hover: true,\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    status: 'attention',\n    hover: true,\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    status: 'warning',\n    hover: true,\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    hover: true,\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableRowStateTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      rowList={rowList}\n      columnList={cols}\n      onColumnResize={handleResize}\n      rowBackgroundColorByStatusMap={{\n        attention: (color: Color) => color['Attention/Attention 20'],\n        warning: (color: Color) => color['Warning/Warning 20'],\n      }}\n    />\n  );\n};\n"},description:{story:"Для каждой строки помимо содержимого ячеек, id и className, можно задать следующие \n      состояния строки: \n\n* selected - строка выбрана, чекбокс в строке \n      проставлен; \n\n* disabled - строка задизейблена; \n\n* hover - строка окрашивается \n      при ховере. Данная окраска должна применяться, если строка кликабельна и ведет к каким-либо \n      действиям.\n\nТакже строке можно задать определенный статус, в соответствии с которым она будет окрашена.\n      Чтобы задать статус для строки необходимо использовать параметр status, \n      где в качестве значения указывается строка с названием статуса (например, status='error' или status='success').\n      По умолчанию таблица предоставляет два статуса: error и success.\n\nПользователь также имеет возможность задать для строки свои кастомные статусы.\n      Для того чтобы задать кастомный статус необходимо:\n\n* придумать строковое название статуса (например, 'attention') и определить,\n      какой цвет строки будет ему соответствовать (например, Attention/Attention 20). \n      Рекомендуется использовать цвета из палитры библиотеки с индексом контрастности 10 или 20.\n\n* В параметре таблицы rowBackgroundColorByStatusMap\n      необходимо задать соответствие кастомного статуса строки и её цвета. Для этого в качестве значения rowBackgroundColorByStatusMap нужно указать\n      объект, где ключом объекта должно быть название статуса, а значением свойства объекта должен быть цвет строки, соответствующий данному статусу.\n      Цвет можно задать либо в виде строки со значением цвета, либо в виде функции,\n      которая на вход получает объект color (равный theme.color, данный объект стоит использовать, если цвет строки будет взят из темы) \n      и возвращает строку со значением цвета. Также с помощью параметра rowBackgroundColorByStatusMap  можно перезадать \n      дефолтные цвета строк для статусов error и success.\n\n* В параметре строки status задать название кастомного статуса."}}},name:"Table. Состояния (selected, disabled, hover) и статусы (error, success, кастомные статусы) строк."},ZebraExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableZebraTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableZebraTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table {...props} rowList={rowList} columnList={cols} greyHeader greyZebraRows onColumnResize={handleResize} />\n  );\n};\n"},description:{story:"Опционально, для лучшей визуальной сепарации строк, их можно окрашивать через одну в цвет вторичного фона (Neutral 05). Используйте для этого параметр greyZebraRows.\n      Окраска начинается со второй строки, считая от заголовка таблицы или группы. При группировке строк, строка с названием группы не окрашивается. При перетаскивании строк, поиске или сортировке, \n      они окрашиваются в соответствии с описанным выше алгоритмом.\n\nДля консистентности рекомендуется заголовок таблицы тоже окрашивать в серый цвет (параметр greyHeader)."}}},name:"Table. Зебра (окрашивание строк через одну)."},ExpandExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableExpandTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  background: var(--admiral-color-Cyan_Cyan10, ${(p) => p.theme.color['Cyan/Cyan 10']});\n  padding: 16px;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  padding-left: 16px;\n  background: var(--admiral-color-Special_ElevatedBG, ${(p) => p.theme.color['Special/Elevated BG']});\n  & > div {\n    margin-bottom: 8px;\n  }\n`;\n\nconst expandedRowRender = (row: RowData) => {\n  return (\n    <Wrapper>\n      <Content>\n        <div>Тип сделки: {row.transfer_type}</div>\n        <div>Дата сделки: {row.transfer_date}</div>\n        <div>Валюта: {row.currency}</div>\n        <div>Ставка: {row.rate}</div>\n      </Content>\n    </Wrapper>\n  );\n};\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n    expanded: true,\n    expandedRowRender: expandedRowRender,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n    expandedRowRender: expandedRowRender,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n    expandedRowRender: expandedRowRender,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n    expandedRowRender: expandedRowRender,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableExpandTemplate = (props: TableProps) => {\n  const [rows, setRows] = React.useState(rowList);\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleExpansionChange = (ids: Record<string, boolean>): void => {\n    const updRows = rows.map((row) => ({ ...row, expanded: ids[row.id] }));\n    setRows(updRows);\n  };\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      rowList={rows}\n      columnList={cols}\n      displayRowExpansionColumn\n      onRowExpansionChange={handleExpansionChange}\n      onColumnResize={handleResize}\n    />\n  );\n};\n"},description:{story:"Отображение столбца детализации (столбец со стрелками) регулируется параметром displayRowExpansionColumn. \n      Стрелка позволяет развернуть строку и посмотреть более детализированную информацию о строке. \n      По нажатию на любую из стрелок срабатывает колбек onRowExpansionChange. Развернутое/свернутое состояние строки \n      задается параметром expanded. А с помощью функции expandedRowRender происходит рендер развернутой части строки (рендер детализированной информации)."}}},name:"Table. Пример c детализацией строки."},ExtraTextExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableExtraTextTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    extraText: 'Не позднее марта текущего года',\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    cellAlign: 'right',\n    width: 150,\n    extraText: 'Сумма с учетом налогов',\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n    extraText: 'Some additional text',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n    cellAlign: 'right',\n  },\n];\n\nexport const TableExtraTextTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table {...props} rowList={rowList} columnList={cols} headerExtraLineClamp={2} onColumnResize={handleResize} />\n  );\n};\n"},description:{story:"При необходимости в заголовке таблицы можно включать дополнительный текст с помощью параметра extraText. \n      Дополнительный текст по умолчанию выводится в одну строку и при нехватке места сокращается с помощью троеточия. Увеличить высоту \n      дополнительного текста можно с помощью параметра headerExtraLineClamp, который определяет максимальное количество строк, \n      которое может занимать дополнительный текст. В примере ниже используется headerExtraLineClamp равный 2."}}},name:"Table. Пример c дополнительным текстом в заголовке."},OverflowMenuExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableOverflowMenuTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, RowAction, TooltipHoc, OverflowMenu, MenuItem, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow, RenderOptionProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as DeleteOutline } from '@admiral-ds/icons/build/system/DeleteOutline.svg';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst StrToDate = (str: string) => {\n  const res = str.split('.').reverse().join('-');\n  return new Date(res);\n};\nconst numberFormatter = new Intl.NumberFormat();\nconst TooltipedRowAction = TooltipHoc(RowAction);\n\nconst items = [\n  {\n    id: '1',\n    display: 'Вывести дату сделки в локали ru',\n  },\n  {\n    id: '2',\n    display: 'Вывести дату сделки в локали en-US',\n  },\n  {\n    id: '3',\n    display: 'Вывести дату сделки в локали de-AT',\n  },\n];\n\nconst Menu = ({ row, onVisibilityChange }: { row: RowData; onVisibilityChange?: (isVisible: boolean) => void }) => {\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItem dimension=\"m\" {...options} key={item.id} role=\"option\">\n          {item.display}\n        </MenuItem>\n      ),\n    }));\n  }, []);\n\n  return (\n    <OverflowMenu\n      onSelectItem={(id) => {\n        const options: Intl.DateTimeFormatOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        if (id === '1') alert(StrToDate(row['transfer_date']).toLocaleString('ru', options));\n        if (id === '2') alert(StrToDate(row['transfer_date']).toLocaleString('en-US', options));\n        if (id === '3') alert(StrToDate(row['transfer_date']).toLocaleString('de-AT', options));\n      }}\n      onVisibilityChange={onVisibilityChange}\n      aria-label=\"Overflow Menu component\"\n      dimension=\"m\"\n      isVertical\n      items={model}\n    />\n  );\n};\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString('ru'),\n    transfer_amount: numberFormatter.format(500_000),\n    currency: 'RUB',\n    rate: 2.5,\n    overflowMenuRender: (row: RowData, onVisibilityChange?: (isVisible: boolean) => void) => (\n      <Menu row={row} onVisibilityChange={onVisibilityChange} />\n    ),\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2021-04-05').toLocaleDateString('ru'),\n    transfer_amount: numberFormatter.format(32_500_000_000),\n    currency: 'RUB',\n    rate: 5.5,\n    overflowMenuRender: (row: RowData, onVisibilityChange?: (isVisible: boolean) => void) => (\n      <Menu row={row} onVisibilityChange={onVisibilityChange} />\n    ),\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-11-06').toLocaleDateString('ru'),\n    transfer_amount: numberFormatter.format(189_000_000),\n    currency: 'RUB',\n    rate: 6,\n    actionRender: () => (\n      <TooltipedRowAction renderContent={() => `Delete`} onClick={() => console.log('row action happens')}>\n        <DeleteOutline />\n      </TooltipedRowAction>\n    ),\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2010-12-09').toLocaleDateString('ru'),\n    transfer_amount: numberFormatter.format(350_000_000),\n    currency: 'RUB',\n    rate: 1,\n    actionRender: () => (\n      <TooltipedRowAction renderContent={() => `Delete`} onClick={() => console.log('row action happens')}>\n        <DeleteOutline />\n      </TooltipedRowAction>\n    ),\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2019-08-06').toLocaleDateString('ru'),\n    transfer_amount: numberFormatter.format(60_000),\n    currency: 'RUB',\n    rate: 4,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableOverflowMenuTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState([...columnList]);\n  const [cols2, setCols2] = React.useState([...columnList]);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n  const handleResize2 = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols2.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols2(newCols);\n  };\n\n  return (\n    <>\n      <T font=\"Body/Body 2 Long\">Пример с иконками действий над строками, которые видны только по ховеру</T>\n      <Separator />\n      <Table {...props} dimension=\"m\" rowList={rowList} columnList={cols} onColumnResize={handleResize} />\n      <Separator style={{ height: '40px' }} />\n      <T font=\"Body/Body 2 Long\">Пример с постоянно видимыми иконками действий над строками</T>\n      <Separator />\n      <Table\n        {...props}\n        dimension=\"m\"\n        rowList={rowList}\n        columnList={cols2}\n        onColumnResize={handleResize2}\n        showRowsActions\n      />\n    </>\n  );\n};\n"},description:{story:'Опционально со строками можно производить набор действий через Overflow Menu, \n      которое по умолчанию появляется при ховере над строкой. При этом, чтобы не накладываться на возможный текст, \n      под иконкой меню добавляется квадратная подложка белого цвета. В примере ниже Overflow Menu \n      задано для первых двух строк в таблицах.\n\nДля того чтобы задать для строки OverflowMenu необходимо \n      для строки прописать функцию overflowMenuRender. Входные параметры функции: сама \n      строка и колбек onVisibilityChange. Колбек необходимо вызывать \n      при открытии/закрытии меню для того, чтобы таблица могла управлять видимостью OverflowMenu.\n      В качестве результата функция должна возвращать компонент OverflowMenu. Размер OverflowMenu \n      следует задавать согласно правилу:\n\n* Для таблицы с dimension="s" или dimension="m" используется \n      OverflowMenu c dimension="m"\n\n* Для таблицы с dimension="l" или dimension="xl" используется OverflowMenu\n      c dimension="l"\n\nЕсли подразумевается только одно действие над строкой, то вместо overflowMenuRender следует\n      использовать функцию actionRender (в примере используется для 3-4 строк). \n      На вход функция получает саму строку, а возвращает компонент RowAction (экспортируется из библиотеки),\n      внутрь которого необходимо передать иконку для обозначения действия над строкой.\n\nОпционально допускается, чтобы \n      Overflow Menu и иконки одиночных действий были видны постоянно, а не только по ховеру. Данное поведение можно задать\n      с помощью параметра showRowsActions. Если showRowsActions равен true, то все иконки меню и иконки одиночных действий во всех \n      строках таблицы отображаются постоянно. При этом в область заголовков и в строки, для которых не заданы действия, \n      добавляется подложка, для того чтобы визуально был выделен столбец с действиями над строками.'}}},name:"Table. Пример строк с OverflowMenu и иконками для одиночного действия."},FixedVirtualScrollExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableFixedVirtualScrollTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\n\ntype RowData = TableRow & {\n  transfer_number: number;\n  transfer_date: string;\n};\n\nconst rowList: RowData[] = [...Array(1000).keys()].map((_item, index) => ({\n  id: String(index),\n  transfer_number: index,\n  transfer_date: new Date('2020-08-06').toLocaleDateString(),\n}));\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_number',\n    title: 'Номер сделки',\n    width: '40%',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: '40%',\n  },\n];\n\nexport const TableFixedVirtualScrollTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      columnList={cols}\n      rowList={rowList}\n      virtualScroll={{ fixedRowHeight: 40 }}\n      style={{ height: '500px' }}\n      onColumnResize={handleResize}\n    />\n  );\n};\n"},description:{story:"В случае если в таблице необходимо отобразить большое количество строк, возможно использовать функцию виртуального скролла.\n      Библиотека предоставляет два вида виртуального скролла: виртуальный скролл для строк с фиксированной высотой\n      и виртуальный скролл для строк с динамической высотой. Ниже приведен пример таблицы, в которой все строки имеют единую ФИКСИРОВАННУЮ \n      ВЫСОТУ, и в которой активирован виртуальный скролл. \n\nДля того чтобы активировать виртуальный скролл для строк с фиксированной высотой,\n      необходимо задать параметр virtualScroll. Значением virtualScroll должен являться объект, в котором в свойстве fixedRowHeight необходимо \n      задать фиксированную высоту строки. Например, для размера таблицы m высота строки по умолчанию составляет 40px \n      (если содержимое ячеек занимает одну строку в высоту и для ячеек не было задано каких-то кастомных стилей), \n      для размеров s - 32px, l - 48px, xl - 56px.\n\nПримечание: таблица обязательно должна иметь четко \n      заданную высоту (height, minHeight). Это нужно для того, чтобы тело таблицы, которое\n      является flex-элементом, могло растянуться на всю высоту таблицы, в противном случае высота тела таблицы будет равна 0."}}},name:"Table. Виртуальный скролл с фиксированной высотой строки."},DynamicVirtualScrollExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableDynamicVirtualScrollTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\n\ntype RowData = TableRow & {\n  column1: React.ReactNode;\n  column2: string;\n};\n\nconst base = `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \nut labore et dolore magna aliqua. Quam lacus suspendisse faucibus interdum posuere lorem. Magna fringilla \nurna porttitor rhoncus dolor purus non enim. Mattis rhoncus urna neque viverra. Tortor posuere ac ut consequat semper. \nInteger quis auctor elit sed vulputate mi sit. In hac habitasse platea dictumst quisque sagittis purus sit. Enim \nblandit volutpat maecenas volutpat. Lacus laoreet non curabitur gravida arcu.`;\n\nfunction randomIntFromInterval(min: number = 10, max: number = base.length) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getRandomText(index: number) {\n  const int = index % 5 ? randomIntFromInterval(1, 4) : randomIntFromInterval();\n  return base.slice(0, int);\n}\n\nconst rowList: RowData[] = [...Array(1000).keys()].map((_item, index) => ({\n  id: String(index),\n  column1: getRandomText(index),\n  column2: String(index),\n}));\n\nconst columnList: Column[] = [\n  {\n    name: 'column1',\n    title: 'Random text',\n    width: '60%',\n  },\n  {\n    name: 'column2',\n    title: 'Row index',\n  },\n];\n\nexport const TableDynamicVirtualScrollTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      columnList={cols}\n      rowList={rowList}\n      virtualScroll={{\n        estimatedRowHeight: (index: number) => {\n          /** Примерную высоту строки необязательно высчитывать с\n           * помощью index, вы можете указать единую для всех строк примерную высоту.\n           *\n           * В данном примере только каждая 5я строка имеет динамическую высоту,\n           * которая оценена примерна в 150px, остальные строки имеют стандартную высоту в 40px\n           */\n          return index % 5 ? 40 : 150;\n        },\n      }}\n      style={{ height: '500px', width: '500px' }}\n      onColumnResize={handleResize}\n    />\n  );\n};\n"},description:{story:"В случае если в таблице необходимо отобразить большое количество строк, возможно использовать функцию виртуального скролла.\n        Библиотека предоставляет два вида виртуального скролла: виртуальный скролл для строк с фиксированной высотой\n        и виртуальный скролл для строк с динамической высотой. Ниже приведен пример таблицы, в которой строки имеют ДИНАМИЧЕСКУЮ ВЫСОТУ,\n        и в которой активирован виртуальный скролл. \n\nДля того чтобы активировать виртуальный скролл для строк с динамической высотой, необходимо задать \n        параметр virtualScroll. Значением virtualScroll должен являться объект, в котором в свойстве estimatedRowHeight необходимо \n        задать функцию, вычисляющую примерную высоту строки. Функция estimatedRowHeight будет использована для оценки высоты строки \n        до момента, когда строка будет отрисована и измерена. В качестве входного параметра estimatedRowHeight получает индекс \n        строки, который может быть использован для определения примерной высоты строки. Также функция estimatedRowHeight влияет на подсчет\n        высоты всех строк в таблице, а значит и на размер вертикального скролла. Поэтому важно, чтобы функция возвращала максимально близкие\n        к реальности значения.\n\nПримечание: таблица обязательно должна иметь четко \n        заданную высоту (height, minHeight). Это нужно для того, чтобы тело таблицы, которое\n        является flex-элементом, могло растянуться на всю высоту таблицы, в противном случае высота тела таблицы будет равна 0."}}},name:"Table. Виртуальный скролл с динамической высотой строки."},LoadScrollExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableLoadOnScrollTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_number',\n    title: 'Номер сделки',\n    width: '33%',\n  },\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    width: '33%',\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма, ₽',\n    width: '33%',\n  },\n];\n\ntype LastRowProps = {\n  containerRef: React.RefObject<HTMLElement>;\n  onVisible: () => void;\n  rowNode: React.ReactNode;\n};\n\nconst LastRowWrapper = ({ containerRef, onVisible, rowNode }: LastRowProps) => {\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const handleIntersection = (entries: IntersectionObserverEntry[]) => {\n    if (entries[0].isIntersecting && !visible) {\n      setVisible(true);\n      onVisible?.();\n    }\n\n    if (!entries[0].isIntersecting && visible) {\n      setVisible(false);\n    }\n  };\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(handleIntersection, {\n      root: containerRef?.current,\n      threshold: [0, 1.0],\n    });\n\n    if (containerRef.current && ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, [containerRef, visible]);\n\n  return <div ref={ref}>{rowNode}</div>;\n};\n\nexport const TableLoadOnScrollTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n  const [rowsAmount, setRowsAmount] = React.useState(10);\n  const tableRef = React.useRef<HTMLDivElement>(null);\n\n  const rows = React.useMemo(() => {\n    const array = Array.from({ length: rowsAmount }, (v, k) => {\n      return `${k + 1}0000`;\n    }).map((item, index) => ({\n      id: item,\n      transfer_number: index + 1,\n      transfer_type: 'МНО',\n      transfer_amount: item,\n    }));\n    return array;\n  }, [rowsAmount]);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  const uploadNewRows = () => {\n    if (rowsAmount < 100) setRowsAmount((amount) => amount + 10);\n  };\n\n  const renderRowWrapper = (row: TableRow, index: number, rowNode: React.ReactNode) =>\n    index === rowsAmount - 1 ? (\n      <LastRowWrapper key={`row_${row.id}`} containerRef={tableRef} onVisible={uploadNewRows} rowNode={rowNode} />\n    ) : (\n      rowNode\n    );\n\n  return (\n    <Table\n      {...props}\n      ref={tableRef}\n      rowList={rows}\n      columnList={cols}\n      onColumnResize={handleResize}\n      renderRowWrapper={renderRowWrapper}\n      style={{ height: '300px', width: '450px' }}\n    />\n  );\n};\n"},description:{story:"Пользователь может реализовать подгрузку новых строк по мере скролла тела таблицы, например, следующим образом. С\n      помощью функции renderRowWrapper можно создать элемент-обёртку над последней строкой в таблице, \n      и через IntersectionObserver отслеживать момент, когда элемент-обёртка станет видим в пределах тела таблицы (т.е. момент доскролла до последней строки). \n      Это событие будет являться триггером для загрузки новой порции строк."}}},name:"Table. Подгрузка данных при скролле."},GroupExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableGroupTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type?: string;\n  transfer_date?: string;\n  transfer_amount?: React.ReactNode;\n  currency?: string;\n  rate?: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    expanded: false,\n    groupTitle: 'First group name',\n    groupRows: ['0002', '0003'],\n  },\n  {\n    id: '0002',\n    transfer_type: 'GR1',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'GR1',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    expanded: true,\n    groupTitle: 'Second group name',\n    groupRows: ['0005', '0006'],\n  },\n  {\n    id: '0005',\n    transfer_type: 'GR2',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'GR2',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    expanded: true,\n    groupTitle: 'Third group name',\n    groupRows: ['0008'],\n  },\n  {\n    id: '0008',\n    transfer_type: 'GR3',\n    transfer_date: new Date('2020-08-25').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(100)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableGroupTemplate = (props: TableProps) => {\n  const [rows, setRows] = React.useState(rowList);\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleExpansionChange = (ids: Record<string, boolean>): void => {\n    const updRows = rows.map((row) => ({ ...row, expanded: ids[row.id] }));\n    setRows(updRows);\n  };\n\n  const handleSelectionChange = (ids: Record<string, boolean>): void => {\n    const updRows = rows.map((row) => ({ ...row, selected: ids[row.id] }));\n    setRows(updRows);\n  };\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return (\n    <Table\n      {...props}\n      rowList={rows}\n      columnList={cols}\n      displayRowExpansionColumn\n      onRowExpansionChange={handleExpansionChange}\n      onRowSelectionChange={handleSelectionChange}\n      onColumnResize={handleResize}\n    />\n  );\n};\n"},description:{story:"Строки в таблице можно группировать под общим заголовком. При группировке допускается только один уровень \n      вложенности строк. Не допускается использование строк вне групп, то есть все строки в таблице должны входить в какую-то группу.\n      Для того чтобы задать группу строк, нужно в массиве rowList создать объект строки, которая будет являться \n      заголовком группы. Для такой строки необходимо задать два параметра:\n\n* groupTitle - название группы\n\n* groupRows - массив с \n      id строк, входящих в данную группу. Сами строки, относящиеся к группе, должны быть просто перечислены в массиве rowList."}}},name:"Table. Пример c группировкой строк."},CustomTitleExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableCustomTitleTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T, Badge } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: (\n      <>\n        Тип сделки <Badge>5</Badge>\n      </>\n    ),\n    width: '20%',\n  },\n  {\n    name: 'transfer_date',\n    title: <b>Дата сделки</b>,\n    width: '250px',\n  },\n  {\n    name: 'transfer_amount',\n    title: <span style={{ color: 'red', fontWeight: 'bold' }}>Сумма</span>,\n    width: 200,\n  },\n  {\n    name: 'currency',\n    title: <i>Валюта</i>,\n    extraText: <b>доллары</b>,\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableCustomTitleTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return <Table {...props} rowList={rowList} columnList={cols} onColumnResize={handleResize} />;\n};\n"},description:{story:"Пользователь может кастомизировать часть заголовка столбца, а именно область с текстом заголовка (параметр title) и \n      область с дополнительным текстом заголовка (параметр extraText). Параметры title и extraText позволяют задать в них любой ReactNode."}}},name:"Table. Пример кастомизации заголовков столбцов."},RenderCellExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderCellTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T, Badge } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    width: '20%',\n    renderCell(data, _row, idx): React.ReactNode {\n      return (\n        <div style={{ border: '1px solid #aaa', padding: '3px' }}>\n          {data} <Badge>{idx}</Badge>\n        </div>\n      );\n    },\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: '250px',\n    renderCell(date: string): React.ReactNode {\n      return <div>Дата - {date}</div>;\n    },\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n    renderCell(data: string): React.ReactNode {\n      return <i>{data}$</i>;\n    },\n  },\n];\n\nexport const TableRenderCellTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  return <Table {...props} rowList={rowList} columnList={cols} onColumnResize={handleResize} />;\n};\n"},description:{story:"Для формирования контента ячейки пользователь может использовать рендер-колбек renderCell. \n      Функция renderCell задается для каждого столбца в отдельности и представляет собой метод для переопределения стандартного вида ячейки.\n      На вход функция renderCell получает 3 параметра: data - контент ячейки, row - объект строки и rowIdx - индекс строки."}}},name:"Пример кастомизации компонента ячейки (renderCell)."},RenderGroupTitleExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableRenderGroupTitleTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0001',\n    transfer_type: 'Group name',\n    expanded: false,\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n    groupTitle: 'Группа',\n    renderGroupTitle(row: RowData): React.ReactNode {\n      return (\n        <div style={{ fontSize: '36px' }}>\n          {row.transfer_type} - {row.transfer_date}\n        </div>\n      );\n    },\n    groupRows: ['0007', '0008'],\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'GR1',\n    transfer_date: new Date('2020-07-18').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(200)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'GR1',\n    transfer_date: new Date('2020-08-25').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(100)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nexport const TableRenderGroupTitleTemplate = (props: TableProps) => {\n  const [rows, setRows] = React.useState(rowList);\n  const [cols, setCols] = React.useState(columnList);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  const handleExpansionChange = (ids: Record<string, boolean>): void => {\n    const updRows = rows.map((row) => ({ ...row, expanded: ids[row.id] }));\n    setRows(updRows);\n  };\n\n  return (\n    <Table\n      {...props}\n      rowList={rows}\n      columnList={cols}\n      onColumnResize={handleResize}\n      onRowExpansionChange={handleExpansionChange}\n      displayRowExpansionColumn\n    />\n  );\n};\n"},description:{story:"Пользователь может кастомизировать заголовок группы строк с помощью рендер-колбека renderGroupTitle.\n      Функция renderGroupTitle задается для каждой строки в отдельности и представляет собой метод \n      для переопределения стандартного вида заголовка группы строк. \n      На вход функция renderGroupTitle получает 1 параметр: row - объект строки."}}},name:"Table. Пример кастомизации заголовка группы (renderGroupTitle)."},DraggableColumnsExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableColumnDragDropTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0010',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0011',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0012',\n    transfer_type: 'МНО',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\nconst columnList1: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    draggable: true,\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n    draggable: true,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n    draggable: true,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n    draggable: true,\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n    draggable: true,\n  },\n];\n\nconst columnList2: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n    draggable: true,\n    sticky: true,\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    draggable: true,\n    sticky: true,\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    draggable: true,\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n    draggable: true,\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n    draggable: true,\n  },\n];\n\nexport const TableColumnDragDropTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList1);\n  const [cols2, setCols2] = React.useState(columnList2);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  const handleResize2 = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols2.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols2(newCols);\n  };\n\n  const handleColumnDrag = (columnName: string, nextColumnName: string | null) => {\n    const columns = [...cols];\n    const movedIndex = columns.findIndex((col) => col.name === columnName);\n    const movedColumn = columns.splice(movedIndex, 1)[0];\n    const beforeIndex = nextColumnName ? columns.findIndex((col) => col.name === nextColumnName) : columns.length;\n    columns.splice(beforeIndex, 0, movedColumn);\n\n    setCols(columns);\n  };\n\n  const handleColumnDrag2 = (columnName: string, nextColumnName: string | null) => {\n    const columns = [...cols2];\n    const movedIndex = columns.findIndex((col) => col.name === columnName);\n    const movedColumn = columns.splice(movedIndex, 1)[0];\n    const beforeIndex = nextColumnName ? columns.findIndex((col) => col.name === nextColumnName) : columns.length;\n    columns.splice(beforeIndex, 0, movedColumn);\n\n    setCols2(columns);\n  };\n\n  return (\n    <>\n      <T font=\"Body/Body 2 Long\">Пример перемещения обычных столбцов в таблице</T>\n      <Separator />\n      <Table\n        {...props}\n        columnList={cols}\n        rowList={rowList}\n        onColumnResize={handleResize}\n        onColumnDrag={handleColumnDrag}\n      />\n      <Separator style={{ height: '40px' }} />\n      <T font=\"Body/Body 2 Long\">\n        Пример перемещения как обычных, так и фиксированных столбцов в таблице. В данном случае фиксированными являются\n        первые два столбца.\n      </T>\n      <Separator />\n      <Table\n        {...props}\n        columnList={cols2}\n        rowList={rowList}\n        onColumnResize={handleResize2}\n        onColumnDrag={handleColumnDrag2}\n      />\n    </>\n  );\n};\n"},description:{story:"Функция изменения порядка (перемещения) столбцов является опциональной. По умолчанию столбцы таблицы не подлежат перемещению.\n      Для того чтобы столбец можно было перемещать, необходимо задать данному столбцу параметр draggable равный true.\n\nДля перемещения \n      столбца следует “зажать” левую кнопку мыши на нем, после чего над столбцом появится миниатюра заголовка, содержащая текст заголовка.\n      Передвигая данную миниатюру по горизонтали в пределах области заголовков таблицы, можно изменить местоположение интересующего столбца.\n      Если перемещаемая миниатюра выходит за границы области заголовков таблицы наполовину своей высоты, то перемещение становится невозможным, \n      курсор принимает соответствующий вид. Если в таблице есть фиксированные столбцы, то перемещение фиксированных столбцов происходит только между собой. \n      Соответственно, то же самое применимо к обычным столбцам. Менять между собой местами фиксированные и нефиксированные столбцы нельзя. \n      Поэтому, если пользователь будет перемещать обычный столбец и зайдет курсором на область с фиксированными столбцами, \n      то перемещение столбца станет невозможным и курсор изменит свой вид.\n\nПроцесс перемещения столбцов контролируется пользователем. \n      Поэтому для таблицы должен быть задан колбек onColumnDrag, который срабатывает при каждой попытке изменить местоположение столбца таблицы.\n      Данный колбек имеет два параметра: columnName - name столбца, который сейчас перемещается, nextColumnName - name столбца, \n      перед которым пытается встать передвигаемый столбец. Параметр nextColumnName может быть также равен null, если столбец пытается встать в самый конец таблицы.\n      При срабатывании колбека onColumnDrag, пользователь должен будет соответственно обновить список столбцов (columnList) для таблицы.\n\nМиниатюра заголовка, \n      возникающая при перемещении колонки, отрисовывается по умолчанию через портал в document.body. Если пользователь хочет изменить document.body\n      на свой элемент, то пользователю следует:\n\n1) убедиться, что компоненты библиотеки @admiral-ds/react-ui (включая таблицу) \n      обернуты компонентом DropdownProvider;\n\n2) задать для компонента DropdownProvider параметр rootRef, где rootRef - это реф \n      на dom-элемент, внутри которого отрендерится миниатюра заголовка."}}},name:"Table. Drag and Drop столбцов"},DraggableRowsExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableRowDragDropTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Table, T } from '@admiral-ds/react-ui';\nimport type { TableProps, Column, TableRow } from '@admiral-ds/react-ui';\nimport styled from 'styled-components';\n\nconst Separator = styled.div`\n  height: 20px;\n`;\n\nconst AmountCell = styled.div`\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &[data-disabled='true'] {\n    & > * {\n      color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nconst numberFormatter = new Intl.NumberFormat();\n\ntype RowData = TableRow & {\n  transfer_type: string;\n  transfer_date: string;\n  transfer_amount: React.ReactNode;\n  currency: string;\n  rate: number;\n};\n\ntype RowData2 = TableRow & {\n  transfer_type?: string;\n  transfer_date?: string;\n  transfer_amount?: React.ReactNode;\n  transfer_status?: string;\n};\n\nconst rowList: RowData[] = [\n  {\n    id: '0001',\n    transfer_type: 'МНО1',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО2',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО3',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(12_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0004',\n    transfer_type: 'МНО4',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(55_500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО5',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(180_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО6',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(500_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0007',\n    transfer_type: 'МНО7',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(189_000_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО8',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(6_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО9',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(10_000)}</T>\n      </AmountCell>\n    ),\n    currency: 'RUB',\n    rate: 2.5,\n  },\n];\n\nconst rowList2: RowData2[] = [\n  {\n    id: '0001',\n    expanded: false,\n    groupTitle: 'First group name',\n    groupRows: ['0002', '0003'],\n  },\n  {\n    id: '0002',\n    transfer_type: 'МНО2',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    transfer_status: 'Выполнено',\n  },\n  {\n    id: '0003',\n    transfer_type: 'МНО3',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    transfer_status: 'Выполнено',\n  },\n  {\n    id: '0004',\n    expanded: true,\n    groupTitle: 'Second group name',\n    groupRows: ['0005', '0006'],\n  },\n  {\n    id: '0005',\n    transfer_type: 'МНО5',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(18_000_000)}</T>\n      </AmountCell>\n    ),\n    transfer_status: 'В ожиданиии',\n  },\n  {\n    id: '0006',\n    transfer_type: 'МНО6',\n    transfer_date: new Date('2020-08-06').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(32_500_000_000)}</T>\n      </AmountCell>\n    ),\n    transfer_status: 'В ожиданиии',\n  },\n  {\n    id: '0007',\n    expanded: true,\n    groupTitle: 'Third group name',\n    groupRows: ['0008', '0009'],\n  },\n  {\n    id: '0008',\n    transfer_type: 'МНО8',\n    transfer_date: new Date('2020-08-25').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(100)}</T>\n      </AmountCell>\n    ),\n    transfer_status: 'Отклонено',\n  },\n  {\n    id: '0009',\n    transfer_type: 'МНО9',\n    transfer_date: new Date('2020-08-25').toLocaleDateString(),\n    transfer_amount: (\n      <AmountCell>\n        <T font=\"Body/Body 2 Short\">{numberFormatter.format(100)}</T>\n      </AmountCell>\n    ),\n    transfer_status: 'Отклонено',\n  },\n];\n\nconst columnList: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'currency',\n    title: 'Валюта',\n  },\n  {\n    name: 'rate',\n    title: 'Ставка',\n  },\n];\n\nconst columnList2: Column[] = [\n  {\n    name: 'transfer_type',\n    title: 'Тип сделки',\n  },\n  {\n    name: 'transfer_date',\n    title: 'Дата сделки',\n    width: 150,\n  },\n  {\n    name: 'transfer_amount',\n    title: 'Сумма',\n    width: 170,\n  },\n  {\n    name: 'transfer_status',\n    title: 'Статус',\n    width: 170,\n  },\n];\n\nfunction updateRowStatus(groupId: string | null) {\n  switch (groupId) {\n    case '0001':\n      return 'Выполнено';\n    case '0004':\n      return 'В ожидании';\n    default:\n      return 'Отклонено';\n  }\n}\n\nexport const TableRowDragDropTemplate = (props: TableProps) => {\n  const [cols, setCols] = React.useState(columnList);\n  const [cols2, setCols2] = React.useState(columnList2);\n  const [rows, setRows] = React.useState(rowList);\n  const [rows2, setRows2] = React.useState(rowList2);\n\n  const handleResize = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols(newCols);\n  };\n\n  const handleResize2 = ({ name, width }: { name: string; width: string }) => {\n    const newCols = cols2.map((col) => (col.name === name ? { ...col, width } : col));\n    setCols2(newCols);\n  };\n\n  const handleExpansionChange = (ids: Record<string, boolean>): void => {\n    const updRows = rows2.map((row) => ({ ...row, expanded: ids[row.id] }));\n    setRows2(updRows);\n  };\n\n  const handleRowDrag = (rowId: string, nextRowId: string | null) => {\n    // меняем строки местами\n    const tableRows = [...rows];\n    const movedIndex = tableRows.findIndex((row) => row.id === rowId);\n    const movedRow = tableRows.splice(movedIndex, 1)[0];\n    const beforeIndex = nextRowId ? tableRows.findIndex((row) => row.id === nextRowId) : tableRows.length;\n    tableRows.splice(beforeIndex, 0, movedRow);\n\n    setRows(tableRows);\n  };\n\n  const handleRowDrag2 = (rowId: string, nextRowId: string | null, groupRowId: string | null) => {\n    // меняем строки местами\n    const tableRows = [...rows2];\n    const movedIndex = tableRows.findIndex((row) => row.id === rowId);\n    const movedRow = tableRows.splice(movedIndex, 1)[0];\n    movedRow['transfer_status'] = updateRowStatus(groupRowId);\n    const beforeIndex = nextRowId ? tableRows.findIndex((row) => row.id === nextRowId) : tableRows.length;\n    tableRows.splice(beforeIndex, 0, movedRow);\n\n    // обновляем значения параметров row.groupRows\n    const groupRows = tableRows.filter((row) => row?.groupTitle);\n    groupRows.forEach((row) => {\n      if (row.id === groupRowId) {\n        const newGroup = row?.groupRows?.filter((id) => id !== rowId) || [];\n        let beforeIndex = nextRowId ? newGroup.findIndex((id) => id === nextRowId) : newGroup.length;\n        beforeIndex = beforeIndex == -1 ? newGroup.length : beforeIndex;\n        newGroup.splice(beforeIndex, 0, rowId);\n        row.groupRows = newGroup;\n      } else if (row.groupRows) {\n        const newGroup = row.groupRows.filter((id) => id !== rowId);\n        row.groupRows = newGroup;\n      }\n      row.expanded = row.groupRows?.length ? row.expanded : false;\n    });\n\n    setRows2(tableRows);\n  };\n\n  return (\n    <>\n      <T font=\"Body/Body 2 Long\">Пример с обычными строками</T>\n      <Separator />\n      <Table\n        {...props}\n        rowList={rows}\n        columnList={cols}\n        onColumnResize={handleResize}\n        rowsDraggable\n        onRowDrag={handleRowDrag}\n      />\n      <Separator />\n      <T font=\"Body/Body 2 Long\">Пример с группами строк</T>\n      <Separator />\n      <Table\n        {...props}\n        rowList={rows2}\n        columnList={cols2}\n        displayRowExpansionColumn\n        onRowExpansionChange={handleExpansionChange}\n        onColumnResize={handleResize2}\n        rowsDraggable\n        onRowDrag={handleRowDrag2}\n      />\n    </>\n  );\n};\n"},description:{story:"Функция изменения порядка строк является опциональной. По умолчанию строки таблицы не подлежат перемещению.\n      Для того чтобы строки можно было перемещать, необходимо в таблицу передать параметр rowsDraggable равный true. \n      При установленном параметре rowsDraggable у каждой строки (кроме строк с заголовками групп) слева появится иконка \n      с 6ю точками, так называемая Drag зона.\n\nДля перемещения строки следует мышью навестись на Drag зону и “зажать” левую кнопку мыши над ней, \n      после чего над строкой появится миниатюра строки, в которой отображается содержание первой ячейки строки.\n      Передвигая данную миниатюру по вертикали в пределах тела таблицы, можно изменить местоположение интересующей строки. При этом,\n      отменяется сортировка строк, если она была произведена ранее. Если перемещаемая миниатюра выходит за границы тела таблицы \n      наполовину своей высоты, то перемещение становится невозможным, курсор принимает соответствующий вид.\n\nПроцесс перемещения строк \n      контролируется пользователем. Поэтому для таблицы должен быть задан колбек onRowDrag, который срабатывает при каждой попытке \n      изменить местоположение строки таблицы. Данный колбек имеет три параметра:\n\n* rowId - id строки, которая сейчас перемещается;\n\n* nextRowId - \n      id строки, перед которой пытается встать перемещаемая строка. Параметр nextRowId может быть также равен null, \n      если строка пытается встать в самый конец таблицы;\n\n* groupRowId - id групповой строки (строки с заголовком группы), по данному id можно\n      определить к какой группе будет относиться перемещаемая строка. Параметр groupRowId может быть также равен null,\n      это значит, что перемещаемая строка не будет относиться ни к какой группе.\n\nПри срабатывании колбека onRowDrag, \n      пользователь должен будет соответственно обновить список строк (rowList) для таблицы.\n\nМиниатюра строки, \n      возникающая при перемещении строки, отрисовывается по умолчанию через портал в document.body. Если пользователь хочет изменить document.body\n      на свой элемент, то пользователю следует:\n\n1) убедиться, что компоненты библиотеки @admiral-ds/react-ui (включая таблицу) \n      обернуты компонентом DropdownProvider;\n\n2) задать для компонента DropdownProvider параметр rootRef, где rootRef - это реф \n      на dom-элемент, внутри которого отрендерится миниатюра строки."}}},name:"Table. Drag and Drop строк"},BaseHtmlExample={render:function(props){return/*#__PURE__*/(0,jsx_runtime.jsx)(TableBaseHtmlTemplate,Table_stories_object_spread({},props))},parameters:{docs:{source:{code:"import styled from 'styled-components';\n\nconst HtmlTable = styled.table`\n  // фиксированный заголовок\n  overflow: auto;\n  width: 100%;\n  display: block;\n  margin: 0 auto;\n\n  th {\n    position: sticky;\n    top: 0;\n  }\n\n  // стили\n  white-space: nowrap;\n  border-spacing: 0;\n  border: 1px solid ${(p) => p.theme.color['Neutral/Neutral 20']};\n\n  th {\n    ${(p) => p.theme.typography['Subtitle/Subtitle 3']}\n    padding: 10px 12px;\n    background-color: ${(p) => p.theme.color['Neutral/Neutral 00']};\n  }\n\n  td {\n    ${(p) => p.theme.typography['Body/Body 2 Short']}\n    padding: 12px;\n  }\n\n  th,\n  td {\n    border: 1px solid ${(p) => p.theme.color['Neutral/Neutral 20']};\n    border-top-width: 0;\n    border-left-width: 0;\n  }\n\n  th:last-child,\n  td:last-child {\n    border-right-width: 0;\n  }\n\n  tr:last-child td {\n    border-bottom-width: 0;\n  }\n\n  th:last-child {\n    width: 100%;\n  }\n`;\n\nexport type TableBaseHtmlProps = {\n  /** количество столбцов */\n  colNumber?: number;\n\n  /** количество строк */\n  rowNum?: number;\n};\n\nexport function TableBaseHtmlTemplate({ colNumber = 10, rowNum = 20 }: TableBaseHtmlProps) {\n  return (\n    <HtmlTable style={{ maxHeight: 500, maxWidth: 980 }}>\n      <thead>\n        <tr>\n          {Array(colNumber)\n            .fill(1)\n            .map((_, index) => (\n              <th key={`header_${index}`}>{`Header ${index}`}</th>\n            ))}\n        </tr>\n      </thead>\n      <tbody>\n        {Array(rowNum)\n          .fill(1)\n          .map((_, rowIndex) => (\n            <tr key={`row_${rowIndex}`}>\n              {Array(colNumber)\n                .fill(1)\n                .map((_, colIndex) => (\n                  <td key={`cell_${rowIndex}_${colIndex}`}>{`Cell ${rowIndex}_${colIndex}`}</td>\n                ))}\n            </tr>\n          ))}\n      </tbody>\n    </HtmlTable>\n  );\n}\n"},description:{story:"Функция изменения порядка строк является опциональной. По умолчанию строки таблицы не подлежат перемещению."}}},name:"Table. Базовый HTML table"};Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  render: PlaygroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TablePlaygroundRaw\n      }\n    }\n  }\n}",...Playground.parameters?.docs?.source}}},ColumnWidthExample.parameters={...ColumnWidthExample.parameters,docs:{...ColumnWidthExample.parameters?.docs,source:{originalSource:"{\n  render: ColumnWidthStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableColumnWidthRaw\n      },\n      description: {\n        story: `По умолчанию ширина столбца составляет 100 пикселей. Чтобы изменить этот \n      параметр в массиве columnList для столбца, чью ширину нужно изменить, следует задать параметр width. \n      В качестве значения width может выступать любое валидное css значение (пиксели, проценты, функция calc и т.д.).\\n\\nТакже\n      ширину столбца можно регулировать с помощью ручного ресайза, для этого нужно \n      потянуть разделитель между столбцами в нужном направлении. При этом обязательно должен быть задан колбек onColumnResize.\n      При срабатывании колбек сообщает пользователю о попытке ресайзинга столбца, после чего пользователь должен \n      обновить ширину соответствующего столбца в массиве columnList. \n      Таким образом контроль за ресайзингом происходит на стороне пользователя.\\n\\nПо умолчанию\n      в таблице всегда включена возможность ручного ресайза столбцов, однако с помощью параметра disableColumnResize \n      можно отменить эту возможность для всей таблицы, \n      либо с помощью параметра disableResize отключить ресайз для отдельного столбца. \n      Также в таблице по умолчанию не отображается разделитель для последнего столбца, данное поведение можно \n      изменить с помощью параметра showDividerForLastColumn.`\n      }\n    }\n  },\n  name: 'Table. Пример изменения ширины столбцов.'\n}",...ColumnWidthExample.parameters?.docs?.source}}},CheckboxExample.parameters={...CheckboxExample.parameters,docs:{...CheckboxExample.parameters?.docs,source:{originalSource:"{\n  render: CheckboxStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableCheckboxRaw\n      },\n      description: {\n        story: `Отображение столбца с чекбоксами регулируется параметром displayRowSelectionColumn. \n      Чекбокс в шапке таблицы позволяет выбрать все строки (если не выбрано ни одной строки), \n      либо отменить выбранные до этого строки. По нажатию на любой из чекбоксов срабатывает колбек onRowSelectionChange.\\n\\nТакже\n      с помощью параметров headerCheckboxChecked, headerCheckboxIndeterminate можно контролировать состояние чекбокса в шапке таблицы. А\n      с помощью колбека onHeaderSelectionChange отслеживать нажатие на данный чекбокс.\\n\\nЕсли необходимо задизейблить чекбокс отдельной строки,\n      для данной строки нужно задать параметр checkboxDisabled.`\n      }\n    }\n  },\n  name: 'Table. Пример c чекбоксами.'\n}",...CheckboxExample.parameters?.docs?.source}}},StyleExample.parameters={...StyleExample.parameters,docs:{...StyleExample.parameters?.docs,source:{originalSource:"{\n  render: StyleStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableStyleRaw\n      },\n      description: {\n        story: `Существует ряд возможностей изменить дефолтные стили таблицы. \n      Для таблицы можно задать атрибут style, который применится к корневому элементу таблицы. \n      Кроме того, на корневой элемент можно прокинуть все стандартные html-атрибуты div-элемента.\\n\\nУ \n      пользователя существует возможность менять стили отдельных элементов таблицы путем доступа \n      к ним через определенные classNames и data-атрибуты. В таблице используются следующие \n      <b>classNames</b>:\n      <ul>\n      <li>table - корневой элемент таблицы</li>\n      <li>thead - хедер таблицы\n        <ul>\n          <li>th - ячейка с заголовком столбца в хедере таблицы</li>\n          <li>th_checkbox - ячейка с чекбоксом в хедере таблицы</li>\n        </ul>\n      </li>\n      <li>tbody - тело таблицы\n        <ul>\n          <li>td - ячейка с данными в теле таблицы</li>\n          <li>td_checkbox - ячейка с чекбоксом в теле таблицы</li>\n          <li>td_expand - ячейка с иконкой стрелки (для раскрытия строки/группы строк) в теле таблицы</li>\n        </ul>\n      </li>\n      <li>tr - строка таблицы</li>\n    </ul>\\n\\nТакже у элементов в таблице \n      есть специальные <b>data-атрибуты</b>, которые описывают\n      принадлежность элемента к определенным столбцу и строке. Ниже приведено подробное описание:\n      <table>\n        <thead>\n          <tr>\n            <td width='250px'><b>Элемент таблицы</b></td>\n            <td><b>data-атрибут столбца</b></td>\n            <td><b>data-атрибут строки</b></td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Строка таблицы</td>\n            <td align='center'>————</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с заголовком столбца в хедере таблицы</td>\n            <td>data-th-column={name столбца}</td>\n            <td align='center'>————</td>\n          </tr>\n          <tr>\n            <td>Ячейка с чекбоксом в хедере таблицы</td>\n            <td>data-th-column='checkbox'</td>\n            <td align='center'>————</td>\n          </tr>\n          <tr>\n            <td>Ячейка с данными в теле таблицы</td>\n            <td>data-column={name столбца}</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с заголовком группы в теле таблицы</td>\n            <td>data-column='group'</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с чекбоксом в теле таблицы</td>\n            <td>data-column='checkbox'</td>\n            <td>data-row={id строки}</td>\n          </tr>\n          <tr>\n            <td>Ячейка с иконкой стрелки (для раскрытия строки/группы строк) в теле таблицы</td>\n            <td>data-column='expand'</td>\n            <td>data-row={id строки}</td>\n          </tr>\n        </tbody>\n      </table>\\n\\nТакже существует ряд \n      параметров, влияющих на внешний вид таблицы:\\n\\n* dimension - параметр, регулирующий размер таблицы;\\n\\n* greyHeader - \n      параметр, с помощью которого можно окрашивать шапку таблицы в серый цвет;\\n\\n* showDividerForLastColumn - параметр, \n      который отвечает за отображение вертикальной полосы разделителя для последнего столбца таблицы. По умолчанию параметр равен false, \n      то есть разделитель не отображается;\\n\\n* showLastRowUnderline - параметр, который управляет отображением серой линии \n      подчеркивания для последней строки таблицы. По умолчанию параметр равен true, то есть линия отображается;\\n\\n* showBorders - параметр, \n      который управляет отображением границ между ячейками таблицы и обводки всей таблицы. По умолчанию параметр равен false,\n      последняя колонка будет иметь границы справа только, если параметр showDividerForLastColumn равен true;\\n\\n* spacingBetweenItems -\n      параметр, который влияет на внешний вид заголовка и отвечает одновременно за размер правого бокового отступа внутри заголовка \n      и за расстояние между иконкой фильтра (при её наличии) и остальным содержимым заголовка \n      (<a href=\"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?type=design&node-id=39-90743&t=3zpjH7G56cpfgH43-4\">описание параметра в макетах</a>).\n      По умолчанию минимальное значение 12, для таблиц S и M, и 16 для таблиц L и XL. В коде предусмотрено, что\n      правый боковой отступ можно менять только в большую сторону в сравнении с дефолтным значением, а расстояние между иконкой фильтра и \n      остальным содержимым заголовка можно как уменьшать, так и увеличивать с помощью spacingBetweenItems.`\n      }\n    }\n  },\n  name: 'Table. Пример стилизации (classNames, data-attrs, props).'\n}",...StyleExample.parameters?.docs?.source}}},OrientationExample.parameters={...OrientationExample.parameters,docs:{...OrientationExample.parameters?.docs,source:{originalSource:"{\n  render: OrientationStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableOrientationRaw\n      },\n      description: {\n        story: `По умолчанию текстовый контент столбца выравнивается по левому краю. Если необходимо выравнивание по правому краю, \n      то следует задать параметр cellAlign: 'right' для столбца.\\n\\nПримечание: параметр cellAlign применим только к простому \n      текстовому наполнению ячеек и заголовка столбца. Если в ячейку таблицы или заголовок встроен не просто текст, а какой-то кастомный \n      компонент со своей версткой, то пользователю нужно будет самостоятельно прописывать для этого компонента правила выравнивания контента.`\n      }\n    }\n  },\n  name: 'Table. Пример с настройкой выравнивания контента столбца.'\n}",...OrientationExample.parameters?.docs?.source}}},SortExample.parameters={...SortExample.parameters,docs:{...SortExample.parameters?.docs,source:{originalSource:"{\n  render: SortStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableSortRaw\n      },\n      description: {\n        story: `По умолчанию возможность сортировки столбца отключена.\n      Чтобы сделать столбец сортируемым, необходимо задать ему параметр sortable: true. Сортировка - это контролируемый пользователем параметр. \n      Чтобы включить для столбца сортировку по возрастанию/убыванию, пользователь должен задать для столбца параметр sort: 'asc' | 'desc'.\n      Если для столбца задан только параметр sortable: true, а параметр sort не задан, это говорит о том, что столбец сортируемый \n      (при наведении на его заголовок будет видна стрелка сортировки), но в данный момент к нему никакая сортировка не применена.\\n\\nЕсли \n      к сортируемому столбцу пока не применена сортировка, то значок-стрелка виден только при наведении на область заголовка и окрашивается в серый цвет.\n      Если сортировка включена (первое нажатие - сортировка по возрастанию), то ее значок-стрелка остается видимым при снятии фокуса \n      с заголовка и окрашивается в синий цвет. При повторном нажатии происходит сортировка в обратном порядке (стрелка меняет направление, \n      по убыванию). При третьем нажатии сортировка отменяется.\\n\\nПри изменении сортировки столбца будет срабатывать колбек onSortChange, \n      который будет возвращать объект со свойствами: name - уникальное имя столбца, к которому была применена сортировка, sort - тип сортировки ('asc' - возрастающая, \n      'desc' - убывающая и 'initial' - отмена сортировки, возврат к первоначальному состоянию). Сортировка массива строк \n      происходит на стороне пользователя при срабатывании колбека onSortChange. Для столбца таблицы можно задать параметр type, \n      на основе которого для столбцов одинакового типа можно задать единые функции \n      сортировки.\\n\\nДизайн-системой предусматривается многоуровневая сортировка. \n      Рекомендуется использовать не более ДВУХ уровней. Логика сортировки (взаимосвязи) выстраивается пользователем. При этом \n      у иконок сортировки появляются цифры, обозначающие порядок (приоритет) сортировки.`\n      }\n    }\n  },\n  name: 'Table. Сортировка.'\n}",...SortExample.parameters?.docs?.source}}},FilterExample.parameters={...FilterExample.parameters,docs:{...FilterExample.parameters?.docs,source:{originalSource:"{\n  render: FilterStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableFilterRaw\n      },\n      description: {\n        story: `Опционально в заголовках можно включать фильтрацию столбцов. \n      При этом у заголовка будет появляться иконка фильтрации, по нажатию на которую будет \n      открываться меню фильтрации.\\n\\nДля того чтобы задать фильтр для столбца достаточно \n      задать для него параметр renderFilter - функцию, которая будет отрисовывать содержимое \n      меню фильтра. Данная функция имеет в качестве входных параметров объект столбца и объект с двумя \n      свойствами:\\n\\n 1) closeMenu - колбек, при вызове которого происходит закрытие меню \n      фильтра;\\n\\n2) setFilterActive - колбек, который устанавливает фильтр в активное/неактивное \n      состояние. Колбек setFilterActive - это устаревшее api, вместо него рекомендуется \n      использовать параметр столбца isFilterActive, который также устанавливает фильтр в активное/неактивное \n      состояние.В неактивном состоянии иконка фильтра окрашена в серый цвет, \n      при активном (включенном фильтре) иконка фильтра окрашивается в синий цвет.\\n\\nМеню \n      фильтра является произвольным и полностью контролируется пользователем. Закрытие меню и\n      установка фильтра в активное/неактивное состояние производится пользователем внутри функции \n      renderFilter с помощью вышеописанных колбеков. С помощью параметров filterMenuAlignSelf, \n      filterMenuClassName, filterMenuCssMixin и filterMenuStyle пользователь также может управлять \n      выравниваем фильтра, добавлять className и изменять его стили.\\n\\nИконка фильтрации может быть \n      любой (шестеренка, фильтр и т.д.). По умолчанию в качестве иконки фильтра\n      используется иконка MoreHorizontalOutline. Дефолтную иконку можно заменить \n      с помощью параметра renderFilterIcon.\\n\\nКроме того для столбца можно задать колбеки \n      onFilterMenuOpen и onFilterMenuClose, которые будут срабатывать \n      соответственно при открытии и закрытии меню фильтра. А также для столбца можно задать колбек \n      onFilterMenuClickOutside, который будет срабатывать при клике вне меню фильтра. Данный колбек имеет \n      в качестве входных параметров объект с двумя \n      свойствами (closeMenu, setFilterActive) и параметр event.\\n\\n!!! Примечание: для корректной работы\n      вложенных друг в друга дропдаунов (н-р, меню фильтра, внутри которого открывается дропдаун с календарем) убедитесь,\n      что компоненты библиотеки обернуты в DropdownProvider. Пример использования DropdownProvider есть в readme.`\n      }\n    }\n  },\n  name: 'Table. Фильтрация.'\n}",...FilterExample.parameters?.docs?.source}}},MultilineExample.parameters={...MultilineExample.parameters,docs:{...MultilineExample.parameters?.docs,source:{originalSource:"{\n  render: MultilineStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableMultilineRaw\n      },\n      description: {\n        story: `Заголовки таблицы по умолчанию выводятся в одну строку и при нехватке места сокращаются с помощью троеточия. Увеличить высоту \n      заголовка можно с помощью параметра headerLineClamp, который определяет максимальное количество строк, которое может занимать заголовок таблицы. \n      В примере ниже используется headerLineClamp равный 2. \\n\\nСтроки таблицы не ограничены по высоте. \n      В ячейке строки можно отрисовать любой ReactNode, передав его в rowList. Также с помощью функции renderCell можно\n      переопределить стандартный вид ячеек, относящихся к определенному столбцу таблицы (смотрите \"Пример кастомизации компонента ячейки\").`\n      }\n    }\n  },\n  name: 'Table. Многострочность.'\n}",...MultilineExample.parameters?.docs?.source}}},StickyExample.parameters={...StickyExample.parameters,docs:{...StickyExample.parameters?.docs,source:{originalSource:"{\n  render: StickyStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableStickyRaw\n      },\n      description: {\n        story: `При необходимости можно “закреплять” столбцы таблицы. Фиксированные столбцы располагаются по левому краю таблицы и идут друг за другом\n        (то есть фиксированные столбцы должны быть заданы в начале columnList друг за другом и никак иначе).\n      Столбец с чекбоксами является фиксированным по умолчанию.\\n\\nЧтобы сделать столбец фиксированным, необходимо задать для него параметр sticky равный true.`\n      }\n    }\n  },\n  name: 'Table. Фиксированные столбцы.'\n}",...StickyExample.parameters?.docs?.source}}},RowStateExample.parameters={...RowStateExample.parameters,docs:{...RowStateExample.parameters?.docs,source:{originalSource:"{\n  render: RowStateStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableRowStateRaw\n      },\n      description: {\n        story: `Для каждой строки помимо содержимого ячеек, id и className, можно задать следующие \n      состояния строки: \\n\\n* selected - строка выбрана, чекбокс в строке \n      проставлен; \\n\\n* disabled - строка задизейблена; \\n\\n* hover - строка окрашивается \n      при ховере. Данная окраска должна применяться, если строка кликабельна и ведет к каким-либо \n      действиям.\\n\\nТакже строке можно задать определенный статус, в соответствии с которым она будет окрашена.\n      Чтобы задать статус для строки необходимо использовать параметр status, \n      где в качестве значения указывается строка с названием статуса (например, status='error' или status='success').\n      По умолчанию таблица предоставляет два статуса: error и success.\\n\\nПользователь также имеет возможность задать для строки свои кастомные статусы.\n      Для того чтобы задать кастомный статус необходимо:\\n\\n* придумать строковое название статуса (например, 'attention') и определить,\n      какой цвет строки будет ему соответствовать (например, Attention/Attention 20). \n      Рекомендуется использовать цвета из палитры библиотеки с индексом контрастности 10 или 20.\\n\\n* В параметре таблицы rowBackgroundColorByStatusMap\n      необходимо задать соответствие кастомного статуса строки и её цвета. Для этого в качестве значения rowBackgroundColorByStatusMap нужно указать\n      объект, где ключом объекта должно быть название статуса, а значением свойства объекта должен быть цвет строки, соответствующий данному статусу.\n      Цвет можно задать либо в виде строки со значением цвета, либо в виде функции,\n      которая на вход получает объект color (равный theme.color, данный объект стоит использовать, если цвет строки будет взят из темы) \n      и возвращает строку со значением цвета. Также с помощью параметра rowBackgroundColorByStatusMap  можно перезадать \n      дефолтные цвета строк для статусов error и success.\\n\\n* В параметре строки status задать название кастомного статуса.`\n      }\n    }\n  },\n  name: 'Table. Состояния (selected, disabled, hover) и статусы (error, success, кастомные статусы) строк.'\n}",...RowStateExample.parameters?.docs?.source}}},ZebraExample.parameters={...ZebraExample.parameters,docs:{...ZebraExample.parameters?.docs,source:{originalSource:"{\n  render: ZebraStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableZebraRaw\n      },\n      description: {\n        story: `Опционально, для лучшей визуальной сепарации строк, их можно окрашивать через одну в цвет вторичного фона (Neutral 05). Используйте для этого параметр greyZebraRows.\n      Окраска начинается со второй строки, считая от заголовка таблицы или группы. При группировке строк, строка с названием группы не окрашивается. При перетаскивании строк, поиске или сортировке, \n      они окрашиваются в соответствии с описанным выше алгоритмом.\\n\\nДля консистентности рекомендуется заголовок таблицы тоже окрашивать в серый цвет (параметр greyHeader).`\n      }\n    }\n  },\n  name: 'Table. Зебра (окрашивание строк через одну).'\n}",...ZebraExample.parameters?.docs?.source}}},ExpandExample.parameters={...ExpandExample.parameters,docs:{...ExpandExample.parameters?.docs,source:{originalSource:"{\n  render: ExpandStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableExpandRaw\n      },\n      description: {\n        story: `Отображение столбца детализации (столбец со стрелками) регулируется параметром displayRowExpansionColumn. \n      Стрелка позволяет развернуть строку и посмотреть более детализированную информацию о строке. \n      По нажатию на любую из стрелок срабатывает колбек onRowExpansionChange. Развернутое/свернутое состояние строки \n      задается параметром expanded. А с помощью функции expandedRowRender происходит рендер развернутой части строки (рендер детализированной информации).`\n      }\n    }\n  },\n  name: 'Table. Пример c детализацией строки.'\n}",...ExpandExample.parameters?.docs?.source}}},ExtraTextExample.parameters={...ExtraTextExample.parameters,docs:{...ExtraTextExample.parameters?.docs,source:{originalSource:"{\n  render: ExtraTextStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableExtraTextRaw\n      },\n      description: {\n        story: `При необходимости в заголовке таблицы можно включать дополнительный текст с помощью параметра extraText. \n      Дополнительный текст по умолчанию выводится в одну строку и при нехватке места сокращается с помощью троеточия. Увеличить высоту \n      дополнительного текста можно с помощью параметра headerExtraLineClamp, который определяет максимальное количество строк, \n      которое может занимать дополнительный текст. В примере ниже используется headerExtraLineClamp равный 2.`\n      }\n    }\n  },\n  name: 'Table. Пример c дополнительным текстом в заголовке.'\n}",...ExtraTextExample.parameters?.docs?.source}}},OverflowMenuExample.parameters={...OverflowMenuExample.parameters,docs:{...OverflowMenuExample.parameters?.docs,source:{originalSource:'{\n  render: OverflowMenuStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableOverflowMenuRaw\n      },\n      description: {\n        story: `Опционально со строками можно производить набор действий через Overflow Menu, \n      которое по умолчанию появляется при ховере над строкой. При этом, чтобы не накладываться на возможный текст, \n      под иконкой меню добавляется квадратная подложка белого цвета. В примере ниже Overflow Menu \n      задано для первых двух строк в таблицах.\\n\\nДля того чтобы задать для строки OverflowMenu необходимо \n      для строки прописать функцию overflowMenuRender. Входные параметры функции: сама \n      строка и колбек onVisibilityChange. Колбек необходимо вызывать \n      при открытии/закрытии меню для того, чтобы таблица могла управлять видимостью OverflowMenu.\n      В качестве результата функция должна возвращать компонент OverflowMenu. Размер OverflowMenu \n      следует задавать согласно правилу:\\n\\n* Для таблицы с dimension="s" или dimension="m" используется \n      OverflowMenu c dimension="m"\\n\\n* Для таблицы с dimension="l" или dimension="xl" используется OverflowMenu\n      c dimension="l"\\n\\nЕсли подразумевается только одно действие над строкой, то вместо overflowMenuRender следует\n      использовать функцию actionRender (в примере используется для 3-4 строк). \n      На вход функция получает саму строку, а возвращает компонент RowAction (экспортируется из библиотеки),\n      внутрь которого необходимо передать иконку для обозначения действия над строкой.\\n\\nОпционально допускается, чтобы \n      Overflow Menu и иконки одиночных действий были видны постоянно, а не только по ховеру. Данное поведение можно задать\n      с помощью параметра showRowsActions. Если showRowsActions равен true, то все иконки меню и иконки одиночных действий во всех \n      строках таблицы отображаются постоянно. При этом в область заголовков и в строки, для которых не заданы действия, \n      добавляется подложка, для того чтобы визуально был выделен столбец с действиями над строками.`\n      }\n    }\n  },\n  name: \'Table. Пример строк с OverflowMenu и иконками для одиночного действия.\'\n}',...OverflowMenuExample.parameters?.docs?.source}}},FixedVirtualScrollExample.parameters={...FixedVirtualScrollExample.parameters,docs:{...FixedVirtualScrollExample.parameters?.docs,source:{originalSource:"{\n  render: FixedVirtualScrollStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableFixedVirtualScrollRaw\n      },\n      description: {\n        story: `В случае если в таблице необходимо отобразить большое количество строк, возможно использовать функцию виртуального скролла.\n      Библиотека предоставляет два вида виртуального скролла: виртуальный скролл для строк с фиксированной высотой\n      и виртуальный скролл для строк с динамической высотой. Ниже приведен пример таблицы, в которой все строки имеют единую ФИКСИРОВАННУЮ \n      ВЫСОТУ, и в которой активирован виртуальный скролл. \\n\\nДля того чтобы активировать виртуальный скролл для строк с фиксированной высотой,\n      необходимо задать параметр virtualScroll. Значением virtualScroll должен являться объект, в котором в свойстве fixedRowHeight необходимо \n      задать фиксированную высоту строки. Например, для размера таблицы m высота строки по умолчанию составляет 40px \n      (если содержимое ячеек занимает одну строку в высоту и для ячеек не было задано каких-то кастомных стилей), \n      для размеров s - 32px, l - 48px, xl - 56px.\\n\\nПримечание: таблица обязательно должна иметь четко \n      заданную высоту (height, minHeight). Это нужно для того, чтобы тело таблицы, которое\n      является flex-элементом, могло растянуться на всю высоту таблицы, в противном случае высота тела таблицы будет равна 0.`\n      }\n    }\n  },\n  name: 'Table. Виртуальный скролл с фиксированной высотой строки.'\n}",...FixedVirtualScrollExample.parameters?.docs?.source}}},DynamicVirtualScrollExample.parameters={...DynamicVirtualScrollExample.parameters,docs:{...DynamicVirtualScrollExample.parameters?.docs,source:{originalSource:"{\n  render: DynamicVirtualScrollStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableDynamicVirtualScrollRaw\n      },\n      description: {\n        story: `В случае если в таблице необходимо отобразить большое количество строк, возможно использовать функцию виртуального скролла.\n        Библиотека предоставляет два вида виртуального скролла: виртуальный скролл для строк с фиксированной высотой\n        и виртуальный скролл для строк с динамической высотой. Ниже приведен пример таблицы, в которой строки имеют ДИНАМИЧЕСКУЮ ВЫСОТУ,\n        и в которой активирован виртуальный скролл. \\n\\nДля того чтобы активировать виртуальный скролл для строк с динамической высотой, необходимо задать \n        параметр virtualScroll. Значением virtualScroll должен являться объект, в котором в свойстве estimatedRowHeight необходимо \n        задать функцию, вычисляющую примерную высоту строки. Функция estimatedRowHeight будет использована для оценки высоты строки \n        до момента, когда строка будет отрисована и измерена. В качестве входного параметра estimatedRowHeight получает индекс \n        строки, который может быть использован для определения примерной высоты строки. Также функция estimatedRowHeight влияет на подсчет\n        высоты всех строк в таблице, а значит и на размер вертикального скролла. Поэтому важно, чтобы функция возвращала максимально близкие\n        к реальности значения.\\n\\nПримечание: таблица обязательно должна иметь четко \n        заданную высоту (height, minHeight). Это нужно для того, чтобы тело таблицы, которое\n        является flex-элементом, могло растянуться на всю высоту таблицы, в противном случае высота тела таблицы будет равна 0.`\n      }\n    }\n  },\n  name: 'Table. Виртуальный скролл с динамической высотой строки.'\n}",...DynamicVirtualScrollExample.parameters?.docs?.source}}},LoadScrollExample.parameters={...LoadScrollExample.parameters,docs:{...LoadScrollExample.parameters?.docs,source:{originalSource:"{\n  render: LoadScrollStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableLoadScrollRaw\n      },\n      description: {\n        story: `Пользователь может реализовать подгрузку новых строк по мере скролла тела таблицы, например, следующим образом. С\n      помощью функции renderRowWrapper можно создать элемент-обёртку над последней строкой в таблице, \n      и через IntersectionObserver отслеживать момент, когда элемент-обёртка станет видим в пределах тела таблицы (т.е. момент доскролла до последней строки). \n      Это событие будет являться триггером для загрузки новой порции строк.`\n      }\n    }\n  },\n  name: 'Table. Подгрузка данных при скролле.'\n}",...LoadScrollExample.parameters?.docs?.source}}},GroupExample.parameters={...GroupExample.parameters,docs:{...GroupExample.parameters?.docs,source:{originalSource:"{\n  render: GroupStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableGroupRaw\n      },\n      description: {\n        story: `Строки в таблице можно группировать под общим заголовком. При группировке допускается только один уровень \n      вложенности строк. Не допускается использование строк вне групп, то есть все строки в таблице должны входить в какую-то группу.\n      Для того чтобы задать группу строк, нужно в массиве rowList создать объект строки, которая будет являться \n      заголовком группы. Для такой строки необходимо задать два параметра:\\n\\n* groupTitle - название группы\\n\\n* groupRows - массив с \n      id строк, входящих в данную группу. Сами строки, относящиеся к группе, должны быть просто перечислены в массиве rowList.`\n      }\n    }\n  },\n  name: 'Table. Пример c группировкой строк.'\n}",...GroupExample.parameters?.docs?.source}}},CustomTitleExample.parameters={...CustomTitleExample.parameters,docs:{...CustomTitleExample.parameters?.docs,source:{originalSource:"{\n  render: CustomTitleStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableCustomTitleRaw\n      },\n      description: {\n        story: `Пользователь может кастомизировать часть заголовка столбца, а именно область с текстом заголовка (параметр title) и \n      область с дополнительным текстом заголовка (параметр extraText). Параметры title и extraText позволяют задать в них любой ReactNode.`\n      }\n    }\n  },\n  name: 'Table. Пример кастомизации заголовков столбцов.'\n}",...CustomTitleExample.parameters?.docs?.source}}},RenderCellExample.parameters={...RenderCellExample.parameters,docs:{...RenderCellExample.parameters?.docs,source:{originalSource:"{\n  render: RenderCellStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableRenderCellRaw\n      },\n      description: {\n        story: `Для формирования контента ячейки пользователь может использовать рендер-колбек renderCell. \n      Функция renderCell задается для каждого столбца в отдельности и представляет собой метод для переопределения стандартного вида ячейки.\n      На вход функция renderCell получает 3 параметра: data - контент ячейки, row - объект строки и rowIdx - индекс строки.`\n      }\n    }\n  },\n  name: 'Пример кастомизации компонента ячейки (renderCell).'\n}",...RenderCellExample.parameters?.docs?.source}}},RenderGroupTitleExample.parameters={...RenderGroupTitleExample.parameters,docs:{...RenderGroupTitleExample.parameters?.docs,source:{originalSource:"{\n  render: RenderGroupTitleStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableRenderGroupTitleRaw\n      },\n      description: {\n        story: `Пользователь может кастомизировать заголовок группы строк с помощью рендер-колбека renderGroupTitle.\n      Функция renderGroupTitle задается для каждой строки в отдельности и представляет собой метод \n      для переопределения стандартного вида заголовка группы строк. \n      На вход функция renderGroupTitle получает 1 параметр: row - объект строки.`\n      }\n    }\n  },\n  name: 'Table. Пример кастомизации заголовка группы (renderGroupTitle).'\n}",...RenderGroupTitleExample.parameters?.docs?.source}}},DraggableColumnsExample.parameters={...DraggableColumnsExample.parameters,docs:{...DraggableColumnsExample.parameters?.docs,source:{originalSource:"{\n  render: ColumnDragDropStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableColumnDragDropRaw\n      },\n      description: {\n        story: `Функция изменения порядка (перемещения) столбцов является опциональной. По умолчанию столбцы таблицы не подлежат перемещению.\n      Для того чтобы столбец можно было перемещать, необходимо задать данному столбцу параметр draggable равный true.\\n\\nДля перемещения \n      столбца следует “зажать” левую кнопку мыши на нем, после чего над столбцом появится миниатюра заголовка, содержащая текст заголовка.\n      Передвигая данную миниатюру по горизонтали в пределах области заголовков таблицы, можно изменить местоположение интересующего столбца.\n      Если перемещаемая миниатюра выходит за границы области заголовков таблицы наполовину своей высоты, то перемещение становится невозможным, \n      курсор принимает соответствующий вид. Если в таблице есть фиксированные столбцы, то перемещение фиксированных столбцов происходит только между собой. \n      Соответственно, то же самое применимо к обычным столбцам. Менять между собой местами фиксированные и нефиксированные столбцы нельзя. \n      Поэтому, если пользователь будет перемещать обычный столбец и зайдет курсором на область с фиксированными столбцами, \n      то перемещение столбца станет невозможным и курсор изменит свой вид.\\n\\nПроцесс перемещения столбцов контролируется пользователем. \n      Поэтому для таблицы должен быть задан колбек onColumnDrag, который срабатывает при каждой попытке изменить местоположение столбца таблицы.\n      Данный колбек имеет два параметра: columnName - name столбца, который сейчас перемещается, nextColumnName - name столбца, \n      перед которым пытается встать передвигаемый столбец. Параметр nextColumnName может быть также равен null, если столбец пытается встать в самый конец таблицы.\n      При срабатывании колбека onColumnDrag, пользователь должен будет соответственно обновить список столбцов (columnList) для таблицы.\\n\\nМиниатюра заголовка, \n      возникающая при перемещении колонки, отрисовывается по умолчанию через портал в document.body. Если пользователь хочет изменить document.body\n      на свой элемент, то пользователю следует:\\n\\n1) убедиться, что компоненты библиотеки @admiral-ds/react-ui (включая таблицу) \n      обернуты компонентом DropdownProvider;\\n\\n2) задать для компонента DropdownProvider параметр rootRef, где rootRef - это реф \n      на dom-элемент, внутри которого отрендерится миниатюра заголовка.`\n      }\n    }\n  },\n  name: 'Table. Drag and Drop столбцов'\n}",...DraggableColumnsExample.parameters?.docs?.source}}},DraggableRowsExample.parameters={...DraggableRowsExample.parameters,docs:{...DraggableRowsExample.parameters?.docs,source:{originalSource:"{\n  render: RowDragDropStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableRowDragDropRaw\n      },\n      description: {\n        story: `Функция изменения порядка строк является опциональной. По умолчанию строки таблицы не подлежат перемещению.\n      Для того чтобы строки можно было перемещать, необходимо в таблицу передать параметр rowsDraggable равный true. \n      При установленном параметре rowsDraggable у каждой строки (кроме строк с заголовками групп) слева появится иконка \n      с 6ю точками, так называемая Drag зона.\\n\\nДля перемещения строки следует мышью навестись на Drag зону и “зажать” левую кнопку мыши над ней, \n      после чего над строкой появится миниатюра строки, в которой отображается содержание первой ячейки строки.\n      Передвигая данную миниатюру по вертикали в пределах тела таблицы, можно изменить местоположение интересующей строки. При этом,\n      отменяется сортировка строк, если она была произведена ранее. Если перемещаемая миниатюра выходит за границы тела таблицы \n      наполовину своей высоты, то перемещение становится невозможным, курсор принимает соответствующий вид.\\n\\nПроцесс перемещения строк \n      контролируется пользователем. Поэтому для таблицы должен быть задан колбек onRowDrag, который срабатывает при каждой попытке \n      изменить местоположение строки таблицы. Данный колбек имеет три параметра:\\n\\n* rowId - id строки, которая сейчас перемещается;\\n\\n* nextRowId - \n      id строки, перед которой пытается встать перемещаемая строка. Параметр nextRowId может быть также равен null, \n      если строка пытается встать в самый конец таблицы;\\n\\n* groupRowId - id групповой строки (строки с заголовком группы), по данному id можно\n      определить к какой группе будет относиться перемещаемая строка. Параметр groupRowId может быть также равен null,\n      это значит, что перемещаемая строка не будет относиться ни к какой группе.\\n\\nПри срабатывании колбека onRowDrag, \n      пользователь должен будет соответственно обновить список строк (rowList) для таблицы.\\n\\nМиниатюра строки, \n      возникающая при перемещении строки, отрисовывается по умолчанию через портал в document.body. Если пользователь хочет изменить document.body\n      на свой элемент, то пользователю следует:\\n\\n1) убедиться, что компоненты библиотеки @admiral-ds/react-ui (включая таблицу) \n      обернуты компонентом DropdownProvider;\\n\\n2) задать для компонента DropdownProvider параметр rootRef, где rootRef - это реф \n      на dom-элемент, внутри которого отрендерится миниатюра строки.`\n      }\n    }\n  },\n  name: 'Table. Drag and Drop строк'\n}",...DraggableRowsExample.parameters?.docs?.source}}},BaseHtmlExample.parameters={...BaseHtmlExample.parameters,docs:{...BaseHtmlExample.parameters?.docs,source:{originalSource:"{\n  render: BaseHtmlStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TableBaseHtmlRaw\n      },\n      description: {\n        story: `Функция изменения порядка строк является опциональной. По умолчанию строки таблицы не подлежат перемещению.`\n      }\n    }\n  },\n  name: 'Table. Базовый HTML table'\n}",...BaseHtmlExample.parameters?.docs?.source}}};let __namedExportsOrder=["Playground","ColumnWidthExample","CheckboxExample","StyleExample","OrientationExample","SortExample","FilterExample","MultilineExample","StickyExample","RowStateExample","ZebraExample","ExpandExample","ExtraTextExample","OverflowMenuExample","FixedVirtualScrollExample","DynamicVirtualScrollExample","LoadScrollExample","GroupExample","CustomTitleExample","RenderCellExample","RenderGroupTitleExample","DraggableColumnsExample","DraggableRowsExample","BaseHtmlExample"]},"./node_modules/@admiral-ds/icons/build/service/CheckSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgCheckSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgCheckSolid=function SvgCheckSolid(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M3 12c0-4.98 4.02-9 9-9 4.97 0 9 4.02 9 9a9 9 0 0 1-9 9c-4.98 0-9-4.03-9-9m7.79 3.28c.27.28.73.27 1-.02l4.42-4.8c.24-.27.22-.68-.03-.92a.66.66 0 0 0-.93.04l-3.98 4.34-2.4-2.4a.67.67 0 0 0-.93 0c-.25.25-.25.67 0 .92z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/CloseSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgCloseSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgCloseSolid=function SvgCloseSolid(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M3 12c0-4.98 4.02-9 9-9 4.97 0 9 4.02 9 9a9 9 0 0 1-9 9c-4.98 0-9-4.03-9-9m13-3.92c.25.25.25.66 0 .92l-3.09 3 3 3.08c.26.25.26.66 0 .92-.25.25-.66.25-.91 0l-3-3.09L9 16c-.26.25-.67.25-.92 0a.64.64 0 0 1 0-.92l3-3.08-3-3a.64.64 0 0 1 0-.92.64.64 0 0 1 .92 0l3 3 3.08-3a.64.64 0 0 1 .92 0"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/ErrorSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgErrorSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgErrorSolid=function SvgErrorSolid(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12 3c-4.98 0-9 4.02-9 9 0 4.97 4.02 9 9 9a9 9 0 0 0 9-9c0-4.98-4.03-9-9-9m0 10.69c.35 0 .64-.29.64-.65V7.89c0-.35-.29-.65-.64-.65-.36 0-.65.3-.65.65v5.15c0 .36.29.65.65.65m.85 2.21a.856.856 0 0 1-1.71 0 .856.856 0 0 1 1.71 0"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/EyeCloseOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgEyeCloseOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgEyeCloseOutline=function SvgEyeCloseOutline(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M21.7 10.04c.29.2.38.6.18.9-.5.75-1.14 1.57-1.92 2.36l1.84 1.84c.25.25.25.66 0 .91a.64.64 0 0 1-.92 0l-1.87-1.86c-.93.8-2.01 1.51-3.22 2.02l1.03 2.49a.65.65 0 0 1-1.2.5l-1.06-2.56a9.7 9.7 0 0 1-5.13.01L8.37 19.2a.65.65 0 0 1-1.2-.5l1.03-2.47c-1.25-.52-2.32-1.25-3.23-2.04l-1.86 1.86a.64.64 0 0 1-.92 0 .646.646 0 0 1 0-.91l1.84-1.85c-.8-.83-1.43-1.67-1.9-2.34-.2-.29-.13-.7.16-.9.3-.21.7-.13.91.16 1.46 2.1 4.34 5.48 8.8 5.48 4.03 0 7.14-2.98 8.79-5.47.2-.3.61-.38.91-.18"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/EyeOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgEyeOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgEyeOutline=function SvgEyeOutline(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M2.43 10.68C3.86 8.65 7.11 5 12 5c4.88 0 8.13 3.65 9.56 5.68.56.8.56 1.83 0 2.63C20.13 15.34 16.88 19 12 19c-4.89 0-8.14-3.66-9.57-5.69-.56-.8-.56-1.83 0-2.63M6.29 12c0 3.14 2.56 5.7 5.71 5.7 3.14 0 5.7-2.56 5.7-5.7 0-3.15-2.56-5.71-5.7-5.71-3.15 0-5.71 2.56-5.71 5.71m14.21-.57c-.53-.74-1.27-1.66-2.21-2.51.45.93.71 1.97.71 3.08 0 1.1-.26 2.14-.71 3.07.94-.85 1.68-1.77 2.21-2.51.24-.35.24-.78 0-1.13m-17.01 0c.53-.74 1.27-1.66 2.21-2.51-.45.93-.7 1.97-.7 3.08 0 1.1.25 2.14.7 3.07-.94-.85-1.68-1.77-2.21-2.51a.98.98 0 0 1 0-1.13M12 9.7c0-.39-.32-.71-.7-.62A3.002 3.002 0 0 0 12 15a3 3 0 0 0 2.91-2.31c.09-.38-.23-.69-.62-.69h-1c-.71 0-1.29-.59-1.29-1.3z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/service/InfoSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgInfoSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgInfoSolid=function SvgInfoSolid(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M3 12c0-4.98 4.02-9 9-9 4.97 0 9 4.02 9 9a9 9 0 0 1-9 9c-4.98 0-9-4.03-9-9m9-4.75c-.47 0-.86.38-.86.84 0 .47.39.86.86.86.46 0 .85-.39.85-.86 0-.46-.39-.84-.85-.84M14.1 16c0 .41-.34.75-.75.75h-.06c-1.13 0-2.04-.92-2.04-2.05v-3.75c0-.42.33-.75.75-.75.41 0 .75.33.75.75v3.75c0 .3.24.55.54.55h.06c.41 0 .75.33.75.75"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/DeleteOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgDeleteOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgDeleteOutline=function SvgDeleteOutline(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12.65 2.66c0-.35-.3-.65-.65-.65-.36 0-.65.3-.65.65v1.99H4.33c-.36 0-.65.29-.65.65 0 .35.29.65.65.65h.69l.76 11.49c.1 1.58 1.4 2.81 2.99 2.81h6.36c1.57 0 2.9-1.23 2.99-2.81l.77-11.49h.79c.35 0 .65-.3.65-.65 0-.36-.3-.65-.65-.65h-7.03zM7.08 17.35l-.71-11.4h11.17l-.7 11.41c-.06.89-.8 1.59-1.7 1.59H8.78c-.9 0-1.64-.7-1.7-1.6m3.1-8.88c.35 0 .65.29.65.65v6.35c0 .35-.3.65-.65.65-.36 0-.65-.3-.65-.65V9.12c0-.36.29-.65.65-.65m4.3.65c0-.36-.3-.65-.65-.65-.36 0-.65.29-.65.65v6.35c0 .35.29.65.65.65.35 0 .65-.3.65-.65z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/MoreVerticalOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgMoreVerticalOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgMoreVerticalOutline=function SvgMoreVerticalOutline(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M10 19c0-1.11.89-2 2-2a2 2 0 1 1-2 2m0-7c0-1.11.89-2 2-2a2 2 0 1 1-2 2m0-7c0-1.11.89-2 2-2a2 2 0 1 1-2 2"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/SmallArrowRightOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgSmallArrowRightOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return(_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(null,arguments)}var SvgSmallArrowRightOutline=function SvgSmallArrowRightOutline(props){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M9.99 16.21c-.18 0-.35-.07-.48-.21a.66.66 0 0 1 .04-.92l3.49-3.15-3.48-3.02a.65.65 0 0 1-.04-.92c.24-.26.65-.28.92-.04l3.97 3.46c.31.28.31.76 0 1.04l-3.98 3.59c-.13.12-.28.17-.44.17"})))};__webpack_require__.p},"./src/components/Badge/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ex:()=>Badge,He:()=>SegmentedControlBadge,I3:()=>ButtonBadge,nS:()=>BadgeComponent});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_themes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/light/index.ts"),_src_components_Typography__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Typography/typography.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _templateObject(){var data=_tagged_template_literal(["\n  background: ",";\n"]);return _templateObject=function _templateObject(){return data},data}function _templateObject1(){var data=_tagged_template_literal(["\n  color: ",";\n"]);return _templateObject1=function _templateObject(){return data},data}function _templateObject2(){var data=_tagged_template_literal(["\n  position: relative;\n  box-sizing: border-box;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: ",";\n  height: ",";\n  border-radius: ",";\n  ","\n  ","\n  ","\n  user-select: none;\n"]);return _templateObject2=function _templateObject(){return data},data}function _templateObject3(){var data=_tagged_template_literal(["\n  &:is(input:checked + div *) {\n    background: ",";\n    color: ",";\n  }\n"]);return _templateObject3=function _templateObject(){return data},data}var background=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.AH)(_templateObject(),function(param){var $appearance=param.$appearance,theme=param.theme;switch($appearance){case"info":return"var(--admiral-color-Primary_Primary60Main, ".concat(theme.color["Primary/Primary 60 Main"],")");case"warning":return"var(--admiral-color-Warning_Warning50Main, ".concat(theme.color["Warning/Warning 50 Main"],")");case"success":return"var(--admiral-color-Success_Success50Main, ".concat(theme.color["Success/Success 50 Main"],")");case"error":return"var(--admiral-color-Error_Error60Main, ".concat(theme.color["Error/Error 60 Main"],")");case"grey":return"var(--admiral-color-Neutral_Neutral50, ".concat(theme.color["Neutral/Neutral 50"],")");case"dark":return"var(--admiral-color-Neutral_Neutral80, ".concat(theme.color["Neutral/Neutral 80"],")");case"whiteBlue":return"var(--admiral-color-Special_StaticWhite, ".concat(theme.color["Special/Static White"],")");case"white":case"whiteInactive":case"whiteDisable":return"var(--admiral-color-Neutral_Neutral00, ".concat(theme.color["Neutral/Neutral 00"],")");default:return"var(--admiral-color-Neutral_Neutral10, ".concat(theme.color["Neutral/Neutral 10"],")")}}),color=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.AH)(_templateObject1(),function(param){var $appearance=param.$appearance,theme=param.theme;switch($appearance){case"info":case"warning":case"success":case"error":case"grey":return"var(--admiral-color-Special_StaticWhite, ".concat(theme.color["Special/Static White"],")");case"dark":return"var(--admiral-color-Neutral_Neutral00, ".concat(theme.color["Neutral/Neutral 00"],")");case"whiteBlue":return"var(--admiral-color-Primary_Primary60Main, ".concat(theme.color["Primary/Primary 60 Main"],")");case"lightInactive":case"whiteInactive":return"var(--admiral-color-Neutral_Neutral50, ".concat(theme.color["Neutral/Neutral 50"],")");case"whiteDisable":case"lightDisable":return"var(--admiral-color-Neutral_Neutral30, ".concat(theme.color["Neutral/Neutral 30"],")");default:return"var(--admiral-color-Neutral_Neutral90, ".concat(theme.color["Neutral/Neutral 90"],")")}}),BadgeComponent=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.div(_templateObject2(),function(param){return"s"===param.$dimension?"0 5px":"0 6px"},function(param){return"s"===param.$dimension?"16px":"20px"},function(param){return"s"===param.$dimension?"8px":"10px"},function(param){return"s"===param.$dimension?_src_components_Typography__WEBPACK_IMPORTED_MODULE_3__.Il["Caption/Caption 1"]:_src_components_Typography__WEBPACK_IMPORTED_MODULE_3__.Il["Body/Body 2 Long"]},background,color),Badge=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function(_param,ref){var children=_param.children,_param_dimension=_param.dimension,_param_appearance=_param.appearance,locale=_param.locale,props=_object_without_properties(_param,["children","dimension","appearance","locale"]),theme=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.DP)()||_src_components_themes__WEBPACK_IMPORTED_MODULE_4__.d,amountText=(null==locale?void 0:locale.amountAriaLabel)||theme.locales[theme.currentLocale].badge.amountAriaLabel;return/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BadgeComponent,_object_spread_props(_object_spread({ref:ref,$dimension:void 0===_param_dimension?"m":_param_dimension,$appearance:void 0===_param_appearance?"light":_param_appearance,"aria-label":"".concat(amountText," ").concat(children)},props),{children:children}))});function getBadgeAppearance(appearance,disabled){switch(appearance){case"secondary":case"ghost":if(disabled)return"lightDisable";return"info";case"tertiary":if(disabled)return"whiteDisable";return"white";default:if(disabled)return"whiteDisable";return"whiteBlue"}}Badge.displayName="Badge";var ButtonBadge=function(_param){var _param_appearance=_param.appearance,appearance=void 0===_param_appearance?"primary":_param_appearance,_param_disabled=_param.disabled,props=_object_without_properties(_param,["appearance","disabled"]),isVisible="primary"===appearance||"secondary"===appearance||"tertiary"===appearance||"ghost"===appearance,badgeAppearance=getBadgeAppearance(appearance,void 0!==_param_disabled&&_param_disabled);return isVisible?/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Badge,_object_spread_props(_object_spread({},props),{dimension:"s",appearance:badgeAppearance})):null},SegmentedBadge=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay)(Badge)(_templateObject3(),function(p){return p.$disabled?"var(--admiral-color-Neutral_Neutral00, ".concat(p.theme.color["Neutral/Neutral 00"],")"):"var(--admiral-color-Special_StaticWhite, ".concat(p.theme.color["Special/Static White"],")")},function(p){return p.$disabled?"var(--admiral-color-Neutral_Neutral30, ".concat(p.theme.color["Neutral/Neutral 30"],")"):"var(--admiral-color-Primary_Primary60Main, ".concat(p.theme.color["Primary/Primary 60 Main"],")")}),SegmentedControlBadge=function(_param){var _param_appearance=_param.appearance,appearance=void 0===_param_appearance?"outlined":_param_appearance,_param_disabled=_param.disabled,props=_object_without_properties(_param,["appearance","disabled"]);return/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SegmentedBadge,_object_spread_props(_object_spread({},props),{dimension:"s",appearance:void 0!==_param_disabled&&_param_disabled?"outlined"==appearance?"lightDisable":"whiteDisable":"outlined"==appearance?"info":"white"}))};try{BadgeComponent.displayName="Badge",BadgeComponent.__docgenInfo={description:"",displayName:"Badge",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Badge/index.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"src/components/Badge/index.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/T/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>T});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_themes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/common/index.ts"),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/skeleton/animation.tsx");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _templateObject(){var data=_tagged_template_literal(["\n  ",";\n  pointer-events: none;\n"]);return _templateObject=function _templateObject(){return data},data}function _templateObject1(){var data=_tagged_template_literal(["\n  color: ",";\n  ",";\n  ","\n  ","\n"]);return _templateObject1=function _templateObject(){return data},data}var skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.AH)(_templateObject(),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_3__.h),Tspan=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.span(_templateObject1(),function(param){var $color=param.$color,theme=param.theme,$skeleton=param.$skeleton,cssVar="--admiral-color-".concat(null==$color?void 0:$color.replace("/","_").replaceAll(" ",""));return $skeleton?"transparent":$color?theme.color[$color]?"var(".concat(cssVar,", ").concat(theme.color[$color],")"):$color:"var(--admiral-color-Neutral_Neutral90, ".concat(theme.color[_src_components_themes__WEBPACK_IMPORTED_MODULE_4__.jn],")")},function(p){return p.theme.typography[p.$font]},function(p){return p.$cssMixin?p.$cssMixin:""},function(p){return p.$skeleton&&skeletonMixin}),T=/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(_param,ref){var font=_param.font,color=_param.color,cssMixin=_param.cssMixin,skeleton=_param.skeleton,props=_object_without_properties(_param,["font","color","cssMixin","skeleton"]);return/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tspan,_object_spread_props(_object_spread({ref:ref},props),{$font:font,$color:color,$cssMixin:cssMixin,$skeleton:skeleton}))});T.displayName="T";try{T.displayName="T",T.__docgenInfo={description:"",displayName:"T",props:{font:{defaultValue:null,description:"Имя шрифта из списка дизайн системы",name:"font",required:!0,type:{name:"enum",value:[{value:'"Main/XXL"'},{value:'"Main/XL"'},{value:'"Main/L"'},{value:'"Main/M"'},{value:'"Main/S"'},{value:'"Main/XS-bold"'},{value:'"Main/XS"'},{value:'"Additional/L-bold"'},{value:'"Additional/L"'},{value:'"Additional/M"'},{value:'"Additional/S"'},{value:'"Additional/S-bold"'},{value:'"Additional/XS"'},{value:'"Button/M"'},{value:'"Button/S"'},{value:'"Caption/XS"'},{value:'"Header/HL1"'},{value:'"Header/HL2"'},{value:'"Header/HL3"'},{value:'"Header/H1"'},{value:'"Header/H2"'},{value:'"Header/H3"'},{value:'"Header/H4"'},{value:'"Header/H5"'},{value:'"Header/H6"'},{value:'"Subtitle/Subtitle 1"'},{value:'"Subtitle/Subtitle 2"'},{value:'"Subtitle/Subtitle 3"'},{value:'"Body/Body 1 Long"'},{value:'"Body/Body 1 Short"'},{value:'"Body/Body 2 Long"'},{value:'"Body/Body 2 Short"'},{value:'"Button/Button 1"'},{value:'"Button/Button 2"'},{value:'"Caption/Caption 1"'},{value:'"Caption/Caption 2"'}]}},color:{defaultValue:null,description:"Имя цвета шрифта из палитры темы *",name:"color",required:!1,type:{name:"enum",value:[{value:'"Neutral/Neutral 00"'},{value:'"Neutral/Neutral 05"'},{value:'"Neutral/Neutral 10"'},{value:'"Neutral/Neutral 20"'},{value:'"Neutral/Neutral 30"'},{value:'"Neutral/Neutral 40"'},{value:'"Neutral/Neutral 50"'},{value:'"Neutral/Neutral 60"'},{value:'"Neutral/Neutral 70"'},{value:'"Neutral/Neutral 80"'},{value:'"Neutral/Neutral 90"'},{value:'"Primary/Primary 10"'},{value:'"Primary/Primary 20"'},{value:'"Primary/Primary 30"'},{value:'"Primary/Primary 40"'},{value:'"Primary/Primary 50"'},{value:'"Primary/Primary 60 Main"'},{value:'"Primary/Primary 70"'},{value:'"Primary/Primary 80"'},{value:'"Special/Static White"'},{value:'"Special/Elevated BG"'},{value:'"Special/Dark Static Neutral 00"'},{value:'"Special/Dark Static Neutral 05"'},{value:'"Special/Dark Static Neutral 10"'},{value:'"Special/Dark Static Neutral 20"'},{value:'"Special/Dark Static Neutral 30"'},{value:'"Special/Dark Static Neutral 50"'},{value:'"Special/Dark Static Neutral 70"'},{value:'"Special/Dark Static Neutral 80"'},{value:'"Special/Dark Static Neutral 90"'},{value:'"Special/Dark Static Primary 60"'},{value:'"Special/Dark Static Primary 70"'},{value:'"Special/Dark Static Primary 80"'},{value:'"Special/Dark Static Error 60"'},{value:'"Special/Dark Static Success 50"'},{value:'"Opacity/Hover"'},{value:'"Opacity/Focus"'},{value:'"Opacity/Press"'},{value:'"Opacity/Modal"'},{value:'"Opacity/Dark Static Hover"'},{value:'"Opacity/Dark Static Focus"'},{value:'"Opacity/Dark Static Press"'},{value:'"Opacity/Neutral 4"'},{value:'"Opacity/Neutral 8"'},{value:'"Opacity/Neutral 12"'},{value:'"Opacity/Neutral 16"'},{value:'"Error/Error 10"'},{value:'"Error/Error 20"'},{value:'"Error/Error 30"'},{value:'"Error/Error 40"'},{value:'"Error/Error 50"'},{value:'"Error/Error 60 Main"'},{value:'"Error/Error 70"'},{value:'"Error/Error 80"'},{value:'"Success/Success 10"'},{value:'"Success/Success 20"'},{value:'"Success/Success 30"'},{value:'"Success/Success 40"'},{value:'"Success/Success 50 Main"'},{value:'"Success/Success 60"'},{value:'"Success/Success 70"'},{value:'"Warning/Warning 10"'},{value:'"Warning/Warning 20"'},{value:'"Warning/Warning 30"'},{value:'"Warning/Warning 40"'},{value:'"Warning/Warning 50 Main"'},{value:'"Warning/Warning 60"'},{value:'"Warning/Warning 70"'},{value:'"Attention/Attention 10"'},{value:'"Attention/Attention 20"'},{value:'"Attention/Attention 30"'},{value:'"Attention/Attention 40"'},{value:'"Attention/Attention 50 Main"'},{value:'"Attention/Attention 60"'},{value:'"Attention/Attention 70"'},{value:'"Purple/Purple 10"'},{value:'"Purple/Purple 20"'},{value:'"Purple/Purple 30"'},{value:'"Purple/Purple 40"'},{value:'"Purple/Purple 50"'},{value:'"Purple/Purple 60 Main"'},{value:'"Purple/Purple 70"'},{value:'"Purple/Purple 80"'},{value:'"Magenta/Magenta 10"'},{value:'"Magenta/Magenta 20"'},{value:'"Magenta/Magenta 30"'},{value:'"Magenta/Magenta 40"'},{value:'"Magenta/Magenta 50"'},{value:'"Magenta/Magenta 60 Main"'},{value:'"Magenta/Magenta 70"'},{value:'"Magenta/Magenta 80"'},{value:'"Cyan/Cyan 10"'},{value:'"Cyan/Cyan 20"'},{value:'"Cyan/Cyan 30"'},{value:'"Cyan/Cyan 40"'},{value:'"Cyan/Cyan 50"'},{value:'"Cyan/Cyan 60 Main"'},{value:'"Cyan/Cyan 70"'},{value:'"Cyan/Cyan 80"'},{value:'"Teal/Teal 10"'},{value:'"Teal/Teal 20"'},{value:'"Teal/Teal 30"'},{value:'"Teal/Teal 40"'},{value:'"Teal/Teal 50"'},{value:'"Teal/Teal 60 Main"'},{value:'"Teal/Teal 70"'},{value:'"Teal/Teal 80"'}]}},cssMixin:{defaultValue:null,description:"Позволяет добавлять  миксин созданный с помощью styled css",name:"cssMixin",required:!1,type:{name:"RuleSet<object>"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/T/index.tsx#T"]={docgenInfo:T.__docgenInfo,name:"T",path:"src/components/T/index.tsx#T"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/form/DateField/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{v:()=>DateField});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_src_components_Field__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Field/index.tsx"),_src_components_input_DateInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/input/DateInput/index.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/common/uid.ts"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var DateField=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function(props,ref){var className=props.className,displayInline=props.displayInline,status=props.status,required=props.required,extraText=props.extraText,label=props.label,_props_id=props.id,id=void 0===_props_id?(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_2__.L)():_props_id,name=props.name,disabled=props.disabled,skeleton=props.skeleton,restProps=_object_without_properties(props,["className","displayInline","status","required","extraText","label","id","name","disabled","skeleton"]),fieldContainerProps={className:className,extraText:extraText,status:status,required:required,label:label,id:id,skeleton:skeleton,"data-field-id":id,"data-field-name":name,displayInline:displayInline,disabled:disabled};(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.$e)(restProps,fieldContainerProps),(0,_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G)(restProps,fieldContainerProps);var inputProps=_object_spread({ref:ref,id:id,name:name,"aria-required":required,status:status,disabled:disabled,skeleton:skeleton},restProps);return/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src_components_Field__WEBPACK_IMPORTED_MODULE_4__.D0,_object_spread_props(_object_spread({},fieldContainerProps),{children:/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src_components_input_DateInput__WEBPACK_IMPORTED_MODULE_5__.J,_object_spread({},inputProps))}))});DateField.displayName="DateField";try{DateField.displayName="DateField",DateField.__docgenInfo={description:"",displayName:"DateField",props:{type:{defaultValue:null,description:"Устанавливает тип ввода даты или интервала даты",name:"type",required:!1,type:{name:"enum",value:[{value:'"date"'},{value:'"date-range"'}]}},defaultIsCalendarOpen:{defaultValue:null,description:"Устанавливает начальное состояние видимости календаря",name:"defaultIsCalendarOpen",required:!1,type:{name:"boolean"}},formatter:{defaultValue:null,description:"",name:"formatter",required:!1,type:{name:"((isoValues: string[], joinString?: string) => string)"}},parser:{defaultValue:null,description:"",name:"parser",required:!1,type:{name:"((stringValue?: string, isDateRangeValue?: boolean) => Date[]) | undefined"}},alignDropdown:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПринудительно выравнивает контейнер календаря относительно компонента",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},calendarRef:{defaultValue:null,description:"Ref для календаря",name:"calendarRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icon:{defaultValue:null,description:"Компонент для отображения альтернативной иконки",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"Выбранное значение даты",name:"selected",required:!1,type:{name:"Date | null"}},locale:{defaultValue:null,description:"Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,\nпо умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме",name:"locale",required:!1,type:{name:"{ backwardText?: string; forwardText?: string; nextMonthText?: string | undefined; previousMonthText?: string | undefined; returnText?: string | undefined; selectYearText?: string | undefined; selectMonthText?: string | undefined; } | undefined"}},tooltipContainer:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 4.11.1, будет удалено в версии 9.х.х.\nВзамен используйте rootRef пропсу на DropdownProvider.\n\nКонтейнер, в котором при необходимости можно отрисовать тултип через ReactDOM.createPortal",name:"tooltipContainer",required:!1,type:{name:"undefined"}},currentActiveView:{defaultValue:null,description:"Показать экран выбора дат (месяц/год/день)",name:"currentActiveView",required:!1,type:{name:"ViewScreenType | null"}},currentActiveViewImportant:{defaultValue:null,description:"Приоритет экрана currentActiveView",name:"currentActiveViewImportant",required:!1,type:{name:"boolean"}},onDateIncreaseDecrease:{defaultValue:null,description:"Коллбэк срабатывает при клике на стрелках переключения дат",name:"onDateIncreaseDecrease",required:!1,type:{name:"((date: Date | (Date | null)[] | null, event?: SyntheticEvent<any, Event>) => void)"}},onMonthSelect:{defaultValue:null,description:"Коллбэк при изменении месяца",name:"onMonthSelect",required:!1,type:{name:"((date: Date | (Date | null)[] | null) => void)"}},onYearSelect:{defaultValue:null,description:"Коллбэк при изменении года",name:"onYearSelect",required:!1,type:{name:"((date: Date | (Date | null)[] | null) => void)"}},onViewEnter:{defaultValue:null,description:"Срабатывает при открытии экрана выбора года",name:"onViewEnter",required:!1,type:{name:"((view: ViewScreenType) => void)"}},onViewLeave:{defaultValue:null,description:"Срабатывает при открытии экрана выбора месяца",name:"onViewLeave",required:!1,type:{name:"((view: ViewScreenType) => void)"}},onViewMonthSelect:{defaultValue:null,description:"Выбор вкладки - Месяц",name:"onViewMonthSelect",required:!1,type:{name:"(() => void)"}},onViewYearSelect:{defaultValue:null,description:"Выбор вкладки - Год",name:"onViewYearSelect",required:!1,type:{name:"(() => void)"}},highlightSpecialDay:{defaultValue:null,description:"Позволяет добавлять стили на необходимые даты",name:"highlightSpecialDay",required:!1,type:{name:"((date: Date) => RuleSet<object>)"}},minDate:{defaultValue:null,description:"Минимально возможная для выбора дата",name:"minDate",required:!1,type:{name:"Date"}},maxDate:{defaultValue:null,description:"Максимально возможная для выбора дата",name:"maxDate",required:!1,type:{name:"Date"}},startDate:{defaultValue:null,description:"Начальная дата диапазона",name:"startDate",required:!1,type:{name:"Date | null"}},endDate:{defaultValue:null,description:"Конечная дата диапазона",name:"endDate",required:!1,type:{name:"Date | null"}},validator:{defaultValue:null,description:"Предоставляет функции проверки корректности даты, возможности её выбора в календаре.\nЕсли возвращаемое значение не 'null', то дата считается некорректной, а возвращаемое\nфункцией значение является текстом ошибки",name:"validator",required:!1,type:{name:"DateValidator"}},filterDate:{defaultValue:null,description:"Функция фильтрации даты. Если функция возвращает false для конкретного дня, то этот день будет задизейблен и его нельзя будет выбрать\nПример функции https://reactdatepicker.com/#example-filter-dates",name:"filterDate",required:!1,type:{name:"((date: Date) => boolean)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},characterCounterVisibilityThreshold:{defaultValue:null,description:"Коэффициент влияющий на появление счетчика при заданном максимальном количестве символов:\n0 - всегда видим\n1 - всегда невидим\nпо умолчанию 0.8 - становится видимым при наборе более 80% символов от максимально допустимого количества",name:"characterCounterVisibilityThreshold",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/DateField/index.tsx#DateField"]={docgenInfo:DateField.__docgenInfo,name:"DateField",path:"src/components/form/DateField/index.tsx#DateField"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/themes/common/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gz:()=>DefaultBackgroundColorName,jn:()=>DefaultFontColorName,yL:()=>MainPrimaryColorName});var DefaultFontColorName="Neutral/Neutral 90",DefaultBackgroundColorName="Neutral/Neutral 00",MainPrimaryColorName="Primary/Primary 60 Main"}}]);