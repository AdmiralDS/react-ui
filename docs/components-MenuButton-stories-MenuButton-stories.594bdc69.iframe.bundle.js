"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[5543],{"./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgMinusCircleOutline});var _path,_path2,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgMinusCircleOutline=function SvgMinusCircleOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M7.65 11.35a.65.65 0 1 0 0 1.3h8.7a.65.65 0 1 0 0-1.3h-8.7Z"})),_path2||(_path2=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12 3a9 9 0 1 0 0 18 9 9 0 0 0 0-18Zm-7.7 9a7.7 7.7 0 1 1 15.4 0 7.7 7.7 0 0 1-15.4 0Z",clipRule:"evenodd"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/StarSolid.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>SvgStarSolid});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgStarSolid=function SvgStarSolid(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"m12.63 3.31 2.46 4.99 5.51.8c.57.08.8.79.39 1.19L17 14.17l.94 5.48c.1.57-.5 1.01-1.02.74L12 17.81 7.08 20.4c-.51.27-1.11-.17-1.02-.74L7 14.17l-3.98-3.88A.695.695 0 0 1 3.4 9.1l5.51-.8 2.46-4.99c.26-.52 1-.52 1.26 0Z"})))};__webpack_require__.p},"./src/components/MenuButton/stories/MenuButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MenuButtonBase:()=>MenuButtonBase,MenuButtonIcon:()=>MenuButtonIcon,MenuButtonOptions:()=>MenuButtonOptions,MenuButtonVariants:()=>MenuButtonVariants,MenuButtonWithPanel:()=>MenuButtonWithPanel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MenuButton_stories});var react=__webpack_require__("./node_modules/react/index.js"),MenuButton=__webpack_require__("./src/components/MenuButton/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),T=__webpack_require__("./src/components/T/index.ts"),MinusCircleOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg"),StarSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/StarSolid.svg"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const WrapperVertical=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonIcontemplate__WrapperVertical",componentId:"sc-n95u56-0"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start;gap:20px;"]),Wrapper=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonIcontemplate__Wrapper",componentId:"sc-n95u56-1"})(["display:flex;"]),Separator=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonIcontemplate__Separator",componentId:"sc-n95u56-2"})(["height:20px;width:20px;"]),DarkDiv=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonIcontemplate__DarkDiv",componentId:"sc-n95u56-3"})(["background-color:",";padding:2px;"],(({theme})=>theme.color["Special/Dark Static Neutral 00"])),handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},logSelectedId=id=>{console.log(`selected: ${id}`)},items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.r,{width:20,height:20}),"Option two"]}),disabled:!0},{id:"3",display:"Option three"},{id:"4",display:"Option four"}],MenuButtonIconTemplate=props=>{const[selected,setSelected]=react.useState(void 0),modelL=react.useMemo((()=>items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"l",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelM=react.useMemo((()=>items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"m",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelS=react.useMemo((()=>items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"s",...items,key:item.id},item.display),disabled:item.disabled})))),[]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(Wrapper,{children:[(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size XL"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"xl",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size L"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"l",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size M"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"m",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]}),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsxs)(WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size S"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"}),(0,jsx_runtime.jsx)(DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"s",selected,onSelectItem:id=>{logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:handleVisibilityChange,iconStart:(0,jsx_runtime.jsx)(StarSolid.r,{}),children:"Button 56"})})]})]})})};try{MenuButtonIconTemplate.displayName="MenuButtonIconTemplate",MenuButtonIconTemplate.__docgenInfo={description:"",displayName:"MenuButtonIconTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ghost"'},{value:'"white"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonIcon.template.tsx#MenuButtonIconTemplate"]={docgenInfo:MenuButtonIconTemplate.__docgenInfo,name:"MenuButtonIconTemplate",path:"src/components/MenuButton/stories/MenuButtonIcon.template.tsx#MenuButtonIconTemplate"})}catch(__react_docgen_typescript_loader_error){}const MenuButtonBase_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},MenuButtonBase_template_items=[{id:"1",display:"Option one"},{id:"2",display:"Option two"},{id:"3",display:"Option three"},{id:"4",display:"Option four"},{id:"5",display:"Option five",disabled:!0},{id:"6",display:"Option six"},{id:"7",display:"Option seven"}],MenuButtonBaseTemplate=props=>{const[selected,setSelected]=react.useState(void 0);const model=react.useMemo((()=>MenuButtonBase_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"xl"===props.dimension?"l":props.dimension,...items,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.ThemeProvider,{theme:function swapBorder(theme){return theme.shape.borderRadiusKind=props.themeBorderKind||theme.shape.borderRadiusKind,theme},children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,selected,onSelectItem:id=>{(id=>{console.log(`selected: ${id}`)})(id),setSelected(id)},items:model,onVisibilityChange:MenuButtonBase_template_handleVisibilityChange,"data-dropdown-container-id":"menu-button-with-dropdown",className:"menu-button-class",dropContainerClassName:"dropContainerClass",children:"test"})})};MenuButtonBaseTemplate.displayName="MenuButtonBaseTemplate";try{MenuButtonBaseTemplate.displayName="MenuButtonBaseTemplate",MenuButtonBaseTemplate.__docgenInfo={description:"",displayName:"MenuButtonBaseTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ghost"'},{value:'"white"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonBase.template.tsx#MenuButtonBaseTemplate"]={docgenInfo:MenuButtonBaseTemplate.__docgenInfo,name:"MenuButtonBaseTemplate",path:"src/components/MenuButton/stories/MenuButtonBase.template.tsx#MenuButtonBaseTemplate"})}catch(__react_docgen_typescript_loader_error){}var MenuActionsPanel=__webpack_require__("./src/components/Menu/MenuActionsPanel.tsx"),Button=__webpack_require__("./src/components/Button/index.tsx");const ActionPanelFlex=(0,styled_components_browser_esm.css)(["display:flex;gap:8px;"]),MenuButtonOptions_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},MenuButtonOptions_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.r,{width:20,height:20}),"Option two"]}),disabled:!0},{id:"3",display:"Option three"},{id:"4",display:"Option four"}],MenuButtonOptionsTemplate=props=>{const[selected,setSelected]=react.useState(void 0),model=react.useMemo((()=>MenuButtonOptions_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"xl"===props.dimension?"l":props.dimension,...items,key:item.id},item.display),disabled:item.disabled})))),[props.dimension]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,selected,onSelectItem:id=>{(id=>{console.log(`selected: ${id}`)})(id),setSelected(id)},items:model,onVisibilityChange:MenuButtonOptions_template_handleVisibilityChange,renderBottomPanel:({dimension,menuActionsPanelCssMixin=ActionPanelFlex})=>(0,jsx_runtime.jsxs)(MenuActionsPanel.q,{dimension,menuActionsPanelCssMixin,children:[(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",onClick:()=>{console.log("Button 1 clicked")},children:"Action 1"}),(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",appearance:"secondary",onClick:()=>{console.log("Button 2 clicked")},children:"Action 2"})]}),children:"test"})})};try{MenuButtonOptionsTemplate.displayName="MenuButtonOptionsTemplate",MenuButtonOptionsTemplate.__docgenInfo={description:"",displayName:"MenuButtonOptionsTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ghost"'},{value:'"white"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonOptions.template.tsx#MenuButtonOptionsTemplate"]={docgenInfo:MenuButtonOptionsTemplate.__docgenInfo,name:"MenuButtonOptionsTemplate",path:"src/components/MenuButton/stories/MenuButtonOptions.template.tsx#MenuButtonOptionsTemplate"})}catch(__react_docgen_typescript_loader_error){}const MenuButtonVariants_template_DarkDiv=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonVariantstemplate__DarkDiv",componentId:"sc-1o5y41a-0"})(["background-color:",";padding:2px;"],(({theme})=>theme.color["Special/Dark Static Neutral 00"])),MenuButtonVariants_template_WrapperVertical=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonVariantstemplate__WrapperVertical",componentId:"sc-1o5y41a-1"})(["display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start;gap:20px;"]),MenuButtonVariants_template_Wrapper=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonVariantstemplate__Wrapper",componentId:"sc-1o5y41a-2"})(["display:flex;"]),MenuButtonVariants_template_Separator=styled_components_browser_esm.default.div.withConfig({displayName:"MenuButtonVariantstemplate__Separator",componentId:"sc-1o5y41a-3"})(["height:20px;width:20px;"]),MenuButtonVariants_template_handleVisibilityChange=isVisible=>{isVisible?console.log("Menu opened"):console.log("Menu closed")},MenuButtonVariants_template_logSelectedId=id=>{console.log(`selected: ${id}`)},MenuButtonVariants_template_items=[{id:"1",display:"Option one"},{id:"2",display:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",width:"115px",justifyContent:"space-between",alignItems:"center"},children:[(0,jsx_runtime.jsx)(MinusCircleOutline.r,{width:20,height:20}),"Option two"]}),disabled:!0},{id:"3",display:"Option three"},{id:"4",display:"Option four"}],MenuButtonVariantsTemplate=props=>{const[selected,setSelected]=react.useState(void 0),modelL=react.useMemo((()=>MenuButtonVariants_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"l",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelM=react.useMemo((()=>MenuButtonVariants_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"m",...items,key:item.id},item.display),disabled:item.disabled})))),[]),modelS=react.useMemo((()=>MenuButtonVariants_template_items.map((item=>({id:item.id,render:items=>(0,react.createElement)(MenuItem.s,{dimension:"s",...items,key:item.id},item.display),disabled:item.disabled})))),[]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)(MenuButtonVariants_template_Wrapper,{children:[(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size XL"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"xl",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"xl",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_Separator,{}),(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size L"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"l",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"l",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelL,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_Separator,{}),(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size M"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"m",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"m",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelM,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_Separator,{}),(0,jsx_runtime.jsxs)(MenuButtonVariants_template_WrapperVertical,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Size S"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"primary",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"secondary",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"ghost",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"s",selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})}),(0,jsx_runtime.jsx)(MenuButtonVariants_template_DarkDiv,{children:(0,jsx_runtime.jsx)(MenuButton.j,{...props,appearance:"white",dimension:"s",loading:!0,selected,onSelectItem:id=>{MenuButtonVariants_template_logSelectedId(id),setSelected(id)},items:modelS,onVisibilityChange:MenuButtonVariants_template_handleVisibilityChange,children:"Button 56"})})]})]})})};try{MenuButtonVariantsTemplate.displayName="MenuButtonVariantsTemplate",MenuButtonVariantsTemplate.__docgenInfo={description:"",displayName:"MenuButtonVariantsTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ghost"'},{value:'"white"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonVariants.template.tsx#MenuButtonVariantsTemplate"]={docgenInfo:MenuButtonVariantsTemplate.__docgenInfo,name:"MenuButtonVariantsTemplate",path:"src/components/MenuButton/stories/MenuButtonVariants.template.tsx#MenuButtonVariantsTemplate"})}catch(__react_docgen_typescript_loader_error){}var MenuItemWithCheckbox=__webpack_require__("./src/components/Menu/MenuItemWithCheckbox.tsx");const MenuButtonWithPanel_template_ActionPanelFlex=(0,styled_components_browser_esm.css)(["display:flex;gap:8px;"]),itemsWithCheckbox=[{id:"1",label:"Option one"},{id:"2",label:"Option two"},{id:"3",label:"Option three"},{id:"4",label:"Option four"},{id:"5",label:"Option five"},{id:"6",label:"Option six"},{id:"7",label:"Option seven"}],MenuButtonWithPanelTemplate=props=>{const[innerState,setInnerState]=react.useState(itemsWithCheckbox.map((item=>item))),[activeOption,setActiveOption]=react.useState(innerState[0].id),[selectedOption,setSelectedOption]=react.useState(),[menuVisible,setMenuVisible]=react.useState(!1),model=react.useMemo((()=>innerState.map((item=>({id:item.id,render:options=>(0,jsx_runtime.jsx)(MenuItemWithCheckbox.N,{id:item.id,checked:!!item.checked,...options,dimension:"s",children:item.label},item.id)})))),[innerState,activeOption]),handleMenuVisibilityChange=visible=>{console.log("user menu visibilty change"),setMenuVisible(visible)};return(0,jsx_runtime.jsx)(styled_components_browser_esm.ThemeProvider,{theme:function swapBorder(theme){return theme.shape.borderRadiusKind=props.themeBorderKind||theme.shape.borderRadiusKind,theme},children:(0,jsx_runtime.jsx)(MenuButton.j,{dimension:"s",appearance:"ghost",items:model,active:activeOption,onActivateItem:id=>{setActiveOption(id)},selected:selectedOption,onSelectItem:id=>{console.log(`Option ${id} clicked`);const updatedInnerState=[...innerState],itemToUpdate=updatedInnerState.find((item=>item.id===id));itemToUpdate&&(itemToUpdate.checked=!itemToUpdate.checked),setInnerState(updatedInnerState),setSelectedOption(void 0)},disableSelectedOptionHighlight:!0,isVisible:menuVisible,onVisibilityChange:handleMenuVisibilityChange,renderBottomPanel:({dimension})=>(0,jsx_runtime.jsxs)(MenuActionsPanel.q,{dimension,menuActionsPanelCssMixin:MenuButtonWithPanel_template_ActionPanelFlex,children:[(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",onClick:()=>handleMenuVisibilityChange(!1),children:"Action 1"}),(0,jsx_runtime.jsx)(Button.zx,{dimension:"s",appearance:"secondary",onClick:()=>handleMenuVisibilityChange(!1),children:"Action 2"})]}),children:"Выберите опцию"})})};MenuButtonWithPanelTemplate.displayName="MenuButtonWithPanelTemplate";try{MenuButtonWithPanelTemplate.displayName="MenuButtonWithPanelTemplate",MenuButtonWithPanelTemplate.__docgenInfo={description:"",displayName:"MenuButtonWithPanelTemplate",props:{items:{defaultValue:null,description:"Массив опций",name:"items",required:!0,type:{name:"MenuModelItemProps[]"}},selected:{defaultValue:null,description:"Выбранная опция",name:"selected",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"@deprecated use onSelectItem instead\nКолбек на изменение выбранной опции",name:"onChange",required:!1,type:{name:"((id: string) => void)"}},onOpen:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на открытие меню",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"@deprecated use onVisibilityChange instead\nКолбек на закрытие меню",name:"onClose",required:!1,type:{name:"(() => void)"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"l"'}]}},appearance:{defaultValue:null,description:"Внешний вид компонента",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"ghost"'},{value:'"white"'}]}},disabled:{defaultValue:null,description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Состояние loading",name:"loading",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},iconStart:{defaultValue:null,description:"Иконка перед текстом кнопки",name:"iconStart",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nИконка кнопки",name:"icon",required:!1,type:{name:"ReactNode"}},iconEnd:{defaultValue:null,description:"Иконка после текста кнопки",name:"iconEnd",required:!1,type:{name:"ReactNode"}},displayAsDisabled:{defaultValue:null,description:"Оставаясь активной для нажатия, кнопка отображается в заблокированном стиле",name:"displayAsDisabled",required:!1,type:{name:"boolean"}},displayAsSquare:{defaultValue:null,description:"Отображать кнопку квадратной",name:"displayAsSquare",required:!1,type:{name:"boolean"}},iconPlace:{defaultValue:null,description:"@deprecated Используйте iconStart или iconEnd\nРасположение иконки кнопки",name:"iconPlace",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},buttonCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для кнопок, созданный с помощью styled css",name:"buttonCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MenuButton/stories/MenuButtonWithPanel.template.tsx#MenuButtonWithPanelTemplate"]={docgenInfo:MenuButtonWithPanelTemplate.__docgenInfo,name:"MenuButtonWithPanelTemplate",path:"src/components/MenuButton/stories/MenuButtonWithPanel.template.tsx#MenuButtonWithPanelTemplate"})}catch(__react_docgen_typescript_loader_error){}const MenuButton_stories={title:"Admiral-2.1/MenuButton",decorators:void 0,component:MenuButton.j,parameters:{docs:{source:{code:null}},layout:"centered",design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24517"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24648"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24734"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24784"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24834"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24673"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24759"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24809"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A24859"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71085"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71109"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71133"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71157"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71490"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=10888%3A71514"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11005%3A69548"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11047%3A69703"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11047%3A69794"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=11047%3A69881"}]},argTypes:{dimension:{options:["xl","l","m","s"],control:{type:"radio"}},appearance:{options:["primary","secondary","ghost","white"],control:{type:"radio"}},disabled:{control:{type:"boolean"}},disableSelectedOptionHighlight:{control:{type:"boolean"}},isVisible:{control:{type:"boolean"}},loading:{control:{type:"boolean"}},skeleton:{control:{type:"boolean"}},themeBorderKind:{options:borderRadius.g2,control:{type:"radio"}},alignSelf:{options:[void 0,"auto","flex-start","flex-end","center","baseline","stretch"],control:{type:"select"}},items:{control:!1},selected:{control:!1},active:{control:!1},menuWidth:{control:{type:"text"}},menuMaxHeight:{control:!1},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1}}},MenuButtonBaseStory=props=>(0,jsx_runtime.jsx)(MenuButtonBaseTemplate,{...props});MenuButtonBaseStory.displayName="MenuButtonBaseStory";const MenuButtonBase={render:MenuButtonBaseStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { MenuButton, MenuItem } from '@admiral-ds/react-ui';\nimport type { MenuButtonProps, RenderOptionProps, Theme, BorderRadiusType } from '@admiral-ds/react-ui';\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: 'Option two',\n  },\n  {\n    id: '3',\n    display: 'Option three',\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n  {\n    id: '5',\n    display: 'Option five',\n    disabled: true,\n  },\n  {\n    id: '6',\n    display: 'Option six',\n  },\n  {\n    id: '7',\n    display: 'Option seven',\n  },\n];\n\nexport const MenuButtonBaseTemplate = (props: MenuButtonProps & { themeBorderKind?: BorderRadiusType }) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n\n  function swapBorder(theme: Theme): Theme {\n    theme.shape.borderRadiusKind = props.themeBorderKind || theme.shape.borderRadiusKind;\n    return theme;\n  }\n\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension === 'xl' ? 'l' : props.dimension} {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  return (\n    <ThemeProvider theme={swapBorder}>\n      <MenuButton\n        {...props}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        items={model}\n        onVisibilityChange={handleVisibilityChange}\n        data-dropdown-container-id=\"menu-button-with-dropdown\"\n        className=\"menu-button-class\"\n        dropContainerClassName=\"dropContainerClass\"\n      >\n        test\n      </MenuButton>\n    </ThemeProvider>\n  );\n};\n"}}},name:"MenuButton. Базовый пример."},MenuButtonOptionsStory=props=>(0,jsx_runtime.jsx)(MenuButtonOptionsTemplate,{...props});MenuButtonOptionsStory.displayName="MenuButtonOptionsStory";const MenuButtonOptions={render:MenuButtonOptionsStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { css } from 'styled-components';\n\nimport { Button, MenuActionsPanel, MenuButton, MenuItem } from '@admiral-ds/react-ui';\nimport type { MenuButtonProps, RenderOptionProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\n\nconst ActionPanelFlex = css`\n  display: flex;\n  gap: 8px;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log('Menu opened');\n  } else {\n    console.log('Menu closed');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: '1',\n    display: 'Option one',\n  },\n  {\n    id: '2',\n    display: (\n      <div style={{ display: 'flex', width: '115px', justifyContent: 'space-between', alignItems: 'center' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n    disabled: true,\n  },\n  {\n    id: '3',\n    display: 'Option three',\n  },\n  {\n    id: '4',\n    display: 'Option four',\n  },\n];\n\nexport const MenuButtonOptionsTemplate = (props: MenuButtonProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const model = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension={props.dimension === 'xl' ? 'l' : props.dimension} {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, [props.dimension]);\n\n  return (\n    <>\n      <MenuButton\n        {...props}\n        selected={selected}\n        onSelectItem={(id) => {\n          logSelectedId(id);\n          setSelected(id);\n        }}\n        items={model}\n        onVisibilityChange={handleVisibilityChange}\n        renderBottomPanel={({ dimension, menuActionsPanelCssMixin = ActionPanelFlex }) => {\n          return (\n            <MenuActionsPanel dimension={dimension} menuActionsPanelCssMixin={menuActionsPanelCssMixin}>\n              <Button\n                dimension={'s'}\n                onClick={() => {\n                  console.log('Button 1 clicked');\n                }}\n              >\n                Action 1\n              </Button>\n              <Button\n                dimension={'s'}\n                appearance=\"secondary\"\n                onClick={() => {\n                  console.log('Button 2 clicked');\n                }}\n              >\n                Action 2\n              </Button>\n            </MenuActionsPanel>\n          );\n        }}\n      >\n        test\n      </MenuButton>\n    </>\n  );\n};\n"}}},name:"MenuButton. Задизейбленные и кастомизированные опции и панель с кнопками"},MenuButtonVariantsStory=props=>(0,jsx_runtime.jsx)(MenuButtonVariantsTemplate,{...props});MenuButtonVariantsStory.displayName="MenuButtonVariantsStory";const MenuButtonVariants={render:MenuButtonVariantsStory,parameters:{docs:{source:{code:'import * as React from \'react\';\nimport styled from \'styled-components\';\n\nimport { MenuButton, MenuItem, T } from \'@admiral-ds/react-ui\';\nimport type { MenuButtonProps, RenderOptionProps } from \'@admiral-ds/react-ui\';\nimport { ReactComponent as MinusCircleOutline } from \'@admiral-ds/icons/build/service/MinusCircleOutline.svg\';\n\nconst DarkDiv = styled.div`\n  background-color: ${({ theme }) => theme.color[\'Special/Dark Static Neutral 00\']};\n  padding: 2px;\n`;\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 20px;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log(\'Menu opened\');\n  } else {\n    console.log(\'Menu closed\');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: \'1\',\n    display: \'Option one\',\n  },\n  {\n    id: \'2\',\n    display: (\n      <div style={{ display: \'flex\', width: \'115px\', justifyContent: \'space-between\', alignItems: \'center\' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n    disabled: true,\n  },\n  {\n    id: \'3\',\n    display: \'Option three\',\n  },\n  {\n    id: \'4\',\n    display: \'Option four\',\n  },\n];\nexport const MenuButtonVariantsTemplate = (props: MenuButtonProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const modelL = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="l" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelM = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="m" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelS = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="s" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size XL\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="xl"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="xl"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="xl"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="xl"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="xl"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size L\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="l"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="l"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="l"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="l"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="l"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size M\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="m"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="m"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="m"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="m"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelM}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="m"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelM}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size S\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="s"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="s"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="s"\n            loading\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="s"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelS}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="s"\n              loading\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelS}\n              onVisibilityChange={handleVisibilityChange}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n      </Wrapper>\n    </>\n  );\n};\n'}}},name:"MenuButton. Размеры и стили."},MenuButtonIconStory=props=>(0,jsx_runtime.jsx)(MenuButtonIconTemplate,{...props});MenuButtonIconStory.displayName="MenuButtonIconStory";const MenuButtonIcon={render:MenuButtonIconStory,parameters:{docs:{source:{code:'import * as React from \'react\';\nimport styled from \'styled-components\';\n\nimport { MenuButton, MenuItem, T } from \'@admiral-ds/react-ui\';\nimport type { MenuButtonProps, RenderOptionProps } from \'@admiral-ds/react-ui\';\nimport { ReactComponent as MinusCircleOutline } from \'@admiral-ds/icons/build/service/MinusCircleOutline.svg\';\nimport { ReactComponent as StarSolid } from \'@admiral-ds/icons/build/system/StarSolid.svg\';\n\nconst WrapperVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst Separator = styled.div`\n  height: 20px;\n  width: 20px;\n`;\n\nconst DarkDiv = styled.div`\n  background-color: ${({ theme }) => theme.color[\'Special/Dark Static Neutral 00\']};\n  padding: 2px;\n`;\n\nconst handleVisibilityChange = (isVisible: boolean) => {\n  if (isVisible) {\n    console.log(\'Menu opened\');\n  } else {\n    console.log(\'Menu closed\');\n  }\n};\n\nconst logSelectedId = (id: string) => {\n  console.log(`selected: ${id}`);\n};\n\nconst items = [\n  {\n    id: \'1\',\n    display: \'Option one\',\n  },\n  {\n    id: \'2\',\n    display: (\n      <div style={{ display: \'flex\', width: \'115px\', justifyContent: \'space-between\', alignItems: \'center\' }}>\n        <MinusCircleOutline width={20} height={20} />\n        Option two\n      </div>\n    ),\n    disabled: true,\n  },\n  {\n    id: \'3\',\n    display: \'Option three\',\n  },\n  {\n    id: \'4\',\n    display: \'Option four\',\n  },\n];\n\nexport const MenuButtonIconTemplate = (props: MenuButtonProps) => {\n  const [selected, setSelected] = React.useState<string | undefined>(undefined);\n  const modelL = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="l" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelM = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="m" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n  const modelS = React.useMemo(() => {\n    return items.map((item) => ({\n      id: item.id,\n      render: (items: RenderOptionProps) => (\n        <MenuItem dimension="s" {...items} key={item.id}>\n          {item.display}\n        </MenuItem>\n      ),\n      disabled: item.disabled,\n    }));\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size XL\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="xl"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="xl"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size L\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="l"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelL}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="l"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelL}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size M\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="m"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelM}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="m"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelM}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n        <Separator />\n        <WrapperVertical>\n          <T font="Body/Body 1 Long" as="div">\n            Size S\n          </T>\n          <MenuButton\n            {...props}\n            appearance="primary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="secondary"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <MenuButton\n            {...props}\n            appearance="ghost"\n            dimension="s"\n            selected={selected}\n            onSelectItem={(id) => {\n              logSelectedId(id);\n              setSelected(id);\n            }}\n            items={modelS}\n            onVisibilityChange={handleVisibilityChange}\n            iconStart={<StarSolid />}\n          >\n            Button 56\n          </MenuButton>\n          <DarkDiv>\n            <MenuButton\n              {...props}\n              appearance="white"\n              dimension="s"\n              selected={selected}\n              onSelectItem={(id) => {\n                logSelectedId(id);\n                setSelected(id);\n              }}\n              items={modelS}\n              onVisibilityChange={handleVisibilityChange}\n              iconStart={<StarSolid />}\n            >\n              Button 56\n            </MenuButton>\n          </DarkDiv>\n        </WrapperVertical>\n      </Wrapper>\n    </>\n  );\n};\n'}}},name:"MenuButton с иконкой"},MenuButtonWithPanelStory=props=>(0,jsx_runtime.jsx)(MenuButtonWithPanelTemplate,{...props});MenuButtonWithPanelStory.displayName="MenuButtonWithPanelStory";const MenuButtonWithPanel={render:MenuButtonWithPanelStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { css, ThemeProvider } from 'styled-components';\n\nimport { Button, MenuActionsPanel, MenuButton, MenuItemWithCheckbox } from '@admiral-ds/react-ui';\nimport type {\n  MenuButtonProps,\n  ItemWithCheckbox,\n  RenderOptionProps,\n  RenderPanelProps,\n  Theme,\n  BorderRadiusType,\n} from '@admiral-ds/react-ui';\n\nconst ActionPanelFlex = css`\n  display: flex;\n  gap: 8px;\n`;\n\nconst itemsWithCheckbox: Array<ItemWithCheckbox> = [\n  {\n    id: '1',\n    label: 'Option one',\n  },\n  {\n    id: '2',\n    label: 'Option two',\n  },\n  {\n    id: '3',\n    label: 'Option three',\n  },\n  {\n    id: '4',\n    label: 'Option four',\n  },\n  {\n    id: '5',\n    label: 'Option five',\n  },\n  {\n    id: '6',\n    label: 'Option six',\n  },\n  {\n    id: '7',\n    label: 'Option seven',\n  },\n];\n\nexport const MenuButtonWithPanelTemplate = (props: MenuButtonProps & { themeBorderKind?: BorderRadiusType }) => {\n  function swapBorder(theme: Theme): Theme {\n    theme.shape.borderRadiusKind = props.themeBorderKind || theme.shape.borderRadiusKind;\n    return theme;\n  }\n\n  const [innerState, setInnerState] = React.useState<Array<ItemWithCheckbox>>(itemsWithCheckbox.map((item) => item));\n  const [activeOption, setActiveOption] = React.useState<string | undefined>(innerState[0].id);\n  const [selectedOption, setSelectedOption] = React.useState<string | undefined>();\n  const [menuVisible, setMenuVisible] = React.useState<boolean>(false);\n\n  const model = React.useMemo(() => {\n    return innerState.map((item) => ({\n      id: item.id,\n      render: (options: RenderOptionProps) => (\n        <MenuItemWithCheckbox key={item.id} id={item.id} checked={!!item.checked} {...options} dimension=\"s\">\n          {item.label}\n        </MenuItemWithCheckbox>\n      ),\n    }));\n  }, [innerState, activeOption]);\n\n  const handleActivateItem = (id: string | undefined) => {\n    setActiveOption(id);\n  };\n\n  const handleSelectItem = (id: string) => {\n    console.log(`Option ${id} clicked`);\n    const updatedInnerState = [...innerState];\n    const itemToUpdate = updatedInnerState.find((item) => item.id === id);\n    if (itemToUpdate) {\n      itemToUpdate.checked = !itemToUpdate.checked;\n    }\n    setInnerState(updatedInnerState);\n    setSelectedOption(undefined);\n  };\n\n  const handleMenuVisibilityChange = (visible: boolean) => {\n    console.log('user menu visibilty change');\n    setMenuVisible(visible);\n  };\n\n  return (\n    <ThemeProvider theme={swapBorder}>\n      <MenuButton\n        dimension=\"s\"\n        appearance=\"ghost\"\n        items={model}\n        active={activeOption}\n        onActivateItem={handleActivateItem}\n        selected={selectedOption}\n        onSelectItem={handleSelectItem}\n        disableSelectedOptionHighlight={true}\n        isVisible={menuVisible}\n        onVisibilityChange={handleMenuVisibilityChange}\n        renderBottomPanel={({ dimension }: RenderPanelProps) => (\n          <MenuActionsPanel dimension={dimension} menuActionsPanelCssMixin={ActionPanelFlex}>\n            <Button dimension=\"s\" onClick={() => handleMenuVisibilityChange(false)}>\n              Action 1\n            </Button>\n            <Button dimension=\"s\" appearance=\"secondary\" onClick={() => handleMenuVisibilityChange(false)}>\n              Action 2\n            </Button>\n          </MenuActionsPanel>\n        )}\n      >\n        Выберите опцию\n      </MenuButton>\n    </ThemeProvider>\n  );\n};\n"}}},name:"MenuButton с чекбоксами и нижней панелью в выпадающем меню"};MenuButtonBase.parameters={...MenuButtonBase.parameters,docs:{...MenuButtonBase.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonBaseStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonBaseRaw\n      }\n    }\n  },\n  name: 'MenuButton. Базовый пример.'\n}",...MenuButtonBase.parameters?.docs?.source}}},MenuButtonOptions.parameters={...MenuButtonOptions.parameters,docs:{...MenuButtonOptions.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonOptionsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonOptionsRaw\n      }\n    }\n  },\n  name: 'MenuButton. Задизейбленные и кастомизированные опции и панель с кнопками'\n}",...MenuButtonOptions.parameters?.docs?.source}}},MenuButtonVariants.parameters={...MenuButtonVariants.parameters,docs:{...MenuButtonVariants.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonVariantsStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonVariantsRaw\n      }\n    }\n  },\n  name: 'MenuButton. Размеры и стили.'\n}",...MenuButtonVariants.parameters?.docs?.source}}},MenuButtonIcon.parameters={...MenuButtonIcon.parameters,docs:{...MenuButtonIcon.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonIconStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonIconRaw\n      }\n    }\n  },\n  name: 'MenuButton с иконкой'\n}",...MenuButtonIcon.parameters?.docs?.source}}},MenuButtonWithPanel.parameters={...MenuButtonWithPanel.parameters,docs:{...MenuButtonWithPanel.parameters?.docs,source:{originalSource:"{\n  render: MenuButtonWithPanelStory,\n  parameters: {\n    docs: {\n      source: {\n        code: MenuButtonWithPanelRaw\n      }\n    }\n  },\n  name: 'MenuButton с чекбоксами и нижней панелью в выпадающем меню'\n}",...MenuButtonWithPanel.parameters?.docs?.source}}};const __namedExportsOrder=["MenuButtonBase","MenuButtonOptions","MenuButtonVariants","MenuButtonIcon","MenuButtonWithPanel"]},"./src/components/Menu/MenuActionsPanel.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{q:()=>MenuActionsPanel,x:()=>getHighlightedFilteredOptions});var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_getTextHighlightMeta__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/utils/getTextHighlightMeta.ts"),_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Menu/MenuItem.tsx"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_uid__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/common/uid.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const MenuActionsPanel=styled_components__WEBPACK_IMPORTED_MODULE_2__.default.div.withConfig({displayName:"MenuActionsPanel",componentId:"sc-ssytv1-0"})(["padding:",";",""],(p=>"s"===p.dimension?"10px 12px":"12px 16px"),(p=>p.menuActionsPanelCssMixin)),HighlightText=styled_components__WEBPACK_IMPORTED_MODULE_2__.default.span.withConfig({displayName:"MenuActionsPanel__HighlightText",componentId:"sc-ssytv1-1"})(["color:",";"],(p=>p.theme.color["Primary/Primary 60 Main"])),TextWrapper=styled_components__WEBPACK_IMPORTED_MODULE_2__.default.div.withConfig({displayName:"MenuActionsPanel__TextWrapper",componentId:"sc-ssytv1-2"})(["overflow:hidden;text-overflow:ellipsis;white-space:nowrap;"]),StyledMenuItem=(0,styled_components__WEBPACK_IMPORTED_MODULE_2__.default)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s).withConfig({displayName:"MenuActionsPanel__StyledMenuItem",componentId:"sc-ssytv1-3"})(["color:",";pointer-events:none;&&[data-disabled='true']{background-color:",";color:",";&& *[fill^='#']{fill:",";}}"],(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Special/Elevated BG"]),(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.theme.color["Neutral/Neutral 50"]));function getHighlightedFilteredOptions(options,searchValue="",emptyMessage,dimension,highlightFunction=_src_components_common_utils_getTextHighlightMeta__WEBPACK_IMPORTED_MODULE_4__.k){const model=[];if(options.forEach((option=>{const{shouldHighlight,parts,chunks}=highlightFunction(option.label,searchValue,"wholly"),itemValue=shouldHighlight?parts.map(((part,i)=>chunks.includes(part.toLowerCase())?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(HighlightText,{children:part},i):part)):searchValue?null:option.label;itemValue&&model.push({id:option.id,render:options=>(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_src_components_Menu_MenuItem__WEBPACK_IMPORTED_MODULE_3__.s,{dimension,...options,key:option.id},(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(TextWrapper,{children:itemValue}))})})),0===model.length){const id=(0,_src_components_common_uid__WEBPACK_IMPORTED_MODULE_5__.h)();model.push({id,render:options=>(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(StyledMenuItem,{dimension,...options,key:id},emptyMessage),disabled:!0})}return model}try{MenuActionsPanel.displayName="MenuActionsPanel",MenuActionsPanel.__docgenInfo={description:"",displayName:"MenuActionsPanel",props:{dimension:{defaultValue:null,description:"",name:"dimension",required:!0,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},menuActionsPanelCssMixin:{defaultValue:null,description:"",name:"menuActionsPanelCssMixin",required:!1,type:{name:"FlattenInterpolation<ThemeProps<DefaultTheme>>"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Menu/MenuActionsPanel.tsx#MenuActionsPanel"]={docgenInfo:MenuActionsPanel.__docgenInfo,name:"MenuActionsPanel",path:"src/components/Menu/MenuActionsPanel.tsx#MenuActionsPanel"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/PositionInPortal.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>PositionInPortal});var styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_common_observeRect__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/common/observeRect.ts"),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-dom/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const PositionedPortalContainer=styled_components__WEBPACK_IMPORTED_MODULE_3__.default.div.withConfig({displayName:"PositionInPortal__PositionedPortalContainer",componentId:"sc-e6ntdu-0"})(["pointer-events:none;position:fixed;overflow:visible;z-index:",";"],(({theme})=>theme.zIndex.dropdown)),PositionInPortal=({targetRef,targetElement,rootRef,fullContainerWidth,...props})=>{const positionedPortalContainerRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{const node=positionedPortalContainerRef.current,targetNode=targetRef.current??targetElement;if(node&&targetNode){const observer=(0,_src_components_common_observeRect__WEBPACK_IMPORTED_MODULE_4__.Z)(targetNode,(rect=>{if(rect){const{x,y,height,width}=rect,{style}=node;style.top=`${y}px`,style.left=fullContainerWidth?"0px":`${x}px`,style.height=`${height}px`,style.width=fullContainerWidth?"100%":`${width}px`}}));return observer.observe(),()=>{observer.unobserve()}}}),[targetRef,targetElement,fullContainerWidth]),(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(PositionedPortalContainer,{ref:positionedPortalContainerRef,...props}),rootRef?.current||document.body)};try{PositionedPortalContainer.displayName="PositionedPortalContainer",PositionedPortalContainer.__docgenInfo={description:"",displayName:"PositionedPortalContainer",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PositionInPortal.tsx#PositionedPortalContainer"]={docgenInfo:PositionedPortalContainer.__docgenInfo,name:"PositionedPortalContainer",path:"src/components/PositionInPortal.tsx#PositionedPortalContainer"})}catch(__react_docgen_typescript_loader_error){}try{PositionInPortal.displayName="PositionInPortal",PositionInPortal.__docgenInfo={description:"При фиксированном позиционировании (как у PositionedPortalContainer) элемент позиционируется\nвсегда относительно исходного содержащего блока (окна браузера).\nИсключение, когда один из его предков имеет свойство transform, perspective, или filter,\nустановленное на что-то иное, кроме none, в этом случае этот предок ведет\nсебя как содержащий блок. Тогда top, right, bottom и left элемента рассчитываются относительно этого содержащего блока.\nЕсли у такого предка кроме transform задано свойство overflow: hidden, то элемент будет обрезаться по его краям.\n\nВ связи с вышеописанным в качестве контейнера для портала рекомендуется выбирать элемент, у предков которого нет свойств\ntransform, perspective, или filter отличных от none. Также рекомендуется размещать контейнер портала в самом низу dom-дерева,\nчтобы избежать возможных конфликтов стилей.",displayName:"PositionInPortal",props:{targetRef:{defaultValue:null,description:"Ref на элемент, относительно которого позиционируется портал",name:"targetRef",required:!0,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал",name:"targetElement",required:!1,type:{name:"Element"}},rootRef:{defaultValue:null,description:"Контейнер, внутри которого будет отрисован портал, по умолчанию портал рендерится в document.body",name:"rootRef",required:!1,type:{name:"RefObject<HTMLElement>"}},fullContainerWidth:{defaultValue:null,description:"Отрисовка портала на всю ширину контейнера",name:"fullContainerWidth",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/PositionInPortal.tsx#PositionInPortal"]={docgenInfo:PositionInPortal.__docgenInfo,name:"PositionInPortal",path:"src/components/PositionInPortal.tsx#PositionInPortal"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/T/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>T});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Typography__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Typography/typography.ts"),_src_components_themes__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/themes/common/index.ts"),_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/skeleton/animation.tsx");const skeletonMixin=(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["",";pointer-events:none;"],_src_components_skeleton_animation__WEBPACK_IMPORTED_MODULE_1__.x),T=styled_components__WEBPACK_IMPORTED_MODULE_0__.default.span.withConfig({displayName:"T",componentId:"sc-wgb3t7-0"})(["color:",";",";"," ",""],(({color,theme,skeleton})=>skeleton?"transparent":color?theme.color[color]?theme.color[color]:color:theme.color[_src_components_themes__WEBPACK_IMPORTED_MODULE_2__.rG]),(p=>_src_components_Typography__WEBPACK_IMPORTED_MODULE_3__.c[p.font]),(p=>p.cssMixin?p.cssMixin:""),(p=>p.skeleton&&skeletonMixin));T.displayName="T"},"./src/components/Typography/typography.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>typography,l:()=>TYPOGRAPHY});var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const FONT_FAMILY="'VTB Group UI', sans-serif",TYPOGRAPHY={fontFamily:FONT_FAMILY,fontSize:{12:"12px",14:"14px",16:"16px",18:"18px",22:"22px",28:"28px",32:"32px",36:"36px",42:"42px"},fontWeight:{normal:400,medium:500,bold:600},lineHeight:{16:"16px",20:"20px",24:"24px",28:"28px",36:"36px",40:"40px",44:"44px",52:"52px"}},typography={"Main/XXL":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:42px;line-height:52px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Main/XL":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:36px;line-height:44px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Main/L":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:500;font-size:32px;line-height:40px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Main/M":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:28px;line-height:36px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Main/S":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:20px;line-height:28px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Main/XS-bold":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:18px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Main/XS":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:normal;font-size:18px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Additional/L-bold":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:16px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Additional/L":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:normal;font-size:16px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Additional/M":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:normal;font-size:16px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Additional/S":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:normal;font-size:14px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Additional/S-bold":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:500;font-size:14px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Additional/XS":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:normal;font-size:14px;line-height:16px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Button/M":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:500;font-size:16px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Button/S":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:500;font-size:14px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Caption/XS":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:normal;font-size:12px;line-height:16px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/HL1":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:72px;line-height:80px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/HL2":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:56px;line-height:64px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/HL3":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:48px;line-height:56px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/H1":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:40px;line-height:48px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/H2":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:34px;line-height:40px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/H3":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:28px;line-height:36px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/H4":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:24px;line-height:32px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/H5":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:20px;line-height:28px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Header/H6":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:18px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Subtitle/Subtitle 1":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:400;font-size:18px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Subtitle/Subtitle 2":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:16px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Subtitle/Subtitle 3":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:550;font-size:14px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Body/Body 1 Long":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:400;font-size:16px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Body/Body 1 Short":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:400;font-size:16px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Body/Body 2 Long":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:400;font-size:14px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Body/Body 2 Short":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:400;font-size:14px;line-height:16px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Button/Button 1":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:500;font-size:16px;line-height:24px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Button/Button 2":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:500;font-size:14px;line-height:20px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Caption/Caption 1":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:400;font-size:12px;line-height:16px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY),"Caption/Caption 2":(0,styled_components__WEBPACK_IMPORTED_MODULE_0__.css)(["font-family:",";font-style:normal;font-weight:400;font-size:10px;line-height:12px;font-feature-settings:'tnum' on,'lnum' on;text-rendering:geometricPrecision;"],FONT_FAMILY)}},"./src/components/common/observeRect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>observeRect});const props=["bottom","height","left","right","top","width"],rectChanged=(a={},b={})=>props.some((prop=>a[prop]!==b[prop]));function observeRect(node,cb){const state={};return{observe(){state.rafId&&cancelAnimationFrame(state.rafId);const run=()=>{if(state.isObserving){const{bottom,height,left,right,top,width,x,y}=node.getBoundingClientRect(),newRect={bottom,height,left,right,top,width,x:x||left,y:y||top};rectChanged(newRect,state.rect)&&(state.rect=newRect,cb(state.rect)),state.rafId=requestAnimationFrame(run)}};state.rafId=requestAnimationFrame(run),state.isObserving=!0},unobserve(){state.rafId&&cancelAnimationFrame(state.rafId),state.isObserving&&(state.isObserving=!1)}}}},"./src/components/common/utils/getTextHighlightMeta.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>getTextHighlightMeta});const getTextHighlightMeta=(text="",highlight="",highlightFormat="word")=>{const chunks=("word"===highlightFormat?highlight.split(" "):[highlight]).filter(Boolean).map((chunk=>chunk.toLowerCase())),specialCharacters=[".","?","*","+","-","^","$","[","]","\\","(",")","{","}","|"],pattern=chunks.map((chunk=>`(${chunk.split("").map((letter=>specialCharacters.includes(letter)?`\\${letter}`:letter)).join("")})?`)).join(""),parts=text.split(new RegExp(pattern,"gi")).filter(Boolean);return{shouldHighlight:!highlight||parts.some((part=>chunks.includes(part.toLowerCase()))),parts,chunks}}},"./src/components/common/utils/refSetter.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function refSetter(...refs){return ref=>{refs.forEach((someRef=>{someRef&&("function"==typeof someRef?someRef(ref):someRef.current=ref)}))}}__webpack_require__.d(__webpack_exports__,{O:()=>refSetter})},"./src/components/themes/borderRadius.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c8:()=>mediumGroupBorderRadius,ct:()=>largeGroupBorderRadius,g2:()=>ALL_BORDER_RADIUS_VALUES,pk:()=>smallGroupBorderRadius});const ALL_BORDER_RADIUS_VALUES=["Border radius 0","Border radius 2","Border radius 4","Border radius 6","Border radius 8","Border radius 10"];function smallGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"2px";default:return"4px"}}function mediumGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"2px";case"Border radius 4":default:return"4px";case"Border radius 6":return"6px";case"Border radius 8":return"8px";case"Border radius 10":return"10px"}}function largeGroupBorderRadius(shape){switch(shape.borderRadiusKind){case"Border radius 0":return"0";case"Border radius 2":return"4px";case"Border radius 4":default:return"8px";case"Border radius 6":return"12px";case"Border radius 8":return"16px";case"Border radius 10":return"20px"}}},"./src/components/themes/common/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{lI:()=>MainPrimaryColorName,rG:()=>DefaultFontColorName,sl:()=>DefaultBackgroundColorName});const DefaultFontColorName="Neutral/Neutral 90",DefaultBackgroundColorName="Neutral/Neutral 00",MainPrimaryColorName="Primary/Primary 60 Main"}}]);