"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[5364],{"./src/components/input/SliderInput/stories/SliderInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledExample:()=>ControlledExample,CustomExample:()=>CustomExample,CustomMarkExample:()=>CustomMarkExample,TickmarksExample:()=>TickmarksExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SliderInput_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),SliderInput=__webpack_require__("./src/components/input/SliderInput/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const SliderInputControlledTemplate=args=>{const[slider1,setSlider1]=react.useState(String(args.value)??"");return(0,jsx_runtime.jsx)(styled_components_browser_esm.ThemeProvider,{theme:function swapBorder(theme){return theme.shape.borderRadiusKind=args.themeBorderKind||theme.shape.borderRadiusKind,theme},children:(0,jsx_runtime.jsx)(SliderInput.a,{...args,value:slider1,onChange:(full,short,event)=>{console.log({full,short,event}),setSlider1(event.target.value)}})})};SliderInputControlledTemplate.displayName="SliderInputControlledTemplate";try{SliderInputControlledTemplate.displayName="SliderInputControlledTemplate",SliderInputControlledTemplate.__docgenInfo={description:"",displayName:"SliderInputControlledTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента (fullStr - строка вместе с префиксом/суффиксом/разделителями, shortStr - строка только с числом)",name:"onChange",required:!1,type:{name:"((fullStr: string, shortStr: string, event: ChangeEvent<HTMLInputElement>) => void)"}},minValue:{defaultValue:null,description:"Минимальное значение слайдера",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение слайдера",name:"maxValue",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"Шаг слайдера. Это положительное число, по умолчанию 1.\nЕсли шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},tickMarks:{defaultValue:null,description:"Массив отметок слайдера",name:"tickMarks",required:!1,type:{name:"number[]"}},renderTickMark:{defaultValue:null,description:"Render колбек для отрисовки кастомизированных подписей к отметкам слайдера",name:"renderTickMark",required:!1,type:{name:"((mark: string) => ReactNode)"}},precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:null,description:"разделитель между тысячами",name:"thousand",required:!1,type:{name:"string"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"плейсхолдер",name:"placeholder",required:!1,type:{name:"string"}},wrapperProps:{defaultValue:null,description:"Стандартные html-атрибуты, которые будут переданы wrapper-контейнеру компонента",name:"wrapperProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/SliderInput/stories/SliderInputControlled.template.tsx#SliderInputControlledTemplate"]={docgenInfo:SliderInputControlledTemplate.__docgenInfo,name:"SliderInputControlledTemplate",path:"src/components/input/SliderInput/stories/SliderInputControlled.template.tsx#SliderInputControlledTemplate"})}catch(__react_docgen_typescript_loader_error){}const SliderInputTickMarksTemplate=args=>(0,jsx_runtime.jsx)(styled_components_browser_esm.ThemeProvider,{theme:function swapBorder(theme){return theme.shape.borderRadiusKind=args.themeBorderKind||theme.shape.borderRadiusKind,theme},children:(0,jsx_runtime.jsx)(SliderInput.a,{...args,defaultValue:"15",onChange:(full,short,event)=>console.log({full,short,event}),tickMarks:[5,10,15]})});SliderInputTickMarksTemplate.displayName="SliderInputTickMarksTemplate";try{SliderInputTickMarksTemplate.displayName="SliderInputTickMarksTemplate",SliderInputTickMarksTemplate.__docgenInfo={description:"",displayName:"SliderInputTickMarksTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента (fullStr - строка вместе с префиксом/суффиксом/разделителями, shortStr - строка только с числом)",name:"onChange",required:!1,type:{name:"((fullStr: string, shortStr: string, event: ChangeEvent<HTMLInputElement>) => void)"}},minValue:{defaultValue:null,description:"Минимальное значение слайдера",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение слайдера",name:"maxValue",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"Шаг слайдера. Это положительное число, по умолчанию 1.\nЕсли шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},tickMarks:{defaultValue:null,description:"Массив отметок слайдера",name:"tickMarks",required:!1,type:{name:"number[]"}},renderTickMark:{defaultValue:null,description:"Render колбек для отрисовки кастомизированных подписей к отметкам слайдера",name:"renderTickMark",required:!1,type:{name:"((mark: string) => ReactNode)"}},precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:null,description:"разделитель между тысячами",name:"thousand",required:!1,type:{name:"string"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"плейсхолдер",name:"placeholder",required:!1,type:{name:"string"}},wrapperProps:{defaultValue:null,description:"Стандартные html-атрибуты, которые будут переданы wrapper-контейнеру компонента",name:"wrapperProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/SliderInput/stories/SliderInputTickMarks.template.tsx#SliderInputTickMarksTemplate"]={docgenInfo:SliderInputTickMarksTemplate.__docgenInfo,name:"SliderInputTickMarksTemplate",path:"src/components/input/SliderInput/stories/SliderInputTickMarks.template.tsx#SliderInputTickMarksTemplate"})}catch(__react_docgen_typescript_loader_error){}const SliderInputCustomisedTemplate=args=>(0,jsx_runtime.jsx)(styled_components_browser_esm.ThemeProvider,{theme:function swapBorder(theme){return theme.shape.borderRadiusKind=args.themeBorderKind||theme.shape.borderRadiusKind,theme},children:(0,jsx_runtime.jsx)(SliderInput.a,{...args,defaultValue:"5.000",onChange:(full,short,event)=>console.log({full,short,event}),suffix:"$",thousand:",",precision:3,placeholder:"0.000 $"})});SliderInputCustomisedTemplate.displayName="SliderInputCustomisedTemplate";try{SliderInputCustomisedTemplate.displayName="SliderInputCustomisedTemplate",SliderInputCustomisedTemplate.__docgenInfo={description:"",displayName:"SliderInputCustomisedTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента (fullStr - строка вместе с префиксом/суффиксом/разделителями, shortStr - строка только с числом)",name:"onChange",required:!1,type:{name:"((fullStr: string, shortStr: string, event: ChangeEvent<HTMLInputElement>) => void)"}},minValue:{defaultValue:null,description:"Минимальное значение слайдера",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение слайдера",name:"maxValue",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"Шаг слайдера. Это положительное число, по умолчанию 1.\nЕсли шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},tickMarks:{defaultValue:null,description:"Массив отметок слайдера",name:"tickMarks",required:!1,type:{name:"number[]"}},renderTickMark:{defaultValue:null,description:"Render колбек для отрисовки кастомизированных подписей к отметкам слайдера",name:"renderTickMark",required:!1,type:{name:"((mark: string) => ReactNode)"}},precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:null,description:"разделитель между тысячами",name:"thousand",required:!1,type:{name:"string"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"плейсхолдер",name:"placeholder",required:!1,type:{name:"string"}},wrapperProps:{defaultValue:null,description:"Стандартные html-атрибуты, которые будут переданы wrapper-контейнеру компонента",name:"wrapperProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/SliderInput/stories/SliderInputCustomised.template.tsx#SliderInputCustomisedTemplate"]={docgenInfo:SliderInputCustomisedTemplate.__docgenInfo,name:"SliderInputCustomisedTemplate",path:"src/components/input/SliderInput/stories/SliderInputCustomised.template.tsx#SliderInputCustomisedTemplate"})}catch(__react_docgen_typescript_loader_error){}const SliderInputCustomMarkTemplate=args=>(0,jsx_runtime.jsx)(styled_components_browser_esm.ThemeProvider,{theme:function swapBorder(theme){return theme.shape.borderRadiusKind=args.themeBorderKind||theme.shape.borderRadiusKind,theme},children:(0,jsx_runtime.jsx)(SliderInput.a,{...args,defaultValue:"15 000",onChange:(full,short,event)=>console.log({full,short,event}),renderTickMark:mark=>mark+" ₽",tickMarks:[5e3,1e4,15e3],maxValue:2e4})});SliderInputCustomMarkTemplate.displayName="SliderInputCustomMarkTemplate";try{SliderInputCustomMarkTemplate.displayName="SliderInputCustomMarkTemplate",SliderInputCustomMarkTemplate.__docgenInfo={description:"",displayName:"SliderInputCustomMarkTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента (fullStr - строка вместе с префиксом/суффиксом/разделителями, shortStr - строка только с числом)",name:"onChange",required:!1,type:{name:"((fullStr: string, shortStr: string, event: ChangeEvent<HTMLInputElement>) => void)"}},minValue:{defaultValue:null,description:"Минимальное значение слайдера",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"Максимальное значение слайдера",name:"maxValue",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"Шаг слайдера. Это положительное число, по умолчанию 1.\nЕсли шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},tickMarks:{defaultValue:null,description:"Массив отметок слайдера",name:"tickMarks",required:!1,type:{name:"number[]"}},renderTickMark:{defaultValue:null,description:"Render колбек для отрисовки кастомизированных подписей к отметкам слайдера",name:"renderTickMark",required:!1,type:{name:"((mark: string) => ReactNode)"}},precision:{defaultValue:null,description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:null,description:"разделитель между тысячами",name:"thousand",required:!1,type:{name:"string"}},prefix:{defaultValue:null,description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"плейсхолдер",name:"placeholder",required:!1,type:{name:"string"}},wrapperProps:{defaultValue:null,description:"Стандартные html-атрибуты, которые будут переданы wrapper-контейнеру компонента",name:"wrapperProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/SliderInput/stories/SliderInputCustomMark.template.tsx#SliderInputCustomMarkTemplate"]={docgenInfo:SliderInputCustomMarkTemplate.__docgenInfo,name:"SliderInputCustomMarkTemplate",path:"src/components/input/SliderInput/stories/SliderInputCustomMark.template.tsx#SliderInputCustomMarkTemplate"})}catch(__react_docgen_typescript_loader_error){}const Separator=styled_components_browser_esm.default.div.withConfig({displayName:"SliderInputstories__Separator",componentId:"sc-dwog6v-0"})(["height:20px;"]),Desc=styled_components_browser_esm.default.div.withConfig({displayName:"SliderInputstories__Desc",componentId:"sc-dwog6v-1"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Поле ввода со слайдером позволяет выбирать значение из обозначенного диапазона мышкой. Так же возможен ввод вручную.",(0,jsx_runtime.jsx)(Separator,{}),"Диапазон может быть сплошным либо фиксированным. В диапозон может быть добавлено значение: рубли, доллары и т.п. В таком случае значение подставляется только в поле ввода."]});Description.displayName="Description";const SliderInput_stories={title:"Admiral-2.1/Input/SliderInput",decorators:void 0,component:SliderInput.a,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A61110"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A61184"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A61214"}]},argTypes:{thousand:{control:{type:"text"}},prefix:{control:{type:"text"}},suffix:{control:{type:"text"}},placeholder:{control:{type:"text"}},precision:{type:"number"},step:{type:"number"},minValue:{type:"number"},maxValue:{type:"number"},displayClearIcon:{control:{type:"boolean"}},disableCopying:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},showTooltip:{control:{type:"boolean"}},isLoading:{control:{type:"boolean"}},icons:{control:!1},containerRef:{control:!1},handleInput:{control:!1},tickMarks:{control:!1},wrapperProps:{control:!1},themeBorderKind:{options:borderRadius.g2,control:{type:"radio"}},skeleton:{control:{type:"boolean"}}}},ControlledStory=props=>(0,jsx_runtime.jsx)(SliderInputControlledTemplate,{...props});ControlledStory.displayName="ControlledStory";const ControlledExample={render:ControlledStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { SliderInput } from '@admiral-ds/react-ui';\nimport type { SliderInputProps, Theme } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\n\nexport const SliderInputControlledTemplate = (args: SliderInputProps) => {\n  function swapBorder(theme: Theme): Theme {\n    theme.shape.borderRadiusKind = (args as any).themeBorderKind || theme.shape.borderRadiusKind;\n    return theme;\n  }\n  const [slider1, setSlider1] = React.useState(String(args.value) ?? '');\n\n  return (\n    <ThemeProvider theme={swapBorder}>\n      <SliderInput\n        {...args}\n        value={slider1}\n        onChange={(full, short, event) => {\n          console.log({ full, short, event });\n          setSlider1(event.target.value);\n        }}\n      />\n    </ThemeProvider>\n  );\n};\n"}},description:{story:"В качестве значений параметров value и defaultValue в SliderInput необходимо передавать уже\n      отформатированную строку с разделителями тысяч (суффикс/префикс в value/defaultValue вносить не нужно).\n\nЕсли вы используете \n      контролируемый SliderInput, то в качестве значения value вам досточно указывать event.target.value, где event - это нативное событие \n      инпута, передаваемое к качестве параметра в колбек onChange. Также в колбек onChange передаются параметры fullStr и shortStr, \n      однако в будущем планируется убрать их и оставить только event по аналогии с api стандартного html-инпута.\n\nКроме того, библиотека \n      предоставляет утилиту fitToCurrency, которая возвращает строку отформатированную в денежном формате. В качестве параметров \n      данная утилита принимает value - значение, которое надо отформатировать, а также параметры precision, decimal, thousand. \n      Также библиотека предоставляет утилиту clearValue, которая возвращает входную строку, из которой удалены все символы кроме \n      цифр, символа decimal и минуса."}},name:"SliderInput. Пример контролируемого инпута."},TickMarksStory=props=>(0,jsx_runtime.jsx)(SliderInputTickMarksTemplate,{...props});TickMarksStory.displayName="TickMarksStory";const TickmarksExample={render:TickMarksStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { SliderInput } from '@admiral-ds/react-ui';\nimport type { SliderInputProps, Theme } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\n\nexport const SliderInputTickMarksTemplate = (args: SliderInputProps) => {\n  function swapBorder(theme: Theme): Theme {\n    theme.shape.borderRadiusKind = (args as any).themeBorderKind || theme.shape.borderRadiusKind;\n    return theme;\n  }\n\n  return (\n    <ThemeProvider theme={swapBorder}>\n      <SliderInput\n        {...args}\n        defaultValue=\"15\"\n        onChange={(full, short, event) => console.log({ full, short, event })}\n        tickMarks={[5, 10, 15]}\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"SliderInput. С промежуточными отметками."},CustomStory=props=>(0,jsx_runtime.jsx)(SliderInputCustomisedTemplate,{...props});CustomStory.displayName="CustomStory";const CustomExample={render:CustomStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { SliderInput } from '@admiral-ds/react-ui';\nimport type { SliderInputProps, Theme } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\n\nexport const SliderInputCustomisedTemplate = (args: SliderInputProps) => {\n  function swapBorder(theme: Theme): Theme {\n    theme.shape.borderRadiusKind = (args as any).themeBorderKind || theme.shape.borderRadiusKind;\n    return theme;\n  }\n\n  return (\n    <ThemeProvider theme={swapBorder}>\n      <SliderInput\n        {...args}\n        defaultValue=\"5.000\"\n        onChange={(full, short, event) => console.log({ full, short, event })}\n        suffix=\"$\"\n        thousand=\",\"\n        precision={3}\n        placeholder=\"0.000 $\"\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"SliderInput. Пример изменения настроек (suffix, precision, thousand)."},CustomMarkStory=props=>(0,jsx_runtime.jsx)(SliderInputCustomMarkTemplate,{...props});CustomMarkStory.displayName="CustomMarkStory";const CustomMarkExample={render:CustomMarkStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { SliderInput } from '@admiral-ds/react-ui';\nimport type { SliderInputProps, Theme } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\n\nexport const SliderInputCustomMarkTemplate = (args: SliderInputProps) => {\n  function swapBorder(theme: Theme): Theme {\n    theme.shape.borderRadiusKind = (args as any).themeBorderKind || theme.shape.borderRadiusKind;\n    return theme;\n  }\n\n  return (\n    <ThemeProvider theme={swapBorder}>\n      <SliderInput\n        {...args}\n        defaultValue=\"15 000\"\n        onChange={(full, short, event) => console.log({ full, short, event })}\n        renderTickMark={(mark: string) => mark + ' ₽'}\n        tickMarks={[5000, 10000, 15000]}\n        maxValue={20000}\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"SliderInput. Пример кастомизирования текстовых подписей к отметкам слайдера."};ControlledExample.parameters={...ControlledExample.parameters,docs:{...ControlledExample.parameters?.docs,source:{originalSource:"{\n  render: ControlledStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SliderInputControlledRaw\n      }\n    },\n    description: {\n      story: `В качестве значений параметров value и defaultValue в SliderInput необходимо передавать уже\n      отформатированную строку с разделителями тысяч (суффикс/префикс в value/defaultValue вносить не нужно).\\n\\nЕсли вы используете \n      контролируемый SliderInput, то в качестве значения value вам досточно указывать event.target.value, где event - это нативное событие \n      инпута, передаваемое к качестве параметра в колбек onChange. Также в колбек onChange передаются параметры fullStr и shortStr, \n      однако в будущем планируется убрать их и оставить только event по аналогии с api стандартного html-инпута.\\n\\nКроме того, библиотека \n      предоставляет утилиту fitToCurrency, которая возвращает строку отформатированную в денежном формате. В качестве параметров \n      данная утилита принимает value - значение, которое надо отформатировать, а также параметры precision, decimal, thousand. \n      Также библиотека предоставляет утилиту clearValue, которая возвращает входную строку, из которой удалены все символы кроме \n      цифр, символа decimal и минуса.`\n    }\n  },\n  name: 'SliderInput. Пример контролируемого инпута.'\n}",...ControlledExample.parameters?.docs?.source}}},TickmarksExample.parameters={...TickmarksExample.parameters,docs:{...TickmarksExample.parameters?.docs,source:{originalSource:"{\n  render: TickMarksStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SliderInputTickMarksRaw\n      }\n    }\n  },\n  name: 'SliderInput. С промежуточными отметками.'\n}",...TickmarksExample.parameters?.docs?.source}}},CustomExample.parameters={...CustomExample.parameters,docs:{...CustomExample.parameters?.docs,source:{originalSource:"{\n  render: CustomStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SliderInputCustomisedRaw\n      }\n    }\n  },\n  name: 'SliderInput. Пример изменения настроек (suffix, precision, thousand).'\n}",...CustomExample.parameters?.docs?.source}}},CustomMarkExample.parameters={...CustomMarkExample.parameters,docs:{...CustomMarkExample.parameters?.docs,source:{originalSource:"{\n  render: CustomMarkStory,\n  parameters: {\n    docs: {\n      source: {\n        code: SliderInputCustomMarkRaw\n      }\n    }\n  },\n  name: 'SliderInput. Пример кастомизирования текстовых подписей к отметкам слайдера.'\n}",...CustomMarkExample.parameters?.docs?.source}}};const __namedExportsOrder=["ControlledExample","TickmarksExample","CustomExample","CustomMarkExample"]},"./src/components/Slider/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{i:()=>Slider});var react=__webpack_require__("./node_modules/react/index.js"),keyboardKey=__webpack_require__("./src/components/common/keyboardKey.js"),throttle=__webpack_require__("./src/components/common/utils/throttle.ts");const calcValue=(e,trackRef,minValue,maxValue,step,tickMarks)=>{const trackLeft=trackRef.current?.getBoundingClientRect().left||0,trackWidth=trackRef.current?.getBoundingClientRect().width||0;let cursorPosition=e.changedTouches?e.changedTouches[0].pageX:e.pageX;cursorPosition<=trackLeft&&(cursorPosition=trackLeft),cursorPosition>=trackLeft+trackWidth&&(cursorPosition=trackLeft+trackWidth);let newValue=((trackWidth,sliderPosition,minValue,maxValue,step)=>{let sliderValue=sliderPosition*(trackWidth?(maxValue-minValue)/trackWidth:0);"number"==typeof step&&(!step||step>=1)&&(sliderValue=Math.round(sliderValue));let calcValue=minValue+sliderValue;if(step&&"number"==typeof step&&(calcValue=Math.round(calcValue/step)*step,step.toString().includes("."))){const decimal=step.toString().match(/\.(\d+)/)?.[1].length;calcValue=+calcValue.toFixed(decimal)}return minValue+sliderValue===minValue&&calcValue!==minValue?minValue:minValue+sliderValue===maxValue&&calcValue!==maxValue?maxValue:calcValue})(trackWidth,Math.round(cursorPosition-trackLeft),minValue,maxValue,step);return tickMarks&&(newValue=((ranges,value,minValue,maxValue)=>{const fullRangePoints=[...ranges.map((elem=>elem)),minValue,maxValue].sort(((a,b)=>a-b)),closestRight=Math.min(...fullRangePoints.filter((v=>v>=value))),closestLeft=Math.max(...fullRangePoints.filter((v=>v<=value)));return closestRight-value<=value-closestLeft?closestRight:closestLeft})(tickMarks,newValue,minValue,maxValue)),newValue};var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),animation=__webpack_require__("./src/components/skeleton/animation.tsx");const Wrapper=styled_components_browser_esm.default.div.withConfig({displayName:"style__Wrapper",componentId:"sc-tqten7-0"})(["position:relative;-webkit-tap-highlight-color:transparent;"]),skeletonMixin=(0,styled_components_browser_esm.css)(["",";pointer-events:none;& > *{visibility:hidden;}"],animation.x),TrackWrapper=styled_components_browser_esm.default.div.withConfig({displayName:"style__TrackWrapper",componentId:"sc-tqten7-1"})(["position:relative;box-sizing:border-box;width:100%;cursor:pointer;display:flex;align-items:center;height:","px;padding-bottom:20px;[data-disabled='true'] &&{pointer-events:none;cursor:auto;}","};"],(({dimension})=>"m"===dimension?36:40),(({skeleton})=>skeleton&&skeletonMixin)),Track=styled_components_browser_esm.default.div.withConfig({displayName:"style__Track",componentId:"sc-tqten7-2"})(["height:2px;background:",";[data-disabled='true'] &&{background:",";}width:100%;"],(({theme})=>theme.color["Neutral/Neutral 20"]),(({theme})=>theme.color["Neutral/Neutral 20"])),DefaultTrack=styled_components_browser_esm.default.div.withConfig({displayName:"style__DefaultTrack",componentId:"sc-tqten7-3"})(["height:2px;transform:translateY(-50%);"]),FilledTrack=styled_components_browser_esm.default.div.withConfig({displayName:"style__FilledTrack",componentId:"sc-tqten7-4"})(["display:block;[data-disabled='true'] &&{background:",";}position:absolute;height:2px;width:0%;background-color:",";transition:",";"],(({theme})=>theme.color["Neutral/Neutral 30"]),(({theme})=>theme.color["Primary/Primary 60 Main"]),(({animation})=>animation?"all  ease-in 0.3s":"none")),Thumb=styled_components_browser_esm.default.div.withConfig({displayName:"style__Thumb",componentId:"sc-tqten7-5"})(["position:absolute;width:","px;height:","px;align-items:center;justify-content:center;transform:translateX(-50%) translateY(-50%);border-radius:50%;top:2px;left:0;transition:",";"],(({dimension})=>"m"===dimension?16:20),(({dimension})=>"m"===dimension?16:20),(({animation})=>animation?"all  ease-in 0.3s":"none")),ThumbCircle=styled_components_browser_esm.default.div.withConfig({displayName:"style__ThumbCircle",componentId:"sc-tqten7-6"})(["position:relative;height:","px;width:","px;background:",";border-radius:50%;&:before{position:absolute;content:'';height:","px;width:","px;background:",";top:","px;bottom:","px;left:","px;right:","px;border-radius:50%;}&:hover{background:",";}&:active{background:",";}[data-disabled='true'] &&{background:",";pointer-events:none;&:hover,&:active{background:",";}}"],(({dimension})=>"m"===dimension?16:20),(({dimension})=>"m"===dimension?16:20),(({theme})=>theme.color["Primary/Primary 60 Main"]),(({dimension})=>"m"===dimension?6:8),(({dimension})=>"m"===dimension?6:8),(({theme})=>theme.color["Special/Static White"]),(({dimension})=>"m"===dimension?5:6),(({dimension})=>"m"===dimension?5:6),(({dimension})=>"m"===dimension?5:6),(({dimension})=>"m"===dimension?5:6),(({theme})=>theme.color["Primary/Primary 70"]),(({theme})=>theme.color["Primary/Primary 70"]),(({theme})=>theme.color["Neutral/Neutral 30"]),(({theme})=>theme.color["Neutral/Neutral 30"]));var typography=__webpack_require__("./src/components/Typography/typography.ts"),utils=__webpack_require__("./src/components/input/NumberInput/utils.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TickMarks_Wrapper=styled_components_browser_esm.default.div.withConfig({displayName:"TickMarks__Wrapper",componentId:"sc-cx5qzt-0"})(["position:absolute;left:","%;display:flex;align-items:center;justify-content:center;user-select:none;"],(({position})=>position)),Content=styled_components_browser_esm.default.div.withConfig({displayName:"TickMarks__Content",componentId:"sc-cx5qzt-1"})(["display:flex;align-items:center;position:absolute;top:16px;[data-dimension='m'] &&{top:14px;}white-space:nowrap;"," color:",";&:hover{color:",";}&:active{color:",";}[data-disabled='true'] &&{color:",";}"],typography.c["Body/Body 2 Short"],(({theme})=>theme.color["Neutral/Neutral 90"]),(({theme})=>theme.color["Primary/Primary 70"]),(({theme})=>theme.color["Primary/Primary 70"]),(({theme})=>theme.color["Neutral/Neutral 30"])),TickMarks=({minValue,maxValue,decimal=".",precision=2,thousand=" ",tickMarks,onPointClick,renderTickMark})=>{const items=tickMarks.filter((d=>d>=minValue&&d<=maxValue)),range=maxValue-minValue;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:items.map(((value,index)=>{const key=value.toString()+index,position=(value-minValue)/range*100;let style={};return style=0===index?{left:0}:style,style=index===tickMarks.length-1?{right:0}:style,(0,jsx_runtime.jsx)(TickMarks_Wrapper,{position,onMouseDown:e=>{onPointClick(e,value)},children:(0,jsx_runtime.jsx)(Content,{style,children:renderTickMark?renderTickMark((0,utils.lT)(value,precision,decimal,thousand)):(0,utils.lT)(value,precision,decimal,thousand)})},key)}))})};try{Content.displayName="Content",Content.__docgenInfo={description:"",displayName:"Content",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Slider/TickMarks.tsx#Content"]={docgenInfo:Content.__docgenInfo,name:"Content",path:"src/components/Slider/TickMarks.tsx#Content"})}catch(__react_docgen_typescript_loader_error){}try{TickMarks.displayName="TickMarks",TickMarks.__docgenInfo={description:"",displayName:"TickMarks",props:{minValue:{defaultValue:null,description:"",name:"minValue",required:!0,type:{name:"number"}},maxValue:{defaultValue:null,description:"",name:"maxValue",required:!0,type:{name:"number"}},decimal:{defaultValue:{value:"."},description:"",name:"decimal",required:!1,type:{name:"string"}},precision:{defaultValue:{value:"2"},description:"",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:{value:""},description:"",name:"thousand",required:!1,type:{name:"string"}},tickMarks:{defaultValue:null,description:"",name:"tickMarks",required:!0,type:{name:"number[]"}},onPointClick:{defaultValue:null,description:"",name:"onPointClick",required:!0,type:{name:"(e: any, value: number) => void"}},renderTickMark:{defaultValue:null,description:"",name:"renderTickMark",required:!1,type:{name:"((mark: string) => ReactNode)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Slider/TickMarks.tsx#TickMarks"]={docgenInfo:TickMarks.__docgenInfo,name:"TickMarks",path:"src/components/Slider/TickMarks.tsx#TickMarks"})}catch(__react_docgen_typescript_loader_error){}const Slider=({minValue=0,maxValue=20,decimal=".",precision=2,thousand=" ",value=0,onChange,renderTickMark,tickMarks:points,disabled=!1,step:userStep=1,dimension="xl",skeleton=!1,...props})=>{const tickMarks=Array.isArray(points)?points:void 0,step="number"==typeof userStep&&userStep>0||"any"===userStep?userStep:1,[isDraging,setDrag]=react.useState(!1),[animation,setAnimation]=react.useState(!0),[rangeWidth,setRangeWidth]=react.useState(0),filledRef=react.useRef(null),trackRef=react.useRef(null),sliderRef=react.useRef(null);react.useLayoutEffect((()=>{let newValue=value;if(newValue<minValue&&(newValue=minValue),newValue>maxValue&&(newValue=maxValue),step&&"any"!==step&&(newValue=Math.round(newValue/step)*step,step.toString().includes("."))){const decimal=step.toString().match(/\.(\d+)/)?.[1].length;newValue=+newValue.toFixed(decimal)}!function correctSliderPosition(value){let calcPercents=(rangeWidth?rangeWidth/(maxValue-minValue):0)*(value>=0?value-minValue:-minValue+value)/rangeWidth*100;calcPercents=calcPercents>100?100:calcPercents,calcPercents=calcPercents<0?0:calcPercents;const sliderCoords=String(value)?calcPercents:0;sliderRef.current&&filledRef.current&&(sliderRef.current.style.left=`${sliderCoords}%`,filledRef.current.style.width=`${sliderCoords}%`)}(newValue)}),[value,minValue,maxValue,step,rangeWidth]),react.useLayoutEffect((()=>{if(trackRef.current){const resizeObserver=new ResizeObserver((entries=>{entries.forEach((entry=>setRangeWidth(entry.contentRect.width||0)))}));return resizeObserver.observe(trackRef.current),()=>{resizeObserver.disconnect()}}}),[setRangeWidth]);const[handleMouseMove,freeResources]=(0,throttle.P)((e=>{const newValue=calcValue(e,trackRef,minValue,maxValue,step,void 0);newValue!==value&&(onChange(e,newValue),setAnimation(!1))}),50);react.useEffect((()=>(isDraging&&!disabled&&(document.addEventListener("mousemove",handleMouseMove),document.addEventListener("mouseup",handleMouseUp),document.addEventListener("touchmove",handleMouseMove),document.addEventListener("touchend",handleMouseUp),document.addEventListener("touchcancel",handleMouseUp)),()=>{freeResources(),document.removeEventListener("mousemove",handleMouseMove),document.removeEventListener("mouseup",handleMouseUp),document.removeEventListener("touchmove",handleMouseMove),document.removeEventListener("touchend",handleMouseUp),document.removeEventListener("touchcancel",handleMouseUp)})));const onSliderClick=e=>{e.stopPropagation(),"mousedown"===e.type?props.onMouseDown?.(e):props.onTouchStart?.(e),setDrag(!0),setAnimation(!0)},onTrackClick=e=>{setAnimation(!0),tickMarks||setDrag(!0);const newValue=calcValue(e,trackRef,minValue,maxValue,step,tickMarks);newValue!==value&&onChange(e,newValue)},handleMouseUp=e=>{setDrag(!1),setAnimation(!0);const newValue=calcValue(e,trackRef,minValue,maxValue,step,tickMarks);newValue!==value&&onChange(e,newValue)};return(0,jsx_runtime.jsx)(Wrapper,{"data-disabled":disabled,...props,children:(0,jsx_runtime.jsx)(TrackWrapper,{dimension,skeleton,onTouchStart:onTrackClick,onMouseDown:onTrackClick,children:(0,jsx_runtime.jsxs)(Track,{children:[(0,jsx_runtime.jsx)(FilledTrack,{ref:filledRef,animation}),(0,jsx_runtime.jsxs)(DefaultTrack,{ref:trackRef,children:[(0,jsx_runtime.jsx)(TickMarks,{tickMarks:tickMarks?[minValue,...tickMarks,maxValue]:[minValue,maxValue],minValue,maxValue,decimal,precision,thousand,onPointClick:(e,newValue)=>{e.stopPropagation(),props.onMouseDown?.(e),setAnimation(!0),newValue!==value&&onChange(e,newValue)},renderTickMark}),(0,jsx_runtime.jsx)(Thumb,{ref:sliderRef,animation,dimension,role:"slider",tabIndex:disabled?-1:0,"aria-valuenow":value,"aria-valuemin":minValue,"aria-valuemax":maxValue,onKeyDown:e=>{switch(keyboardKey.y.getCode(e)){case keyboardKey.y.ArrowLeft:setAnimation(!0),"any"!==step&&value-step>=minValue&&value-step!==value&&onChange(e,value-step),e.preventDefault();break;case keyboardKey.y.ArrowRight:setAnimation(!0),"any"!==step&&value+step<=maxValue&&value+step!==value&&onChange(e,value+step),e.preventDefault()}},children:(0,jsx_runtime.jsx)(ThumbCircle,{dimension,onTouchStart:onSliderClick,onMouseDown:onSliderClick})})]})]})})})};Slider.displayName="Slider",Slider.displayName="Slider";try{Slider.displayName="Slider",Slider.__docgenInfo={description:"",displayName:"Slider",props:{value:{defaultValue:{value:"0"},description:"Значение компонента",name:"value",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Коллбек на изменение состояния",name:"onChange",required:!0,type:{name:"(event: any, value: number) => void"}},minValue:{defaultValue:{value:"0"},description:"Минимальное значение",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:{value:"20"},description:"Максимальное значение",name:"maxValue",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"Шаг слайдера. Это либо строка any, либо положительное число, по умолчанию 1.\nЕсли этот параметр не установлен в any, компонент принимает только кратные step значения, в диапазоне minValue - maxValue",name:"step",required:!1,type:{name:'number | "any"'}},decimal:{defaultValue:{value:"."},description:"Символ разделителя между целым и десятичным числом, используется при форматировании надписей к отметкам слайдера",name:"decimal",required:!1,type:{name:"string"}},precision:{defaultValue:{value:"2"},description:"Точность (количество знаков в десятичной части числа), используется при форматировании надписей к отметкам слайдера",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:{value:""},description:"Символ разделителя между тысячами, используется при форматировании надписей к отметкам слайдера",name:"thousand",required:!1,type:{name:"string"}},tickMarks:{defaultValue:null,description:"Массив отметок",name:"tickMarks",required:!1,type:{name:"number[]"}},renderTickMark:{defaultValue:null,description:"Render колбек для отрисовки кастомизированных подписей к отметкам слайдера",name:"renderTickMark",required:!1,type:{name:"((mark: string) => ReactNode)"}},disabled:{defaultValue:{value:"false"},description:"Отключение компонента",name:"disabled",required:!1,type:{name:"boolean"}},dimension:{defaultValue:{value:"xl"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"xl"'}]}},skeleton:{defaultValue:{value:"false"},description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Slider/index.tsx#Slider"]={docgenInfo:Slider.__docgenInfo,name:"Slider",path:"src/components/Slider/index.tsx#Slider"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/common/utils/throttle.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>throttle});const throttle=(fn,delay)=>{let timeout,wait=!1,cancelled=!1;return[(...args)=>{if(cancelled)return;if(wait)return;const val=fn(...args);return wait=!0,timeout=window.setTimeout((()=>{wait=!1}),delay),val},()=>{cancelled=!0,clearTimeout(timeout)}]}},"./src/components/input/SliderInput/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>SliderInput});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_Slider__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Slider/index.tsx"),_src_components_input_NumberInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/input/NumberInput/index.tsx"),_src_components_input_NumberInput_utils__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/input/NumberInput/utils.ts"),_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/themes/borderRadius.ts"),_src_components_common_dom_changeInputData__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/common/dom/changeInputData.ts"),_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/common/utils/refSetter.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Wrapper=styled_components__WEBPACK_IMPORTED_MODULE_3__.default.div.withConfig({displayName:"SliderInput__Wrapper",componentId:"sc-i249os-0"})(["position:relative;padding-bottom:","px;"],(({dimension})=>"xl"===dimension?30:28)),Slider=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.default)(_src_components_Slider__WEBPACK_IMPORTED_MODULE_4__.i).withConfig({displayName:"SliderInput__Slider",componentId:"sc-i249os-1"})(["& > div{position:absolute;top:-11px;[data-dimension='m'] &{top:-9px;}[data-dimension='s'] &{top:-9px;}}"]),Input=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.default)(_src_components_input_NumberInput__WEBPACK_IMPORTED_MODULE_5__.Y2).withConfig({displayName:"SliderInput__Input",componentId:"sc-i249os-2"})(["border-radius:",";"],(p=>p.skeleton?0:function sliderBorderRadius(shape){const value=(0,_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_2__.c8)(shape);return`${value} ${value} 0 0`}(p.theme.shape))),SliderInput=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({defaultValue="",value,onChange,renderTickMark,minValue=0,maxValue=20,step=1,tickMarks,dimension="xl",precision=0,thousand=" ",prefix="",suffix="₽",placeholder="0 ₽",disabled,wrapperProps,skeleton=!1,...props},ref)=>{const sliderDimension="xl"===dimension?dimension:"m",[inputValue,setInputValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),[sliderValue,setSliderValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(minValue),[controlled,setControlled]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),inputRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{void 0!==value?(setControlled(!0),setInputValue((0,_src_components_input_NumberInput_utils__WEBPACK_IMPORTED_MODULE_6__.lT)(String(value),precision,".",thousand,!0)),setSliderValue(+(0,_src_components_input_NumberInput_utils__WEBPACK_IMPORTED_MODULE_6__.EU)(String(value),precision,"."))):(setControlled(!1),setInputValue((0,_src_components_input_NumberInput_utils__WEBPACK_IMPORTED_MODULE_6__.lT)(String(defaultValue||""),precision,".",thousand,!0)),setSliderValue(+(0,_src_components_input_NumberInput_utils__WEBPACK_IMPORTED_MODULE_6__.EU)(String(defaultValue||""),precision,".")))}),[defaultValue,value]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(Wrapper,{"data-dimension":dimension,dimension,...wrapperProps,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Input,{...props,ref:(0,_src_components_common_utils_refSetter__WEBPACK_IMPORTED_MODULE_8__.O)(ref,inputRef),value:inputValue,onChange:event=>{const suffixPart=suffix?" "+suffix:"",full=(prefix?prefix+" ":"")+event.target.value+suffixPart,short=(0,_src_components_input_NumberInput_utils__WEBPACK_IMPORTED_MODULE_6__.EU)(event.target.value,precision,".",minValue);controlled||(setInputValue(event.target.value),setSliderValue(+short)),onChange?.(full,short,event)},onBlur:props.onBlur,dimension,disabled,precision,decimal:".",thousand,prefix,suffix,placeholder,step,displayPlusMinusIcons:!1,minValue,maxValue,skeleton}),!skeleton&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Slider,{"aria-hidden":!0,value:sliderValue,onChange:(e,value)=>{const newValue=(0,_src_components_input_NumberInput_utils__WEBPACK_IMPORTED_MODULE_6__.lT)(value,precision,".",thousand,!0);inputRef.current&&(0,_src_components_common_dom_changeInputData__WEBPACK_IMPORTED_MODULE_7__.j)(inputRef.current,{value:newValue})},onMouseDown:e=>{e.preventDefault()},renderTickMark,minValue,maxValue,decimal:".",precision,thousand,tickMarks,step,disabled:disabled||props.readOnly,dimension:sliderDimension})]})}));SliderInput.displayName="SliderInput";try{SliderInput.displayName="SliderInput",SliderInput.__docgenInfo={description:"",displayName:"SliderInput",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента (fullStr - строка вместе с префиксом/суффиксом/разделителями, shortStr - строка только с числом)",name:"onChange",required:!1,type:{name:"((fullStr: string, shortStr: string, event: ChangeEvent<HTMLInputElement>) => void)"}},minValue:{defaultValue:{value:"0"},description:"Минимальное значение слайдера",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:{value:"20"},description:"Максимальное значение слайдера",name:"maxValue",required:!1,type:{name:"number"}},step:{defaultValue:{value:"1"},description:"Шаг слайдера. Это положительное число, по умолчанию 1.\nЕсли шаг - это дробное число, то количество знаков в десятичной части step должно быть равно precision",name:"step",required:!1,type:{name:"number"}},tickMarks:{defaultValue:null,description:"Массив отметок слайдера",name:"tickMarks",required:!1,type:{name:"number[]"}},renderTickMark:{defaultValue:null,description:"Render колбек для отрисовки кастомизированных подписей к отметкам слайдера",name:"renderTickMark",required:!1,type:{name:"((mark: string) => ReactNode)"}},precision:{defaultValue:{value:"0"},description:"точность (количество знаков после точки). Если precision равно 0, то точку ввести нельзя, только целые числа",name:"precision",required:!1,type:{name:"number"}},thousand:{defaultValue:{value:""},description:"разделитель между тысячами",name:"thousand",required:!1,type:{name:"string"}},prefix:{defaultValue:{value:""},description:"префикс (строка, которая выводится перед числовым значением)",name:"prefix",required:!1,type:{name:"string"}},suffix:{defaultValue:{value:"₽"},description:"суффикс (строка, которая выводится после числового значения)",name:"suffix",required:!1,type:{name:"string"}},placeholder:{defaultValue:{value:"0 ₽"},description:"плейсхолдер",name:"placeholder",required:!1,type:{name:"string"}},wrapperProps:{defaultValue:null,description:"Стандартные html-атрибуты, которые будут переданы wrapper-контейнеру компонента",name:"wrapperProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement>"}},dimension:{defaultValue:{value:"xl"},description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},skeleton:{defaultValue:{value:"false"},description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/SliderInput/index.tsx#SliderInput"]={docgenInfo:SliderInput.__docgenInfo,name:"SliderInput",path:"src/components/input/SliderInput/index.tsx#SliderInput"})}catch(__react_docgen_typescript_loader_error){}}}]);