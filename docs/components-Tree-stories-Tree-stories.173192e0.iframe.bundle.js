"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[1305],{"./src/components/Tree/stories/Tree.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo1_Tree:()=>Demo1_Tree,Demo2_Tree:()=>Demo2_Tree,TreeUncontrolledExample:()=>TreeUncontrolledExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tree_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"Tree__Wrapper",componentId:"sc-hxah65-0"})(["display:flex;flex-direction:column;width:768px;"]),itemHasChildren=item=>!!item.children&&Array.isArray(item.children)&&item.children.length>0,treeToMap=(tree,level=0,indent=0,dependencies)=>{const levelHasChildren=tree.some((item=>itemHasChildren(item)));return tree.reduce(((acc,item)=>{const key=item.id.toString(),selfIndent=levelHasChildren&&itemHasChildren(item)?indent:indent+1;if(acc[key]={level,indent:selfIndent,node:item},dependencies&&!itemHasChildren(item)&&dependencies.forEach((dependency=>dependency.push(key))),item.children&&itemHasChildren(item)){const allDependencies=dependencies?[...dependencies]:[],itemDependencies=[];acc[key].dependencies=itemDependencies,allDependencies.push(itemDependencies);const map=treeToMap(item.children,level+1,indent+1,allDependencies);return{...acc,...map}}return acc}),{})},Tree=(0,react.forwardRef)((({dimension="m",model,defaultModel,withCheckbox=!0,selected,defaultSelected,active,onActivateItem,onSelectItem,onChange,onMouseLeave,...props},ref)=>{const isControlled=void 0!==model,[internalModel,setInternalModel]=(0,react.useState)([...defaultModel??[]]),[selectedState,setSelectedState]=(0,react.useState)(defaultSelected),modelObject=void 0===model?internalModel:model,selectedId=void 0===selected?selectedState:selected;(0,react.useEffect)((()=>{model&&setInternalModel([...model])}),[model]);const map=(0,react.useMemo)((()=>treeToMap(isControlled?model:internalModel)),[modelObject]),setChecked=(id,value)=>{map[id].node.disabled||(map[id].node.checked=value,map[id].dependencies?.length&&map[id].dependencies?.forEach((depId=>setChecked(depId,value))))},toggleCheck=id=>{const hasChildren=itemHasChildren(map[id].node),indeterminate=map[id].dependencies?.some((depId=>map[depId].node.checked))&&map[id].dependencies?.some((depId=>!map[depId].node.checked)),checked=hasChildren?!!indeterminate||map[id].dependencies?.every((depId=>map[depId].node.checked)):map[id].node.checked;setChecked(id,!checked),onChange?onChange([...internalModel]):setInternalModel([...internalModel])},renderChildren=items=>items.map((item=>{const node=map[item.id],hasChildren=itemHasChildren(item),indeterminate=node.dependencies?.some((depId=>map[depId].node.checked))&&node.dependencies?.some((depId=>!map[depId].node.checked)),checked=hasChildren?node.dependencies?.every((depId=>map[depId].node.checked)):!!item.checked;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[item.render({checked,indeterminate,hasChildren,level:node.level,indent:node.indent,disabled:item.disabled,dimension,expanded:item.expanded,checkboxVisible:withCheckbox,hovered:void 0!==active?active===item.id:void 0,selected:selectedId===item.id,onHover:()=>{onActivateItem?.(item.disabled?null:item.id)},onClick:()=>{return id=item.id,withCheckbox&&id&&toggleCheck(id),selectedId!==id&&setSelectedState(id),void onSelectItem?.(id);var id},onToggleExpand:()=>{return id=item.id,map[id].node.expanded=!map[id].node.expanded,onChange?onChange([...internalModel]):setInternalModel([...internalModel]),void(selectedId!==id&&setSelectedState(id));var id}}),item.children&&hasChildren&&item.expanded&&renderChildren(item.children)]},item.id)}));return(0,jsx_runtime.jsx)(Wrapper,{ref,...props,onMouseLeave:e=>{onActivateItem?.(null),onMouseLeave?.(e)},children:renderChildren(modelObject)})}));try{Tree.displayName="Tree",Tree.__docgenInfo={description:"",displayName:"Tree",props:{dimension:{defaultValue:{value:"m"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},active:{defaultValue:null,description:"Активная секция Tree",name:"active",required:!1,type:{name:"string | null"}},selected:{defaultValue:null,description:"выбранная секция Tree",name:"selected",required:!1,type:{name:"string | null"}},defaultSelected:{defaultValue:null,description:"выбранная по умолчанию секция Tree",name:"defaultSelected",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onActivateItem",required:!1,type:{name:"((id: string | null) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onSelectItem",required:!1,type:{name:"((id: string | null) => void)"}},onChange:{defaultValue:null,description:"Обработчик изменения данных дерева",name:"onChange",required:!1,type:{name:"((model: TreeItemProps[]) => void)"}},model:{defaultValue:null,description:"Модель данных, с рендер-пропсами",name:"model",required:!1,type:{name:"TreeItemProps[]"}},defaultModel:{defaultValue:null,description:"Модель данных, с рендер-пропсами по-умолчанию для неконтролируемого состояния",name:"defaultModel",required:!1,type:{name:"TreeItemProps[]"}},withCheckbox:{defaultValue:{value:"true"},description:"Признак того, что дерево содержит checkbox-ы",name:"withCheckbox",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tree/index.tsx#Tree"]={docgenInfo:Tree.__docgenInfo,name:"Tree",path:"src/components/Tree/index.tsx#Tree"})}catch(__react_docgen_typescript_loader_error){}try{TreeNode.displayName="TreeNode",TreeNode.__docgenInfo={description:"",displayName:"TreeNode",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: boolean) => void)"}},dimension:{defaultValue:{value:"m"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},selected:{defaultValue:null,description:"Активная секция Tree",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Акцентная секция Tree",name:"hovered",required:!1,type:{name:"boolean"}},checkboxVisible:{defaultValue:null,description:"Признак отображения checkbox-а",name:"checkboxVisible",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Отключение секции",name:"disabled",required:!1,type:{name:"boolean"}},checked:{defaultValue:null,description:"Значение checkbox-а",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"Неопределенное состояние checkbox-а",name:"indeterminate",required:!1,type:{name:"boolean"}},level:{defaultValue:null,description:"@deprecated Используйте indent\nУровень дерева item-а",name:"level",required:!1,type:{name:"number"}},indent:{defaultValue:null,description:"Отступ item-а",name:"indent",required:!1,type:{name:"number"}},hasChildren:{defaultValue:null,description:"Наличие дочерних элемнтов у item-а",name:"hasChildren",required:!1,type:{name:"boolean"}},expanded:{defaultValue:null,description:"Признак развернутого состояния item-а",name:"expanded",required:!1,type:{name:"boolean"}},onHover:{defaultValue:null,description:"Обработчик наведения мыши на item",name:"onHover",required:!1,type:{name:"(() => void)"}},onToggleExpand:{defaultValue:null,description:"обработчик изменения состояния открытости узла",name:"onToggleExpand",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tree/index.tsx#TreeNode"]={docgenInfo:TreeNode.__docgenInfo,name:"TreeNode",path:"src/components/Tree/index.tsx#TreeNode"})}catch(__react_docgen_typescript_loader_error){}var typography=__webpack_require__("./src/components/Typography/typography.ts"),CheckboxField=__webpack_require__("./src/components/form/CheckboxField/index.tsx"),ChevronRightOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/ChevronRightOutline.svg"),IconPlacement=__webpack_require__("./src/components/IconPlacement/index.tsx");const Chevron=(0,styled_components_browser_esm.Ay)(ChevronRightOutline.h).withConfig({displayName:"TreeNode__Chevron",componentId:"sc-1z0clmr-0"})(["transition:all 0.3s;& path{fill:",";}width:100%;height:100%;transform:",";"],(p=>p.theme.color["Neutral/Neutral 50"]),(p=>p.$isOpened?"rotate(90deg)":"rotate(0deg)")),StyledIconPlacement=(0,styled_components_browser_esm.Ay)(IconPlacement._).withConfig({displayName:"TreeNode__StyledIconPlacement",componentId:"sc-1z0clmr-1"})(["flex-shrink:0;margin:0 16px 0 0;"]),backgroundColor=(0,styled_components_browser_esm.AH)(["background:",";"],(({theme,$selected,$hovered})=>$hovered?theme.color["Opacity/Hover"]:$selected?theme.color["Opacity/Focus"]:theme.color["Special/Elevated BG"])),RowWrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"TreeNode__RowWrapper",componentId:"sc-1z0clmr-2"})(["color:",";",";display:flex;align-items:flex-start;box-sizing:border-box;min-height:",";",";cursor:",";padding:",";"],(p=>p.theme.color["Neutral/Neutral 90"]),(p=>"m"===p.$dimension?typography.Il["Body/Body 1 Short"]:typography.Il["Body/Body 2 Short"]),(({$dimension})=>"m"===$dimension?"40px":"32px"),backgroundColor,(p=>p.disabled?"default":"pointer"),(p=>"m"===p.$dimension?`8px 16px 8px ${16+40*(p.$indent||0)}px`:`6px 16px 6px ${16+36*(p.$indent||0)}px`)),IconWrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"TreeNode__IconWrapper",componentId:"sc-1z0clmr-3"})(["margin-right:8px;flex-shrink:0;width:",";height:",";> svg{width:100%;height:100%;fill:",";}"],(p=>"m"===p.$dimension?"24px":"20px"),(p=>"m"===p.$dimension?"24px":"20px"),(({theme})=>theme.color["Neutral/Neutral 50"])),StyledCheckbox=(0,styled_components_browser_esm.Ay)(CheckboxField.Y).withConfig({displayName:"TreeNode__StyledCheckbox",componentId:"sc-1z0clmr-4"})(["margin-right:8px;flex-shrink:0;"]),TitleContent=styled_components_browser_esm.Ay.div.withConfig({displayName:"TreeNode__TitleContent",componentId:"sc-1z0clmr-5"})(["padding-top:2px;"]),TreeNode_TreeNode=({dimension="m",label,icon,checkboxVisible,hasChildren,selected,hovered,disabled,expanded,checked,indeterminate,indent,level,onChange,onHover,onClick,onToggleExpand,children,className,style,...props})=>{const Icon=icon||null,[mouseOnChevron,setMouseOnChevron]=(0,react.useState)(!1),chevronRef=(0,react.useRef)(null),rowRef=(0,react.useRef)(null),[hoveredState,setHoveredState]=(0,react.useState)(!1),hoveredValue=hovered??hoveredState;return(0,jsx_runtime.jsxs)(RowWrapper,{ref:rowRef,className,style,$dimension:dimension,$indent:indent,onMouseMove:e=>{onHover?.(),hoveredState||setHoveredState(!0),props.onMouseMove?.(e)},onMouseLeave:e=>{setHoveredState(!1),props.onMouseLeave?.(e)},onClick:e=>{e.target!==chevronRef.current&&(disabled||onClick?.(e))},$selected:selected,$hovered:hoveredValue,disabled,children:[hasChildren&&(0,jsx_runtime.jsx)(StyledIconPlacement,{ref:chevronRef,dimension:"m"===dimension?"lBig":"mBig",highlightFocus:!1,onClick:onToggleExpand,onMouseMove:()=>{!mouseOnChevron&&hasChildren&&setMouseOnChevron(!0)},onMouseLeave:()=>{hasChildren&&setMouseOnChevron(!1)},children:(0,jsx_runtime.jsx)(Chevron,{$isOpened:expanded,"aria-hidden":!0})}),checkboxVisible&&(0,jsx_runtime.jsx)(StyledCheckbox,{...props,hovered:!mouseOnChevron&&hoveredValue,dimension,disabled,checked,indeterminate,onChange:e=>{onChange?.(e.target.checked)}}),Icon&&(0,jsx_runtime.jsx)(IconWrapper,{$dimension:dimension,children:(0,jsx_runtime.jsx)(Icon,{})}),label&&(0,jsx_runtime.jsx)(TitleContent,{children:label}),children]})};TreeNode_TreeNode.displayName="TreeNode";try{TreeNode_TreeNode.displayName="TreeNode",TreeNode_TreeNode.__docgenInfo={description:"",displayName:"TreeNode",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: boolean) => void)"}},dimension:{defaultValue:{value:"m"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},selected:{defaultValue:null,description:"Активная секция Tree",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Акцентная секция Tree",name:"hovered",required:!1,type:{name:"boolean"}},checkboxVisible:{defaultValue:null,description:"Признак отображения checkbox-а",name:"checkboxVisible",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Отключение секции",name:"disabled",required:!1,type:{name:"boolean"}},checked:{defaultValue:null,description:"Значение checkbox-а",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"Неопределенное состояние checkbox-а",name:"indeterminate",required:!1,type:{name:"boolean"}},level:{defaultValue:null,description:"@deprecated Используйте indent\nУровень дерева item-а",name:"level",required:!1,type:{name:"number"}},indent:{defaultValue:null,description:"Отступ item-а",name:"indent",required:!1,type:{name:"number"}},hasChildren:{defaultValue:null,description:"Наличие дочерних элемнтов у item-а",name:"hasChildren",required:!1,type:{name:"boolean"}},expanded:{defaultValue:null,description:"Признак развернутого состояния item-а",name:"expanded",required:!1,type:{name:"boolean"}},onHover:{defaultValue:null,description:"Обработчик наведения мыши на item",name:"onHover",required:!1,type:{name:"(() => void)"}},onToggleExpand:{defaultValue:null,description:"обработчик изменения состояния открытости узла",name:"onToggleExpand",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tree/TreeNode.tsx#TreeNode"]={docgenInfo:TreeNode_TreeNode.__docgenInfo,name:"TreeNode",path:"src/components/Tree/TreeNode.tsx#TreeNode"})}catch(__react_docgen_typescript_loader_error){}var FolderSolid=__webpack_require__("./node_modules/@admiral-ds/icons/build/documents/FolderSolid.svg");const demo1_TreeModel=[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Текст заголовка, первый уровень компонента, размер M 40 1",...options},"1"),id:"1",checked:!1,children:[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Текст раскрывающейся строки, второй уровень компонента 3",...options},"1-3"),id:"1-3",checked:!1,children:[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Текст  строки, третий уровень компонента 2",...options},"2-2"),id:"2-2"},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Текст  строки, третий уровень компонента 3",...options},"2-3"),id:"2-3"},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Текст  строки, третий уровень компонента 4",...options},"2-4"),id:"2-4"},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Текст  строки с чекбоксом, третий уровень компонента 5",...options},"2-5"),id:"2-5",checked:!1,children:[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{label:"Текст  строки с чекбоксом, четвертый уровень компонента 1",...options},"3-1"),id:"3-1",checked:!1},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,label:"Текст  строки с чекбоксом, четвертый уровень компонента 2",key:"3-2"}),id:"3-2",checked:!1},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,label:"Текст  строки с чекбоксом, четвертый уровень компонента. Компонент используется для отображения дерева вложенных списков с возможностью выбора отдельных пунктов по логике\n    чекбоксов. Ширина строки настравивается вручную, по умолчанию это 768px. В настройках присутствует до 6ти уровней\n    вложенности.",key:"3-3"}),id:"3-3",checked:!1},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,label:"Текст  строки с чекбоксом, четвертый уровень компонента 4",key:"3-4"}),id:"3-4",checked:!1,children:[{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,label:"Текст  строки с чекбоксом, пятый уровень компонента 1",key:"4-1"}),id:"4-1",checked:!1},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,label:"Текст  строки с чекбоксом, пятый уровень компонента 2",key:"4-2"}),id:"4-2",checked:!1}]}]}]},{id:"1-1",checked:!1,render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,icon:FolderSolid.h,label:"Текст раскрывающейся строки, второй уровень компонента 1",key:"1-1"})},{id:"1-2",checked:!1,render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,icon:FolderSolid.h,label:"Текст раскрывающейся строки, второй уровень компонента 2",key:"1-2"})}]},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,icon:FolderSolid.h,label:"Текст заголовка, первый уровень компонента, размер M 40 2",key:"2"}),id:"2",checked:!1},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,icon:FolderSolid.h,label:"Текст заголовка, первый уровень компонента, размер M 40 3",key:"3"}),id:"3"},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,icon:FolderSolid.h,label:"Текст заголовка, первый уровень компонента, размер M 40 4",key:"4"}),id:"4",disabled:!0},{render:options=>(0,react.createElement)(TreeNode_TreeNode,{...options,icon:FolderSolid.h,label:"Текст заголовка, первый уровень компонента, с пустым массивом children",key:"5"}),id:"5",children:[]}],TreeWithCheckboxesTemplate=props=>{const[dataList,setDataList]=(0,react.useState)(demo1_TreeModel);return(0,jsx_runtime.jsx)(Tree,{...props,model:dataList,onChange:dataList=>setDataList(dataList)})};TreeWithCheckboxesTemplate.displayName="TreeWithCheckboxesTemplate";try{TreeWithCheckboxesTemplate.displayName="TreeWithCheckboxesTemplate",TreeWithCheckboxesTemplate.__docgenInfo={description:"",displayName:"TreeWithCheckboxesTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},active:{defaultValue:null,description:"Активная секция Tree",name:"active",required:!1,type:{name:"string | null"}},selected:{defaultValue:null,description:"выбранная секция Tree",name:"selected",required:!1,type:{name:"string | null"}},defaultSelected:{defaultValue:null,description:"выбранная по умолчанию секция Tree",name:"defaultSelected",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onActivateItem",required:!1,type:{name:"((id: string | null) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onSelectItem",required:!1,type:{name:"((id: string | null) => void)"}},onChange:{defaultValue:null,description:"Обработчик изменения данных дерева",name:"onChange",required:!1,type:{name:"((model: TreeItemProps[]) => void)"}},model:{defaultValue:null,description:"Модель данных, с рендер-пропсами",name:"model",required:!1,type:{name:"TreeItemProps[]"}},defaultModel:{defaultValue:null,description:"Модель данных, с рендер-пропсами по-умолчанию для неконтролируемого состояния",name:"defaultModel",required:!1,type:{name:"TreeItemProps[]"}},withCheckbox:{defaultValue:null,description:"Признак того, что дерево содержит checkbox-ы",name:"withCheckbox",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tree/stories/TreeWithCheckboxes.template.tsx#TreeWithCheckboxesTemplate"]={docgenInfo:TreeWithCheckboxesTemplate.__docgenInfo,name:"TreeWithCheckboxesTemplate",path:"src/components/Tree/stories/TreeWithCheckboxes.template.tsx#TreeWithCheckboxesTemplate"})}catch(__react_docgen_typescript_loader_error){}var T=__webpack_require__("./src/components/T/index.tsx");const demo2_TreeModel=[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{...options,children:(0,jsx_runtime.jsx)(T.T,{as:"div",style:{paddingTop:2},font:"Subtitle/Subtitle 2",children:"Элемент дерева с кастомным заголовком"})},"1"),id:"1",expanded:!0,children:[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Второй уровень 1",...options},"1-1"),id:"1-1",checked:!1,children:[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Третий уровень 1",...options},"1-1-1"),id:"1-1-1"},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Третий уровень 2",...options},"1-1-2"),id:"1-1-2"}]}]},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Первый уровень 2",...options},"4"),id:"4"},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Первый уровень с пустым массивом children",...options},"5"),children:[],id:"5"}],StyledTree=(0,styled_components_browser_esm.Ay)(Tree).withConfig({displayName:"TreeSimpletemplate__StyledTree",componentId:"sc-gtdkaf-0"})(["width:500px;"]),TreeSimpleTemplate=props=>{const[activeItem,setActiveItem]=(0,react.useState)("1");return(0,jsx_runtime.jsx)(StyledTree,{...props,defaultSelected:"1-1",withCheckbox:!1,model:demo2_TreeModel,active:activeItem,onActivateItem:setActiveItem,onMouseLeave:()=>{console.log("Mouse leave tree")}})};TreeSimpleTemplate.displayName="TreeSimpleTemplate";try{TreeSimpleTemplate.displayName="TreeSimpleTemplate",TreeSimpleTemplate.__docgenInfo={description:"",displayName:"TreeSimpleTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},active:{defaultValue:null,description:"Активная секция Tree",name:"active",required:!1,type:{name:"string | null"}},selected:{defaultValue:null,description:"выбранная секция Tree",name:"selected",required:!1,type:{name:"string | null"}},defaultSelected:{defaultValue:null,description:"выбранная по умолчанию секция Tree",name:"defaultSelected",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onActivateItem",required:!1,type:{name:"((id: string | null) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onSelectItem",required:!1,type:{name:"((id: string | null) => void)"}},onChange:{defaultValue:null,description:"Обработчик изменения данных дерева",name:"onChange",required:!1,type:{name:"((model: TreeItemProps[]) => void)"}},model:{defaultValue:null,description:"Модель данных, с рендер-пропсами",name:"model",required:!1,type:{name:"TreeItemProps[]"}},defaultModel:{defaultValue:null,description:"Модель данных, с рендер-пропсами по-умолчанию для неконтролируемого состояния",name:"defaultModel",required:!1,type:{name:"TreeItemProps[]"}},withCheckbox:{defaultValue:null,description:"Признак того, что дерево содержит checkbox-ы",name:"withCheckbox",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tree/stories/TreeSimple.template.tsx#TreeSimpleTemplate"]={docgenInfo:TreeSimpleTemplate.__docgenInfo,name:"TreeSimpleTemplate",path:"src/components/Tree/stories/TreeSimple.template.tsx#TreeSimpleTemplate"})}catch(__react_docgen_typescript_loader_error){}const handleNodeClick=id=>{console.log(`clicked ${id}`)},TreeUncontrolled_template_demo2_TreeModel=[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{...options,onClick:e=>{options.onClick?.(e),handleNodeClick("1")},children:(0,jsx_runtime.jsx)(T.T,{as:"div",style:{paddingTop:2},font:"Subtitle/Subtitle 2",children:"Элемент дерева с кастомным заголовком"})},"1"),id:"1",expanded:!0,children:[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Второй уровень 1",...options,onClick:e=>{options.onClick?.(e),handleNodeClick("1-1")}},"1-1"),id:"1-1",checked:!1,children:[{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Третий уровень 1",...options},"1-1-1"),id:"1-1-1"},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Третий уровень 2",...options},"1-1-2"),id:"1-1-2"}]}]},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Первый уровень 2",...options},"4"),id:"4"},{render:options=>(0,jsx_runtime.jsx)(TreeNode_TreeNode,{icon:FolderSolid.h,label:"Первый уровень с пустым массивом children",...options},"5"),children:[],id:"5"}],TreeUncontrolled_template_StyledTree=(0,styled_components_browser_esm.Ay)(Tree).withConfig({displayName:"TreeUncontrolledtemplate__StyledTree",componentId:"sc-19gvqwy-0"})(["width:500px;"]),TreeUncontrolledTemplate=props=>(0,jsx_runtime.jsx)(TreeUncontrolled_template_StyledTree,{...props,defaultSelected:"1-1",defaultModel:TreeUncontrolled_template_demo2_TreeModel,withCheckbox:!1});TreeUncontrolledTemplate.displayName="TreeUncontrolledTemplate";try{TreeUncontrolledTemplate.displayName="TreeUncontrolledTemplate",TreeUncontrolledTemplate.__docgenInfo={description:"",displayName:"TreeUncontrolledTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},active:{defaultValue:null,description:"Активная секция Tree",name:"active",required:!1,type:{name:"string | null"}},selected:{defaultValue:null,description:"выбранная секция Tree",name:"selected",required:!1,type:{name:"string | null"}},defaultSelected:{defaultValue:null,description:"выбранная по умолчанию секция Tree",name:"defaultSelected",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onActivateItem",required:!1,type:{name:"((id: string | null) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора элемента дерева",name:"onSelectItem",required:!1,type:{name:"((id: string | null) => void)"}},onChange:{defaultValue:null,description:"Обработчик изменения данных дерева",name:"onChange",required:!1,type:{name:"((model: TreeItemProps[]) => void)"}},model:{defaultValue:null,description:"Модель данных, с рендер-пропсами",name:"model",required:!1,type:{name:"TreeItemProps[]"}},defaultModel:{defaultValue:null,description:"Модель данных, с рендер-пропсами по-умолчанию для неконтролируемого состояния",name:"defaultModel",required:!1,type:{name:"TreeItemProps[]"}},withCheckbox:{defaultValue:null,description:"Признак того, что дерево содержит checkbox-ы",name:"withCheckbox",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tree/stories/TreeUncontrolled.template.tsx#TreeUncontrolledTemplate"]={docgenInfo:TreeUncontrolledTemplate.__docgenInfo,name:"TreeUncontrolledTemplate",path:"src/components/Tree/stories/TreeUncontrolled.template.tsx#TreeUncontrolledTemplate"})}catch(__react_docgen_typescript_loader_error){}const Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"Treestories__Desc",componentId:"sc-1ng6tv2-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsx)(Desc,{children:"Компонент используется для отображения дерева вложенных списков с возможностью выбора отдельных пунктов. Ширина строки настравивается вручную, по умолчанию это 768px. В настройках присутствует до 6ти уровней вложенности."});Description.displayName="Description";const Tree_stories={title:"Admiral-2.1/Tree",decorators:void 0,component:Tree,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=12178%3A70930"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=12236%3A71124"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A12752"}]},args:{withCheckbox:!0},argTypes:{dimension:{options:["m","s"]},withCheckbox:{options:[!0,!1],control:{type:"radio"}},width:{control:"number"},defaultSelected:{control:"text"},selected:{control:"text"},active:{control:"text"},model:{control:!1}}},TreeWithCheckboxesStory=props=>(0,jsx_runtime.jsx)(TreeWithCheckboxesTemplate,{...props});TreeWithCheckboxesStory.displayName="TreeWithCheckboxesStory";const Demo1_Tree={render:TreeWithCheckboxesStory,parameters:{docs:{source:{code:"import { useState } from 'react';\nimport { Tree, TreeNode } from '@admiral-ds/react-ui';\nimport type { TreeItemProps, TreeNodeRenderOptionProps, TreeProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as FolderSolid } from '@admiral-ds/icons/build/documents/FolderSolid.svg';\n\nconst demo1_TreeModel: Array<TreeItemProps> = [\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode\n        key={'1'}\n        icon={FolderSolid}\n        label={'Текст заголовка, первый уровень компонента, размер M 40 1'}\n        {...options}\n      />\n    ),\n    id: '1',\n    checked: false,\n    children: [\n      {\n        render: (options: TreeNodeRenderOptionProps) => (\n          <TreeNode\n            key={'1-3'}\n            icon={FolderSolid}\n            label={'Текст раскрывающейся строки, второй уровень компонента 3'}\n            {...options}\n          />\n        ),\n        id: '1-3',\n        checked: false,\n        children: [\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode\n                key={'2-2'}\n                icon={FolderSolid}\n                label={'Текст  строки, третий уровень компонента 2'}\n                {...options}\n              />\n            ),\n            id: '2-2',\n          },\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode\n                key={'2-3'}\n                icon={FolderSolid}\n                label={'Текст  строки, третий уровень компонента 3'}\n                {...options}\n              />\n            ),\n            id: '2-3',\n          },\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode\n                key={'2-4'}\n                icon={FolderSolid}\n                label={'Текст  строки, третий уровень компонента 4'}\n                {...options}\n              />\n            ),\n            id: '2-4',\n          },\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode\n                key={'2-5'}\n                icon={FolderSolid}\n                label={'Текст  строки с чекбоксом, третий уровень компонента 5'}\n                {...options}\n              />\n            ),\n            id: '2-5',\n            checked: false,\n            children: [\n              {\n                render: (options: TreeNodeRenderOptionProps) => (\n                  <TreeNode\n                    key={'3-1'}\n                    label={'Текст  строки с чекбоксом, четвертый уровень компонента 1'}\n                    {...options}\n                  />\n                ),\n                id: '3-1',\n                checked: false,\n              },\n              {\n                render: (options: TreeNodeRenderOptionProps) => (\n                  <TreeNode\n                    {...options}\n                    label={'Текст  строки с чекбоксом, четвертый уровень компонента 2'}\n                    key={'3-2'}\n                  />\n                ),\n                id: '3-2',\n                checked: false,\n              },\n              {\n                render: (options: TreeNodeRenderOptionProps) => (\n                  <TreeNode\n                    {...options}\n                    label={\n                      'Текст  строки с чекбоксом, четвертый уровень компонента. Компонент используется для отображения дерева вложенных списков с возможностью выбора отдельных пунктов по логике\\n' +\n                      '    чекбоксов. Ширина строки настравивается вручную, по умолчанию это 768px. В настройках присутствует до 6ти уровней\\n' +\n                      '    вложенности.'\n                    }\n                    key={'3-3'}\n                  />\n                ),\n                id: '3-3',\n                checked: false,\n              },\n              {\n                render: (options: TreeNodeRenderOptionProps) => (\n                  <TreeNode\n                    {...options}\n                    label={'Текст  строки с чекбоксом, четвертый уровень компонента 4'}\n                    key={'3-4'}\n                  />\n                ),\n                id: '3-4',\n                checked: false,\n                children: [\n                  {\n                    render: (options: TreeNodeRenderOptionProps) => (\n                      <TreeNode\n                        {...options}\n                        label={'Текст  строки с чекбоксом, пятый уровень компонента 1'}\n                        key={'4-1'}\n                      />\n                    ),\n                    id: '4-1',\n                    checked: false,\n                  },\n                  {\n                    render: (options: TreeNodeRenderOptionProps) => (\n                      <TreeNode\n                        {...options}\n                        label={'Текст  строки с чекбоксом, пятый уровень компонента 2'}\n                        key={'4-2'}\n                      />\n                    ),\n                    id: '4-2',\n                    checked: false,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      {\n        id: '1-1',\n        checked: false,\n        render: (options: TreeNodeRenderOptionProps) => (\n          <TreeNode\n            {...options}\n            icon={FolderSolid}\n            label={'Текст раскрывающейся строки, второй уровень компонента 1'}\n            key={'1-1'}\n          />\n        ),\n      },\n      {\n        id: '1-2',\n        checked: false,\n        render: (options: TreeNodeRenderOptionProps) => (\n          <TreeNode\n            {...options}\n            icon={FolderSolid}\n            label={'Текст раскрывающейся строки, второй уровень компонента 2'}\n            key={'1-2'}\n          />\n        ),\n      },\n    ],\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode\n        {...options}\n        icon={FolderSolid}\n        label={'Текст заголовка, первый уровень компонента, размер M 40 2'}\n        key={'2'}\n      />\n    ),\n    id: '2',\n    checked: false,\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode\n        {...options}\n        icon={FolderSolid}\n        label={'Текст заголовка, первый уровень компонента, размер M 40 3'}\n        key={'3'}\n      />\n    ),\n    id: '3',\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode\n        {...options}\n        icon={FolderSolid}\n        label={'Текст заголовка, первый уровень компонента, размер M 40 4'}\n        key={'4'}\n      />\n    ),\n    id: '4',\n    disabled: true,\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode\n        {...options}\n        icon={FolderSolid}\n        label={'Текст заголовка, первый уровень компонента, с пустым массивом children'}\n        key={'5'}\n      />\n    ),\n    id: '5',\n    children: [],\n  },\n];\n\nexport const TreeWithCheckboxesTemplate = (props: TreeProps) => {\n  const [dataList, setDataList] = useState<TreeItemProps[]>(demo1_TreeModel);\n\n  return <Tree {...props} model={dataList} onChange={(dataList) => setDataList(dataList)} />;\n};\n"},description:{story:"Контролируемое дерево с checkbox"}}},name:"Контролируемое дерево с checkbox"},SimpleTreeStory=props=>(0,jsx_runtime.jsx)(TreeSimpleTemplate,{...props});SimpleTreeStory.displayName="SimpleTreeStory";const Demo2_Tree={render:SimpleTreeStory,parameters:{docs:{source:{code:"import React, { useState } from 'react';\nimport { Tree, TreeNode, T } from '@admiral-ds/react-ui';\nimport type { TreeItemProps, TreeNodeRenderOptionProps, TreeProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as FolderSolid } from '@admiral-ds/icons/build/documents/FolderSolid.svg';\nimport styled from 'styled-components';\n\nconst demo2_TreeModel: Array<TreeItemProps> = [\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode key={'1'} {...options}>\n        <T as=\"div\" style={{ paddingTop: 2 }} font=\"Subtitle/Subtitle 2\">\n          Элемент дерева с кастомным заголовком\n        </T>\n      </TreeNode>\n    ),\n    id: '1',\n    expanded: true,\n    children: [\n      {\n        render: (options: TreeNodeRenderOptionProps) => (\n          <TreeNode key={'1-1'} icon={FolderSolid} label={'Второй уровень 1'} {...options} />\n        ),\n        id: '1-1',\n        checked: false,\n        children: [\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode key={'1-1-1'} icon={FolderSolid} label={'Третий уровень 1'} {...options} />\n            ),\n            id: '1-1-1',\n          },\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode key={'1-1-2'} icon={FolderSolid} label={'Третий уровень 2'} {...options} />\n            ),\n            id: '1-1-2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode key={'4'} icon={FolderSolid} label={'Первый уровень 2'} {...options} />\n    ),\n    id: '4',\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode key={'5'} icon={FolderSolid} label={'Первый уровень с пустым массивом children'} {...options} />\n    ),\n    children: [],\n    id: '5',\n  },\n];\n\nconst StyledTree = styled(Tree)`\n  width: 500px;\n`;\n\nexport const TreeSimpleTemplate = (props: TreeProps) => {\n  const [activeItem, setActiveItem] = useState<string | null>('1');\n\n  const handleMouseLeave = () => {\n    // eslint-disable-next-line no-console\n    console.log('Mouse leave tree');\n  };\n\n  return (\n    <StyledTree\n      {...props}\n      defaultSelected={'1-1'}\n      withCheckbox={false}\n      model={demo2_TreeModel}\n      active={activeItem}\n      onActivateItem={setActiveItem}\n      onMouseLeave={handleMouseLeave}\n    />\n  );\n};\n"},description:{story:"Дерево без checkbox"}}},name:"Дерево без checkbox"},TreeUncontrolledStory=props=>(0,jsx_runtime.jsx)(TreeUncontrolledTemplate,{...props});TreeUncontrolledStory.displayName="TreeUncontrolledStory";const TreeUncontrolledExample={render:TreeUncontrolledStory,parameters:{docs:{source:{code:"import React from 'react';\nimport { Tree, TreeNode, T } from '@admiral-ds/react-ui';\nimport type { TreeItemProps, TreeNodeRenderOptionProps, TreeProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as FolderSolid } from '@admiral-ds/icons/build/documents/FolderSolid.svg';\nimport styled from 'styled-components';\n\nconst handleNodeClick = (id: string) => {\n  console.log(`clicked ${id}`);\n};\n\nconst demo2_TreeModel: Array<TreeItemProps> = [\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode\n        key={'1'}\n        {...options}\n        onClick={(e: React.MouseEvent<HTMLDivElement>) => {\n          options.onClick?.(e);\n          handleNodeClick('1');\n        }}\n      >\n        <T as=\"div\" style={{ paddingTop: 2 }} font=\"Subtitle/Subtitle 2\">\n          Элемент дерева с кастомным заголовком\n        </T>\n      </TreeNode>\n    ),\n    id: '1',\n    expanded: true,\n    children: [\n      {\n        render: (options: TreeNodeRenderOptionProps) => (\n          <TreeNode\n            key={'1-1'}\n            icon={FolderSolid}\n            label={'Второй уровень 1'}\n            {...options}\n            onClick={(e: React.MouseEvent<HTMLDivElement>) => {\n              options.onClick?.(e);\n              handleNodeClick('1-1');\n            }}\n          />\n        ),\n        id: '1-1',\n        checked: false,\n        children: [\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode key={'1-1-1'} icon={FolderSolid} label={'Третий уровень 1'} {...options} />\n            ),\n            id: '1-1-1',\n          },\n          {\n            render: (options: TreeNodeRenderOptionProps) => (\n              <TreeNode key={'1-1-2'} icon={FolderSolid} label={'Третий уровень 2'} {...options} />\n            ),\n            id: '1-1-2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode key={'4'} icon={FolderSolid} label={'Первый уровень 2'} {...options} />\n    ),\n    id: '4',\n  },\n  {\n    render: (options: TreeNodeRenderOptionProps) => (\n      <TreeNode key={'5'} icon={FolderSolid} label={'Первый уровень с пустым массивом children'} {...options} />\n    ),\n    children: [],\n    id: '5',\n  },\n];\n\nconst StyledTree = styled(Tree)`\n  width: 500px;\n`;\n\nexport const TreeUncontrolledTemplate = (props: TreeProps) => {\n  return <StyledTree {...props} defaultSelected={'1-1'} defaultModel={demo2_TreeModel} withCheckbox={false} />;\n};\n"},description:{story:"Неконтролируемое дерево"}}},name:"Неконтролируемое дерево"};Demo1_Tree.parameters={...Demo1_Tree.parameters,docs:{...Demo1_Tree.parameters?.docs,source:{originalSource:"{\n  render: TreeWithCheckboxesStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TreeWithCheckboxesRaw\n      },\n      description: {\n        story: 'Контролируемое дерево с checkbox'\n      }\n    }\n  },\n  name: 'Контролируемое дерево с checkbox'\n}",...Demo1_Tree.parameters?.docs?.source}}},Demo2_Tree.parameters={...Demo2_Tree.parameters,docs:{...Demo2_Tree.parameters?.docs,source:{originalSource:"{\n  render: SimpleTreeStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TreeSimpleRaw\n      },\n      description: {\n        story: 'Дерево без checkbox'\n      }\n    }\n  },\n  name: 'Дерево без checkbox'\n}",...Demo2_Tree.parameters?.docs?.source}}},TreeUncontrolledExample.parameters={...TreeUncontrolledExample.parameters,docs:{...TreeUncontrolledExample.parameters?.docs,source:{originalSource:"{\n  render: TreeUncontrolledStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TreeUncontrolledRaw\n      },\n      description: {\n        story: 'Неконтролируемое дерево'\n      }\n    }\n  },\n  name: 'Неконтролируемое дерево'\n}",...TreeUncontrolledExample.parameters?.docs?.source}}};const __namedExportsOrder=["Demo1_Tree","Demo2_Tree","TreeUncontrolledExample"]},"./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgCloseOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var SvgCloseOutline=function SvgCloseOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M6.41 5.49a.65.65 0 1 0-.92.92L11.08 12l-5.49 5.49a.65.65 0 0 0 .92.92L12 12.92l5.49 5.49a.65.65 0 0 0 .92-.92L12.92 12l5.59-5.59a.65.65 0 0 0-.92-.92L12 11.08z"})))};__webpack_require__.p},"./src/components/IconPlacement/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>CloseIconPlacementButton,_:()=>IconPlacement});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/themes/borderRadius.ts"),_admiral_ds_icons_build_service_CloseOutline_svg__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const IconSizeL=24,IconSizeM=20,IconSizeS=16,HighlighterOffsetBig=6,HighlighterOffsetSmall=4;function getIconSize(dimension){switch(dimension){case"lSmall":case"lBig":default:return IconSizeL;case"mSmall":case"mBig":return IconSizeM;case"s":return IconSizeS}}function getHighlighterOffset(dimension){switch(dimension){case"lBig":case"mBig":default:return HighlighterOffsetBig;case"lSmall":case"mSmall":case"s":return HighlighterOffsetSmall}}function getHighlighterSize(dimension){return getIconSize(dimension)+2*getHighlighterOffset(dimension)}const IconColor=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.AH)(["& *[fill^='#']{fill:",";}"],(p=>{switch(p.$iconColor){case"primary":return p.theme.color["Primary/Primary 60 Main"];case"secondary":return p.theme.color["Neutral/Neutral 50"];default:return p.$iconColor}})),IconPlacementContent=styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay.div.withConfig({displayName:"IconPlacement__IconPlacementContent",componentId:"sc-144koov-0"})(["position:absolute;top:0;left:0;height:100%;"," & > svg{height:","px;width:","px;}"],IconColor,(p=>getIconSize(p.$dimension)),(p=>getIconSize(p.$dimension))),ActivityHighlighter=styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay.div.withConfig({displayName:"IconPlacement__ActivityHighlighter",componentId:"sc-144koov-1"})(["width:","px;height:","px;border-radius:50%;background-color:transparent;pointer-events:none;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);"],(p=>getHighlighterSize(p.$dimension)),(p=>getHighlighterSize(p.$dimension))),IconPlacementButton=styled_components__WEBPACK_IMPORTED_MODULE_3__.Ay.button.withConfig({displayName:"IconPlacement__IconPlacementButton",componentId:"sc-144koov-2"})(["position:relative;padding:0;margin:","px;box-sizing:border-box;border:none;background-color:transparent;appearance:none;flex:0 0 auto;height:","px;width:","px;border-radius:",";overflow:visible;cursor:pointer;> *{pointer-events:none;}&:disabled{cursor:default;pointer-events:none;& *[fill^='#']{fill:",";}}&:focus-visible{outline-offset:2px;outline:"," solid 2px;}&:focus{> ","{background-color:",";}}&:hover{> ","{background-color:",";}}&:active{> ","{background-color:",";}}&:focus-visible{> ","{background-color:transparent;}}"],(p=>getHighlighterOffset(p.$dimension)),(p=>getIconSize(p.$dimension)),(p=>getIconSize(p.$dimension)),(p=>(0,_src_components_themes_borderRadius__WEBPACK_IMPORTED_MODULE_4__.r2)(p.theme.shape)),(({theme})=>theme.color["Neutral/Neutral 30"]),(p=>p.theme.color["Primary/Primary 60 Main"]),ActivityHighlighter,(p=>p.$highlightFocus?p.theme.color["Opacity/Focus"]:"transparent"),ActivityHighlighter,(({theme})=>theme.color["Opacity/Hover"]),ActivityHighlighter,(({theme})=>theme.color["Opacity/Press"]),ActivityHighlighter),IconPlacement=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({type="button",dimension="lBig",disabled=!1,highlightFocus=!0,appearance,children,...props},ref)=>{const iconColor="object"==typeof appearance?appearance.iconColor?appearance.iconColor:"secondary":appearance;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(IconPlacementButton,{ref,type,$dimension:dimension,disabled,$highlightFocus:highlightFocus,...props,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(ActivityHighlighter,{$dimension:dimension,"aria-hidden":!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(IconPlacementContent,{$dimension:dimension,$iconColor:iconColor,"aria-hidden":!0,children})]})})),CloseIconPlacementButton=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((({className,...props},ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(IconPlacement,{ref,className:`close-button ${className||""}`,...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_admiral_ds_icons_build_service_CloseOutline_svg__WEBPACK_IMPORTED_MODULE_1__.h,{"aria-hidden":!0})})));try{IconPlacement.displayName="IconPlacement",IconPlacement.__docgenInfo={description:"",displayName:"IconPlacement",props:{dimension:{defaultValue:{value:"lBig"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"lBig"'},{value:'"lSmall"'},{value:'"mBig"'},{value:'"mSmall"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение кнопки",name:"disabled",required:!1,type:{name:"boolean"}},highlightFocus:{defaultValue:{value:"true"},description:"Позволяет управлять подсветкой в состоянии фокуса, по умолчанию состояние фокуса подсвечивается",name:"highlightFocus",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"IconPlacementAppearance | { iconColor: string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/IconPlacement/index.tsx#IconPlacement"]={docgenInfo:IconPlacement.__docgenInfo,name:"IconPlacement",path:"src/components/IconPlacement/index.tsx#IconPlacement"})}catch(__react_docgen_typescript_loader_error){}try{CloseIconPlacementButton.displayName="CloseIconPlacementButton",CloseIconPlacementButton.__docgenInfo={description:"",displayName:"CloseIconPlacementButton",props:{dimension:{defaultValue:{value:"lBig"},description:"Размер кнопки",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"lBig"'},{value:'"lSmall"'},{value:'"mBig"'},{value:'"mSmall"'}]}},disabled:{defaultValue:{value:"false"},description:"Отключение кнопки",name:"disabled",required:!1,type:{name:"boolean"}},highlightFocus:{defaultValue:{value:"true"},description:"Позволяет управлять подсветкой в состоянии фокуса, по умолчанию состояние фокуса подсвечивается",name:"highlightFocus",required:!1,type:{name:"boolean"}},appearance:{defaultValue:null,description:"Внешний вид кнопки",name:"appearance",required:!1,type:{name:"IconPlacementAppearance | { iconColor: string; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/IconPlacement/index.tsx#CloseIconPlacementButton"]={docgenInfo:CloseIconPlacementButton.__docgenInfo,name:"CloseIconPlacementButton",path:"src/components/IconPlacement/index.tsx#CloseIconPlacementButton"})}catch(__react_docgen_typescript_loader_error){}}}]);