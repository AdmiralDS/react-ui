"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[4927],{"./src/components/Tooltip/stories/Tooltip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TooltipBaseExample:()=>TooltipBaseExample,TooltipCustomExample:()=>TooltipCustomExample,TooltipDelayExample:()=>TooltipDelayExample,TooltipMenuButtonExample:()=>TooltipMenuButtonExample,TooltipRefExample:()=>TooltipRefExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tooltip_stories});var react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),Tooltip=__webpack_require__("./src/components/Tooltip/index.tsx"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),Button=__webpack_require__("./src/components/Button/index.tsx"),DeleteOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/DeleteOutline.svg"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TooltipBaseTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const btnRef=react.useRef(null),[visible,setVisible]=react.useState(!1);return react.useEffect((()=>{function show(){setVisible(!0)}function hide(){setVisible(!1)}const button=btnRef.current;if(button)return button.addEventListener("mouseenter",show),button.addEventListener("focus",show),button.addEventListener("mouseleave",hide),button.addEventListener("blur",hide),()=>{button.removeEventListener("mouseenter",show),button.removeEventListener("focus",show),button.removeEventListener("mouseleave",hide),button.removeEventListener("blur",hide)}}),[setVisible]),(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(Button.$n,{ref:btnRef,dimension:"m",displayAsSquare:!0,"aria-label":"Delete","aria-describedby":"test1",children:(0,jsx_runtime.jsx)(DeleteOutline.h,{"aria-hidden":!0})}),visible&&(0,jsx_runtime.jsx)(Tooltip.m,{dimension:props.dimension,targetElement:btnRef.current,renderContent:()=>"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin\n              literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney\n              College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage,\n              and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem\n              Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum'",style:{minWidth:"200px",maxWidth:"300px"},tooltipPosition:props.tooltipPosition,id:"test1"})]})};TooltipBaseTemplate.displayName="TooltipBaseTemplate";try{TooltipBaseTemplate.displayName="TooltipBaseTemplate",TooltipBaseTemplate.__docgenInfo={description:"",displayName:"TooltipBaseTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},renderContent:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContent",required:!0,type:{name:"() => ReactNode"}},targetRef:{defaultValue:null,description:"@deprecated Будет удалено в 8.x.x версии.\nВзамен используйте параметр targetElement.\n\nRef на элемент, относительно которого позиционируется портал",name:"targetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал\nВ 8.x.x версии данный параметр станет обязательным, заменив собой targetRef",name:"targetElement",required:!1,type:{name:"Element | null"}},container:{defaultValue:null,description:"@deprecated Используйте rootRef пропсу на DropdownProvider.\nКонтейнер, в котором будет отрисован тултип через React.createPortal.\nПо умолчанию тултип отрисовывается в document.body",name:"container",required:!1,type:{name:"undefined"}},tooltipPosition:{defaultValue:null,description:"Расположение тултипа",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'},{value:'"left"'},{value:'"right"'}]}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/stories/TooltipBase.template.tsx#TooltipBaseTemplate"]={docgenInfo:TooltipBaseTemplate.__docgenInfo,name:"TooltipBaseTemplate",path:"src/components/Tooltip/stories/TooltipBase.template.tsx#TooltipBaseTemplate"})}catch(__react_docgen_typescript_loader_error){}const TooltipDelayTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const btnRef=react.useRef(null),[visible,setVisible]=react.useState(!1),[timer,setTimer]=react.useState();return react.useEffect((()=>{function show(){setTimer(window.setTimeout((()=>setVisible(!0)),Tooltip.w))}function hide(){clearTimeout(timer),setVisible(!1)}const button=btnRef.current;if(button)return button.addEventListener("mouseenter",show),button.addEventListener("focus",show),button.addEventListener("mouseleave",hide),button.addEventListener("blur",hide),()=>{timer&&clearTimeout(timer),button.removeEventListener("mouseenter",show),button.removeEventListener("focus",show),button.removeEventListener("mouseleave",hide),button.removeEventListener("blur",hide)}}),[setTimer,setVisible,timer]),(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(Button.$n,{ref:btnRef,dimension:"m",displayAsSquare:!0,"aria-label":"Delete","aria-describedby":"test1",children:(0,jsx_runtime.jsx)(DeleteOutline.h,{"aria-hidden":!0})}),visible&&(0,jsx_runtime.jsx)(Tooltip.m,{dimension:props.dimension,targetElement:btnRef.current,renderContent:()=>"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin\n          literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney\n          College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage,\n          and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem\n          Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum'",tooltipPosition:props.tooltipPosition,style:{minWidth:"200px",maxWidth:"300px"},id:"test1"})]})};TooltipDelayTemplate.displayName="TooltipDelayTemplate";try{TooltipDelayTemplate.displayName="TooltipDelayTemplate",TooltipDelayTemplate.__docgenInfo={description:"",displayName:"TooltipDelayTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},renderContent:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContent",required:!0,type:{name:"() => ReactNode"}},targetRef:{defaultValue:null,description:"@deprecated Будет удалено в 8.x.x версии.\nВзамен используйте параметр targetElement.\n\nRef на элемент, относительно которого позиционируется портал",name:"targetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал\nВ 8.x.x версии данный параметр станет обязательным, заменив собой targetRef",name:"targetElement",required:!1,type:{name:"Element | null"}},container:{defaultValue:null,description:"@deprecated Используйте rootRef пропсу на DropdownProvider.\nКонтейнер, в котором будет отрисован тултип через React.createPortal.\nПо умолчанию тултип отрисовывается в document.body",name:"container",required:!1,type:{name:"undefined"}},tooltipPosition:{defaultValue:null,description:"Расположение тултипа",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'},{value:'"left"'},{value:'"right"'}]}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/stories/TooltipDelay.template.tsx#TooltipDelayTemplate"]={docgenInfo:TooltipDelayTemplate.__docgenInfo,name:"TooltipDelayTemplate",path:"src/components/Tooltip/stories/TooltipDelay.template.tsx#TooltipDelayTemplate"})}catch(__react_docgen_typescript_loader_error){}const TooltipRefTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const tooltipRef=react.useRef(null),btnRef=react.useRef(null),[visible,setVisible]=react.useState(!1);return react.useEffect((()=>{function show(){setVisible(!0)}function hide(){setVisible(!1)}const button=btnRef.current;if(button)return button.addEventListener("mouseenter",show),button.addEventListener("focus",show),button.addEventListener("mouseleave",hide),button.addEventListener("blur",hide),()=>{button.removeEventListener("mouseenter",show),button.removeEventListener("focus",show),button.removeEventListener("mouseleave",hide),button.removeEventListener("blur",hide)}}),[setVisible]),(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(Button.$n,{ref:btnRef,dimension:"m",displayAsSquare:!0,"aria-label":"Delete","aria-describedby":"test3",children:(0,jsx_runtime.jsx)(DeleteOutline.h,{height:24,width:24})}),visible&&(0,jsx_runtime.jsx)(Tooltip.m,{dimension:props.dimension,targetElement:btnRef.current,renderContent:()=>"Delete file",ref:tooltipRef,tooltipPosition:props.tooltipPosition,id:"test3"})]})};TooltipRefTemplate.displayName="TooltipRefTemplate";try{TooltipRefTemplate.displayName="TooltipRefTemplate",TooltipRefTemplate.__docgenInfo={description:"",displayName:"TooltipRefTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},renderContent:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContent",required:!0,type:{name:"() => ReactNode"}},targetRef:{defaultValue:null,description:"@deprecated Будет удалено в 8.x.x версии.\nВзамен используйте параметр targetElement.\n\nRef на элемент, относительно которого позиционируется портал",name:"targetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал\nВ 8.x.x версии данный параметр станет обязательным, заменив собой targetRef",name:"targetElement",required:!1,type:{name:"Element | null"}},container:{defaultValue:null,description:"@deprecated Используйте rootRef пропсу на DropdownProvider.\nКонтейнер, в котором будет отрисован тултип через React.createPortal.\nПо умолчанию тултип отрисовывается в document.body",name:"container",required:!1,type:{name:"undefined"}},tooltipPosition:{defaultValue:null,description:"Расположение тултипа",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'},{value:'"left"'},{value:'"right"'}]}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/stories/TooltipRef.template.tsx#TooltipRefTemplate"]={docgenInfo:TooltipRefTemplate.__docgenInfo,name:"TooltipRefTemplate",path:"src/components/Tooltip/stories/TooltipRef.template.tsx#TooltipRefTemplate"})}catch(__react_docgen_typescript_loader_error){}var MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),MenuButton=__webpack_require__("./src/components/MenuButton/index.tsx");const menuItems=[{id:1,label:"item-1"},{id:2,label:"item-2"},{id:3,label:"item-3"}],TooltipMenuButtonTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const menuModel=react.useMemo((()=>menuItems.map((item=>({id:String(item.id),render:props=>(0,react.createElement)(MenuItem.D,{...props,key:item.id},item.label)})))),[]),btnRef=react.useRef(null),[visible,setVisible]=react.useState(!1);react.useEffect((()=>{function show(){setVisible(!0)}function hide(){setVisible(!1)}const button=btnRef.current;if(button)return button.addEventListener("mouseenter",show),button.addEventListener("focus",show),button.addEventListener("mouseleave",hide),button.addEventListener("blur",hide),()=>{button.removeEventListener("mouseenter",show),button.removeEventListener("focus",show),button.removeEventListener("mouseleave",hide),button.removeEventListener("blur",hide)}}),[visible,setVisible]);const renderTooltipContent=react.useMemo((()=>()=>"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin\n    literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney\n    College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage,\n    and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem\n    Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum'"),[]);return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(MenuButton.I,{dimension:"m",items:menuModel,style:{marginRight:20},children:"TEST"}),(0,jsx_runtime.jsx)(MenuButton.I,{ref:btnRef,dimension:"m",items:menuModel,children:"TEST WITH TOOLTIP"}),visible&&(0,jsx_runtime.jsx)(Tooltip.m,{dimension:props.dimension,targetElement:btnRef.current,renderContent:renderTooltipContent,tooltipPosition:props.tooltipPosition,style:{minWidth:"200px",maxWidth:"300px"},id:"test1"})]})};TooltipMenuButtonTemplate.displayName="TooltipMenuButtonTemplate";try{TooltipMenuButtonTemplate.displayName="TooltipMenuButtonTemplate",TooltipMenuButtonTemplate.__docgenInfo={description:"",displayName:"TooltipMenuButtonTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},renderContent:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContent",required:!0,type:{name:"() => ReactNode"}},targetRef:{defaultValue:null,description:"@deprecated Будет удалено в 8.x.x версии.\nВзамен используйте параметр targetElement.\n\nRef на элемент, относительно которого позиционируется портал",name:"targetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал\nВ 8.x.x версии данный параметр станет обязательным, заменив собой targetRef",name:"targetElement",required:!1,type:{name:"Element | null"}},container:{defaultValue:null,description:"@deprecated Используйте rootRef пропсу на DropdownProvider.\nКонтейнер, в котором будет отрисован тултип через React.createPortal.\nПо умолчанию тултип отрисовывается в document.body",name:"container",required:!1,type:{name:"undefined"}},tooltipPosition:{defaultValue:null,description:"Расположение тултипа",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'},{value:'"left"'},{value:'"right"'}]}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/stories/TooltipMenuButton.template.tsx#TooltipMenuButtonTemplate"]={docgenInfo:TooltipMenuButtonTemplate.__docgenInfo,name:"TooltipMenuButtonTemplate",path:"src/components/Tooltip/stories/TooltipMenuButton.template.tsx#TooltipMenuButtonTemplate"})}catch(__react_docgen_typescript_loader_error){}var _path,typography=__webpack_require__("./src/components/Typography/typography.ts"),T=__webpack_require__("./src/components/T/index.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgVipOutline=function SvgVipOutline(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12.73 7.85A1.998 1.998 0 0 0 12 3.99a2 2 0 0 0-2 2c0 .85.52 1.58 1.27 1.87l-.03.03-1.86 2.21c-.43.51-1.18.61-1.73.23L5.72 9.01c.17-.3.28-.65.28-1.02a2 2 0 1 0-4 0c0 1.07.83 1.94 1.88 2l.95 6.21c.09.64.64 1.11 1.28 1.11h11.77c.64 0 1.19-.47 1.28-1.11l.95-6.21c1.05-.06 1.89-.93 1.89-2a2 2 0 1 0-4 0c0 .38.1.73.28 1.03l-1.91 1.31c-.55.38-1.29.28-1.72-.23l-1.89-2.21a.1.1 0 0 1-.03-.04m-.03-1.86c0 .39-.32.7-.7.7-.39 0-.71-.31-.71-.7 0-.38.32-.7.71-.7.38 0 .7.32.7.7M4 8.69c.38 0 .7-.31.7-.7 0-.38-.32-.7-.7-.7a.71.71 0 0 0-.71.7c0 .39.32.7.71.7m16.7-.7c0 .39-.32.7-.7.7-.39 0-.71-.31-.71-.7 0-.38.32-.7.71-.7.38 0 .7.32.7.7m-3.59 3.41 1.65-1.13-.88 5.74H6.11l-.88-5.76 1.69 1.15c1.1.76 2.59.55 3.45-.47L12 9l1.66 1.95a2.594 2.594 0 0 0 3.45.45M19 19.35c0 .36-.3.65-.65.65H5.64c-.35 0-.64-.29-.64-.65s.29-.65.64-.65h12.71c.35 0 .65.29.65.65"})))};__webpack_require__.p;const CustomP=styled_components_browser_esm.Ay.p.withConfig({displayName:"TooltipCustomtemplate__CustomP",componentId:"sc-1sbvj6s-0"})(["padding:0;margin:0;color:var(--admiral-color-Neutral_Neutral00,",");",";",";"],(p=>p.theme.color["Neutral/Neutral 00"]),(p=>"m"===p.$dimension?typography.Il["Subtitle/Subtitle 3"]:typography.Il["Caption/Caption 1"]),(p=>"s"===p.$dimension?"font-weight: bold;":"")),TooltipCustomTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const btnRef=react.useRef(null),[visible,setVisible]=react.useState(!1);react.useEffect((()=>{function show(){setVisible(!0)}function hide(){setVisible(!1)}const button=btnRef.current;if(button)return button.addEventListener("mouseenter",show),button.addEventListener("focus",show),button.addEventListener("mouseleave",hide),button.addEventListener("blur",hide),()=>{button.removeEventListener("mouseenter",show),button.removeEventListener("focus",show),button.removeEventListener("mouseleave",hide),button.removeEventListener("blur",hide)}}),[setVisible]);return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(Button.$n,{ref:btnRef,dimension:"m",displayAsSquare:!0,"aria-label":"Delete","aria-describedby":"test1",children:(0,jsx_runtime.jsx)(SvgVipOutline,{"aria-hidden":!0})}),visible&&(0,jsx_runtime.jsx)(Tooltip.m,{dimension:props.dimension,targetElement:btnRef.current,renderContent:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(CustomP,{$dimension:props.dimension,children:"Фамилия Имя Отчество"}),(0,jsx_runtime.jsx)(T.T,{font:"m"===props.dimension?"Body/Body 2 Short":"Caption/Caption 1",color:"Neutral/Neutral 00",children:"Старший дизайнер"})]}),tooltipPosition:props.tooltipPosition,id:"test1"})]})};TooltipCustomTemplate.displayName="TooltipCustomTemplate";try{TooltipCustomTemplate.displayName="TooltipCustomTemplate",TooltipCustomTemplate.__docgenInfo={description:"",displayName:"TooltipCustomTemplate",props:{dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},renderContent:{defaultValue:null,description:"Функция, которая возвращает реакт-компонент с контентом тултипа. Если этому компоненту нужны props, используйте замыкание",name:"renderContent",required:!0,type:{name:"() => ReactNode"}},targetRef:{defaultValue:null,description:"@deprecated Будет удалено в 8.x.x версии.\nВзамен используйте параметр targetElement.\n\nRef на элемент, относительно которого позиционируется портал",name:"targetRef",required:!1,type:{name:"RefObject<HTMLElement>"}},targetElement:{defaultValue:null,description:"Элемент, относительно которого позиционируется портал\nВ 8.x.x версии данный параметр станет обязательным, заменив собой targetRef",name:"targetElement",required:!1,type:{name:"Element | null"}},container:{defaultValue:null,description:"@deprecated Используйте rootRef пропсу на DropdownProvider.\nКонтейнер, в котором будет отрисован тултип через React.createPortal.\nПо умолчанию тултип отрисовывается в document.body",name:"container",required:!1,type:{name:"undefined"}},tooltipPosition:{defaultValue:null,description:"Расположение тултипа",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"top"'},{value:'"left"'},{value:'"right"'}]}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Tooltip/stories/TooltipCustom.template.tsx#TooltipCustomTemplate"]={docgenInfo:TooltipCustomTemplate.__docgenInfo,name:"TooltipCustomTemplate",path:"src/components/Tooltip/stories/TooltipCustom.template.tsx#TooltipCustomTemplate"})}catch(__react_docgen_typescript_loader_error){}const Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"Tooltipstories__Separator",componentId:"sc-1euwf6a-0"})(["height:","px;"],(({height})=>height||20)),Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"Tooltipstories__Desc",componentId:"sc-1euwf6a-1"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Тултип — компонент, отвечающий за подсказки, детализацию информации или пояснения. Появляется при наведении на элемент, к которому он привязан, сразу, либо с задержкой в 1.5 секунды (опционально). Позиционируется по центру объекта, сверху, снизу, слева или справа с отступом 8px.",(0,jsx_runtime.jsx)(Separator,{}),"Существует в двух размерах: S 20px и M 24px по высоте. Рекомендуется максимальная ширина 488px. При большем объеме используйте компонент Hint.",(0,jsx_runtime.jsx)(Separator,{}),"Приоритетным является расположение тултипа снизу объекта. Далее по приоритетности идут расположения сверху, слева и справа.",(0,jsx_runtime.jsx)(Separator,{}),"Задать для компонента тултип можно двумя способами:",(0,jsx_runtime.jsx)(Separator,{}),"1) Использовать компонент Tooltip. Данный компонент является полностью контролируемым пользователем, то есть пользователь определяет в какой момент и при каких событиях отображать тултип, отображать его с задержкой в появлении или нет. Кроме того, компоненту Tooltip требуются обязательные параметры: targetElement - для указания элемента, относительно которого тултип будет позиционироваться, renderContent - рендер-функция для рендеринга содержимого тултипа.",(0,jsx_runtime.jsx)(Separator,{}),"2) Использовать компонент высшего порядка TooltipHoc. TooltipHoc стоит использовать в том случае, если пользователю нужен неконтролируемый тултип (тултип с внутренним state и механизмом отображения/скрытия). Подробное описание и примеры использования данного компонента можно найти в соответствующем разделе документации.",(0,jsx_runtime.jsx)(Separator,{}),"Далее приведены примеры использования компонента Tooltip."]});Description.displayName="Description";const Tooltip_stories={title:"Admiral-2.1/Tooltip",decorators:void 0,component:Tooltip.m,parameters:{docs:{source:{code:null}},design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A31354"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=37%3A31490"}],componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),layout:"centered"},argTypes:{tooltipPosition:{options:["bottom","top","left","right"],control:{type:"radio"}},targetRef:{control:!1},targetElement:{control:!1},container:{control:!1},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}}}},TooltipBaseStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(TooltipBaseTemplate,{...props,CSSCustomProps})};TooltipBaseStory.displayName="TooltipBaseStory";const TooltipBaseExample={render:TooltipBaseStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tooltip, Button } from '@admiral-ds/react-ui';\nimport type { ITooltipProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ReactComponent as DeleteOutline } from '@admiral-ds/icons/build/system/DeleteOutline.svg';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nexport const TooltipBaseTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: ITooltipProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const btnRef = React.useRef<HTMLButtonElement>(null);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    function show() {\n      setVisible(true);\n    }\n    function hide() {\n      setVisible(false);\n    }\n    const button = btnRef.current;\n    if (button) {\n      /** Рекомендуется использовать именно addEventListener, так как React SyntheticEvent onMouseEnter\n       * отрабатывает некорректно в случае, если мышь была наведена на задизейбленный элемент,\n       * а затем была наведена на target элемент\n       * https://github.com/facebook/react/issues/19419 */\n      button.addEventListener('mouseenter', show);\n      button.addEventListener('focus', show);\n      button.addEventListener('mouseleave', hide);\n      button.addEventListener('blur', hide);\n      return () => {\n        button.removeEventListener('mouseenter', show);\n        button.removeEventListener('focus', show);\n        button.removeEventListener('mouseleave', hide);\n        button.removeEventListener('blur', hide);\n      };\n    }\n  }, [setVisible]);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <Button ref={btnRef} dimension=\"m\" displayAsSquare aria-label=\"Delete\" aria-describedby=\"test1\">\n        <DeleteOutline aria-hidden />\n      </Button>\n      {visible && (\n        <Tooltip\n          dimension={props.dimension}\n          targetElement={btnRef.current}\n          renderContent={() =>\n            `Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin\n              literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney\n              College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage,\n              and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem\n              Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum'`\n          }\n          style={{ minWidth: '200px', maxWidth: '300px' }}\n          tooltipPosition={props.tooltipPosition}\n          id=\"test1\"\n        />\n      )}\n    </ThemeProvider>\n  );\n};\n"}}},name:"Tooltip. Базовый пример."},TooltipMenuButtonStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(TooltipMenuButtonTemplate,{...props,CSSCustomProps})};TooltipMenuButtonStory.displayName="TooltipMenuButtonStory";const TooltipMenuButtonExample={render:TooltipMenuButtonStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tooltip, MenuButton, MenuItem } from '@admiral-ds/react-ui';\nimport type { BorderRadiusType, ITooltipProps, RenderOptionProps } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst menuItems = [\n  { id: 1, label: 'item-1' },\n  { id: 2, label: 'item-2' },\n  { id: 3, label: 'item-3' },\n];\n\nexport const TooltipMenuButtonTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: ITooltipProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const menuModel = React.useMemo(() => {\n    return menuItems.map((item) => ({\n      id: String(item.id),\n      render: (props: RenderOptionProps) => (\n        <MenuItem {...props} key={item.id}>\n          {item.label}\n        </MenuItem>\n      ),\n    }));\n  }, []);\n\n  const btnRef = React.useRef<HTMLButtonElement | null>(null);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    function show() {\n      setVisible(true);\n    }\n    function hide() {\n      setVisible(false);\n    }\n    const button = btnRef.current;\n    if (button) {\n      /** Рекомендуется использовать именно addEventListener, так как React SyntheticEvent onMouseEnter\n       * отрабатывает некорректно в случае, если мышь была наведена на задизейбленный элемент,\n       * а затем была наведена на target элемент\n       * https://github.com/facebook/react/issues/19419 */\n      button.addEventListener('mouseenter', show);\n      button.addEventListener('focus', show);\n      button.addEventListener('mouseleave', hide);\n      button.addEventListener('blur', hide);\n      return () => {\n        button.removeEventListener('mouseenter', show);\n        button.removeEventListener('focus', show);\n        button.removeEventListener('mouseleave', hide);\n        button.removeEventListener('blur', hide);\n      };\n    }\n  }, [visible, setVisible]);\n\n  const renderTooltipContent = React.useMemo(\n    () => () =>\n      `Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin\n    literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney\n    College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage,\n    and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem\n    Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum'`,\n    [],\n  );\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <MenuButton dimension=\"m\" items={menuModel} style={{ marginRight: 20 }}>\n        TEST\n      </MenuButton>\n      <MenuButton ref={btnRef} dimension=\"m\" items={menuModel}>\n        TEST WITH TOOLTIP\n      </MenuButton>\n      {visible && (\n        <Tooltip\n          dimension={props.dimension}\n          targetElement={btnRef.current}\n          renderContent={renderTooltipContent}\n          tooltipPosition={props.tooltipPosition}\n          style={{ minWidth: '200px', maxWidth: '300px' }}\n          id=\"test1\"\n        />\n      )}\n    </ThemeProvider>\n  );\n};\n"}}},name:"Tooltip. Базовый пример с MenuButton."},TooltipDelayStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(TooltipDelayTemplate,{...props,CSSCustomProps})};TooltipDelayStory.displayName="TooltipDelayStory";const TooltipDelayExample={render:TooltipDelayStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tooltip, TOOLTIP_DELAY, Button } from '@admiral-ds/react-ui';\nimport type { ITooltipProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ReactComponent as DeleteOutline } from '@admiral-ds/icons/build/system/DeleteOutline.svg';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nexport const TooltipDelayTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: ITooltipProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const btnRef = React.useRef<HTMLButtonElement | null>(null);\n  const [visible, setVisible] = React.useState(false);\n  const [timer, setTimer] = React.useState<number>();\n\n  React.useEffect(() => {\n    function show() {\n      setTimer(window.setTimeout(() => setVisible(true), TOOLTIP_DELAY));\n    }\n    function hide() {\n      clearTimeout(timer);\n      setVisible(false);\n    }\n    const button = btnRef.current;\n    if (button) {\n      /** Рекомендуется использовать именно addEventListener, так как React SyntheticEvent onMouseEnter\n       * отрабатывает некорректно в случае, если мышь была наведена на задизейбленный элемент,\n       * а затем была наведена на target элемент\n       * https://github.com/facebook/react/issues/19419 */\n      button.addEventListener('mouseenter', show);\n      button.addEventListener('focus', show);\n      button.addEventListener('mouseleave', hide);\n      button.addEventListener('blur', hide);\n      return () => {\n        if (timer) clearTimeout(timer);\n        button.removeEventListener('mouseenter', show);\n        button.removeEventListener('focus', show);\n        button.removeEventListener('mouseleave', hide);\n        button.removeEventListener('blur', hide);\n      };\n    }\n  }, [setTimer, setVisible, timer]);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <Button ref={btnRef} dimension=\"m\" displayAsSquare aria-label=\"Delete\" aria-describedby=\"test1\">\n        <DeleteOutline aria-hidden />\n      </Button>\n      {visible && (\n        <Tooltip\n          dimension={props.dimension}\n          targetElement={btnRef.current}\n          renderContent={() =>\n            `Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin\n          literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney\n          College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage,\n          and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem\n          Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum'`\n          }\n          tooltipPosition={props.tooltipPosition}\n          style={{ minWidth: '200px', maxWidth: '300px' }}\n          id=\"test1\"\n        />\n      )}\n    </ThemeProvider>\n  );\n};\n"}}},name:"Tooltip. Пример с задержкой в появлении."},TooltipRefStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(TooltipRefTemplate,{...props,CSSCustomProps})};TooltipRefStory.displayName="TooltipRefStory";const TooltipRefExample={render:TooltipRefStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport { Tooltip, Button } from '@admiral-ds/react-ui';\nimport type { ITooltipProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ReactComponent as DeleteOutline } from '@admiral-ds/icons/build/system/DeleteOutline.svg';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nexport const TooltipRefTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: ITooltipProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const tooltipRef = React.useRef(null);\n  const btnRef = React.useRef<HTMLButtonElement>(null);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    function show() {\n      setVisible(true);\n    }\n    function hide() {\n      setVisible(false);\n    }\n    const button = btnRef.current;\n    if (button) {\n      /** Рекомендуется использовать именно addEventListener, так как React SyntheticEvent onMouseEnter\n       * отрабатывает некорректно в случае, если мышь была наведена на задизейбленный элемент,\n       * а затем была наведена на target элемент\n       * https://github.com/facebook/react/issues/19419 */\n      button.addEventListener('mouseenter', show);\n      button.addEventListener('focus', show);\n      button.addEventListener('mouseleave', hide);\n      button.addEventListener('blur', hide);\n      return () => {\n        button.removeEventListener('mouseenter', show);\n        button.removeEventListener('focus', show);\n        button.removeEventListener('mouseleave', hide);\n        button.removeEventListener('blur', hide);\n      };\n    }\n  }, [setVisible]);\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <Button ref={btnRef} dimension=\"m\" displayAsSquare aria-label=\"Delete\" aria-describedby=\"test3\">\n        <DeleteOutline height={24} width={24} />\n      </Button>\n      {visible && (\n        <Tooltip\n          dimension={props.dimension}\n          targetElement={btnRef.current}\n          renderContent={() => 'Delete file'}\n          ref={tooltipRef}\n          tooltipPosition={props.tooltipPosition}\n          id=\"test3\"\n        />\n      )}\n    </ThemeProvider>\n  );\n};\n"}}},name:"Tooltip. Пример с получением ref тултипа."},TooltipCustomStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(TooltipCustomTemplate,{...props,CSSCustomProps})};TooltipCustomStory.displayName="TooltipCustomStory";const TooltipCustomExample={render:TooltipCustomStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport { Tooltip, Button, T, typography } from '@admiral-ds/react-ui';\nimport type { ITooltipProps, BorderRadiusType, TooltipDimension } from '@admiral-ds/react-ui';\nimport { ReactComponent as VIPOutline } from '@admiral-ds/icons/build/category/VIPOutline.svg';\n\nimport { createBorderRadiusSwapper } from '../../../../.storybook/createBorderRadiusSwapper';\n\nconst CustomP = styled.p<{ $dimension?: TooltipDimension }>`\n  padding: 0;\n  margin: 0;\n  color: var(--admiral-color-Neutral_Neutral00, ${(p) => p.theme.color['Neutral/Neutral 00']});\n  ${(p) => (p.$dimension === 'm' ? typography['Subtitle/Subtitle 3'] : typography['Caption/Caption 1'])};\n  ${(p) => (p.$dimension === 's' ? 'font-weight: bold;' : '')};\n`;\n\nexport const TooltipCustomTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: ITooltipProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const btnRef = React.useRef<HTMLButtonElement>(null);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    function show() {\n      setVisible(true);\n    }\n    function hide() {\n      setVisible(false);\n    }\n    const button = btnRef.current;\n    if (button) {\n      /** Рекомендуется использовать именно addEventListener, так как React SyntheticEvent onMouseEnter\n       * отрабатывает некорректно в случае, если мышь была наведена на задизейбленный элемент,\n       * а затем была наведена на target элемент\n       * https://github.com/facebook/react/issues/19419 */\n      button.addEventListener('mouseenter', show);\n      button.addEventListener('focus', show);\n      button.addEventListener('mouseleave', hide);\n      button.addEventListener('blur', hide);\n      return () => {\n        button.removeEventListener('mouseenter', show);\n        button.removeEventListener('focus', show);\n        button.removeEventListener('mouseleave', hide);\n        button.removeEventListener('blur', hide);\n      };\n    }\n  }, [setVisible]);\n\n  const renderTooltipContent = () => {\n    return (\n      <>\n        <CustomP $dimension={props.dimension}>Фамилия Имя Отчество</CustomP>\n        <T font={props.dimension === 'm' ? 'Body/Body 2 Short' : 'Caption/Caption 1'} color=\"Neutral/Neutral 00\">\n          Старший дизайнер\n        </T>\n      </>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <Button ref={btnRef} dimension=\"m\" displayAsSquare aria-label=\"Delete\" aria-describedby=\"test1\">\n        <VIPOutline aria-hidden />\n      </Button>\n      {visible && (\n        <Tooltip\n          dimension={props.dimension}\n          targetElement={btnRef.current}\n          renderContent={renderTooltipContent}\n          tooltipPosition={props.tooltipPosition}\n          id=\"test1\"\n        />\n      )}\n    </ThemeProvider>\n  );\n};\n"}}},name:"Tooltip. Пример с кастомным наполнением тултипа."};TooltipBaseExample.parameters={...TooltipBaseExample.parameters,docs:{...TooltipBaseExample.parameters?.docs,source:{originalSource:"{\n  render: TooltipBaseStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TooltipBaseRaw\n      }\n    }\n  },\n  name: 'Tooltip. Базовый пример.'\n}",...TooltipBaseExample.parameters?.docs?.source}}},TooltipMenuButtonExample.parameters={...TooltipMenuButtonExample.parameters,docs:{...TooltipMenuButtonExample.parameters?.docs,source:{originalSource:"{\n  render: TooltipMenuButtonStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TooltipMenuButtonRaw\n      }\n    }\n  },\n  name: 'Tooltip. Базовый пример с MenuButton.'\n}",...TooltipMenuButtonExample.parameters?.docs?.source}}},TooltipDelayExample.parameters={...TooltipDelayExample.parameters,docs:{...TooltipDelayExample.parameters?.docs,source:{originalSource:"{\n  render: TooltipDelayStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TooltipDelayRaw\n      }\n    }\n  },\n  name: 'Tooltip. Пример с задержкой в появлении.'\n}",...TooltipDelayExample.parameters?.docs?.source}}},TooltipRefExample.parameters={...TooltipRefExample.parameters,docs:{...TooltipRefExample.parameters?.docs,source:{originalSource:"{\n  render: TooltipRefStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TooltipRefRaw\n      }\n    }\n  },\n  name: 'Tooltip. Пример с получением ref тултипа.'\n}",...TooltipRefExample.parameters?.docs?.source}}},TooltipCustomExample.parameters={...TooltipCustomExample.parameters,docs:{...TooltipCustomExample.parameters?.docs,source:{originalSource:"{\n  render: TooltipCustomStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TooltipCustomRaw\n      }\n    }\n  },\n  name: 'Tooltip. Пример с кастомным наполнением тултипа.'\n}",...TooltipCustomExample.parameters?.docs?.source}}};const __namedExportsOrder=["TooltipBaseExample","TooltipMenuButtonExample","TooltipDelayExample","TooltipRefExample","TooltipCustomExample"]},"./node_modules/@admiral-ds/icons/build/system/DeleteOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgDeleteOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgDeleteOutline=function SvgDeleteOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12.65 2.66c0-.35-.3-.65-.65-.65-.36 0-.65.3-.65.65v1.99H4.33c-.36 0-.65.29-.65.65 0 .35.29.65.65.65h.69l.76 11.49c.1 1.58 1.4 2.81 2.99 2.81h6.36c1.57 0 2.9-1.23 2.99-2.81l.77-11.49h.79c.35 0 .65-.3.65-.65 0-.36-.3-.65-.65-.65h-7.03zM7.08 17.35l-.71-11.4h11.17l-.7 11.41c-.06.89-.8 1.59-1.7 1.59H8.78c-.9 0-1.64-.7-1.7-1.6m3.1-8.88c.35 0 .65.29.65.65v6.35c0 .35-.3.65-.65.65-.36 0-.65-.3-.65-.65V9.12c0-.36.29-.65.65-.65m4.3.65c0-.36-.3-.65-.65-.65-.36 0-.65.29-.65.65v6.35c0 .35.29.65.65.65.35 0 .65-.3.65-.65z"})))};__webpack_require__.p}}]);