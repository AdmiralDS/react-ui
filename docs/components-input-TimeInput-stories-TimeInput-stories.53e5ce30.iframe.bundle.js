"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[7584],{"./src/components/input/TimeInput/stories/TimeInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TimeInputIconAlternative:()=>TimeInputIconAlternative,TimeInputRange:()=>TimeInputRange,TimeInputRangeDisabled:()=>TimeInputRangeDisabled,TimeInputSimple:()=>TimeInputSimple,TimeInputSimpleDisabled:()=>TimeInputSimpleDisabled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TimeInput_stories});var _path,react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),TimeInput=__webpack_require__("./src/components/input/TimeInput/index.tsx"),types=__webpack_require__("./src/components/input/types.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),InputIconButton=__webpack_require__("./src/components/InputIconButton.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgGpsOutline=function SvgGpsOutline(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M18.59 5.33s-.01 0-.02.01L5.4 11.09l-.02.01c0 .01-.01.01-.01.01v.03c0 .02.01.03.01.04h.01s.01 0 .02.01l5.24.79c.72.11 1.28.67 1.39 1.39l.78 5.28c.01.01.01.02.01.02v.01c.01 0 .02.01.04.01h.03s0-.01.01-.01c0 0 0-.01.01-.02L18.64 5.4v-.03s0-.01-.01-.02c-.01-.02-.02-.02-.03-.02zm-.53-1.19c1.12-.49 2.25.65 1.77 1.78l-5.72 13.26c-.54 1.25-2.37 1.01-2.57-.34l-.79-5.27a.34.34 0 0 0-.29-.3l-5.24-.79c-1.34-.21-1.58-2.04-.34-2.58z"})))};__webpack_require__.p;var TimeSolid_path;function TimeSolid_extends(){return TimeSolid_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},TimeSolid_extends.apply(null,arguments)}var SvgTimeSolid=function SvgTimeSolid(props){return react.createElement("svg",TimeSolid_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),TimeSolid_path||(TimeSolid_path=react.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M12 3c-4.98 0-9 4.02-9 9 0 4.97 4.02 9 9 9a9 9 0 0 0 9-9c0-4.98-4.03-9-9-9m0 4.5c.35 0 .64.29.64.65V12H16c.35 0 .64.29.64.65s-.29.65-.64.65h-4c-.36 0-.65-.29-.65-.65v-4.5c0-.36.29-.65.65-.65"})))};__webpack_require__.p;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TimeInputIconAlternativeTemplate=props=>{const[localValue,setValue]=react.useState(String(props.value)??"");react.useEffect((()=>{void 0!==props.value&&setValue(String(props.value))}),[props.value]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(TimeInput.c,{...props,style:{maxWidth:"320px"},icons:(0,jsx_runtime.jsx)(InputIconButton.G,{icon:SvgGpsOutline,onClick:()=>setValue("12:00")}),icon:SvgTimeSolid,value:localValue,onChange:e=>{const inputValue=e.currentTarget.value;setValue(inputValue),props.onChange?.(e)},readOnly:!0,dropContainerClassName:"dropContainerClass"})})};try{TimeInputIconAlternativeTemplate.displayName="TimeInputIconAlternativeTemplate",TimeInputIconAlternativeTemplate.__docgenInfo={description:"",displayName:"TimeInputIconAlternativeTemplate",props:{value:{defaultValue:null,description:"Выбранное значение времени",name:"value",required:!1,type:{name:"string"}},startTime:{defaultValue:null,description:"Начало временного диапазона",name:"startTime",required:!1,type:{name:"string"}},endTime:{defaultValue:null,description:"Конец временного диапазона",name:"endTime",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Задизейбленный инпут",name:"disabled",required:!1,type:{name:"boolean"}},disabledSlots:{defaultValue:null,description:"Задизейбленное значение временного диапозона",name:"disabledSlots",required:!1,type:{name:"string[]"}},icon:{defaultValue:null,description:"Альтернативная иконка компонента",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},parser:{defaultValue:null,description:"Позволяет обрабатывать введенные значения",name:"parser",required:!1,type:{name:"((time?: string) => string)"}},alignDropdown:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПозволяет выравнивать позицию дропдаун контейнера относительно селекта.\nПринимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/TimeInput/stories/TimeInputIconAlternative.template.tsx#TimeInputIconAlternativeTemplate"]={docgenInfo:TimeInputIconAlternativeTemplate.__docgenInfo,name:"TimeInputIconAlternativeTemplate",path:"src/components/input/TimeInput/stories/TimeInputIconAlternative.template.tsx#TimeInputIconAlternativeTemplate"})}catch(__react_docgen_typescript_loader_error){}const TimeInputRangeTemplate=props=>{const[localValue,setValue]=react.useState(String(props.value)??"");react.useEffect((()=>{void 0!==props.value&&setValue(String(props.value))}),[props.value]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(TimeInput.c,{...props,style:{maxWidth:"320px"},startTime:"09:00",endTime:"18:00",value:localValue,onChange:e=>{const inputValue=e.currentTarget.value;setValue(inputValue),props.onChange?.(e)},dropContainerClassName:"dropContainerClass"})})};try{TimeInputRangeTemplate.displayName="TimeInputRangeTemplate",TimeInputRangeTemplate.__docgenInfo={description:"",displayName:"TimeInputRangeTemplate",props:{value:{defaultValue:null,description:"Выбранное значение времени",name:"value",required:!1,type:{name:"string"}},startTime:{defaultValue:null,description:"Начало временного диапазона",name:"startTime",required:!1,type:{name:"string"}},endTime:{defaultValue:null,description:"Конец временного диапазона",name:"endTime",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Задизейбленный инпут",name:"disabled",required:!1,type:{name:"boolean"}},disabledSlots:{defaultValue:null,description:"Задизейбленное значение временного диапозона",name:"disabledSlots",required:!1,type:{name:"string[]"}},icon:{defaultValue:null,description:"Альтернативная иконка компонента",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},parser:{defaultValue:null,description:"Позволяет обрабатывать введенные значения",name:"parser",required:!1,type:{name:"((time?: string) => string)"}},alignDropdown:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПозволяет выравнивать позицию дропдаун контейнера относительно селекта.\nПринимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/TimeInput/stories/TimeInputRange.template.tsx#TimeInputRangeTemplate"]={docgenInfo:TimeInputRangeTemplate.__docgenInfo,name:"TimeInputRangeTemplate",path:"src/components/input/TimeInput/stories/TimeInputRange.template.tsx#TimeInputRangeTemplate"})}catch(__react_docgen_typescript_loader_error){}const TimeInputRangeDisabledTemplate=props=>{const[localValue,setValue]=react.useState(String(props.value)??"");react.useEffect((()=>{void 0!==props.value&&setValue(String(props.value))}),[props.value]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(TimeInput.c,{...props,style:{maxWidth:"320px"},disabledSlots:["12:30","15:30","17:00","19:30"],startTime:"11:00",endTime:"20:00",value:localValue,onChange:e=>{const inputValue=e.currentTarget.value;setValue(inputValue),props.onChange?.(e)},dropContainerClassName:"dropContainerClass"})})};try{TimeInputRangeDisabledTemplate.displayName="TimeInputRangeDisabledTemplate",TimeInputRangeDisabledTemplate.__docgenInfo={description:"",displayName:"TimeInputRangeDisabledTemplate",props:{value:{defaultValue:null,description:"Выбранное значение времени",name:"value",required:!1,type:{name:"string"}},startTime:{defaultValue:null,description:"Начало временного диапазона",name:"startTime",required:!1,type:{name:"string"}},endTime:{defaultValue:null,description:"Конец временного диапазона",name:"endTime",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Задизейбленный инпут",name:"disabled",required:!1,type:{name:"boolean"}},disabledSlots:{defaultValue:null,description:"Задизейбленное значение временного диапозона",name:"disabledSlots",required:!1,type:{name:"string[]"}},icon:{defaultValue:null,description:"Альтернативная иконка компонента",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},parser:{defaultValue:null,description:"Позволяет обрабатывать введенные значения",name:"parser",required:!1,type:{name:"((time?: string) => string)"}},alignDropdown:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПозволяет выравнивать позицию дропдаун контейнера относительно селекта.\nПринимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/TimeInput/stories/TimeInputRangeDisabled.template.tsx#TimeInputRangeDisabledTemplate"]={docgenInfo:TimeInputRangeDisabledTemplate.__docgenInfo,name:"TimeInputRangeDisabledTemplate",path:"src/components/input/TimeInput/stories/TimeInputRangeDisabled.template.tsx#TimeInputRangeDisabledTemplate"})}catch(__react_docgen_typescript_loader_error){}var createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");const TimeInputSimpleTemplate=({themeBorderKind,CSSCustomProps,...props})=>{const[localValue,setValue]=react.useState(String(props.value)??"");react.useEffect((()=>{void 0!==props.value&&setValue(String(props.value))}),[props.value]);return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsx)(TimeInput.c,{...props,style:{maxWidth:"320px"},value:localValue,onChange:e=>{const inputValue=e.currentTarget.value;setValue(inputValue),props.onChange?.(e)},dropContainerClassName:"dropContainerClass"})})};TimeInputSimpleTemplate.displayName="TimeInputSimpleTemplate";try{TimeInputSimpleTemplate.displayName="TimeInputSimpleTemplate",TimeInputSimpleTemplate.__docgenInfo={description:"",displayName:"TimeInputSimpleTemplate",props:{value:{defaultValue:null,description:"Выбранное значение времени",name:"value",required:!1,type:{name:"string"}},startTime:{defaultValue:null,description:"Начало временного диапазона",name:"startTime",required:!1,type:{name:"string"}},endTime:{defaultValue:null,description:"Конец временного диапазона",name:"endTime",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Задизейбленный инпут",name:"disabled",required:!1,type:{name:"boolean"}},disabledSlots:{defaultValue:null,description:"Задизейбленное значение временного диапозона",name:"disabledSlots",required:!1,type:{name:"string[]"}},icon:{defaultValue:null,description:"Альтернативная иконка компонента",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},parser:{defaultValue:null,description:"Позволяет обрабатывать введенные значения",name:"parser",required:!1,type:{name:"((time?: string) => string)"}},alignDropdown:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПозволяет выравнивать позицию дропдаун контейнера относительно селекта.\nПринимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/TimeInput/stories/TimeInputSimple.template.tsx#TimeInputSimpleTemplate"]={docgenInfo:TimeInputSimpleTemplate.__docgenInfo,name:"TimeInputSimpleTemplate",path:"src/components/input/TimeInput/stories/TimeInputSimple.template.tsx#TimeInputSimpleTemplate"})}catch(__react_docgen_typescript_loader_error){}const TimeInputSimpleDisabledTemplate=props=>{const[localValue,setValue]=react.useState(String(props.value)??"");react.useEffect((()=>{void 0!==props.value&&setValue(String(props.value))}),[props.value]);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(TimeInput.c,{...props,style:{maxWidth:"320px"},disabledSlots:["01:00","03:30","05:00","07:30","10:00","12:30","15:30","17:00","19:30"],value:localValue,onChange:e=>{const inputValue=e.currentTarget.value;setValue(inputValue),props.onChange?.(e)},dropContainerClassName:"dropContainerClass"})})};try{TimeInputSimpleDisabledTemplate.displayName="TimeInputSimpleDisabledTemplate",TimeInputSimpleDisabledTemplate.__docgenInfo={description:"",displayName:"TimeInputSimpleDisabledTemplate",props:{value:{defaultValue:null,description:"Выбранное значение времени",name:"value",required:!1,type:{name:"string"}},startTime:{defaultValue:null,description:"Начало временного диапазона",name:"startTime",required:!1,type:{name:"string"}},endTime:{defaultValue:null,description:"Конец временного диапазона",name:"endTime",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Задизейбленный инпут",name:"disabled",required:!1,type:{name:"boolean"}},disabledSlots:{defaultValue:null,description:"Задизейбленное значение временного диапозона",name:"disabledSlots",required:!1,type:{name:"string[]"}},icon:{defaultValue:null,description:"Альтернативная иконка компонента",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},parser:{defaultValue:null,description:"Позволяет обрабатывать введенные значения",name:"parser",required:!1,type:{name:"((time?: string) => string)"}},alignDropdown:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПозволяет выравнивать позицию дропдаун контейнера относительно селекта.\nПринимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dimension:{defaultValue:null,description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:null,description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/TimeInput/stories/TimeInputSimpleDisabled.template.tsx#TimeInputSimpleDisabledTemplate"]={docgenInfo:TimeInputSimpleDisabledTemplate.__docgenInfo,name:"TimeInputSimpleDisabledTemplate",path:"src/components/input/TimeInput/stories/TimeInputSimpleDisabled.template.tsx#TimeInputSimpleDisabledTemplate"})}catch(__react_docgen_typescript_loader_error){}const Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"TimeInputstories__Desc",componentId:"sc-6tul1y-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"TimeInputstories__Separator",componentId:"sc-6tul1y-1"})(["height:20px;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Компонент для ввода-выбора времени. Поддерживается как ручной ввод, так и выбор через выпадающий список с фиксированным шагом в полчаса.",(0,jsx_runtime.jsx)(Separator,{}),"Компонент нельзя изменять по ширине."]});Description.displayName="Description";const TimeInput_stories={title:"Admiral-2.1/Input/TimeInput",component:TimeInput.c,decorators:void 0,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A60618"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A60644"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=39%3A60669"}]},argTypes:{dimension:{options:types.o,control:{type:"radio"}},status:{control:{type:"radio"},options:types.j},value:{control:{type:"text",disabled:!0},description:"Значение TimePicker"},onChange:{action:"onChange"},disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},displayClearIcon:{control:{type:"boolean"}},disableCopying:{control:{type:"boolean"}},isLoading:{control:{type:"boolean"}},showTooltip:{control:{type:"boolean"}},icons:{control:!1},icon:{control:!1},handleInput:{control:!1},startTime:{control:{type:"text"}},endTime:{control:{type:"text"}},disabledSlots:{control:!1},dropContainerCssMixin:{control:!1},dropContainerClassName:{control:!1},dropContainerStyle:{control:!1},containerRef:{control:!1},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},skeleton:{control:{type:"boolean"}}}},TimeInputSimpleStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(TimeInputSimpleTemplate,{...props,CSSCustomProps})};TimeInputSimpleStory.displayName="TimeInputSimpleStory";const TimeInputSimple={render:TimeInputSimpleStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport type { ChangeEvent } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { TimeInput } from '@admiral-ds/react-ui';\nimport type { TimeInputProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const TimeInputSimpleTemplate = ({\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: TimeInputProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {\n  const [localValue, setValue] = React.useState<string>(String(props.value) ?? '');\n\n  React.useEffect(() => {\n    if (props.value !== undefined) {\n      setValue(String(props.value));\n    }\n  }, [props.value]);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.currentTarget.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <TimeInput\n        {...props}\n        style={{ maxWidth: '320px' }}\n        value={localValue}\n        onChange={handleChange}\n        dropContainerClassName=\"dropContainerClass\"\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"Базовый компонент"},TimeInputIconAlternativeStory=props=>(0,jsx_runtime.jsx)(TimeInputIconAlternativeTemplate,{...props});TimeInputIconAlternativeStory.displayName="TimeInputIconAlternativeStory";const TimeInputIconAlternative={render:TimeInputIconAlternativeStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport type { ChangeEvent } from 'react';\n\nimport { InputIconButton, TimeInput } from '@admiral-ds/react-ui';\nimport type { TimeInputProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as GPSOutline } from '@admiral-ds/icons/build/location/GPSOutline.svg';\nimport { ReactComponent as TimeSolid } from '@admiral-ds/icons/build/system/TimeSolid.svg';\n\nexport const TimeInputIconAlternativeTemplate = (props: TimeInputProps) => {\n  const [localValue, setValue] = React.useState<string>(String(props.value) ?? '');\n\n  React.useEffect(() => {\n    if (props.value !== undefined) {\n      setValue(String(props.value));\n    }\n  }, [props.value]);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.currentTarget.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <>\n      <TimeInput\n        {...props}\n        style={{ maxWidth: '320px' }}\n        icons={<InputIconButton icon={GPSOutline} onClick={() => setValue('12:00')} />}\n        icon={TimeSolid}\n        value={localValue}\n        onChange={handleChange}\n        readOnly\n        dropContainerClassName=\"dropContainerClass\"\n      />\n    </>\n  );\n};\n"}}},name:"Компонент с дополнительной иконкой и альтернативной иконкой компонента"},TimeInputRangeStory=props=>(0,jsx_runtime.jsx)(TimeInputRangeTemplate,{...props});TimeInputRangeStory.displayName="TimeInputRangeStory";const TimeInputRange={render:TimeInputRangeStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport type { ChangeEvent } from 'react';\n\nimport { TimeInput } from '@admiral-ds/react-ui';\nimport type { TimeInputProps } from '@admiral-ds/react-ui';\n\nexport const TimeInputRangeTemplate = (props: TimeInputProps) => {\n  const [localValue, setValue] = React.useState<string>(String(props.value) ?? '');\n\n  React.useEffect(() => {\n    if (props.value !== undefined) {\n      setValue(String(props.value));\n    }\n  }, [props.value]);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.currentTarget.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n  return (\n    <>\n      <TimeInput\n        {...props}\n        style={{ maxWidth: '320px' }}\n        startTime=\"09:00\"\n        endTime=\"18:00\"\n        value={localValue}\n        onChange={handleChange}\n        dropContainerClassName=\"dropContainerClass\"\n      />\n    </>\n  );\n};\n"}}},name:"C диапазоном времени"},TimeInputRangeDisabledStory=props=>(0,jsx_runtime.jsx)(TimeInputRangeDisabledTemplate,{...props});TimeInputRangeDisabledStory.displayName="TimeInputRangeDisabledStory";const TimeInputRangeDisabled={render:TimeInputRangeDisabledStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport type { ChangeEvent } from 'react';\n\nimport { TimeInput } from '@admiral-ds/react-ui';\nimport type { TimeInputProps } from '@admiral-ds/react-ui';\n\nexport const TimeInputRangeDisabledTemplate = (props: TimeInputProps) => {\n  const [localValue, setValue] = React.useState<string>(String(props.value) ?? '');\n\n  React.useEffect(() => {\n    if (props.value !== undefined) {\n      setValue(String(props.value));\n    }\n  }, [props.value]);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.currentTarget.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n  return (\n    <>\n      <TimeInput\n        {...props}\n        style={{ maxWidth: '320px' }}\n        disabledSlots={['12:30', '15:30', '17:00', '19:30']}\n        startTime=\"11:00\"\n        endTime=\"20:00\"\n        value={localValue}\n        onChange={handleChange}\n        dropContainerClassName=\"dropContainerClass\"\n      />\n    </>\n  );\n};\n"}}},name:"C диапазоном времени и задизейбленными значениями"},TimeInputSimpleDisabledStory=props=>(0,jsx_runtime.jsx)(TimeInputSimpleDisabledTemplate,{...props});TimeInputSimpleDisabledStory.displayName="TimeInputSimpleDisabledStory";const TimeInputSimpleDisabled={render:TimeInputSimpleDisabledStory,parameters:{docs:{source:{code:"import * as React from 'react';\nimport type { ChangeEvent } from 'react';\n\nimport { TimeInput } from '@admiral-ds/react-ui';\nimport type { TimeInputProps } from '@admiral-ds/react-ui';\n\nexport const TimeInputSimpleDisabledTemplate = (props: TimeInputProps) => {\n  const [localValue, setValue] = React.useState<string>(String(props.value) ?? '');\n\n  React.useEffect(() => {\n    if (props.value !== undefined) {\n      setValue(String(props.value));\n    }\n  }, [props.value]);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.currentTarget.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n  return (\n    <>\n      <TimeInput\n        {...props}\n        style={{ maxWidth: '320px' }}\n        disabledSlots={['01:00', '03:30', '05:00', '07:30', '10:00', '12:30', '15:30', '17:00', '19:30']}\n        value={localValue}\n        onChange={handleChange}\n        dropContainerClassName=\"dropContainerClass\"\n      />\n    </>\n  );\n};\n"}}},name:"Базовый с задизейбленными значениями"};TimeInputSimple.parameters={...TimeInputSimple.parameters,docs:{...TimeInputSimple.parameters?.docs,source:{originalSource:"{\n  render: TimeInputSimpleStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TimeInputSimpleRaw\n      }\n    }\n  },\n  name: 'Базовый компонент'\n}",...TimeInputSimple.parameters?.docs?.source}}},TimeInputIconAlternative.parameters={...TimeInputIconAlternative.parameters,docs:{...TimeInputIconAlternative.parameters?.docs,source:{originalSource:"{\n  render: TimeInputIconAlternativeStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TimeInputIconAlternativeRaw\n      }\n    }\n  },\n  name: 'Компонент с дополнительной иконкой и альтернативной иконкой компонента'\n}",...TimeInputIconAlternative.parameters?.docs?.source}}},TimeInputRange.parameters={...TimeInputRange.parameters,docs:{...TimeInputRange.parameters?.docs,source:{originalSource:"{\n  render: TimeInputRangeStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TimeInputRangeRaw\n      }\n    }\n  },\n  name: 'C диапазоном времени'\n}",...TimeInputRange.parameters?.docs?.source}}},TimeInputRangeDisabled.parameters={...TimeInputRangeDisabled.parameters,docs:{...TimeInputRangeDisabled.parameters?.docs,source:{originalSource:"{\n  render: TimeInputRangeDisabledStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TimeInputRangeDisabledRaw\n      }\n    }\n  },\n  name: 'C диапазоном времени и задизейбленными значениями'\n}",...TimeInputRangeDisabled.parameters?.docs?.source}}},TimeInputSimpleDisabled.parameters={...TimeInputSimpleDisabled.parameters,docs:{...TimeInputSimpleDisabled.parameters?.docs,source:{originalSource:"{\n  render: TimeInputSimpleDisabledStory,\n  parameters: {\n    docs: {\n      source: {\n        code: TimeInputSimpleDisabledRaw\n      }\n    }\n  },\n  name: 'Базовый с задизейбленными значениями'\n}",...TimeInputSimpleDisabled.parameters?.docs?.source}}};const __namedExportsOrder=["TimeInputSimple","TimeInputIconAlternative","TimeInputRange","TimeInputRangeDisabled","TimeInputSimpleDisabled"]},"./node_modules/@admiral-ds/icons/build/service/CloseOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgCloseOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgCloseOutline=function SvgCloseOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",d:"M6.4 5.49a.63.63 0 0 0-.91 0c-.26.25-.26.66 0 .91l5.59 5.59-5.49 5.5c-.26.25-.26.66 0 .91.25.26.66.26.91 0l5.5-5.49 5.49 5.49c.25.26.66.26.91 0 .26-.25.26-.66 0-.91l-5.49-5.5L18.5 6.4c.26-.25.26-.66 0-.91a.63.63 0 0 0-.91 0L12 11.08z"})))};__webpack_require__.p},"./node_modules/@admiral-ds/icons/build/system/SmallArrowRightOutline.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>SvgSmallArrowRightOutline});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var SvgSmallArrowRightOutline=function SvgSmallArrowRightOutline(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fill:"#717681",fillRule:"evenodd",d:"M9.99 16.21c-.18 0-.35-.07-.48-.21a.66.66 0 0 1 .04-.92l3.49-3.15-3.48-3.02a.65.65 0 0 1-.04-.92c.24-.26.65-.28.92-.04l3.97 3.46c.31.28.31.76 0 1.04l-3.98 3.59c-.13.12-.28.17-.44.17"})))};__webpack_require__.p},"./src/components/common/utils/splice.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function splice(oldString,start,delCount,newSubStr){return oldString.slice(0,start)+newSubStr+oldString.slice(start+Math.abs(delCount))}__webpack_require__.d(__webpack_exports__,{V:()=>splice})},"./src/components/input/TimeInput/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>TimeInput});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),TimeOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/system/TimeOutline.svg"),TextInput=__webpack_require__("./src/components/input/TextInput/index.tsx"),refSetter=__webpack_require__("./src/components/common/utils/refSetter.ts"),splice=__webpack_require__("./src/components/common/utils/splice.ts");function isValidDigit(string,number){const onlyDigitString=string.replace(/\D+/g,"").slice(0,1);switch(number){case 0:return/^([0-2])?$/.test(onlyDigitString);case 1:case 4:return/^([0-9])?$/.test(onlyDigitString);case 2:return/^([0-3])?$/.test(onlyDigitString);case 3:return/^([0-5])?$/.test(onlyDigitString)}}function defaultTimeInputHandle(inputData){if(null===inputData)return{value:"__:__",selectionStart:0,selectionEnd:0};const selectionStart=inputData.selectionStart||0;let inputValue=inputData.value||"",moveCursor=0;const lengthDifference=inputValue.length-5;if(inputValue.length>5){const newChar=inputValue.charAt(selectionStart-1);if(/^([0-9])?$/.test(newChar)&&"_"===inputValue.charAt(selectionStart))inputValue=(0,splice.V)(inputValue,selectionStart,1,"").slice(0,5);else if(/^([0-9])?$/.test(newChar)&&":"===inputValue.charAt(selectionStart)&&"_"===inputValue.charAt(selectionStart+1))inputValue=(0,splice.V)(inputValue,selectionStart+1,1,newChar),inputValue=(0,splice.V)(inputValue,selectionStart-1,1,"").slice(0,5),moveCursor+=1;else if(/^([0-9])?$/.test(newChar)&&/^([0-9]|:)?$/.test(inputValue.charAt(selectionStart))){":"===inputValue.charAt(selectionStart)&&(moveCursor+=1);const spliced=(0,splice.V)(inputValue.replace(/:/g,""),selectionStart,1,"");inputValue=`${spliced.substring(0,2).replace(/\D/g,"_")}:${spliced.substring(2,4).replace(/\D/g,"_")}`}else inputValue=(0,splice.V)(inputValue,selectionStart-1,1,"").slice(0,5),moveCursor-=1}lengthDifference<0&&(inputValue=(0,splice.V)(inputValue,selectionStart,0,"__:__".substring(selectionStart,selectionStart+Math.abs(lengthDifference))));const cursorSymbolBeforeFormat=inputValue.charAt(selectionStart),spliced=inputValue.replace(/:/g,"");return inputValue=`${spliced.substring(0,2).replace(/\D/g,"_")}:${spliced.substring(2,4).replace(/\D/g,"_")}`,cursorSymbolBeforeFormat!==inputValue.charAt(selectionStart)&&(moveCursor+=1),inputValue.replace(/\D+/g,"").length>0&&(isValidDigit(inputValue[0],0)||(inputValue=(0,splice.V)(inputValue,0,1,"_"),moveCursor-=1),("2"===inputValue[0]?isValidDigit(inputValue[1],2):isValidDigit(inputValue[1],1))||(inputValue=(0,splice.V)(inputValue,1,1,"_"),moveCursor-=1),isValidDigit(inputValue[3],3)||(inputValue=(0,splice.V)(inputValue,3,1,"_"),moveCursor-=1),isValidDigit(inputValue[4],4)||(inputValue=(0,splice.V)(inputValue,4,1,"_"),moveCursor-=1)),{...inputData,value:inputValue,selectionStart:selectionStart+moveCursor,selectionEnd:selectionStart+moveCursor}}var changeInputData=__webpack_require__("./src/components/common/dom/changeInputData.ts");const parseStringToTime=(time="")=>(time=>/^([0-1]?[0-9]|2[0-3]):([0-5][0-9])?$/.test(time))(time)?time:"",getTimeInMinutes=str=>{const strParts=str.split(":");return 60*Number(strParts[0])+Number(strParts[1])};var typography=__webpack_require__("./src/components/Typography/typography.ts"),InputIconButton=__webpack_require__("./src/components/InputIconButton.tsx"),DropdownContainer=__webpack_require__("./src/components/DropdownContainer/index.tsx"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),Menu=__webpack_require__("./src/components/Menu/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const slots=[{value:"00:00",disabled:!1},{value:"00:30",disabled:!1},{value:"01:00",disabled:!1},{value:"01:30",disabled:!1},{value:"02:00",disabled:!1},{value:"02:30",disabled:!1},{value:"03:00",disabled:!1},{value:"03:30",disabled:!1},{value:"04:00",disabled:!1},{value:"04:30",disabled:!1},{value:"05:00",disabled:!1},{value:"05:30",disabled:!1},{value:"06:00",disabled:!1},{value:"06:30",disabled:!1},{value:"07:00",disabled:!1},{value:"07:30",disabled:!1},{value:"08:00",disabled:!1},{value:"08:30",disabled:!1},{value:"09:00",disabled:!1},{value:"09:30",disabled:!1},{value:"10:00",disabled:!1},{value:"10:30",disabled:!1},{value:"11:00",disabled:!1},{value:"11:30",disabled:!1},{value:"12:00",disabled:!1},{value:"12:30",disabled:!1},{value:"13:00",disabled:!1},{value:"13:30",disabled:!1},{value:"14:00",disabled:!1},{value:"14:30",disabled:!1},{value:"15:00",disabled:!1},{value:"15:30",disabled:!1},{value:"16:00",disabled:!1},{value:"16:30",disabled:!1},{value:"17:00",disabled:!1},{value:"17:30",disabled:!1},{value:"18:00",disabled:!1},{value:"18:30",disabled:!1},{value:"19:00",disabled:!1},{value:"19:30",disabled:!1},{value:"20:00",disabled:!1},{value:"20:30",disabled:!1},{value:"21:00",disabled:!1},{value:"21:30",disabled:!1},{value:"22:00",disabled:!1},{value:"22:30",disabled:!1},{value:"23:00",disabled:!1},{value:"23:30",disabled:!1}],StyledMenu=(0,styled_components_browser_esm.Ay)(Menu.W).withConfig({displayName:"TimeInput__StyledMenu",componentId:"sc-u7fg41-0"})(["&[data-dimension='xl']{",";height:288px;}&[data-dimension='m']{",";height:240px;}&[data-dimension='s']{",";height:192px;}"],typography.Il["Body/Body 1 Long"],typography.Il["Body/Body 1 Long"],typography.Il["Body/Body 2 Long"]),StyledMenuItem=(0,styled_components_browser_esm.Ay)(MenuItem.D).withConfig({displayName:"TimeInput__StyledMenuItem",componentId:"sc-u7fg41-1"})(["justify-content:center;"]),StyledTextInput=(0,styled_components_browser_esm.Ay)(TextInput.ks).withConfig({displayName:"TimeInput__StyledTextInput",componentId:"sc-u7fg41-2"})(["min-width:136px;"]),TimeInput=react.forwardRef((({startTime,endTime,dimension="m",disabled=!1,disabledSlots=[],parser=parseStringToTime,icon=TimeOutline.h,icons,alignDropdown="flex-end",alignSelf="flex-end",skeleton=!1,dropContainerCssMixin,dropContainerClassName,dropContainerStyle,...props},ref)=>{const handleInput=props.handleInput||defaultTimeInputHandle,[timeValue,setTimeValue]=(0,react.useState)(""),[activeOption,setActiveOption]=react.useState(""),inputContainerRef=(0,react.useRef)(null),inputRef=(0,react.useRef)(null),[isOpened,setIsOpened]=(0,react.useState)(!1),menuDimension="xl"===dimension?"l":dimension,handleButtonClick=e=>{if(e.preventDefault(),inputRef.current!==document.activeElement&&inputRef.current?.focus(),!isOpened){const inputTimeValue=parser(inputRef.current?.value);setTimeValue(inputTimeValue),availableSlots?availableSlots.find((slot=>slot.value===inputTimeValue))?setActiveOption(inputTimeValue):setActiveOption(availableSlots[0].value):setActiveOption("")}setIsOpened(!isOpened)},iconArray=react.Children.toArray(icons);props.readOnly||iconArray.push((0,jsx_runtime.jsx)(InputIconButton.G,{icon,onMouseDown:handleButtonClick,tabIndex:0}));const disableSlots=(defaultArray,disabledArr)=>{if(1!==disabledArr.length)return defaultArray.map((slot=>({...slot,disabled:disabledArr.includes(slot.value)})));{const disabledTime=defaultArray.find((slot=>slot.value===disabledArr[0]));if(disabledTime)return disabledTime.disabled=!0,[...defaultArray,disabledTime]}},filterTime=(t,start,end)=>{if(start&&!end){if(getTimeInMinutes(start)<=getTimeInMinutes(t))return t}else if(!start&&end){if(getTimeInMinutes(t)<=getTimeInMinutes(end))return t}else if(start&&end&&getTimeInMinutes(start)<=getTimeInMinutes(t)&&getTimeInMinutes(t)<=getTimeInMinutes(end))return t},availableSlots=!disabledSlots?.length&&(startTime||endTime||startTime&&endTime)?slots.filter((slot=>filterTime(slot.value,startTime,endTime))):disabledSlots?.length>0&&!(startTime||endTime||startTime&&endTime)?disableSlots(slots,disabledSlots):disabledSlots?.length>0&&(startTime||endTime||startTime&&endTime)?disableSlots(slots,disabledSlots)?.filter((slot=>filterTime(slot.value,startTime,endTime))):slots,model=react.useMemo((()=>availableSlots?availableSlots.map(((slot,index)=>({id:slot.value,render:options=>(0,jsx_runtime.jsx)(StyledMenuItem,{dimension:menuDimension,"data-dimension":dimension,disabled:slot.disabled,...options,children:slot.value},index),disabled:slot.disabled}))):[]),[availableSlots,dimension]),selectedPos=react.useRef();return react.useEffect((()=>{let focused=!1;function handleClick(){if(focused)return;const input=inputRef.current;if(focused=!0,input&&null!==input.selectionStart&&input.selectionStart===input.selectionEnd){const result=/[^:|\d]/gm.exec(input.value);if(result){const notDigitalPos=result.index,position=notDigitalPos<input.selectionStart?notDigitalPos:input.selectionStart;selectedPos.current=void 0,position>=0&&(input.selectionStart=position,input.selectionEnd=position)}}}function handleBlur(){focused=!1}return inputRef.current?.parentNode?.addEventListener("click",handleClick),inputRef.current?.addEventListener("blur",handleBlur),()=>{inputRef.current?.parentNode?.removeEventListener("click",handleClick),inputRef.current?.removeEventListener("blur",handleBlur)}}),[]),(0,jsx_runtime.jsx)(StyledTextInput,{...props,ref:(0,refSetter.d)(ref,inputRef),handleInput,icons:iconArray,containerRef:inputContainerRef,disabled,dimension,skeleton,children:availableSlots&&isOpened&&!disabled&&!skeleton&&(0,jsx_runtime.jsx)(DropdownContainer.a,{targetElement:inputRef.current,alignSelf:alignDropdown||alignSelf,onClickOutside:e=>{e.target&&inputContainerRef.current?.contains(e.target)||setIsOpened(!1)},dropContainerCssMixin,className:dropContainerClassName,style:dropContainerStyle,children:(0,jsx_runtime.jsx)(StyledMenu,{selected:timeValue,active:activeOption,model,dimension:menuDimension,"data-dimension":dimension,onSelectItem:option=>{inputRef.current&&(setTimeValue(option),(0,changeInputData.B)(inputRef.current,{value:option}),setIsOpened(!1))},onActivateItem:setActiveOption,preventFocusSteal:!0})})})}));TimeInput.displayName="TimeInput";try{TimeInput.displayName="TimeInput",TimeInput.__docgenInfo={description:"",displayName:"TimeInput",props:{value:{defaultValue:null,description:"Выбранное значение времени",name:"value",required:!1,type:{name:"string"}},startTime:{defaultValue:null,description:"Начало временного диапазона",name:"startTime",required:!1,type:{name:"string"}},endTime:{defaultValue:null,description:"Конец временного диапазона",name:"endTime",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Задизейбленный инпут",name:"disabled",required:!1,type:{name:"boolean"}},disabledSlots:{defaultValue:{value:"[]"},description:"Задизейбленное значение временного диапозона",name:"disabledSlots",required:!1,type:{name:"string[]"}},icon:{defaultValue:null,description:"Альтернативная иконка компонента",name:"icon",required:!1,type:{name:"FunctionComponent<SVGProps<SVGSVGElement>>"}},parser:{defaultValue:{value:"(time = ''): string => {\n  return isValidTime(time) ? time : '';\n}"},description:"Позволяет обрабатывать введенные значения",name:"parser",required:!1,type:{name:"((time?: string) => string)"}},alignDropdown:{defaultValue:{value:"flex-end"},description:"@deprecated Помечено как deprecated в версии 8.10.0, будет удалено в 10.x.x версии.\nВзамен используйте alignSelf\n\nПозволяет выравнивать позицию дропдаун контейнера относительно селекта.\nПринимает стандартные значения css свойства align-self (auto | flex-start | flex-end | center | baseline | stretch)",name:"alignDropdown",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dimension:{defaultValue:{value:"m"},description:"Делает высоту компонента больше или меньше обычной",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'}]}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:{value:"false"},description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:"Иконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},displayClearIcon:{defaultValue:null,description:"Отображать иконку очистки поля",name:"displayClearIcon",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"Отображать статус загрузки данных",name:"isLoading",required:!1,type:{name:"boolean"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"Отображение тултипа, по умолчанию true",name:"showTooltip",required:!1,type:{name:"boolean"}},alignSelf:{defaultValue:{value:"flex-end"},description:"Позволяет выравнивать контейнер с компонентами относительно тарджет компонента\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/TimeInput/index.tsx#TimeInput"]={docgenInfo:TimeInput.__docgenInfo,name:"TimeInput",path:"src/components/input/TimeInput/index.tsx#TimeInput"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/input/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>INPUT_STATUS_VALUES,o:()=>INPUT_DIMENSIONS_VALUES});const INPUT_DIMENSIONS_VALUES=["xl","m","s"],INPUT_STATUS_VALUES=["error","success"]}}]);