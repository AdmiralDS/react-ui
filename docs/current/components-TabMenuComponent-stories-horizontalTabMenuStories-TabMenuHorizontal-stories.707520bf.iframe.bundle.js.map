{"version":3,"file":"components-TabMenuComponent-stories-horizontalTabMenuStories-TabMenuHorizontal-stories.707520bf.iframe.bundle.js","mappingssources":["webpack://@admiral-ds/react-ui/","webpack://@admiral-ds/react-ui/./src/components/TabMenuComponent/tabs/HorizontalTab.tsx"],"sourcesContent":[null,"import { forwardRef, useState } from 'react';\nimport type { MouseEventHandler } from 'react';\n\nimport { uid } from '#src/components/common/uid';\n\nimport type { HorizontalTabProps } from '#src/components/TabMenuComponent/types';\nimport { BaseTab } from '#src/components/TabMenuComponent/tabs/BaseTab';\nimport styled from 'styled-components';\n\nconst HorizontalTabStyled = styled(BaseTab)<{ $adaptive: boolean }>((p) =>\n  p.$adaptive\n    ? `\n  display: flex;\n  justify-content: center;\n  width: 100%\n`\n    : `width: fit-content`,\n);\n\nexport const HorizontalTab = forwardRef<HTMLButtonElement, HorizontalTabProps>(\n  (\n    { dimension = 'l', adaptive, children, disabled, selected, onSelectTab, tabId, id, ...props }: HorizontalTabProps,\n    ref,\n  ) => {\n    const [defaultId] = useState(uid());\n    const idForTab = onSelectTab && id ? id : defaultId;\n\n    const handleTabClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n      const tabId = e.currentTarget.dataset.tabid || '';\n      e.currentTarget.scrollIntoView({ behavior: 'smooth', inline: 'center', block: 'nearest' });\n      onSelectTab?.(tabId);\n    };\n\n    return (\n      <HorizontalTabStyled\n        {...props}\n        $adaptive={adaptive === 'fill'}\n        role=\"tab\"\n        type=\"button\"\n        id={idForTab}\n        ref={ref}\n        data-tabid={tabId}\n        disabled={disabled}\n        $dimension={dimension}\n        $selected={selected}\n        onClick={handleTabClick}\n      >\n        {children}\n      </HorizontalTabStyled>\n    );\n  },\n);\nHorizontalTab.displayName = 'HorizontalTab';\n"],"names":[],"sourceRoot":""}