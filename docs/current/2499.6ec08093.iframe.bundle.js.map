{"version":3,"file":"2499.6ec08093.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;AAAA;AAAA;;;;;;;;;;;ACAA;AAAA;AAAA","sources":["webpack://@admiral-ds/react-ui/./src/components/TabMenuComponent/containerElements/HorizontalAddTabButton.tsx","webpack://@admiral-ds/react-ui/./src/components/TabMenuComponent/containerElements/HorizontalTabOverflowMenu.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport type { TabDimension } from '#src/components/TabMenuComponent/types';\nimport type { AddTabButtonProps } from '#src/components/TabMenuComponent/containerElements/types';\nimport {\n  ADD_TAB_BUTTON_CONTAINER_PADDING_L,\n  ADD_TAB_BUTTON_CONTAINER_PADDING_M,\n  ADD_TAB_BUTTON_CONTAINER_SIZE_L,\n  ADD_TAB_BUTTON_CONTAINER_SIZE_M,\n  FOCUS_BORDER_OFFSET_L,\n  FOCUS_BORDER_OFFSET_M,\n} from '#src/components/TabMenuComponent/constants';\nimport { IconPlacement } from '#src/components/IconPlacement';\nimport { TooltipHoc } from '#src/components/TooltipHOC';\nimport { ReactComponent as PlusOutline } from '@admiral-ds/icons/build/service/PlusOutline.svg';\n\nconst AddTabButtonContainer = styled.div<{ $dimension?: TabDimension }>`\n  box-sizing: border-box;\n  padding: ${(p) => (p.$dimension === 'l' ? ADD_TAB_BUTTON_CONTAINER_PADDING_L : ADD_TAB_BUTTON_CONTAINER_PADDING_M)}px;\n  ${(p) => `\n    width: ${p.$dimension === 'l' ? ADD_TAB_BUTTON_CONTAINER_SIZE_L : ADD_TAB_BUTTON_CONTAINER_SIZE_M}px;\n    height: ${p.$dimension === 'l' ? ADD_TAB_BUTTON_CONTAINER_SIZE_L : ADD_TAB_BUTTON_CONTAINER_SIZE_M}px;\n  `}\n`;\nconst StyledIconPlacement = styled(IconPlacement)<{ dimension?: TabDimension }>`\n  &:focus-visible:not(:disabled) {\n    outline-offset: ${(p) => (p.dimension === 'l' ? FOCUS_BORDER_OFFSET_L : FOCUS_BORDER_OFFSET_M)}px;\n    border-radius: 0;\n  }\n`;\nconst TooltipedIconPlacement = TooltipHoc(StyledIconPlacement);\n\nexport const HorizontalAddTabButton = ({ dimension = 'l', ...props }: AddTabButtonProps) => {\n  return (\n    <AddTabButtonContainer $dimension={dimension}>\n      <TooltipedIconPlacement\n        {...props}\n        dimension={dimension}\n        highlightFocus={false}\n        renderContent={() => `Создать вкладку`}\n      >\n        <PlusOutline />\n      </TooltipedIconPlacement>\n    </AddTabButtonContainer>\n  );\n};\nHorizontalAddTabButton.displayName = 'HorizontalAddTabButton';\n","import styled from 'styled-components';\n\nimport { OverflowMenu } from '#src/components/OverflowMenu';\n\nimport type { TabDimension } from '#src/components/TabMenuComponent/types';\nimport {\n  FOCUS_BORDER_OFFSET_L,\n  FOCUS_BORDER_OFFSET_M,\n  OVERFLOW_MENU_CONTAINER_PADDING_L,\n  OVERFLOW_MENU_CONTAINER_PADDING_M,\n  OVERFLOW_MENU_CONTAINER_SIZE_L,\n  OVERFLOW_MENU_CONTAINER_SIZE_M,\n} from '#src/components/TabMenuComponent/constants';\nimport type { TabOverflowMenuProps } from '#src/components/TabMenuComponent/containerElements/types';\n\nconst OverflowMenuContainer = styled.div<{ $isHidden?: boolean; $dimension?: TabDimension }>`\n  box-sizing: border-box;\n  visibility: ${(p) => (p.$isHidden ? 'hidden' : 'visible')};\n  padding: ${(p) => (p.$dimension === 'l' ? OVERFLOW_MENU_CONTAINER_PADDING_L : OVERFLOW_MENU_CONTAINER_PADDING_M)}px;\n  ${(p) => `\n    width: ${p.$dimension === 'l' ? OVERFLOW_MENU_CONTAINER_SIZE_L : OVERFLOW_MENU_CONTAINER_SIZE_M}px;\n    height: ${p.$dimension === 'l' ? OVERFLOW_MENU_CONTAINER_SIZE_L : OVERFLOW_MENU_CONTAINER_SIZE_M}px;\n  `}\n`;\nconst StyledOverflowMenu = styled(OverflowMenu)<{ dimension?: TabDimension }>`\n  &:focus-visible:not(:disabled) {\n    outline-offset: ${(p) => (p.dimension === 'l' ? FOCUS_BORDER_OFFSET_L : FOCUS_BORDER_OFFSET_M)}px;\n    border-radius: 0;\n  }\n`;\n\nexport const HorizontalTabOverflowMenu = ({ dimension = 'l', isHidden = false, ...props }: TabOverflowMenuProps) => {\n  return (\n    <OverflowMenuContainer $dimension={dimension} $isHidden={isHidden}>\n      <StyledOverflowMenu {...props} dimension={dimension} />\n    </OverflowMenuContainer>\n  );\n};\nHorizontalTabOverflowMenu.displayName = 'TabOverflowMenu';\n"],"names":[],"sourceRoot":""}