{"version":3,"file":"8555.fde1c2ec.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AAAA;AAGA;AAAA","sources":["webpack://@admiral-ds/react-ui/./src/components/FloatingButton/style.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport type { FloatingButtonProps } from '../FloatingButton';\nimport { Badge as BaseBadge } from '#src/components/Badge';\nimport { BadgeDot as BaseBadgeDot } from '#src/components/BadgeDot';\nimport { TooltipHoc } from '#src/components/TooltipHOC';\nimport { parseShadow } from '#src/components/common/utils/parseShadowFromTheme';\nimport type { FloatingButtonMenuProps } from './FloatingButtonMenu';\n\nconst focusVisibleStyle = css`\n  &:focus-visible {\n    outline-offset: 2px;\n    outline: var(--admiral-color-Primary_Primary60Main, ${(p) => p.theme.color['Primary/Primary 60 Main']}) solid 2px;\n  }\n`;\n\nconst primaryAppearanceMixin = css<{ $disabled: boolean }>`\n  background-color: ${({ theme, $disabled }) =>\n    $disabled\n      ? `var(--admiral-color-Neutral_Neutral10, ${theme.color['Neutral/Neutral 10']})`\n      : `var(--admiral-color-Primary_Primary60Main, ${theme.color['Primary/Primary 60 Main']})`};\n  & *[fill^='#'] {\n    fill: ${({ theme, $disabled }) =>\n      $disabled\n        ? `var(--admiral-color-Neutral_Neutral30, ${theme.color['Neutral/Neutral 30']})`\n        : `var(--admiral-color-Special_StaticWhite, ${theme.color['Special/Static White']})`};\n  }\n\n  ${({ theme, $disabled }) =>\n    $disabled\n      ? ''\n      : css`\n          &:hover {\n            background-color: var(--admiral-color-Primary_Primary70, ${theme.color['Primary/Primary 70']});\n          }\n\n          &:active {\n            background-color: var(--admiral-color-Primary_Primary80, ${theme.color['Primary/Primary 80']});\n          }\n        `}\n`;\n\nconst secondaryAppearanceMixin = css<{ $disabled: boolean }>`\n  background-color: var(--admiral-color-Special_ElevatedBG, ${(p) => p.theme.color['Special/Elevated BG']});\n  & *[fill^='#'] {\n    fill: ${({ theme, $disabled }) =>\n      $disabled\n        ? `var(--admiral-color-Neutral_Neutral30, ${theme.color['Neutral/Neutral 30']})`\n        : `var(--admiral-color-Primary_Primary60Main, ${theme.color['Primary/Primary 60 Main']})`};\n  }\n\n  ${({ theme, $disabled }) =>\n    $disabled\n      ? ''\n      : css`\n          &:hover {\n            background-color: var(--admiral-color-Opacity_Hover, ${theme.color['Opacity/Hover']});\n          }\n\n          &:active {\n            background-color: var(--admiral-color-Opacity_Press, ${theme.color['Opacity/Press']});\n          }\n        `}\n`;\n\nconst dimensionMixin = css<{ $dimension: FloatingButtonProps['dimension'] }>`\n  width: ${(p) => (p.$dimension == 'xl' ? 56 : 40)}px;\n  height: ${(p) => (p.$dimension == 'xl' ? 56 : 40)}px;\n\n  .floating_button_menu[data-dimension='xl'] && {\n    width: 56px;\n    height: 56px;\n    margin-bottom: 16px;\n  }\n  .floating_button_menu[data-dimension='m'] && {\n    width: 40px;\n    height: 40px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const FloatingButtonWrapper = styled.button<{\n  $dimension: FloatingButtonProps['dimension'];\n  $mobile: boolean;\n  disabled: boolean;\n}>`\n  position: fixed;\n  inset-inline-end: ${(p) => (p.$mobile ? 16 : 28)}px;\n  inset-block-end: ${(p) => (p.$mobile ? 16 : 28)}px;\n  display: block;\n  border: none;\n  border-radius: 50%;\n  appearance: none;\n  -webkit-tap-highlight-color: transparent;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  ${dimensionMixin};\n  cursor: ${(p) => (p.disabled ? 'not-allowed' : 'pointer')};\n  box-shadow: var(--admiral-box-shadow-Shadow08, ${(p) => parseShadow(p.theme.shadow['Shadow 08'])});\n  ${focusVisibleStyle}\n`;\n\nexport const FloatingButtonWrapperWithTooltip = TooltipHoc(FloatingButtonWrapper);\n\nexport const FloatingButtonContent = styled.div<{\n  $dimension: FloatingButtonProps['dimension'];\n  $appearance: FloatingButtonProps['appearance'];\n  $disabled: boolean;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: ${(p) => (p.$dimension == 'm' ? 8 : 16)}px;\n  border-radius: 50%;\n  ${(p) => (p.$appearance == 'primary' ? primaryAppearanceMixin : secondaryAppearanceMixin)}\n  .floating_button_menu && {\n    ${secondaryAppearanceMixin}\n  }\n\n  & > svg {\n    flex: 0 0 auto;\n    height: 24px;\n    width: 24px;\n  }\n`;\n\nconst badgeMixin = css`\n  position: absolute;\n  border: 1px solid var(--admiral-color-Neutral_Neutral00, ${(p) => p.theme.color['Neutral/Neutral 00']});\n`;\n\nexport const Badge = styled(BaseBadge)`\n  top: -3px;\n  inset-inline-end: -3px;\n  ${badgeMixin}\n  padding: ${({ dimension }) => (dimension === 's' ? '0 4px' : '0 5px')};\n`;\n\nexport const BadgeDot = styled(BaseBadgeDot)`\n  top: ${(p) => (p.dimension == 'm' ? 1 : 3)}px;\n  inset-inline-end: ${(p) => (p.dimension == 'm' ? 1 : 3)}px;\n  ${badgeMixin}\n`;\n\nexport const TRANSITION_DURATION = 200;\nconst OPEN_TIMING_FUNC = 'cubic-bezier(0, 0, 0.2, 1)';\nconst CLOSE_TIMING_FUNC = 'cubic-bezier(0.4, 0, 1, 1)';\n\nconst openTransitionMixin = `\n  ${TRANSITION_DURATION}ms ${OPEN_TIMING_FUNC} 0ms\n`;\nconst closeTransitionMixin = `\n  ${TRANSITION_DURATION}ms ${CLOSE_TIMING_FUNC} 0ms\n`;\n\nexport const GroupWrapper = styled.div<{\n  $dimension: FloatingButtonMenuProps['dimension'];\n  $mobile: boolean;\n  $dropContainerCssMixin?: FloatingButtonMenuProps['containerCssMixin'];\n}>`\n  position: fixed;\n  inset-inline-end: ${(p) => (p.$mobile ? 16 : 28)}px;\n  inset-block-end: ${(p) => (p.$mobile ? 16 : 28)}px;\n  box-sizing: border-box;\n  width: ${(p) => (p.$dimension == 'm' ? 40 : 56)}px;\n  height: auto;\n\n  & > div[data-visible='false'] {\n    margin-bottom: ${(p) => (p.$dimension == 'm' ? -20 : -28)}px;\n    opacity: 0;\n    transition:\n      margin-bottom ${closeTransitionMixin},\n      opacity ${closeTransitionMixin};\n  }\n  & > div[data-visible='true'] {\n    margin-bottom: ${(p) => (p.$dimension == 'm' ? 12 : 16)}px;\n    opacity: 1;\n    transition:\n      margin-bottom ${openTransitionMixin},\n      opacity ${openTransitionMixin};\n  }\n\n  & button {\n    position: relative;\n    inset-block-end: auto;\n    inset-inline-end: auto;\n  }\n\n  ${(p) => p.$dropContainerCssMixin || ''}\n`;\nexport const MenuWrapper = styled.div`\n  position: relative;\n  display: block;\n  box-sizing: border-box;\n\n  && > button:last-child {\n    margin: 0px;\n  }\n`;\n"],"names":[],"sourceRoot":""}