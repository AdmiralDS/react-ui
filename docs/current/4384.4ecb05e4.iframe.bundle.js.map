{"version":3,"file":"4384.4ecb05e4.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6OA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://@admiral-ds/react-ui/./src/components/input/Select/styled.ts"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { typography } from '#src/components/Typography';\nimport type { ComponentDimension } from '#src/components/input/types';\nimport { CHIP_OFFSET, COUNTER_WIDTH } from './constants';\nimport { mediumGroupBorderRadius } from '#src/components/themes/borderRadius';\nimport { parseShadow } from '#src/components/common/utils/parseShadowFromTheme';\nimport { skeletonMixin } from '../Container';\nimport { Menu } from '#src/components/Menu';\nimport { MenuItem } from '#src/components/Menu/MenuItem';\n\nconst getSelectValueHeight = (dimension?: ComponentDimension, multiple?: boolean) =>\n  dimension === 's' && !multiple ? 20 : 24;\n\nexport const BorderedDiv = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: 0;\n  pointer-events: none;\n  overflow: hidden;\n  min-width: 0;\n\n  background: none;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: inherit;\n`;\n\nconst ROW_HEIGHT = 24;\n\nconst rowHeightStyle = css<{\n  $dimension?: ComponentDimension;\n  $multiple?: boolean;\n  $opened?: boolean;\n  $minRowCount?: number;\n  $maxRowCount?: number;\n  $idleHeight: 'full' | 'fixed';\n}>`\n  min-height: ${({ $multiple, $minRowCount, $dimension }) => {\n    if (!$multiple) return `${$dimension === 's' ? 20 : 24}px`;\n\n    if (!$minRowCount) return `${ROW_HEIGHT}px`;\n\n    return `${ROW_HEIGHT * $minRowCount + ($minRowCount - 1) * 4}px`;\n  }};\n\n  max-height: ${({ $multiple, $maxRowCount, $opened, $idleHeight }) => {\n    if (!$multiple) return 'none';\n\n    if (!$maxRowCount) {\n      return !$opened && $idleHeight === 'fixed' ? `${ROW_HEIGHT}px` : 'none';\n    }\n\n    return `${ROW_HEIGHT * $maxRowCount + ($maxRowCount - 1) * 4}px`;\n  }};\n`;\n\nconst chipsShiftStyle = css`\n  > * {\n    margin-left: ${`-${COUNTER_WIDTH + CHIP_OFFSET}px`};\n  }\n\n  padding-left: ${`${COUNTER_WIDTH + CHIP_OFFSET}px`};\n`;\n\nexport const ValueWrapper = styled.div<{\n  $dimension?: ComponentDimension;\n  $multiple?: boolean;\n  $minRowCount?: number;\n  $maxRowCount?: number;\n  $idleHeight: 'full' | 'fixed';\n  $isEmpty?: boolean;\n  $opened?: boolean;\n}>`\n  flex: 1 1 auto;\n  display: flex;\n  overflow: hidden;\n\n  ${({ $multiple, $isEmpty }) => $multiple && !$isEmpty && chipsShiftStyle}\n\n  gap: 4px;\n  flex-wrap: ${({ $multiple }) => ($multiple ? 'wrap' : 'unset')};\n  align-items: center;\n  align-content: flex-start;\n\n  ${(props) => (props.$dimension === 's' ? typography['Body/Body 2 Long'] : typography['Body/Body 1 Long'])}\n  color: var(--admiral-color-Neutral_Neutral90, ${(p) => p.theme.color['Neutral/Neutral 90']});\n\n  ${rowHeightStyle}\n  [data-disabled='true'] &&& {\n    color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n  }\n`;\n\nexport const StringValueWrapper = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst ieFixes = css`\n  ::-ms-clear,\n  ::-ms-reveal {\n    display: none;\n  }\n`;\n\nexport const Input = styled.input<{ $dimension?: ComponentDimension; $isMultiple?: boolean }>`\n  outline: none;\n  appearance: none;\n\n  box-sizing: border-box;\n  flex: 1 1 auto;\n  width: 1px;\n  border: none;\n  background: transparent;\n  text-overflow: ellipsis;\n  padding: 0;\n\n  color: var(--admiral-color-Neutral_Neutral90, ${(p) => p.theme.color['Neutral/Neutral 90']});\n\n  ${({ $dimension }) => ($dimension === 's' ? typography['Body/Body 2 Long'] : typography['Body/Body 1 Long'])}\n  &::placeholder {\n    color: var(--admiral-color-Neutral_Neutral50, ${(p) => p.theme.color['Neutral/Neutral 50']});\n  }\n\n  &:read-only {\n    cursor: inherit;\n  }\n\n  &:disabled,\n  &:disabled::placeholder {\n    cursor: inherit;\n    color: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n  }\n\n  [data-disable-copying] & {\n    user-select: none;\n    pointer-events: none;\n  }\n\n  height: ${({ $dimension, $isMultiple }) => `${getSelectValueHeight($dimension, $isMultiple)}px`};\n\n  ${ieFixes};\n`;\n\nconst disableEventMixin = css`\n  pointer-events: none;\n  cursor: default;\n`;\n\nconst disabledStyle = css`\n  && > *:not(${ValueWrapper}) {\n    pointer-events: none;\n  }\n\n  & ${BorderedDiv} {\n    border-color: transparent;\n  }\n`;\n\nconst focusedStyle = css`\n  ${BorderedDiv} {\n    border-width: 2px;\n  }\n`;\n\nexport const IconPanel = styled.div<{ $multiple?: boolean; $dimension?: ComponentDimension }>`\n  flex: 0 0 auto;\n\n  display: flex;\n  align-items: center;\n\n  padding: ${({ $dimension, $multiple }) => ($dimension === 's' && $multiple ? '2px 0' : '0')};\n\n  & > * {\n    margin-left: 8px;\n    display: block;\n    width: ${({ $dimension }) => ($dimension === 's' ? 20 : 24)}px;\n    height: ${({ $dimension }) => ($dimension === 's' ? 20 : 24)}px;\n  }\n\n  [data-disabled='true'] &&& {\n    & *[fill^='#'] {\n      fill: var(--admiral-color-Neutral_Neutral30, ${(p) => p.theme.color['Neutral/Neutral 30']});\n    }\n  }\n`;\n\nexport const SelectWrapper = styled.div<{\n  disabled?: boolean;\n  $readonly?: boolean;\n  $isLoading?: boolean;\n  $focused: boolean;\n  $multiple: boolean;\n  $dimension?: ComponentDimension;\n  $skeleton?: boolean;\n}>`\n  position: relative;\n  box-sizing: border-box;\n  display: flex;\n  align-items: ${(p) => (p.$multiple ? 'flex-start' : 'center')};\n  cursor: ${({ disabled, $readonly, $isLoading }) =>\n    disabled ? 'not-allowed' : $readonly || $isLoading ? 'default' : 'pointer'};\n\n  padding: ${({ $dimension, $multiple }) => {\n    switch ($dimension) {\n      case 'xl':\n        return '16px 16px';\n      case 's':\n        return $multiple ? '4px 12px' : '6px 12px';\n      default:\n        return '8px 16px';\n    }\n  }};\n\n  background: ${({ theme, disabled, $readonly }) =>\n    disabled || $readonly\n      ? `var(--admiral-color-Neutral_Neutral10, ${theme.color['Neutral/Neutral 10']})`\n      : `var(--admiral-color-Neutral_Neutral00, ${theme.color['Neutral/Neutral 00']})`};\n\n  ${({ disabled, $readonly }) => ($readonly || disabled ? disabledStyle : '')};\n  ${({ $focused, $readonly, $isLoading }) => ($focused && !$readonly && !$isLoading ? focusedStyle : '')};\n\n  & ${BorderedDiv} {\n    border-color: ${(p) =>\n      p.disabled || p.$readonly\n        ? 'transparent'\n        : p.$focused && !p.$isLoading\n          ? `var(--admiral-color-Primary_Primary60Main, ${p.theme.color['Primary/Primary 60 Main']})`\n          : `var(--admiral-color-Neutral_Neutral40, ${p.theme.color['Neutral/Neutral 40']})`};\n  }\n\n  &:hover ${BorderedDiv} {\n    ${(p) =>\n      !p.disabled &&\n      !p.$readonly &&\n      !p.$focused &&\n      !p.$isLoading &&\n      `\n      border-color: var(--admiral-color-Neutral_Neutral60, ${p.theme.color['Neutral/Neutral 60']});\n    `};\n  }\n\n  &[data-status='success'] {\n    ${(p) =>\n      !p.disabled &&\n      !p.$readonly &&\n      !p.$isLoading &&\n      `\n      ${BorderedDiv} {\n      border-color: var(--admiral-color-Success_Success50Main, ${p.theme.color['Success/Success 50 Main']});\n      }\n      &:hover ${BorderedDiv} {\n        border-color: var(--admiral-color-Success_Success60, ${p.theme.color['Success/Success 60']});\n      }\n    `}\n  }\n\n  &[data-status='error'],\n  &:user-invalid {\n    ${(p) =>\n      !p.disabled &&\n      !p.$readonly &&\n      !p.$isLoading &&\n      `\n      ${BorderedDiv} {\n        border-color: var(--admiral-color-Error_Error60Main, ${p.theme.color['Error/Error 60 Main']});\n      }\n  \n      &:hover ${BorderedDiv} {\n        border-color: var(--admiral-color-Error_Error70, ${p.theme.color['Error/Error 70']});\n      }\n    `}\n  }\n\n  border-radius: ${(p) =>\n    p.$skeleton ? 0 : `var(--admiral-border-radius-Medium, ${mediumGroupBorderRadius(p.theme.shape)})`};\n\n  ${({ $skeleton }) => $skeleton && skeletonMixin};\n  ${({ $skeleton }) => $skeleton && disableEventMixin};\n`;\n\nexport const OptionWrapper = styled.div<{ $dimension?: ComponentDimension }>`\n  flex: 0 0 auto;\n\n  word-break: break-word;\n  display: flex;\n  align-items: center;\n  padding: ${({ $dimension }) => {\n    switch ($dimension) {\n      case 'xl':\n        return '12px 16px';\n      case 's':\n        return '6px 12px';\n      default:\n        return '8px 16px';\n    }\n  }};\n\n  background-color: transparent;\n\n  ${({ $dimension }) => {\n    switch ($dimension) {\n      case 'xl':\n        return typography['Body/Body 1 Long'];\n      case 's':\n        return typography['Body/Body 2 Long'];\n      default:\n        return typography['Body/Body 1 Short'];\n    }\n  }}\n`;\n\nconst ShadowContainerMixin = css`\n  ${typography['Body/Body 1 Short']}\n  color: var(--admiral-color-Neutral_Neutral90, ${(p) => p.theme.color['Neutral/Neutral 90']});\n  background-color: var(--admiral-color-Special_ElevatedBG, ${(p) => p.theme.color['Special/Elevated BG']});\n  border-radius: var(--admiral-border-radius-Medium, ${(p) => mediumGroupBorderRadius(p.theme.shape)});\n  box-shadow: var(--admiral-box-shadow-Shadow08, ${(p) => parseShadow(p.theme.shadow['Shadow 08'])});\n  overflow: auto;\n`;\n\nexport const StyledMenu = styled(Menu)`\n  ${ShadowContainerMixin}\n`;\n\nexport const EmptyMessageWrapper = styled.div`\n  user-select: none;\n`;\n\nexport const CustomOptionWrapper = styled(MenuItem)<{\n  $selected?: boolean;\n  $hovered?: boolean;\n  $preselected?: boolean;\n  $multiple?: boolean;\n}>`\n  justify-content: flex-start;\n  flex-wrap: nowrap;\n  white-space: pre-wrap;\n  ${(props) =>\n    props.$selected && !props.$hovered && !props.$preselected && props.$multiple && 'background-color: transparent;'}\n`;\n"],"names":[],"sourceRoot":""}