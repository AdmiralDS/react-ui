"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[438],{"./src/components/common/utils/splitDataAttributes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$e:()=>passFormFieldDataAttributes,CR:()=>passMenuDataAttributes,D9:()=>passDataAttributes,G:()=>passFormFieldContainerDataAttributes,G$:()=>FORM_FIELD_DATA_CONTAINER_ATTRIBUTE,c$:()=>passDropdownDataAttributes});var FORM_FIELD_DATA_CONTAINER_ATTRIBUTE="data-container";function passFormFieldContainerDataAttributes(initialProps,containerProps){passDataAttributes(initialProps,containerProps,FORM_FIELD_DATA_CONTAINER_ATTRIBUTE,!0)}function passFormFieldDataAttributes(initialProps,containerProps){passDataAttributes(initialProps,containerProps,"data-field",!1)}function passDropdownDataAttributes(initialProps){var dropMenuProps={};return passDataAttributes(initialProps,dropMenuProps,"data-dropdown-container",!0),dropMenuProps}function passMenuDataAttributes(initialProps){var menuProps={};return passDataAttributes(initialProps,menuProps,"data-menu",!0),menuProps}function passDataAttributes(sourceProps,destinationProps,dataAttributesStart,deleteProp){Object.keys(sourceProps).forEach(function(key){"string"==typeof key&&key.startsWith(dataAttributesStart)&&(destinationProps[key]=sourceProps[key],deleteProp&&delete sourceProps[key])})}},"./src/components/form/EditModeAreaField/stories/EditModeAreaField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EditModeAreaFieldErrorState:()=>EditModeAreaFieldErrorState,EditModeAreaFieldExtraText:()=>EditModeAreaFieldExtraText,EditModeAreaFieldPlayground:()=>EditModeAreaFieldPlayground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>EditModeAreaField_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),uid=__webpack_require__("./src/components/common/uid.ts"),refSetter=__webpack_require__("./src/components/common/utils/refSetter.ts"),Field=__webpack_require__("./src/components/Field/index.tsx"),EditModeArea=__webpack_require__("./src/components/input/EditModeArea/index.tsx"),splitDataAttributes=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}var EditModeAreaField=(0,react.forwardRef)(function(props,ref){var inputRef=(0,react.useRef)(null),className=props.className,maxLength=props.maxLength,displayInline=props.displayInline,status=props.status,required=props.required,extraText=props.extraText,label=props.label,_props_id=props.id,id=void 0===_props_id?(0,uid.L)():_props_id,disabled=props.disabled,displayCharacterCounter=props.displayCharacterCounter,restProps=_object_without_properties(props,["className","maxLength","displayInline","status","required","extraText","label","id","disabled","displayCharacterCounter"]),fieldContainerProps={className:className,extraText:extraText,status:status,required:required,label:label,id:id,displayInline:displayInline,disabled:disabled,maxLength:maxLength,inputRef:inputRef,displayCharacterCounter:displayCharacterCounter,"data-field-id":id,"data-field-name":restProps.name};(0,splitDataAttributes.$e)(restProps,fieldContainerProps),(0,splitDataAttributes.G)(restProps,fieldContainerProps);var inputProps=_object_spread({ref:(0,refSetter.d)(ref,inputRef),id:id,"aria-required":required,status:status,disabled:disabled,maxLength:maxLength},restProps);return(0,jsx_runtime.jsx)(Field.D0,_object_spread_props(_object_spread({},fieldContainerProps),{children:(0,jsx_runtime.jsx)(EditModeArea.p,_object_spread({},inputProps))}))});EditModeAreaField.displayName="EditModeAreaField";try{EditModeAreaField.displayName="EditModeAreaField",EditModeAreaField.__docgenInfo={description:"",displayName:"EditModeAreaField",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:null,description:"Значение компонента",name:"value",required:!0,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},characterCounterVisibilityThreshold:{defaultValue:null,description:"Коэффициент влияющий на появление счетчика при заданном максимальном количестве символов:\n0 - всегда видим\n1 - всегда невидим\nпо умолчанию 0.8 - становится видимым при наборе более 80% символов от максимально допустимого количества",name:"characterCounterVisibilityThreshold",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/index.tsx#EditModeAreaField"]={docgenInfo:EditModeAreaField.__docgenInfo,name:"EditModeAreaField",path:"src/components/form/EditModeAreaField/index.tsx#EditModeAreaField"})}catch(__react_docgen_typescript_loader_error){}var types=__webpack_require__("./src/components/input/types.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function EditModeAreaFieldPlayground_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function EditModeAreaFieldPlayground_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){EditModeAreaFieldPlayground_template_define_property(target,key,source[key])})}return target}function EditModeAreaFieldPlayground_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function EditModeAreaFieldPlayground_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):EditModeAreaFieldPlayground_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function EditModeAreaFieldPlayground_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=EditModeAreaFieldPlayground_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function EditModeAreaFieldPlayground_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var EditModeAreaFieldPlaygroundTemplate=function(_param){var _String,_param_value=_param.value,themeBorderKind=_param.themeBorderKind,props=EditModeAreaFieldPlayground_template_object_without_properties(_param,["value","themeBorderKind"]),_React_useState=_sliced_to_array(react.useState(null!==(_String=String(void 0===_param_value?"Admin":_param_value))&&void 0!==_String?_String:""),2),localValue=_React_useState[0],setValue=_React_useState[1];return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind),children:(0,jsx_runtime.jsx)(EditModeAreaField,EditModeAreaFieldPlayground_template_object_spread_props(EditModeAreaFieldPlayground_template_object_spread({"data-container-id":"editModeFieldIdOne"},props),{value:localValue,onChange:function(e){var _props_onChange;setValue(e.target.value),null===(_props_onChange=props.onChange)||void 0===_props_onChange||_props_onChange.call(props,e)},label:"Label"}))})};try{EditModeAreaFieldPlaygroundTemplate.displayName="EditModeAreaFieldPlaygroundTemplate",EditModeAreaFieldPlaygroundTemplate.__docgenInfo={description:"",displayName:"EditModeAreaFieldPlaygroundTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Admin"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},characterCounterVisibilityThreshold:{defaultValue:null,description:"Коэффициент влияющий на появление счетчика при заданном максимальном количестве символов:\n0 - всегда видим\n1 - всегда невидим\nпо умолчанию 0.8 - становится видимым при наборе более 80% символов от максимально допустимого количества",name:"characterCounterVisibilityThreshold",required:!1,type:{name:"number"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/stories/EditModeAreaFieldPlayground.template.tsx#EditModeAreaFieldPlaygroundTemplate"]={docgenInfo:EditModeAreaFieldPlaygroundTemplate.__docgenInfo,name:"EditModeAreaFieldPlaygroundTemplate",path:"src/components/form/EditModeAreaField/stories/EditModeAreaFieldPlayground.template.tsx#EditModeAreaFieldPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}function EditModeAreaFieldErrorState_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function EditModeAreaFieldErrorState_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function EditModeAreaFieldErrorState_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function EditModeAreaFieldErrorState_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function EditModeAreaFieldErrorState_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=EditModeAreaFieldErrorState_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function EditModeAreaFieldErrorState_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function EditModeAreaFieldErrorState_template_sliced_to_array(arr,i){return EditModeAreaFieldErrorState_template_array_with_holes(arr)||EditModeAreaFieldErrorState_template_iterable_to_array_limit(arr,i)||EditModeAreaFieldErrorState_template_unsupported_iterable_to_array(arr,i)||EditModeAreaFieldErrorState_template_non_iterable_rest()}function EditModeAreaFieldErrorState_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return EditModeAreaFieldErrorState_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return EditModeAreaFieldErrorState_template_array_like_to_array(o,minLen)}}var EditModeAreaFieldErrorStateTemplate=function(_param){var _String,_param_value=_param.value,props=EditModeAreaFieldErrorState_template_object_without_properties(_param,["value"]),_useState=EditModeAreaFieldErrorState_template_sliced_to_array((0,react.useState)(null!==(_String=String(void 0===_param_value?"Admin":_param_value))&&void 0!==_String?_String:""),2),localValue=_useState[0],setValue=_useState[1],_useState1=EditModeAreaFieldErrorState_template_sliced_to_array((0,react.useState)(void 0),2),status=_useState1[0],setStatus=_useState1[1],_useState2=EditModeAreaFieldErrorState_template_sliced_to_array((0,react.useState)(void 0),2),extraText=_useState2[0],setExtraText=_useState2[1];return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(EditModeAreaField,{value:localValue,onChange:function(e){var _props_onChange,inputValue=e.target.value;inputValue.length>6?(setStatus("error"),setExtraText("Поле не прошло валидацию, необходимо ввести корректное значение")):(setStatus(void 0),setExtraText(void 0)),setValue(inputValue),null===(_props_onChange=props.onChange)||void 0===_props_onChange||_props_onChange.call(props,e)},onSubmit:function(){return setExtraText(void 0)},status:status,label:"Поле для ввода логина (не более 6 символов)",extraText:extraText})})};try{EditModeAreaFieldErrorStateTemplate.displayName="EditModeAreaFieldErrorStateTemplate",EditModeAreaFieldErrorStateTemplate.__docgenInfo={description:"",displayName:"EditModeAreaFieldErrorStateTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Admin"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},characterCounterVisibilityThreshold:{defaultValue:null,description:"Коэффициент влияющий на появление счетчика при заданном максимальном количестве символов:\n0 - всегда видим\n1 - всегда невидим\nпо умолчанию 0.8 - становится видимым при наборе более 80% символов от максимально допустимого количества",name:"characterCounterVisibilityThreshold",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/stories/EditModeAreaFieldErrorState.template.tsx#EditModeAreaFieldErrorStateTemplate"]={docgenInfo:EditModeAreaFieldErrorStateTemplate.__docgenInfo,name:"EditModeAreaFieldErrorStateTemplate",path:"src/components/form/EditModeAreaField/stories/EditModeAreaFieldErrorState.template.tsx#EditModeAreaFieldErrorStateTemplate"})}catch(__react_docgen_typescript_loader_error){}var T=__webpack_require__("./src/components/T/index.tsx");function EditModeAreaFieldExtraText_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function EditModeAreaFieldExtraText_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function EditModeAreaFieldExtraText_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function EditModeAreaFieldExtraText_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function EditModeAreaFieldExtraText_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=EditModeAreaFieldExtraText_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function EditModeAreaFieldExtraText_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function EditModeAreaFieldExtraText_template_sliced_to_array(arr,i){return EditModeAreaFieldExtraText_template_array_with_holes(arr)||EditModeAreaFieldExtraText_template_iterable_to_array_limit(arr,i)||EditModeAreaFieldExtraText_template_unsupported_iterable_to_array(arr,i)||EditModeAreaFieldExtraText_template_non_iterable_rest()}function EditModeAreaFieldExtraText_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return EditModeAreaFieldExtraText_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return EditModeAreaFieldExtraText_template_array_like_to_array(o,minLen)}}var EditModeAreaFieldExtraTextTemplate=function(_param){var _String,_param_value=_param.value,props=EditModeAreaFieldExtraText_template_object_without_properties(_param,["value"]),_useState=EditModeAreaFieldExtraText_template_sliced_to_array((0,react.useState)(null!==(_String=String(void 0===_param_value?"Admin":_param_value))&&void 0!==_String?_String:""),2),localValue=_useState[0],setValue=_useState[1],_useState1=EditModeAreaFieldExtraText_template_sliced_to_array((0,react.useState)(void 0),2),extraText=_useState1[0],setExtraText=_useState1[1];return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",style:{marginBottom:"24px"},children:"В режиме редактирования допускается использование поясняющего текста для инпута."}),(0,jsx_runtime.jsx)(EditModeAreaField,{value:localValue,onChange:function(e){var _props_onChange;setValue(e.target.value),null===(_props_onChange=props.onChange)||void 0===_props_onChange||_props_onChange.call(props,e)},onEdit:function(){return setExtraText("Additional text")},onConfirm:function(){return setExtraText(void 0)},label:"Поле для ввода логина (не более 6 символов)",extraText:extraText})]})};try{EditModeAreaFieldExtraTextTemplate.displayName="EditModeAreaFieldExtraTextTemplate",EditModeAreaFieldExtraTextTemplate.__docgenInfo={description:"",displayName:"EditModeAreaFieldExtraTextTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Admin"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:"Функция обработчика события нажатия кнопки начала редактирования\n@param value - значение поля ввода для редактирования",name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:"Функция обработчика события нажатия кнопки подтверждения введенного значения\n@param value - отредактированное значение поля ввода",name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:"Функция обработчика события нажатия кнопки отмены\n@param value - значение поля ввода до нажатия кнопки редактирования",name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:"Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на\nвыход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.",name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},icons:{defaultValue:null,description:"@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.\nВзамен используйте iconsAfter\n\nИконки для отображения в правом углу поля",name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:"Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.\nИспользуется для создания масок ввода",name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Имя поля формы",name:"label",required:!1,type:{name:"ReactNode"}},extraText:{defaultValue:null,description:"Текст будет виден ниже компонента",name:"extraText",required:!1,type:{name:"ReactNode"}},displayInline:{defaultValue:null,description:"Отображать лейбл в одну строчку с инпутом",name:"displayInline",required:!1,type:{name:"boolean"}},displayCharacterCounter:{defaultValue:null,description:"Позволяет отключать появление счетчика символов при задании maxLength",name:"displayCharacterCounter",required:!1,type:{name:"boolean"}},characterCounterVisibilityThreshold:{defaultValue:null,description:"Коэффициент влияющий на появление счетчика при заданном максимальном количестве символов:\n0 - всегда видим\n1 - всегда невидим\nпо умолчанию 0.8 - становится видимым при наборе более 80% символов от максимально допустимого количества",name:"characterCounterVisibilityThreshold",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form/EditModeAreaField/stories/EditModeAreaFieldExtraText.template.tsx#EditModeAreaFieldExtraTextTemplate"]={docgenInfo:EditModeAreaFieldExtraTextTemplate.__docgenInfo,name:"EditModeAreaFieldExtraTextTemplate",path:"src/components/form/EditModeAreaField/stories/EditModeAreaFieldExtraText.template.tsx#EditModeAreaFieldExtraTextTemplate"})}catch(__react_docgen_typescript_loader_error){}var common=__webpack_require__("./src/components/form/common.tsx");function EditModeAreaField_stories_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function EditModeAreaField_stories_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){EditModeAreaField_stories_define_property(target,key,source[key])})}return target}let EditModeAreaField_stories={title:"Admiral-2.1/Form Field/EditModeAreaField",component:EditModeAreaField,decorators:void 0,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(common.u,{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=38%3A10602"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=38%3A10901"}]},argTypes:{dimension:{options:["xxl","xl","m","s"],control:{type:"radio"}},status:{control:{type:"radio"},options:types.j},bold:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},disableCopying:{control:{type:"boolean"}},displayClearIcon:{control:{type:"boolean"}},displayInline:{control:{type:"boolean"}},displayCharacterCounter:{control:{type:"boolean"}},showTooltip:{control:{type:"boolean"}},skeleton:{control:{type:"boolean"}},isLoading:{control:{type:"boolean"}},multilineView:{control:{type:"boolean"}},placeholder:{control:{type:"text"}},onChange:{action:"onChange"},containerRef:{control:!1},handleInput:{control:!1},containerCssMixin:{control:!1},extraText:{control:{type:"text"}},label:{control:{type:"text"}},icons:{control:!1},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}}}};var EditModeAreaFieldPlayground={render:function(props){return(0,jsx_runtime.jsx)(EditModeAreaFieldPlaygroundTemplate,EditModeAreaField_stories_object_spread({},props))},parameters:{docs:{source:{code:"import * as React from 'react';\n\nimport { EditModeAreaField } from '@admiral-ds/react-ui';\nimport type { EditModeAreaFieldProps, BorderRadiusType } from '@admiral-ds/react-ui';\nimport { ThemeProvider } from 'styled-components';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\n\nexport const EditModeAreaFieldPlaygroundTemplate = ({\n  value = 'Admin',\n  themeBorderKind,\n  ...props\n}: EditModeAreaFieldProps & { themeBorderKind?: BorderRadiusType }) => {\n  const [localValue, setValue] = React.useState<string>(String(value) ?? '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const inputValue = e.target.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind)}>\n      <EditModeAreaField\n        data-container-id=\"editModeFieldIdOne\"\n        {...props}\n        value={localValue}\n        onChange={handleChange}\n        label=\"Label\"\n      />\n    </ThemeProvider>\n  );\n};\n"}}},name:"EditModeAreaField. Playground"},EditModeAreaFieldExtraText={render:function(props){return(0,jsx_runtime.jsx)(EditModeAreaFieldExtraTextTemplate,EditModeAreaField_stories_object_spread({},props))},name:"Пример с поясняющим текстом",parameters:{docs:{source:{code:"import { useState } from 'react';\n\nimport { EditModeAreaField, T } from '@admiral-ds/react-ui';\nimport type { EditModeAreaFieldProps } from '@admiral-ds/react-ui';\n\nexport const EditModeAreaFieldExtraTextTemplate = ({ value = 'Admin', ...props }: EditModeAreaFieldProps) => {\n  const [localValue, setValue] = useState<string>(String(value) ?? '');\n  const [extraText, setExtraText] = useState<string | undefined>(undefined);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const inputValue = e.target.value;\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <>\n      <T font=\"Body/Body 1 Long\" as=\"div\" style={{ marginBottom: '24px' }}>\n        В режиме редактирования допускается использование поясняющего текста для инпута.\n      </T>\n      <EditModeAreaField\n        value={localValue}\n        onChange={handleChange}\n        onEdit={() => setExtraText('Additional text')}\n        onConfirm={() => setExtraText(undefined)}\n        label=\"Поле для ввода логина (не более 6 символов)\"\n        extraText={extraText}\n      />\n    </>\n  );\n};\n"}}}},EditModeAreaFieldErrorState={render:function(props){return(0,jsx_runtime.jsx)(EditModeAreaFieldErrorStateTemplate,EditModeAreaField_stories_object_spread({},props))},parameters:{docs:{source:{code:"import { useState } from 'react';\n\nimport { EditModeAreaField } from '@admiral-ds/react-ui';\nimport type { EditModeAreaFieldProps, InputStatus } from '@admiral-ds/react-ui';\n\nexport const EditModeAreaFieldErrorStateTemplate = ({ value = 'Admin', ...props }: EditModeAreaFieldProps) => {\n  const [localValue, setValue] = useState<string>(String(value) ?? '');\n  const [status, setStatus] = useState<InputStatus | undefined>(undefined);\n  const [extraText, setExtraText] = useState<string | undefined>(undefined);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const inputValue = e.target.value;\n    if (inputValue.length > 6) {\n      setStatus('error');\n      setExtraText('Поле не прошло валидацию, необходимо ввести корректное значение');\n    } else {\n      setStatus(undefined);\n      setExtraText(undefined);\n    }\n    setValue(inputValue);\n    props.onChange?.(e);\n  };\n\n  return (\n    <>\n      <EditModeAreaField\n        value={localValue}\n        onChange={handleChange}\n        onSubmit={() => setExtraText(undefined)}\n        status={status}\n        label=\"Поле для ввода логина (не более 6 символов)\"\n        extraText={extraText}\n      />\n    </>\n  );\n};\n"}}},name:"Пример с состоянием ошибки"};EditModeAreaFieldPlayground.parameters={...EditModeAreaFieldPlayground.parameters,docs:{...EditModeAreaFieldPlayground.parameters?.docs,source:{originalSource:"{\n  render: EditModeAreaFieldPlaygroundStory,\n  parameters: {\n    docs: {\n      source: {\n        code: EditModeAreaFieldPlaygroundRaw\n      }\n    }\n  },\n  name: 'EditModeAreaField. Playground'\n}",...EditModeAreaFieldPlayground.parameters?.docs?.source}}},EditModeAreaFieldExtraText.parameters={...EditModeAreaFieldExtraText.parameters,docs:{...EditModeAreaFieldExtraText.parameters?.docs,source:{originalSource:"{\n  render: EditModeAreaFieldExtraTextStory,\n  name: 'Пример с поясняющим текстом',\n  parameters: {\n    docs: {\n      source: {\n        code: EditModeAreaFieldExtraTextRaw\n      }\n    }\n  }\n}",...EditModeAreaFieldExtraText.parameters?.docs?.source}}},EditModeAreaFieldErrorState.parameters={...EditModeAreaFieldErrorState.parameters,docs:{...EditModeAreaFieldErrorState.parameters?.docs,source:{originalSource:"{\n  render: EditModeAreaFieldErrorStateStory,\n  parameters: {\n    docs: {\n      source: {\n        code: EditModeAreaFieldErrorStateRaw\n      }\n    }\n  },\n  name: 'Пример с состоянием ошибки'\n}",...EditModeAreaFieldErrorState.parameters?.docs?.source}}};let __namedExportsOrder=["EditModeAreaFieldPlayground","EditModeAreaFieldExtraText","EditModeAreaFieldErrorState"]},"./src/components/form/common.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>DataAttributesDescription});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_require__("./node_modules/react/index.js");var styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/common/utils/splitDataAttributes.ts");function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function _templateObject(){var data=_tagged_template_literal(["\n  font-family: 'VTB Group UI';\n  font-size: 16px;\n  line-height: 24px;\n"]);return _templateObject=function _templateObject(){return data},data}var Desc=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.div(_templateObject()),DataAttributesDescription=function(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Desc,{children:["Компоненту можно прокидывать дата аттрибуты вида [",_src_components_common_utils_splitDataAttributes__WEBPACK_IMPORTED_MODULE_3__.G$,"-...]. Этот аттрибут попадет только на контейнер самого компонента.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),' Например: data-container-id="fieldIdOne" - контейнер компонента получит аттрибут data-container-id="fieldIdOne", на нативный input этот аттрибут прокинут не будет.']})}}}]);