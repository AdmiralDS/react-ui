"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[8226],{"./src/components/input/EditModeArea/stories/EditModeArea.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CssMixinExample:()=>CssMixinExample,DimensionExample:()=>DimensionExample,DisabledExample:()=>DisabledExample,Playground:()=>Playground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>EditModeArea_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),EditModeArea=__webpack_require__("./src/components/input/EditModeArea/index.tsx"),types=__webpack_require__("./src/components/input/types.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),react=__webpack_require__("./node_modules/react/index.js"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var EditModeAreaPlaygroundTemplate=function(_param){var _String,_param_value=_param.value,_param_placeholder=_param.placeholder,themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=_object_without_properties(_param,["value","placeholder","themeBorderKind","CSSCustomProps"]),_useState=_sliced_to_array((0,react.useState)(null!=(_String=String(void 0===_param_value?"Привет!":_param_value))?_String:""),2),localValue=_useState[0],setValue=_useState[1],confirmButtonProps={"data-testid":"confirmButton"},cancelButtonProps={"data-testid":"cancelButton"};return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsx)(EditModeArea.p,_object_spread_props(_object_spread({},props),{value:localValue,onChange:function(e){var _props_onChange;setValue(e.currentTarget.value),null==(_props_onChange=props.onChange)||_props_onChange.call(props,e)},placeholder:void 0===_param_placeholder?"Placeholder":_param_placeholder,confirmButtonPropsConfig:function(){return confirmButtonProps},cancelButtonPropsConfig:function(){return cancelButtonProps}}))})};try{EditModeAreaPlaygroundTemplate.displayName="EditModeAreaPlaygroundTemplate",EditModeAreaPlaygroundTemplate.__docgenInfo={description:"",displayName:"EditModeAreaPlaygroundTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Привет!"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:`Функция обработчика события нажатия кнопки начала редактирования
@param value - значение поля ввода для редактирования`,name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:`Функция обработчика события нажатия кнопки подтверждения введенного значения
@param value - отредактированное значение поля ввода`,name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:`Функция обработчика события нажатия кнопки отмены
@param value - значение поля ввода до нажатия кнопки редактирования`,name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},editButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки начала редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"editButtonPropsConfig",required:!1,type:{name:"((props: any) => Partial<any>)"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:`@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.
Взамен используйте iconsAfter

Иконки для отображения в правом углу поля`,name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:`Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.
Используется для создания масок ввода`,name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Включает возможность ручного изменения высоты textarea",name:"resizable",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:`Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,
по умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме`,name:"locale",required:!1,type:{name:"{ copyTextMessage?: string; copiedMessage?: string; } | undefined"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/EditModeArea/stories/EditModeAreaPlayground.template.tsx#EditModeAreaPlaygroundTemplate"]={docgenInfo:EditModeAreaPlaygroundTemplate.__docgenInfo,name:"EditModeAreaPlaygroundTemplate",path:"src/components/input/EditModeArea/stories/EditModeAreaPlayground.template.tsx#EditModeAreaPlaygroundTemplate"})}catch(__react_docgen_typescript_loader_error){}var T=__webpack_require__("./src/components/T/index.tsx");function EditModeAreaDimension_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function EditModeAreaDimension_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function EditModeAreaDimension_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function EditModeAreaDimension_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function EditModeAreaDimension_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function EditModeAreaDimension_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){EditModeAreaDimension_template_define_property(target,key,source[key])})}return target}function EditModeAreaDimension_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function EditModeAreaDimension_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):EditModeAreaDimension_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function EditModeAreaDimension_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=EditModeAreaDimension_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function EditModeAreaDimension_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function EditModeAreaDimension_template_sliced_to_array(arr,i){return EditModeAreaDimension_template_array_with_holes(arr)||EditModeAreaDimension_template_iterable_to_array_limit(arr,i)||EditModeAreaDimension_template_unsupported_iterable_to_array(arr,i)||EditModeAreaDimension_template_non_iterable_rest()}function _tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function EditModeAreaDimension_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return EditModeAreaDimension_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return EditModeAreaDimension_template_array_like_to_array(o,minLen)}}function _templateObject(){var data=_tagged_template_literal([`
  height: `,`px;
`]);return _templateObject=function _templateObject(){return data},data}var Separator=styled_components_browser_esm.Ay.div(_templateObject(),function(p){return p.$height||20}),EditModeAreaDimensionTemplate=function(_param){var _String,_param_value=_param.value,themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=EditModeAreaDimension_template_object_without_properties(_param,["value","themeBorderKind","CSSCustomProps"]),_React_useState=EditModeAreaDimension_template_sliced_to_array(react.useState(null!=(_String=String(void 0===_param_value?"Привет!":_param_value))?_String:""),2),localValue=_React_useState[0],setValue=_React_useState[1],handleChange=function(e){var _props_onChange;setValue(e.currentTarget.value),null==(_props_onChange=props.onChange)||_props_onChange.call(props,e)};return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsxs)(T.T,{font:"Body/Body 1 Long",as:"div",children:["Компонент разработан в 4 размерах: S, M (имеют написание Regular и Bold) и XL, XXL (только Bold). Переключение между Regular и Bold не изменяет размеры компонента.",(0,jsx_runtime.jsx)(Separator,{$height:8})," По умолчанию размер компонента M, для смены размера используйте параметр dimension. Для переключения в написание Bold испольуйте одноименный параметр bold."]}),(0,jsx_runtime.jsx)(Separator,{$height:24}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Dimension - s"}),(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaDimension_template_object_spread_props(EditModeAreaDimension_template_object_spread({},props),{value:localValue,onChange:handleChange,dimension:"s"})),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Dimension - s bold"}),(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaDimension_template_object_spread_props(EditModeAreaDimension_template_object_spread({},props),{value:localValue,onChange:handleChange,dimension:"s",bold:!0})),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Dimension - m"}),(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaDimension_template_object_spread_props(EditModeAreaDimension_template_object_spread({},props),{value:localValue,onChange:handleChange})),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Dimension - m bold"}),(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaDimension_template_object_spread_props(EditModeAreaDimension_template_object_spread({},[props]),{value:localValue,onChange:handleChange,bold:!0})),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Dimension - xl"}),(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaDimension_template_object_spread_props(EditModeAreaDimension_template_object_spread({},props),{value:localValue,onChange:handleChange,dimension:"xl"})),(0,jsx_runtime.jsx)(Separator,{}),(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",children:"Dimension - xxl"}),(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaDimension_template_object_spread_props(EditModeAreaDimension_template_object_spread({},props),{value:localValue,onChange:handleChange,dimension:"xxl"}))]})};try{EditModeAreaDimensionTemplate.displayName="EditModeAreaDimensionTemplate",EditModeAreaDimensionTemplate.__docgenInfo={description:"",displayName:"EditModeAreaDimensionTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Привет!"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:`Функция обработчика события нажатия кнопки начала редактирования
@param value - значение поля ввода для редактирования`,name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:`Функция обработчика события нажатия кнопки подтверждения введенного значения
@param value - отредактированное значение поля ввода`,name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:`Функция обработчика события нажатия кнопки отмены
@param value - значение поля ввода до нажатия кнопки редактирования`,name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},editButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки начала редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"editButtonPropsConfig",required:!1,type:{name:"((props: any) => Partial<any>)"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:`@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.
Взамен используйте iconsAfter

Иконки для отображения в правом углу поля`,name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:`Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.
Используется для создания масок ввода`,name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Включает возможность ручного изменения высоты textarea",name:"resizable",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:`Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,
по умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме`,name:"locale",required:!1,type:{name:"{ copyTextMessage?: string; copiedMessage?: string; } | undefined"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/EditModeArea/stories/EditModeAreaDimension.template.tsx#EditModeAreaDimensionTemplate"]={docgenInfo:EditModeAreaDimensionTemplate.__docgenInfo,name:"EditModeAreaDimensionTemplate",path:"src/components/input/EditModeArea/stories/EditModeAreaDimension.template.tsx#EditModeAreaDimensionTemplate"})}catch(__react_docgen_typescript_loader_error){}function EditModeAreaDisabled_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function EditModeAreaDisabled_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function EditModeAreaDisabled_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function EditModeAreaDisabled_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function EditModeAreaDisabled_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function EditModeAreaDisabled_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){EditModeAreaDisabled_template_define_property(target,key,source[key])})}return target}function EditModeAreaDisabled_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function EditModeAreaDisabled_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):EditModeAreaDisabled_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function EditModeAreaDisabled_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=EditModeAreaDisabled_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function EditModeAreaDisabled_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function EditModeAreaDisabled_template_sliced_to_array(arr,i){return EditModeAreaDisabled_template_array_with_holes(arr)||EditModeAreaDisabled_template_iterable_to_array_limit(arr,i)||EditModeAreaDisabled_template_unsupported_iterable_to_array(arr,i)||EditModeAreaDisabled_template_non_iterable_rest()}function EditModeAreaDisabled_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return EditModeAreaDisabled_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return EditModeAreaDisabled_template_array_like_to_array(o,minLen)}}var EditModeAreaDisabledTemplate=function(_param){var _String,_param_value=_param.value,themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=EditModeAreaDisabled_template_object_without_properties(_param,["value","themeBorderKind","CSSCustomProps"]),_React_useState=EditModeAreaDisabled_template_sliced_to_array(react.useState(null!=(_String=String(void 0===_param_value?"Привет!":_param_value))?_String:""),2),localValue=_React_useState[0],setValue=_React_useState[1];return(0,jsx_runtime.jsx)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaDisabled_template_object_spread_props(EditModeAreaDisabled_template_object_spread({},props),{value:localValue,onChange:function(e){var _props_onChange;setValue(e.currentTarget.value),null==(_props_onChange=props.onChange)||_props_onChange.call(props,e)},disabled:!0}))})};try{EditModeAreaDisabledTemplate.displayName="EditModeAreaDisabledTemplate",EditModeAreaDisabledTemplate.__docgenInfo={description:"",displayName:"EditModeAreaDisabledTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Привет!"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:`Функция обработчика события нажатия кнопки начала редактирования
@param value - значение поля ввода для редактирования`,name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:`Функция обработчика события нажатия кнопки подтверждения введенного значения
@param value - отредактированное значение поля ввода`,name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:`Функция обработчика события нажатия кнопки отмены
@param value - значение поля ввода до нажатия кнопки редактирования`,name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},editButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки начала редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"editButtonPropsConfig",required:!1,type:{name:"((props: any) => Partial<any>)"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:`@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.
Взамен используйте iconsAfter

Иконки для отображения в правом углу поля`,name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:`Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.
Используется для создания масок ввода`,name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Включает возможность ручного изменения высоты textarea",name:"resizable",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:`Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,
по умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме`,name:"locale",required:!1,type:{name:"{ copyTextMessage?: string; copiedMessage?: string; } | undefined"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/EditModeArea/stories/EditModeAreaDisabled.template.tsx#EditModeAreaDisabledTemplate"]={docgenInfo:EditModeAreaDisabledTemplate.__docgenInfo,name:"EditModeAreaDisabledTemplate",path:"src/components/input/EditModeArea/stories/EditModeAreaDisabled.template.tsx#EditModeAreaDisabledTemplate"})}catch(__react_docgen_typescript_loader_error){}function EditModeAreaCssMixin_template_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function EditModeAreaCssMixin_template_array_with_holes(arr){if(Array.isArray(arr))return arr}function EditModeAreaCssMixin_template_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function EditModeAreaCssMixin_template_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function EditModeAreaCssMixin_template_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function EditModeAreaCssMixin_template_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){EditModeAreaCssMixin_template_define_property(target,key,source[key])})}return target}function EditModeAreaCssMixin_template_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function EditModeAreaCssMixin_template_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):EditModeAreaCssMixin_template_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function EditModeAreaCssMixin_template_object_without_properties(source,excluded){if(null==source)return{};var key,i,target=EditModeAreaCssMixin_template_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function EditModeAreaCssMixin_template_object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function EditModeAreaCssMixin_template_sliced_to_array(arr,i){return EditModeAreaCssMixin_template_array_with_holes(arr)||EditModeAreaCssMixin_template_iterable_to_array_limit(arr,i)||EditModeAreaCssMixin_template_unsupported_iterable_to_array(arr,i)||EditModeAreaCssMixin_template_non_iterable_rest()}function EditModeAreaCssMixin_template_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function EditModeAreaCssMixin_template_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return EditModeAreaCssMixin_template_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return EditModeAreaCssMixin_template_array_like_to_array(o,minLen)}}function EditModeAreaCssMixin_template_templateObject(){var data=EditModeAreaCssMixin_template_tagged_template_literal([`
  width: 300px;
`]);return EditModeAreaCssMixin_template_templateObject=function _templateObject(){return data},data}var cssMixin=(0,styled_components_browser_esm.AH)(EditModeAreaCssMixin_template_templateObject()),EditModeAreaCssMixinTemplate=function(_param){var _String,_param_value=_param.value,themeBorderKind=_param.themeBorderKind,CSSCustomProps=_param.CSSCustomProps,props=EditModeAreaCssMixin_template_object_without_properties(_param,["value","themeBorderKind","CSSCustomProps"]),_React_useState=EditModeAreaCssMixin_template_sliced_to_array(react.useState(null!=(_String=String(void 0===_param_value?"Привет!":_param_value))?_String:""),2),localValue=_React_useState[0],setValue=_React_useState[1];return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsx)(T.T,{font:"Body/Body 1 Long",as:"div",style:{marginBottom:"24px"},children:"Для изменения стилей компонента в контейнер компонента можно передать стили в виде containerCssMixin."}),(0,jsx_runtime.jsx)(EditModeArea.p,EditModeAreaCssMixin_template_object_spread_props(EditModeAreaCssMixin_template_object_spread({},props),{value:localValue,onChange:function(e){var _props_onChange;setValue(e.currentTarget.value),null==(_props_onChange=props.onChange)||_props_onChange.call(props,e)},containerCssMixin:cssMixin}))]})};try{EditModeAreaCssMixinTemplate.displayName="EditModeAreaCssMixinTemplate",EditModeAreaCssMixinTemplate.__docgenInfo={description:"",displayName:"EditModeAreaCssMixinTemplate",props:{onChange:{defaultValue:null,description:"Колбек на изменение значения компонента",name:"onChange",required:!0,type:{name:"ChangeEventHandler<HTMLTextAreaElement>"}},value:{defaultValue:{value:"Привет!"},description:"Значение компонента",name:"value",required:!1,type:{name:"string | number"}},dimension:{defaultValue:null,description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"xl"'},{value:'"xxl"'}]}},bold:{defaultValue:null,description:"Жирное начертание текста. В размерах xl и xxl текст всегда жирный",name:"bold",required:!1,type:{name:"boolean"}},containerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин на контейнер компонента, созданный с помощью styled css.",name:"containerCssMixin",required:!1,type:{name:"RuleSet<object>"}},onEdit:{defaultValue:null,description:`Функция обработчика события нажатия кнопки начала редактирования
@param value - значение поля ввода для редактирования`,name:"onEdit",required:!1,type:{name:"((value: string | number) => void)"}},onConfirm:{defaultValue:null,description:`Функция обработчика события нажатия кнопки подтверждения введенного значения
@param value - отредактированное значение поля ввода`,name:"onConfirm",required:!1,type:{name:"((value: string | number) => void)"}},onCancel:{defaultValue:null,description:`Функция обработчика события нажатия кнопки отмены
@param value - значение поля ввода до нажатия кнопки редактирования`,name:"onCancel",required:!1,type:{name:"((value: string | number) => void)"}},confirmButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки подтверждения редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"confirmButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},cancelButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки отмены редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"cancelButtonPropsConfig",required:!1,type:{name:'((props: FastOmit<Omit<ButtonProps & RefAttributes<HTMLButtonElement>, "ref"> & { ref?: ((instance: HTMLButtonElement | null) => void) | RefObject<...> | null; }, "$multiline"> & { ...; }) => Partial<...>)'}},editButtonPropsConfig:{defaultValue:null,description:`Конфиг функция пропсов для кнопки начала редактирования. На вход получает начальный набор пропсов, на
выход должна отдавать объект с пропсами, которые будут внедряться после оригинальных пропсов.`,name:"editButtonPropsConfig",required:!1,type:{name:"((props: any) => Partial<any>)"}},maxLength:{defaultValue:null,description:"Максимальное количество символов для ввода",name:"maxLength",required:!1,type:{name:"number"}},status:{defaultValue:null,description:"Статус поля",name:"status",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"success"'}]}},skeleton:{defaultValue:null,description:"Состояние skeleton",name:"skeleton",required:!1,type:{name:"boolean"}},icons:{defaultValue:null,description:`@deprecated Помечено как deprecated в версии 8.13.0, будет удалено в 10.x.x версии.
Взамен используйте iconsAfter

Иконки для отображения в правом углу поля`,name:"icons",required:!1,type:{name:"ReactNode"}},iconsAfter:{defaultValue:null,description:"Иконки для отображения в конце поля",name:"iconsAfter",required:!1,type:{name:"ReactNode"}},containerRef:{defaultValue:null,description:"Ref контейнера компонента",name:"containerRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},handleInput:{defaultValue:null,description:`Дает возможность изменить значение поля ввода и позицию курсора до момента отображения при следующем цикле рендеринга.
Используется для создания масок ввода`,name:"handleInput",required:!1,type:{name:"CustomInputHandler"}},disableCopying:{defaultValue:null,description:"Наличие этого атрибута отключает возможность выделения и копирования значения поля",name:"disableCopying",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"Начальная высота компонента в количествах строк",name:"rows",required:!1,type:{name:"number"}},maxRows:{defaultValue:null,description:"Максимальная высота компонента в количествах строк",name:"maxRows",required:!1,type:{name:"number"}},autoHeight:{defaultValue:null,description:"Включает автоматическое изменение высоты компонента в зависимости от количества текста",name:"autoHeight",required:!1,type:{name:"boolean"}},resizable:{defaultValue:null,description:"Включает возможность ручного изменения высоты textarea",name:"resizable",required:!1,type:{name:"boolean"}},locale:{defaultValue:null,description:`Объект локализации - позволяет перезадать текстовые константы используемые в компоненте,
по умолчанию значения констант берутся из темы в соответствии с параметром currentLocale, заданном в теме`,name:"locale",required:!1,type:{name:"{ copyTextMessage?: string; copiedMessage?: string; } | undefined"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/EditModeArea/stories/EditModeAreaCssMixin.template.tsx#EditModeAreaCssMixinTemplate"]={docgenInfo:EditModeAreaCssMixinTemplate.__docgenInfo,name:"EditModeAreaCssMixinTemplate",path:"src/components/input/EditModeArea/stories/EditModeAreaCssMixin.template.tsx#EditModeAreaCssMixinTemplate"})}catch(__react_docgen_typescript_loader_error){}let EditModeAreaPlayground_templateraw_namespaceObject=`import { useState } from 'react';
import type { ChangeEvent } from 'react';
import { EditModeArea } from '@admiral-ds/react-ui';
import type { EditModeAreaProps, BorderRadiusType } from '@admiral-ds/react-ui';
import { ThemeProvider } from 'styled-components';
import { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';

export const EditModeAreaPlaygroundTemplate = ({
  value = 'Привет!',
  placeholder = 'Placeholder',
  themeBorderKind,
  CSSCustomProps,
  ...props
}: EditModeAreaProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {
  const [localValue, setValue] = useState<string>(String(value) ?? '');

  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {
    const inputValue = e.currentTarget.value;
    setValue(inputValue);
    props.onChange?.(e);
  };
  const confirmButtonProps = { 'data-testid': 'confirmButton' };
  const cancelButtonProps = { 'data-testid': 'cancelButton' };

  return (
    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>
      <EditModeArea
        {...props}
        value={localValue}
        onChange={handleChange}
        placeholder={placeholder}
        confirmButtonPropsConfig={() => confirmButtonProps}
        cancelButtonPropsConfig={() => cancelButtonProps}
      />
    </ThemeProvider>
  );
};
`,EditModeAreaDimension_templateraw_namespaceObject=`import * as React from 'react';
import type { ChangeEvent } from 'react';
import { EditModeArea, T } from '@admiral-ds/react-ui';
import type { BorderRadiusType, EditModeAreaProps } from '@admiral-ds/react-ui';
import styled, { ThemeProvider } from 'styled-components';
import { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';

const Separator = styled.div<{ $height?: number }>\`
  height: \${(p) => p.$height || 20}px;
\`;

export const EditModeAreaDimensionTemplate = ({
  value = 'Привет!',
  themeBorderKind,
  CSSCustomProps,
  ...props
}: EditModeAreaProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {
  const [localValue, setValue] = React.useState<string>(String(value) ?? '');

  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {
    const inputValue = e.currentTarget.value;
    setValue(inputValue);
    props.onChange?.(e);
  };
  return (
    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>
      <T font="Body/Body 1 Long" as="div">
        Компонент разработан в 4 размерах: S, M (имеют написание Regular и Bold) и XL, XXL (только Bold). Переключение
        между Regular и Bold не изменяет размеры компонента.
        <Separator $height={8} /> По умолчанию размер компонента M, для смены размера используйте параметр dimension.
        Для переключения в написание Bold испольуйте одноименный параметр bold.
      </T>
      <Separator $height={24} />
      <T font="Body/Body 1 Long" as="div">
        Dimension - s
      </T>
      <EditModeArea {...props} value={localValue} onChange={handleChange} dimension="s" />
      <Separator />
      <T font="Body/Body 1 Long" as="div">
        Dimension - s bold
      </T>
      <EditModeArea {...props} value={localValue} onChange={handleChange} dimension="s" bold />
      <Separator />
      <T font="Body/Body 1 Long" as="div">
        Dimension - m
      </T>
      <EditModeArea {...props} value={localValue} onChange={handleChange} />
      <Separator />
      <T font="Body/Body 1 Long" as="div">
        Dimension - m bold
      </T>
      <EditModeArea {...[props]} value={localValue} onChange={handleChange} bold />
      <Separator />
      <T font="Body/Body 1 Long" as="div">
        Dimension - xl
      </T>
      <EditModeArea {...props} value={localValue} onChange={handleChange} dimension="xl" />
      <Separator />
      <T font="Body/Body 1 Long" as="div">
        Dimension - xxl
      </T>
      <EditModeArea {...props} value={localValue} onChange={handleChange} dimension="xxl" />
    </ThemeProvider>
  );
};
`,EditModeAreaDisabled_templateraw_namespaceObject=`import * as React from 'react';
import type { ChangeEvent } from 'react';
import { EditModeArea } from '@admiral-ds/react-ui';
import type { EditModeAreaProps, BorderRadiusType } from '@admiral-ds/react-ui';
import { ThemeProvider } from 'styled-components';
import { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';

export const EditModeAreaDisabledTemplate = ({
  value = 'Привет!',
  themeBorderKind,
  CSSCustomProps,
  ...props
}: EditModeAreaProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {
  const [localValue, setValue] = React.useState<string>(String(value) ?? '');

  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {
    const inputValue = e.currentTarget.value;
    setValue(inputValue);
    props.onChange?.(e);
  };
  return (
    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>
      <EditModeArea {...props} value={localValue} onChange={handleChange} disabled />
    </ThemeProvider>
  );
};
`,EditModeAreaCssMixin_templateraw_namespaceObject=`import * as React from 'react';
import type { ChangeEvent } from 'react';
import { EditModeArea, T } from '@admiral-ds/react-ui';
import type { EditModeAreaProps, BorderRadiusType } from '@admiral-ds/react-ui';
import { css, ThemeProvider } from 'styled-components';
import { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';

const cssMixin = css\`
  width: 300px;
\`;

export const EditModeAreaCssMixinTemplate = ({
  value = 'Привет!',
  themeBorderKind,
  CSSCustomProps,
  ...props
}: EditModeAreaProps & { themeBorderKind?: BorderRadiusType; CSSCustomProps?: boolean }) => {
  const [localValue, setValue] = React.useState<string>(String(value) ?? '');

  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {
    const inputValue = e.currentTarget.value;
    setValue(inputValue);
    props.onChange?.(e);
  };
  return (
    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>
      <T font="Body/Body 1 Long" as="div" style={{ marginBottom: '24px' }}>
        Для изменения стилей компонента в контейнер компонента можно передать стили в виде containerCssMixin.
      </T>
      <EditModeArea {...props} value={localValue} onChange={handleChange} containerCssMixin={cssMixin} />
    </ThemeProvider>
  );
};
`;function EditModeArea_stories_array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function EditModeArea_stories_array_with_holes(arr){if(Array.isArray(arr))return arr}function EditModeArea_stories_define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function EditModeArea_stories_iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function EditModeArea_stories_non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function EditModeArea_stories_object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){EditModeArea_stories_define_property(target,key,source[key])})}return target}function EditModeArea_stories_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function EditModeArea_stories_object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):EditModeArea_stories_ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function EditModeArea_stories_sliced_to_array(arr,i){return EditModeArea_stories_array_with_holes(arr)||EditModeArea_stories_iterable_to_array_limit(arr,i)||EditModeArea_stories_unsupported_iterable_to_array(arr,i)||EditModeArea_stories_non_iterable_rest()}function EditModeArea_stories_tagged_template_literal(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}function EditModeArea_stories_unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return EditModeArea_stories_array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return EditModeArea_stories_array_like_to_array(o,minLen)}}function EditModeArea_stories_templateObject(){var data=EditModeArea_stories_tagged_template_literal([`
  font-family: 'VTB Group UI';
  font-size: 16px;
  line-height: 24px;
`]);return EditModeArea_stories_templateObject=function _templateObject(){return data},data}var Desc=styled_components_browser_esm.Ay.div(EditModeArea_stories_templateObject());let EditModeArea_stories={title:"Admiral-2.1/Input/EditModeArea",component:EditModeArea.p,decorators:void 0,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(function(){return(0,jsx_runtime.jsx)(Desc,{children:"Компонент для редактирования текста. Может быть с лэйблом или без него."})},{}),design:[{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=38%3A10602"},{type:"figma",url:"https://www.figma.com/file/EGEGZsx8WhdxpmFKu8J41G/Admiral-2.1-UI-Kit?node-id=38%3A10901"}]},argTypes:{dimension:{options:["xxl","xl","m","s"],control:{type:"radio"}},status:{control:{type:"radio"},options:types.j},value:{control:{type:"text"}},bold:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},disableCopying:{control:{type:"boolean"}},placeholder:{control:{type:"text"}},onChange:{control:!1},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},containerCssMixin:{control:!1},icons:{control:!1},containerRef:{control:!1},handleInput:{control:!1},skeleton:{control:{type:"boolean"}}}};var Playground={render:function(props){var CSSCustomProps=EditModeArea_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(EditModeAreaPlaygroundTemplate,EditModeArea_stories_object_spread_props(EditModeArea_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:EditModeAreaPlayground_templateraw_namespaceObject}}}},DimensionExample={render:function(props){var CSSCustomProps=EditModeArea_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(EditModeAreaDimensionTemplate,EditModeArea_stories_object_spread_props(EditModeArea_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:EditModeAreaDimension_templateraw_namespaceObject}}},name:"Варианты размеров и начертания компонента"},DisabledExample={render:function(props){var CSSCustomProps=EditModeArea_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(EditModeAreaDisabledTemplate,EditModeArea_stories_object_spread_props(EditModeArea_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:EditModeAreaDisabled_templateraw_namespaceObject}}},name:"Компонент в состоянии disabled"},CssMixinExample={render:function(props){var CSSCustomProps=EditModeArea_stories_sliced_to_array((0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)(),1)[0].CSSCustomProps;return(0,jsx_runtime.jsx)(EditModeAreaCssMixinTemplate,EditModeArea_stories_object_spread_props(EditModeArea_stories_object_spread({},props),{CSSCustomProps:CSSCustomProps}))},parameters:{docs:{source:{code:EditModeAreaCssMixin_templateraw_namespaceObject}}},name:"Стилизация компонента"};Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:`{
  render: PlaygroundStory,
  parameters: {
    docs: {
      source: {
        code: EditModeAreaPlaygroundRaw
      }
    }
  }
}`,...Playground.parameters?.docs?.source}}},DimensionExample.parameters={...DimensionExample.parameters,docs:{...DimensionExample.parameters?.docs,source:{originalSource:`{
  render: DimensionStory,
  parameters: {
    docs: {
      source: {
        code: EditModeAreaDimensionRaw
      }
    }
  },
  name: 'Варианты размеров и начертания компонента'
}`,...DimensionExample.parameters?.docs?.source}}},DisabledExample.parameters={...DisabledExample.parameters,docs:{...DisabledExample.parameters?.docs,source:{originalSource:`{
  render: DisabledStory,
  parameters: {
    docs: {
      source: {
        code: EditModeAreaDisabledRaw
      }
    }
  },
  name: 'Компонент в состоянии disabled'
}`,...DisabledExample.parameters?.docs?.source}}},CssMixinExample.parameters={...CssMixinExample.parameters,docs:{...CssMixinExample.parameters?.docs,source:{originalSource:`{
  render: CssMixinStory,
  parameters: {
    docs: {
      source: {
        code: EditModeAreaCssMixinRaw
      }
    }
  },
  name: 'Стилизация компонента'
}`,...CssMixinExample.parameters?.docs?.source}}};let __namedExportsOrder=["Playground","DimensionExample","DisabledExample","CssMixinExample"]}}]);
//# sourceMappingURL=components-input-EditModeArea-stories-EditModeArea-stories.787a3f5b.iframe.bundle.js.map