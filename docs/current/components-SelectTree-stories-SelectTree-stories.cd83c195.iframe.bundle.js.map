{"version":3,"file":"components-SelectTree-stories-SelectTree-stories.cd83c195.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AAAA;ACRA;AAAA;ACEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AA+GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://@admiral-ds/react-ui/./src/components/SelectTree/stories/SelectTreeM.template.tsx","webpack://@admiral-ds/react-ui/./src/components/SelectTree/stories/SelectTreeS.template.tsx","webpack://@admiral-ds/react-ui/./src/components/SelectTree/stories/SelectTreeNoCheckbox.template.tsx","webpack://@admiral-ds/react-ui/"],"sourcesContent":["import * as React from 'react';\n\nimport { SelectTree, T } from '@admiral-ds/react-ui';\nimport type { SelectTreeProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as FolderSolid } from '@admiral-ds/icons/build/documents/FolderSolid.svg';\n\nimport type { SelectTreeNodeProps } from '#src/components/SelectTree/SelectTreeNode';\nimport RNBLogoLight from '#src/components/SelectTree/stories/RNBLogoLight.svg';\n\nconst selectTreeListM = [\n  {\n    label: (\n      <T as=\"div\" style={{ marginTop: -2 }} font=\"Subtitle/Subtitle 2\">\n        Текст заголовка, первый уровень компонента, размер M 40 1\n      </T>\n    ),\n    id: '1',\n    checked: false,\n    children: [\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 1',\n        id: '1-1',\n        checked: false,\n        icon: <FolderSolid />,\n      },\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 2',\n        id: '1-2',\n        checked: false,\n        icon: <FolderSolid />,\n      },\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 3',\n        id: '1-3',\n        checked: false,\n        children: [\n          {\n            label: <img src={RNBLogoLight} alt={''} />,\n            id: '2-1',\n            checked: false,\n          },\n          { label: 'Текст  строки, третий уровень компонента 2', id: '2-2' },\n          { label: 'Текст  строки, третий уровень компонента 3', id: '2-3' },\n          { label: 'Текст  строки, третий уровень компонента 4', id: '2-4' },\n          {\n            label: 'Текст  строки с чекбоксом, третий уровень компонента 5',\n            id: '2-5',\n            checked: false,\n            children: [\n              { label: 'Текст  строки с чекбоксом, четвертый уровень компонента 1', id: '3-1', checked: false },\n              { label: 'Текст  строки с чекбоксом, четвертый уровень компонента 2', id: '3-2', checked: false },\n              {\n                label:\n                  'Текст  строки с чекбоксом, четвертый уровень компонента. Компонент используется для отображения дерева вложенных списков с возможностью выбора отдельных пунктов по логике\\n' +\n                  '    чекбоксов. Ширина строки настравивается вручную, по умолчанию это 768px. В настройках присутствует до 6ти уровней\\n' +\n                  '    вложенности.',\n                id: '3-3',\n                checked: false,\n              },\n              {\n                label: 'Текст  строки с чекбоксом, четвертый уровень компонента 4',\n                id: '3-4',\n                checked: false,\n                children: [\n                  { label: 'Текст  строки с чекбоксом, пятый уровень компонента 1', id: '4-1', checked: false },\n                  { label: 'Текст  строки с чекбоксом, пятый уровень компонента 2', id: '4-2', checked: false },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  { label: 'Текст заголовка, первый уровень компонента, размер M 40 2', id: '2', checked: false },\n  { label: 'Текст заголовка, первый уровень компонента, размер M 40 3', id: '3' },\n  { label: 'Текст заголовка, первый уровень компонента, размер M 40 4', id: '4' },\n];\n\nexport const SelectTreeMTemplate = (props: SelectTreeProps) => {\n  const [dataList, setDataList] = React.useState<SelectTreeNodeProps[]>(selectTreeListM);\n\n  return (\n    <>\n      <SelectTree\n        {...props}\n        style={{ maxWidth: '768px' }}\n        list={dataList}\n        dimension=\"m\"\n        onChange={(dataList) => setDataList(dataList)}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport { SelectTree } from '@admiral-ds/react-ui';\nimport type { SelectTreeProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as FolderSolid } from '@admiral-ds/icons/build/documents/FolderSolid.svg';\n\nimport type { SelectTreeNodeProps } from '#src/components/SelectTree/SelectTreeNode';\nimport RNBLogoLight from '#src/components/SelectTree/stories/RNBLogoLight.svg';\n\nconst selectTreeListS = [\n  {\n    label: 'Текст заголовка, первый уровень компонента, размер S 32 1',\n    id: '1',\n    checked: false,\n    children: [\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 1',\n        id: '1-1',\n        checked: false,\n        icon: <FolderSolid />,\n      },\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 2',\n        id: '1-2',\n        checked: false,\n        icon: <FolderSolid />,\n      },\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 3',\n        id: '1-3',\n        checked: false,\n        children: [\n          {\n            label: <img src={RNBLogoLight} alt={''} />,\n            id: '2-1',\n            checked: false,\n          },\n          { label: 'Текст  строки, третий уровень компонента 2', id: '2-2' },\n          {\n            label: 'Текст  строки с чекбоксом, третий уровень компонента 3',\n            id: '2-3',\n            checked: false,\n            children: [\n              {\n                label:\n                  'Текст  строки с чекбоксом, четвертый уровень компонента. Компонент используется для отображения дерева вложенных списков с возможностью выбора отдельных пунктов по логике\\n' +\n                  '    чекбоксов. Ширина строки настравивается вручную, по умолчанию это 768px. В настройках присутствует до 6ти уровней\\n' +\n                  '    вложенности.',\n                id: '3-1',\n                checked: false,\n              },\n              {\n                label: 'Текст  строки с чекбоксом, четвертый уровень компонента 2',\n                id: '3-2',\n                checked: false,\n                children: [\n                  { label: 'Текст  строки с чекбоксом, пятый уровень компонента 1', id: '4-1', checked: false },\n                  { label: 'Текст  строки с чекбоксом, пятый уровень компонента 2', id: '4-2', checked: false },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  { label: 'Текст заголовка, первый уровень компонента, размер S 32 2', id: '2', checked: false },\n];\n\nexport const SelectTreeSTemplate = (props: SelectTreeProps) => {\n  const [dataList, setDataList] = React.useState<SelectTreeNodeProps[]>(selectTreeListS);\n\n  return (\n    <>\n      <SelectTree\n        {...props}\n        style={{ maxWidth: '768px' }}\n        list={dataList}\n        dimension=\"s\"\n        onChange={(dataList) => setDataList(dataList)}\n      />\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport { SelectTree } from '@admiral-ds/react-ui';\nimport type { SelectTreeProps } from '@admiral-ds/react-ui';\nimport { ReactComponent as FolderSolid } from '@admiral-ds/icons/build/documents/FolderSolid.svg';\n\nimport type { SelectTreeNodeProps } from '#src/components/SelectTree/SelectTreeNode';\nimport RNBLogoLight from '#src/components/SelectTree/stories/RNBLogoLight.svg';\n\nconst treeViewList = [\n  {\n    label: 'Текст заголовка, первый уровень компонента, размер M 40 1',\n    id: '1',\n    icon: <FolderSolid />,\n    children: [\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 1',\n        id: '1-1',\n        icon: <FolderSolid />,\n      },\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 2',\n        id: '1-2',\n        icon: <FolderSolid />,\n      },\n      {\n        label: 'Текст раскрывающейся строки, второй уровень компонента 3',\n        id: '1-3',\n        icon: <FolderSolid />,\n        children: [\n          {\n            label: <img src={RNBLogoLight} alt={''} />,\n            id: '2-1',\n            icon: <FolderSolid />,\n          },\n          { label: 'Текст  строки, третий уровень компонента 2', id: '2-2', icon: <FolderSolid /> },\n          { label: 'Текст  строки, третий уровень компонента 3', id: '2-3', icon: <FolderSolid /> },\n          { label: 'Текст  строки, третий уровень компонента 4', id: '2-4', icon: <FolderSolid /> },\n          {\n            label: 'Текст  строки с чекбоксом, третий уровень компонента 5',\n            id: '2-5',\n            icon: <FolderSolid />,\n            children: [\n              { label: 'Текст  строки с чекбоксом, четвертый уровень компонента 1', id: '3-1', icon: <FolderSolid /> },\n              { label: 'Текст  строки с чекбоксом, четвертый уровень компонента 2', id: '3-2', icon: <FolderSolid /> },\n              {\n                label:\n                  'Текст  строки с чекбоксом, четвертый уровень компонента. Компонент используется для отображения дерева вложенных списков с возможностью выбора отдельных пунктов по логике\\n' +\n                  '    чекбоксов. Ширина строки настравивается вручную, по умолчанию это 768px. В настройках присутствует до 6ти уровней\\n' +\n                  '    вложенности.',\n                id: '3-3',\n                icon: <FolderSolid />,\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    label: 'Текст заголовка, первый уровень компонента, размер M 40 2',\n    id: '2',\n    icon: <FolderSolid />,\n  },\n];\n\nexport const SelectTreeNoCheckboxTemplate = (props: SelectTreeProps) => {\n  const [dataList, setDataList] = React.useState<SelectTreeNodeProps[]>(treeViewList);\n\n  return (\n    <>\n      <SelectTree\n        {...props}\n        style={{ maxWidth: '768px' }}\n        list={dataList}\n        dimension=\"m\"\n        onChange={(dataList) => setDataList(dataList)}\n        expandAll\n      />\n    </>\n  );\n};\n"],"names":[],"sourceRoot":""}