"use strict";(self.webpackChunk_admiral_ds_react_ui=self.webpackChunk_admiral_ds_react_ui||[]).push([[4374],{"./src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{HorizontalCardTabMenuExample:()=>HorizontalCardTabMenuExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CardTabMenuHorizontal_stories});var styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),src=__webpack_require__("./src/index.ts"),borderRadius=__webpack_require__("./src/components/themes/borderRadius.ts"),react=__webpack_require__("./node_modules/react/index.js"),MenuItem=__webpack_require__("./src/components/Menu/MenuItem.tsx"),NotificationItem=__webpack_require__("./src/components/NotificationItem/index.tsx"),createBorderRadiusSwapper=__webpack_require__("./.storybook/createBorderRadiusSwapper.ts"),MinusCircleOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/service/MinusCircleOutline.svg"),WifiOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/WifiOutline.svg"),PhoneOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/PhoneOutline.svg"),SIMCardOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/SIMCardOutline.svg"),HeadsetOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/HeadsetOutline.svg"),SignalOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/SignalOutline.svg"),TelegrammOutline=__webpack_require__("./node_modules/@admiral-ds/icons/build/communication/TelegrammOutline.svg"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const CustomHorizontalCardTab=(0,react.forwardRef)((({dimension="l",disabled,selected,tabId,text,badge,icon,...props},ref)=>(0,jsx_runtime.jsxs)(src.CardTab,{...props,tabId,ref,dimension,disabled,selected,children:[icon&&(0,jsx_runtime.jsx)(src.TabIcon,{$dimension:dimension,$disabled:disabled,children:icon}),(0,jsx_runtime.jsx)(src.TabText,{children:text}),badge&&(0,jsx_runtime.jsx)(src.TabBadge,{disabled,selected,children:badge})]}))),tabs=[{text:"Wi-Fi",tabId:"1",icon:(0,jsx_runtime.jsx)(WifiOutline.h,{})},{text:"Phone",tabId:"2",icon:(0,jsx_runtime.jsx)(PhoneOutline.h,{}),disabled:!0},{text:"Sim card",tabId:"3",icon:(0,jsx_runtime.jsx)(SIMCardOutline.h,{})},{text:"Viber",tabId:"9",badge:7},{text:"Headset",tabId:"4",icon:(0,jsx_runtime.jsx)(HeadsetOutline.h,{})},{text:"Network signal",tabId:"5",icon:(0,jsx_runtime.jsx)(SignalOutline.h,{})},{text:"TelegrammOutline",tabId:"6",icon:(0,jsx_runtime.jsx)(TelegrammOutline.h,{})},{text:"WhatsApp is very very very very long",tabId:"7"},{text:"ICQ",tabId:"8",icon:(0,jsx_runtime.jsx)(MinusCircleOutline.h,{}),disabled:!0}],Separator=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__Separator",componentId:"sc-fpoa89-0"})(["height:","px;"],(p=>p.height)),Wrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__Wrapper",componentId:"sc-fpoa89-1"})(["display:flex;flex-direction:column;padding:30px;background-color:var(--admiral-color-Neutral_Neutral05,",");"],(p=>p.theme.color["Neutral/Neutral 05"])),Content=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__Content",componentId:"sc-fpoa89-2"})(["box-sizing:border-box;background-color:var(--admiral-color-Neutral_Neutral00,",");border:1px solid var(--admiral-color-Neutral_Neutral20,",");border-top-width:0;height:100px;"],(p=>p.theme.color["Neutral/Neutral 00"]),(p=>p.theme.color["Neutral/Neutral 20"])),MenuItemWrapper=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalTemplate__MenuItemWrapper",componentId:"sc-fpoa89-3"})(["display:flex;overflow:hidden;text-overflow:ellipsis;align-items:center;"]),CardTabMenuHorizontalTemplate=({dimension="l",showUnderline=!0,defaultSelectedTabId="3",themeBorderKind,CSSCustomProps,...props})=>{const tabsMap=(0,react.useMemo)((()=>tabs.map((tab=>tab.tabId))),[tabs]),[selectedTab,setSelectedTab]=(0,react.useState)(defaultSelectedTabId);return(0,jsx_runtime.jsxs)(styled_components_browser_esm.NP,{theme:(0,createBorderRadiusSwapper.j)(themeBorderKind,CSSCustomProps),children:[(0,jsx_runtime.jsxs)(NotificationItem.rn,{displayStatusIcon:!0,children:[(0,jsx_runtime.jsx)(NotificationItem.Tf,{children:"CardTabMenu"}),(0,jsx_runtime.jsxs)(NotificationItem.Yg,{children:["Компонент для переключения между группами логически связанного контента. Существует в двух размерах - L 48 и M 40 px по высоте. Опционально может содержать иконки и/или бейджи. При переполнении включается Overflow Menu.",(0,jsx_runtime.jsx)(Separator,{height:8}),"Рекомендации",(0,jsx_runtime.jsx)("li",{children:"При загрузке страницы, одна из вкладок должна быть активной по дефолту"}),(0,jsx_runtime.jsx)("li",{children:"Текст в закладке должен быть коротким, в идеале не более трех слов"}),(0,jsx_runtime.jsx)("li",{children:"Избегайте большого количества закладок — это не удобно для пользователей. В таких случаях можно использовать компонент Tree View"}),(0,jsx_runtime.jsx)("li",{children:"Избегайте помещения компонента Card Tab внутрь контента другого Card Tab"}),(0,jsx_runtime.jsx)("li",{children:"Не заставляйте пользователя переключаться между вкладками для сравнения информации. Отдельная закладка должна содержать в себе всю необходимую информацию для завершения задания."}),(0,jsx_runtime.jsx)(Separator,{height:8}),"Для большей выразительности рекомендуется применять компонент на сером фоне. Активная вкладка имеет фон белого цвета по умолчанию, так же рекомендуется красить подложку контентной области в белый цвет и добавлять обводку с трех сторон. В таком случае связь контента с закладкой более очевидна."]})]}),(0,jsx_runtime.jsx)(Separator,{height:40}),(0,jsx_runtime.jsxs)(Wrapper,{children:[(0,jsx_runtime.jsx)(src.CardTabMenuHorizontal,{...props,dimension,showUnderline,selectedTabId:selectedTab,defaultSelectedTabId:"3",onSelectTab:tabId=>setSelectedTab(tabId),tabsId:tabsMap,renderDropMenuItem:tabId=>{const currentTab=tabs.find((tab=>tab.tabId===tabId));return options=>(0,react.createElement)(MenuItem.D,{dimension,...options,key:tabId},(0,jsx_runtime.jsx)(MenuItemWrapper,{children:currentTab?.text}))},renderTab:(tabId,selected,onSelectTab)=>{const currentTab=tabs.find((tab=>tab.tabId===tabId)),text=currentTab?.text||"",disabled=!!currentTab?.disabled,badge=currentTab?.badge,icon=currentTab?.icon;return(0,jsx_runtime.jsx)(CustomHorizontalCardTab,{dimension,tabId,text,badge,icon,selected,disabled,onSelectTab},tabId)},tabIsDisabled:tabId=>{const currentTab=tabs.find((tab=>tab.tabId===tabId));return!!currentTab?.disabled}}),(0,jsx_runtime.jsx)(Content,{})]})]})};CardTabMenuHorizontalTemplate.displayName="CardTabMenuHorizontalTemplate";try{CardTabMenuHorizontalTemplate.displayName="CardTabMenuHorizontalTemplate",CardTabMenuHorizontalTemplate.__docgenInfo={description:"",displayName:"CardTabMenuHorizontalTemplate",props:{showUnderline:{defaultValue:{value:"true"},description:"Показывать серую полосу снизу",name:"showUnderline",required:!1,type:{name:"boolean"}},selectedTabId:{defaultValue:null,description:"ID выбранной вкладки",name:"selectedTabId",required:!1,type:{name:"string"}},defaultSelectedTabId:{defaultValue:{value:"3"},description:"ID выбранной по умолчанию вкладки",name:"defaultSelectedTabId",required:!1,type:{name:"string"}},onSelectTab:{defaultValue:null,description:"Коллбэк на изменение выбранной вкладки",name:"onSelectTab",required:!1,type:{name:"((tabId: string) => void)"}},tabsId:{defaultValue:null,description:"Массив из уникальных ID вкладок",name:"tabsId",required:!0,type:{name:"string[]"}},renderTab:{defaultValue:null,description:"Рендер-функция для отрисовки вкладки",name:"renderTab",required:!0,type:{name:"(tabId: string, selected: boolean, onSelectTab?: ((tabId: string) => void) | undefined) => ReactNode"}},tabIsDisabled:{defaultValue:null,description:"Коллбэк для определения, является ли вкладка disabled",name:"tabIsDisabled",required:!0,type:{name:"(tabId: string) => boolean"}},active:{defaultValue:null,description:"Активная секция Menu",name:"active",required:!1,type:{name:"string"}},onActivateItem:{defaultValue:null,description:"Обработчик активации (hover) item в меню",name:"onActivateItem",required:!1,type:{name:"((id?: string) => void)"}},onSelectItem:{defaultValue:null,description:"Обработчик выбора item в меню",name:"onSelectItem",required:!1,type:{name:"((id: string) => void)"}},isVisible:{defaultValue:null,description:"Видимость выпадающего меню",name:"isVisible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Колбек на изменение видимости меню",name:"onVisibilityChange",required:!1,type:{name:"((isVisible: boolean) => void)"}},disableSelectedOptionHighlight:{defaultValue:null,description:"Возможность отключить подсветку выбранной опции\n(например, при множественном выборе, когда у каждой опции есть Checkbox)",name:"disableSelectedOptionHighlight",required:!1,type:{name:"boolean"}},renderTopPanel:{defaultValue:null,description:"Позволяет добавить панель сверху над выпадающим списком",name:"renderTopPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},renderBottomPanel:{defaultValue:null,description:"Позволяет добавить панель внизу под выпадающим списком",name:"renderBottomPanel",required:!1,type:{name:"((props: RenderPanelProps) => ReactNode)"}},onForwardCycleApprove:{defaultValue:null,description:"",name:"onForwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onBackwardCycleApprove:{defaultValue:null,description:"",name:"onBackwardCycleApprove",required:!1,type:{name:"(() => boolean)"}},onClickOutside:{defaultValue:null,description:"Позволяет обработать событие при клике вне компонента",name:"onClickOutside",required:!1,type:{name:"((e: Event) => void)"}},dimension:{defaultValue:{value:"l"},description:"Размер компонента",name:"dimension",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"l"'}]}},renderDropMenuItem:{defaultValue:null,description:"Рендер-функция для отрисовки элемента выпадающего списка",name:"renderDropMenuItem",required:!0,type:{name:"(tabId: string) => ReactNode | ((options: RenderOptionProps) => ReactNode)"}},alignSelf:{defaultValue:null,description:"Выравнивание выпадающего меню относительно компонента https://developer.mozilla.org/en-US/docs/Web/CSS/align-self",name:"alignSelf",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"auto"'},{value:'"flex-start"'},{value:'"flex-end"'},{value:'"baseline"'},{value:'"stretch"'}]}},menuWidth:{defaultValue:null,description:"Ширина меню",name:"menuWidth",required:!1,type:{name:"string"}},menuMaxHeight:{defaultValue:null,description:"Задает максимальную высоту меню",name:"menuMaxHeight",required:!1,type:{name:"string | number"}},dropContainerCssMixin:{defaultValue:null,description:"Позволяет добавлять миксин для выпадающих меню, созданный с помощью styled css",name:"dropContainerCssMixin",required:!1,type:{name:"RuleSet<object>"}},dropContainerClassName:{defaultValue:null,description:"Позволяет добавлять класс на контейнер выпадающего меню",name:"dropContainerClassName",required:!1,type:{name:"string"}},dropContainerStyle:{defaultValue:null,description:"Позволяет добавлять стили на контейнер выпадающего меню",name:"dropContainerStyle",required:!1,type:{name:"CSSProperties"}},themeBorderKind:{defaultValue:null,description:"",name:"themeBorderKind",required:!1,type:{name:"enum",value:[{value:'"Border radius 0"'},{value:'"Border radius 2"'},{value:'"Border radius 4"'},{value:'"Border radius 6"'},{value:'"Border radius 8"'},{value:'"Border radius 10"'}]}},CSSCustomProps:{defaultValue:null,description:"",name:"CSSCustomProps",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontalTemplate.tsx#CardTabMenuHorizontalTemplate"]={docgenInfo:CardTabMenuHorizontalTemplate.__docgenInfo,name:"CardTabMenuHorizontalTemplate",path:"src/components/TabMenuComponent/stories/horizontalCardTabMenuStories/CardTabMenuHorizontalTemplate.tsx#CardTabMenuHorizontalTemplate"})}catch(__react_docgen_typescript_loader_error){}const Desc=styled_components_browser_esm.Ay.div.withConfig({displayName:"CardTabMenuHorizontalstories__Desc",componentId:"sc-15ldrgt-0"})(["font-family:'VTB Group UI';font-size:16px;line-height:24px;"]),Description=()=>(0,jsx_runtime.jsxs)(Desc,{children:["Компонент используется для переключения между вкладками. Существует в двух размерах - 48 и 40 px по высоте. Он полностью адаптивен и автоматически меняет ширину ячеек в зависимости от контента. Опционально можно выключать серую полоску снизу. В закладках можно включать иконки, бейджи.",(0,jsx_runtime.jsx)("br",{}),"Если вкладки не помещаются в отведенную ширину целиком, то включается Overflow Menu. Размеры выпадающего меню соответствуют размерам Tab Menu — L для L размера и M для M размера. В выпадающем меню отображаются вкладки, не поместившиеся в основной ряд. При выборе вкладки из меню, она отображается в основном ряду крайней справа, заменяя собой предыдущую крайнюю вкладку, которая, в свою очередь, «уходит» в меню. Активная вкладка при этом отображается в меню, как выбранная. Если вкладка из меню большая и требует больше места, то она заменяет собой две последние вкладки. В таком случае и вторая с края вкладка уходит в меню."]});Description.displayName="Description";const CardTabMenuHorizontal_stories={title:"Admiral-2.1/TabMenuComponent/CardTabMenuHorizontal",decorators:void 0,component:src.CardTabMenuHorizontal,parameters:{docs:{source:{code:null}},componentSubtitle:(0,jsx_runtime.jsx)(Description,{})},argTypes:{dimension:{options:["l","m"],control:{type:"radio"}},showUnderline:{control:{type:"boolean"}},themeBorderKind:{options:borderRadius.$t,control:{type:"radio"}},defaultSelectedTabId:{control:!1},renderTab:{control:!1},renderDropMenuItem:{control:!1},tabIsDisabled:{control:!1},tabsId:{control:!1},onSelectTab:{control:!1},selectedTabId:{control:!1}}},HorizontalCardTabMenuStory=props=>{const[{CSSCustomProps}]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useGlobals)();return(0,jsx_runtime.jsx)(CardTabMenuHorizontalTemplate,{...props,CSSCustomProps})};HorizontalCardTabMenuStory.displayName="HorizontalCardTabMenuStory";const HorizontalCardTabMenuExample={render:HorizontalCardTabMenuStory,parameters:{docs:{source:{code:"import { forwardRef, useMemo, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport type {\n  BorderRadiusType,\n  RenderOptionProps,\n  HorizontalTabProps,\n  TabMenuHorizontalProps,\n} from '@admiral-ds/react-ui';\nimport {\n  CardTabMenuHorizontal,\n  CardTab,\n  TabIcon,\n  TabBadge,\n  TabText,\n  MenuItem,\n  NotificationItem,\n  NotificationItemTitle,\n  NotificationItemContent,\n} from '@admiral-ds/react-ui';\nimport { createBorderRadiusSwapper } from '../../../../../.storybook/createBorderRadiusSwapper';\nimport { ReactComponent as MinusCircleOutline } from '@admiral-ds/icons/build/service/MinusCircleOutline.svg';\nimport { ReactComponent as WifiOutline } from '@admiral-ds/icons/build/communication/WifiOutline.svg';\nimport { ReactComponent as PhoneOutline } from '@admiral-ds/icons/build/communication/PhoneOutline.svg';\nimport { ReactComponent as SIMCardOutline } from '@admiral-ds/icons/build/communication/SIMCardOutline.svg';\nimport { ReactComponent as HeadsetOutline } from '@admiral-ds/icons/build/communication/HeadsetOutline.svg';\nimport { ReactComponent as SignalOutline } from '@admiral-ds/icons/build/communication/SignalOutline.svg';\nimport { ReactComponent as TelegrammOutline } from '@admiral-ds/icons/build/communication/TelegrammOutline.svg';\n\ninterface TabContentProps extends HorizontalTabProps {\n  text: string;\n  badge?: number;\n  disabled?: boolean;\n  icon?: ReactNode;\n}\n\ninterface CustomHorizontalTabProps extends TabContentProps {}\nconst CustomHorizontalCardTab = forwardRef<HTMLButtonElement, CustomHorizontalTabProps>(\n  ({ dimension = 'l', disabled, selected, tabId, text, badge, icon, ...props }: CustomHorizontalTabProps, ref) => {\n    return (\n      <CardTab {...props} tabId={tabId} ref={ref} dimension={dimension} disabled={disabled} selected={selected}>\n        {icon && (\n          <TabIcon $dimension={dimension} $disabled={disabled}>\n            {icon}\n          </TabIcon>\n        )}\n        <TabText>{text}</TabText>\n        {badge && (\n          <TabBadge disabled={disabled} selected={selected}>\n            {badge}\n          </TabBadge>\n        )}\n      </CardTab>\n    );\n  },\n);\n\nconst tabs = [\n  { text: 'Wi-Fi', tabId: '1', icon: <WifiOutline /> },\n  { text: 'Phone', tabId: '2', icon: <PhoneOutline />, disabled: true },\n  { text: 'Sim card', tabId: '3', icon: <SIMCardOutline /> },\n  { text: 'Viber', tabId: '9', badge: 7 },\n  { text: 'Headset', tabId: '4', icon: <HeadsetOutline /> },\n  { text: 'Network signal', tabId: '5', icon: <SignalOutline /> },\n  { text: 'TelegrammOutline', tabId: '6', icon: <TelegrammOutline /> },\n  { text: 'WhatsApp is very very very very long', tabId: '7' },\n  { text: 'ICQ', tabId: '8', icon: <MinusCircleOutline />, disabled: true },\n];\n\nconst Separator = styled.div<{ height: number }>`\n  height: ${(p) => p.height}px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  background-color: var(--admiral-color-Neutral_Neutral05, ${(p) => p.theme.color['Neutral/Neutral 05']});\n`;\nconst Content = styled.div`\n  box-sizing: border-box;\n  background-color: var(--admiral-color-Neutral_Neutral00, ${(p) => p.theme.color['Neutral/Neutral 00']});\n  border: 1px solid var(--admiral-color-Neutral_Neutral20, ${(p) => p.theme.color['Neutral/Neutral 20']});\n  border-top-width: 0;\n  height: 100px;\n`;\n\nconst MenuItemWrapper = styled.div`\n  display: flex;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  align-items: center;\n`;\n\nexport const CardTabMenuHorizontalTemplate = ({\n  dimension = 'l',\n  showUnderline = true,\n  defaultSelectedTabId = '3',\n  themeBorderKind,\n  CSSCustomProps,\n  ...props\n}: TabMenuHorizontalProps & {\n  themeBorderKind?: BorderRadiusType;\n  CSSCustomProps?: boolean;\n}) => {\n  const tabsMap = useMemo(() => {\n    return tabs.map((tab) => tab.tabId);\n  }, [tabs]);\n\n  const [selectedTab, setSelectedTab] = useState<string | undefined>(defaultSelectedTabId);\n  const handleSelectTab = (tabId: string) => setSelectedTab(tabId);\n\n  const tabIsDisabled = (tabId: string) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    return !!currentTab?.disabled;\n  };\n  const renderTab = (tabId: string, selected?: boolean, onSelectTab?: (tabId: string) => void) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    const text = currentTab?.text || '';\n    const disabled = !!currentTab?.disabled;\n    const badge = currentTab?.badge;\n    const icon = currentTab?.icon;\n    return (\n      <CustomHorizontalCardTab\n        dimension={dimension}\n        tabId={tabId}\n        text={text}\n        badge={badge}\n        icon={icon}\n        key={tabId}\n        selected={selected}\n        disabled={disabled}\n        onSelectTab={onSelectTab}\n      />\n    );\n  };\n  const renderDropMenuItem = (tabId: string) => {\n    const currentTab = tabs.find((tab) => tab.tabId === tabId);\n    return (options: RenderOptionProps) => {\n      return (\n        <MenuItem dimension={dimension} {...options} key={tabId}>\n          <MenuItemWrapper>{currentTab?.text}</MenuItemWrapper>\n        </MenuItem>\n      );\n    };\n  };\n\n  return (\n    <ThemeProvider theme={createBorderRadiusSwapper(themeBorderKind, CSSCustomProps)}>\n      <NotificationItem displayStatusIcon>\n        <NotificationItemTitle>CardTabMenu</NotificationItemTitle>\n        <NotificationItemContent>\n          Компонент для переключения между группами логически связанного контента. Существует в двух размерах - L 48 и M\n          40 px по высоте. Опционально может содержать иконки и/или бейджи. При переполнении включается Overflow Menu.\n          <Separator height={8} />\n          Рекомендации\n          <li>При загрузке страницы, одна из вкладок должна быть активной по дефолту</li>\n          <li>Текст в закладке должен быть коротким, в идеале не более трех слов</li>\n          <li>\n            Избегайте большого количества закладок — это не удобно для пользователей. В таких случаях можно использовать\n            компонент Tree View\n          </li>\n          <li>Избегайте помещения компонента Card Tab внутрь контента другого Card Tab</li>\n          <li>\n            Не заставляйте пользователя переключаться между вкладками для сравнения информации. Отдельная закладка\n            должна содержать в себе всю необходимую информацию для завершения задания.\n          </li>\n          <Separator height={8} />\n          Для большей выразительности рекомендуется применять компонент на сером фоне. Активная вкладка имеет фон белого\n          цвета по умолчанию, так же рекомендуется красить подложку контентной области в белый цвет и добавлять обводку\n          с трех сторон. В таком случае связь контента с закладкой более очевидна.\n        </NotificationItemContent>\n      </NotificationItem>\n      <Separator height={40} />\n      <Wrapper>\n        <CardTabMenuHorizontal\n          {...props}\n          dimension={dimension}\n          showUnderline={showUnderline}\n          selectedTabId={selectedTab}\n          defaultSelectedTabId=\"3\"\n          onSelectTab={handleSelectTab}\n          tabsId={tabsMap}\n          renderDropMenuItem={renderDropMenuItem}\n          renderTab={renderTab}\n          tabIsDisabled={tabIsDisabled}\n        />\n        <Content />\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n"}}},name:"HorizontalCardTabMenu."};HorizontalCardTabMenuExample.parameters={...HorizontalCardTabMenuExample.parameters,docs:{...HorizontalCardTabMenuExample.parameters?.docs,source:{originalSource:"{\n  render: HorizontalCardTabMenuStory,\n  parameters: {\n    docs: {\n      source: {\n        code: HorizontalCardTabMenuRaw\n      }\n    }\n  },\n  name: 'HorizontalCardTabMenu.'\n}",...HorizontalCardTabMenuExample.parameters?.docs?.source}}};const __namedExportsOrder=["HorizontalCardTabMenuExample"]},"./.storybook/createBorderRadiusSwapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>createBorderRadiusSwapper});var _admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/themes/light/index.ts");const getNumFromStr=str=>str.replace(/^\D+/g,"");function createBorderRadiusSwapper(borderRadiusKind,CSSCustomProps){if(borderRadiusKind&&CSSCustomProps){const cssPropValueSmall=`var(--admiral-border-kind-Small_${getNumFromStr(borderRadiusKind)})`,cssPropValueMedium=`var(--admiral-border-kind-Medium_${getNumFromStr(borderRadiusKind)})`,cssPropValueLarge=`var(--admiral-border-kind-Large_${getNumFromStr(borderRadiusKind)})`;document.body.style.setProperty("--admiral-border-radius-Small",cssPropValueSmall),document.body.style.setProperty("--admiral-border-radius-Medium",cssPropValueMedium),document.body.style.setProperty("--admiral-border-radius-Large",cssPropValueLarge)}else CSSCustomProps||(document.body.style.removeProperty("--admiral-border-radius-Small"),document.body.style.removeProperty("--admiral-border-radius-Medium"),document.body.style.removeProperty("--admiral-border-radius-Large"));return function swapBorder(theme){return theme?(theme.shape.borderRadiusKind=borderRadiusKind||theme.shape.borderRadiusKind,theme):(_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind=borderRadiusKind||_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d.shape.borderRadiusKind,_admiral_ds_react_ui__WEBPACK_IMPORTED_MODULE_0__.d)}}}}]);